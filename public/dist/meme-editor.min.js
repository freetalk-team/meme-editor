!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.MemeEditor=t():e.MemeEditor=t()}(self,(()=>(()=>{var e={546:()=>{Object.clone=function(e){var t=e instanceof Array?[]:{};for(let n in e)e[n]&&"object"==typeof e[n]?t[n]=ArrayBuffer.isView(e[n])?new e[n].constructor(e[n]):Object.clone(e[n]):t[n]=e[n];return t},Object.getGetters=function(e){let t={},n=Object.getPrototypeOf(e);for(;n&&n!==Object.prototype;){const e=Object.getOwnPropertyDescriptors(n);for(const[n,a]of Object.entries(e))"function"!=typeof a.get||n in t||(t[n]=a.get);n=Object.getPrototypeOf(n)}return t},Object.getSetters=function(e){let t={},n=Object.getPrototypeOf(e);for(;n&&n!==Object.prototype;){const e=Object.getOwnPropertyDescriptors(n);for(const[n,a]of Object.entries(e))"function"!=typeof a.set||n in t||(t[n]=a.set);n=Object.getPrototypeOf(n)}return t},Object.getGetter=function(e,t){return Object.getGetters(e)[t]},Object.getSetter=function(e,t){return Object.getSetters(e)[t]},Object.fromInstance=function(e,t={},...n){const a=Object.getGetters(e);for(const[r,s]of Object.entries(a))n.includes(r)||(t[r]=s.call(e));return t},Object.instanceFrom=function(e,t){const n=Object.getSetters(e);for(const[a,r]of Object.entries(n))a in t&&r.call(e,t[a]);return e},Array.repeat=function(e,t=0){return new Array(e).fill(0)},String.prototype.capitalizeFirstLetter=function(){return this.charAt(0).toUpperCase()+this.slice(1)}}},t={};function a(n){var r=t[n];if(void 0!==r)return r.exports;var s=t[n]={exports:{}};return e[n](s,s.exports,a),s.exports}a.amdO={},a.d=(e,t)=>{for(var n in t)a.o(t,n)&&!a.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},a.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var r={};return(()=>{"use strict";a.d(r,{default:()=>j5}),a(546);class e{static ID=1;#e;#t=0;#n=0;#a=50;#r=50;#s=5;selected=!1;constructor(t){t||(t=this.type+" "+e.ID++),this.#e=t}get id(){return this.#e}get x(){return Math.round(this.#a)}get y(){return Math.round(this.#r)}get width(){return Math.round(this.#t)}get height(){return Math.round(this.#n)}set id(e){this.#e=e}set x(e){"string"==typeof e&&(e=parseInt(e)),this.#a=e}set y(e){"string"==typeof e&&(e=parseInt(e)),this.#r=e}set width(e){"string"==typeof e&&(e=parseInt(e))<10&&(e=10),this.#t=e}set height(e){"string"==typeof e&&(e=parseInt(e))<10&&(e=10),this.#n=e}set properties(e){e.assign(Object.fromInstance(this))}draw(e){this.drawSelection(e)}drawBorder(e,t=1,n="#000",a=0,r=!1){e.save(),r&&e.setLineDash([10,5]),e.strokeStyle=n,e.lineWidth=t,e.strokeRect(this.#a-a,this.#r-a,this.#t+2*a,this.#n+2*a),e.restore()}drawSelection(e){if(!this.selected)return;e.lineWidth=1;let t=this.x+this.width/2,n=this.y+this.height/2;this.drawNode(e,t,n),t=this.x+this.width,n=this.y+this.height,this.drawNode(e,t,n)}release(){}handleClick(e,t){let n=this.x+this.width/2,a=this.y+this.height/2;return this.inNode(e,t,n,a)?{move:(e,t)=>this.updatePos(e,t)}:(n=this.x+this.width,a=this.y+this.height,this.inNode(e,t,n,a)?{move:(e,t)=>this.updateSize(e,t)}:null)}handleSelect(e,t){const n=this.x,a=n+this.width,r=this.y,s=r+this.height;return this.selected=e>n&&e<a&&t>r&&t<s}inNode(e,t,n,a){const r=this.#s;return e>n-r&&e<n+r&&t>a-r&&t<a+r}updatePos(e,t){this.x=e-this.width/2,this.y=t-this.height/2}updateSize(e,t){this.#t=e-this.#a,this.#n=t-this.#r}drawNode(e,t,n){e.strokeStyle="#00f",e.beginPath(),e.arc(t,n,this.#s,0,2*Math.PI),e.stroke(),e.closePath()}}class t extends e{#i="";#o=30;#l="Arial";#u="#111111";#d="#111111";#p=0;#h="none";#c="#444444";#f=2;get type(){return"text"}get size(){return this.#o}get font(){return this.#l}get stroke(){return this.#d}get strokeWidth(){return this.#p}get fill(){return this.#u}get value(){return this.#i}get shadow(){return this.#h}get shadowWidth(){return this.#f}get shadowColor(){return this.#c}set shadow(e){this.#h=e}set shadowWidth(e){"string"==typeof e&&(e=parseInt(e)),this.#f=e}set shadowColor(e){this.#c=e}set size(e){"string"==typeof e&&(e=parseInt(e)),e<8&&(e=8),this.#o=e,this.#m()}set font(e){this.#l=e}set fill(e){this.#u=e}set stroke(e){this.#d=e}set strokeWidth(e){"string"==typeof n&&(n=parseInt(n)),this.#p=e}set value(e){console.debug("Setting text:",e),this.#i=e,this.#m()}set text(e){this.value=e}draw(e){if(!this.#i)return;const t=this.#i.split("\n").map((e=>e.trim()));e.save();let n=this.x,a=this.y;e.fillStyle=this.#u,e.strokeStyle=this.#d,e.lineWidth=this.#p,e.textBaseline="top",e.textAlign="left",e.font=`bold ${this.#o}px `+this.#l;const r=1.2*e.measureText("M").width;for(const s of t)this.#u&&("fill"==this.#h&&this.#g(e),e.fillText(s,n,a)),this.#p>0&&("stroke"==this.#h&&this.#g(e),e.strokeText(s,n,a)),a+=r;e.restore(),super.draw(e),this.selected&&super.drawBorder(e,1,"#888",5,!0)}#g(e){e.shadowColor=this.#c,e.shadowBlur=5,e.shadowOffsetX=this.#f,e.shadowOffsetY=this.#f}#m(){if(this.#i){const e=this.#i.trim().split("\n");e.sort(((e,t)=>t.length-e.length)),this.width=e[0].length*this.#o,this.height=e.length*this.#o*1.1}else this.width=this.width,this.height=this.height}}class s extends e{#y=0;#d="#000000";#p=1;#u="#eeeeee";#h="none";#c="#444444";#f=2;get type(){return"rect"}get radius(){return this.#y}get stroke(){return this.#d}get strokeWidth(){return this.#p}get fill(){return this.#u}get shadow(){return this.#h}get shadowWidth(){return this.#f}get shadowColor(){return this.#c}set radius(e){"string"==typeof e&&(e=parseInt(e)),this.#y=e}set stroke(e){this.#d=e}set strokeWidth(e){"string"==typeof e&&(e=parseInt(e)),this.#p=e}set fill(e){this.#u=e}set shadow(e){this.#h=e}set shadowWidth(e){"string"==typeof e&&(e=parseInt(e)),this.#f=e}set shadowColor(e){this.#c=e}draw(e){e.lineWidth=this.#p,0==this.#y?this.drawRectangle(e):this.drawRectangleRound(e)}drawRectangle(e){"stroke"==this.#h?(this.addShadowRect(e,!1),this.fillRect(e,!1),this.strokeRect(e,!1)):(this.fillRect(e,"fill"==this.#h),this.strokeRect(e,"stroke"==this.#h))}drawRectangleRound(e){e.save();const t=this.x,n=this.y,a=this.width,r=this.height;this.#u,this.#d;let s=this.#y;if("number"==typeof s)s={tl:s,tr:s,br:s,bl:s};else{var i={tl:0,tr:0,br:0,bl:0};for(var o in i)s[o]=s[o]||i[o]}e.beginPath(),e.moveTo(t+s.tl,n),e.lineTo(t+a-s.tr,n),e.quadraticCurveTo(t+a,n,t+a,n+s.tr),e.lineTo(t+a,n+r-s.br),e.quadraticCurveTo(t+a,n+r,t+a-s.br,n+r),e.lineTo(t+s.bl,n+r),e.quadraticCurveTo(t,n+r,t,n+r-s.bl),e.lineTo(t,n+s.tl),e.quadraticCurveTo(t,n,t+s.tl,n),e.closePath(),this.drawPath(e),e.restore()}drawPath(e){const t=this.#u,n=this.#d;if("stroke"==this.#h)return this.addShadow(e,!1),t&&(e.fillStyle=t,e.fill()),void(n&&(e.strokeStyle=n,e.stroke()));t&&(e.fillStyle=t,"fill"==this.#h&&this.addShadow(e,!0),e.fill()),n&&(e.strokeStyle=n,e.stroke())}drawBorder(e){this.#p>0&&super.drawBorder(e,this.#p,this.#d,-this.#p/2)}drawShadow(e,t=!0){t?"fill"==this.#h&&this.addShadow(e,!0):"stroke"==this.#h&&this.addShadow(e,!1)}fillRect(e,t=!1){this.#u&&(e.fillStyle=this.#u,t&&this.addShadowRect(e),e.fillRect(this.x,this.y,this.width,this.height))}strokeRect(e,t=!1){this.#d&&(e.strokeStyle=this.#d,t?(this.addShadowRect(e,!1),this.fillRect(e,!1)):e.strokeRect(this.x,this.y,this.width,this.height))}addShadowRect(e,t=!0){if(0==this.#f)return;const n=t?e.fillRect:e.strokeRect;e.save(),this.#g(e),n.call(e,this.x,this.y,this.width,this.height),e.restore()}addShadow(e,t=!0){if(0==this.#f)return;const n=t?e.fill:e.stroke;e.save(),this.#g(e),n.call(e),e.restore()}#g(e){e.shadowColor=this.#c,e.shadowBlur=5,e.shadowOffsetX=this.#f,e.shadowOffsetY=this.#f}}class i extends s{#i;get x(){return super.x}get y(){return super.y}get text(){return this.#i.value}get textOffsetX(){return this.#i.x-this.x}get textOffsetY(){return this.#i.y-this.y}get textSize(){return this.#i.size}get textFill(){return this.#i.fill}get textStroke(){return this.#i.stroke}get textStrokeWidth(){return this.#i.strokeWidth}get textFont(){return this.#i.font}get textShadow(){return this.#i.shadow}get textShadowWidth(){return this.#i.shadowWidth}get textShadowColor(){return this.#i.shadowColor}constructor(){super(),this.width=200,this.height=150;const e=new t;e.x=this.x+10,e.y=this.y+10,e.shadowColor="#555555",this.#i=e}set x(e){const t=this.#i.x-super.x;super.x=e,this.#i.x=super.x+t}set y(e){const t=this.#i.y-super.y;super.y=e,this.#i.y=super.y+t}set textOffsetX(e){this.#i.x=e,this.#i.x+=this.x,console.debug("Text offset",this.#i.x)}set textOffsetY(e){this.#i.y=e,this.#i.y+=this.y}set textSize(e){this.#i.size=e}set textFont(e){this.#i.font=e}set textFill(e){this.#i.fill=e}set textStroke(e){this.#i.stroke=e}set textStrokeWidth(e){this.#i.strokeWidth=e}set textShadow(e){this.#i.shadow=e}set textShadowWidth(e){this.#i.shadowWidth=e}set textShadowColor(e){this.#i.shadowColor=e}set text(e){this.#i.value=e}draw(e){super.draw(e),this.#i.draw(e),this.drawSelection(e)}drawText(e){this.#i.draw(e)}}class o extends i{#x="left";#A;#b;get type(){return"bubble"}get x(){return super.x}get y(){return super.y}get px(){return this.#A}get py(){return this.#b}set px(e){this.#A=e}set py(e){this.#b=e}get beak(){return this.#x}set x(e){const t=super.x-this.#A;super.x=e,this.#A=super.x-t}set y(e){const t=super.y-this.#b;super.y=e,this.#b=super.y-t}set beak(e){const t=Math.min(Math.abs(this.x-this.#A),Math.abs(this.#A-this.width-this.x));this.#A="left"==e?this.x-t:this.x+this.width+t,this.#x=e}constructor(){super(),this.#A=this.x-30,this.#b=this.y+50,this.radius=10}draw(e){e.save(),this.#w(e),this.drawText(e),this.#v(e),e.restore()}handleClick(e,t){if(!this.selected)return;let n=this.#A,a=this.#b;return this.inNode(e,t,n,a)?{move:(e,t)=>{this.#A=e,this.#b=t}}:super.handleClick(e,t)}updatePos(e,t){this.x,this.y,super.updatePos(e,t)}#v(t){this.selected&&(e.prototype.draw.call(this,t),this.drawNode(t,this.#A,this.#b))}#w(e){e.save(),e.lineWidth=this.strokeWidth;const t=this.x,n=this.y,a=this.width,r=this.height;this.fill,this.stroke;let s=this.radius;if("number"==typeof s)s={tl:s,tr:s,br:s,bl:s};else{const e={tl:0,tr:0,br:0,bl:0};for(var i in e)s[i]=s[i]||e[i]}e.beginPath(),e.moveTo(t+s.tl,n),e.lineTo(t+a-s.tr,n),e.quadraticCurveTo(t+a,n,t+a,n+s.tr),"right"==this.#x&&(e.lineTo(t+a,n+s.tl),e.lineTo(this.#A,this.#b),e.lineTo(t+a,n+s.tl+20)),e.lineTo(t+a,n+r-s.br),e.quadraticCurveTo(t+a,n+r,t+a-s.br,n+r),e.lineTo(t+s.bl,n+r),e.quadraticCurveTo(t,n+r,t,n+r-s.bl),"left"==this.#x&&(e.lineTo(t,n+s.tl+20),e.lineTo(this.#A,this.#b)),e.lineTo(t,n+s.tl),e.quadraticCurveTo(t,n,t+s.tl,n),e.closePath(),this.drawPath(e),e.restore()}}class l extends e{get type(){return"canvas"}#u="#fafafa";set fill(e){this.#u=e}get fill(){return this.#u}constructor(){super("canvas"),this.x=0,this.y=0,this.width=0,this.height=0}handleClick(){}handleSelect(){}draw(e){e.fillStyle=this.#u,e.fillRect(this.x,this.y,this.width,this.height)}}var u="/index.js",d=Object.defineProperty,p=e=>{throw TypeError(e)},h=(e,t)=>{for(var n in t)d(e,n,{get:t[n],enumerable:!0})},c=(e,t,n)=>((e,t,n)=>t in e?d(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n)(e,"symbol"!=typeof t?t+"":t,n),f=(e,t,n)=>t.has(e)||p("Cannot "+n),m=(e,t,n)=>(f(e,t,"read from private field"),n?n.call(e):t.get(e)),g=(e,t,n)=>t.has(e)?p("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(e):t.set(e,n),y=(e,t,n,a)=>(f(e,t,"write to private field"),a?a.call(e,n):t.set(e,n),n),x={};h(x,{Abs:()=>Qe,Acos:()=>et,Acosh:()=>tt,AdadeltaOptimizer:()=>Vc,AdagradOptimizer:()=>Uc,AdamOptimizer:()=>Gc,AdamaxOptimizer:()=>Hc,Add:()=>nt,AddN:()=>at,All:()=>rt,Any:()=>st,ArgMax:()=>it,ArgMin:()=>ot,Asin:()=>lt,Asinh:()=>ut,Atan:()=>dt,Atan2:()=>ht,Atanh:()=>pt,AvgPool:()=>ct,AvgPool3D:()=>mt,AvgPool3DGrad:()=>gt,AvgPoolGrad:()=>ft,BackendWasm:()=>JL,BatchMatMul:()=>yt,BatchToSpaceND:()=>xt,Bincount:()=>At,BitwiseAnd:()=>bt,BroadcastArgs:()=>vt,BroadcastTo:()=>wt,Cast:()=>kt,Ceil:()=>It,ClipByValue:()=>St,Complex:()=>Ct,ComplexAbs:()=>Nt,Concat:()=>Tt,Conv2D:()=>Rt,Conv2DBackpropFilter:()=>Et,Conv2DBackpropInput:()=>$t,Conv3D:()=>Mt,Conv3DBackpropFilterV2:()=>Ft,Conv3DBackpropInputV2:()=>_t,Cos:()=>Pt,Cosh:()=>Ot,CropAndResize:()=>Lt,Cumprod:()=>Dt,Cumsum:()=>zt,DataStorage:()=>X,DenseBincount:()=>Wt,DepthToSpace:()=>Bt,DepthwiseConv2dNative:()=>Vt,DepthwiseConv2dNativeBackpropFilter:()=>Ut,DepthwiseConv2dNativeBackpropInput:()=>Gt,Diag:()=>Ht,Dilation2D:()=>jt,Dilation2DBackpropFilter:()=>Xt,Dilation2DBackpropInput:()=>qt,Draw:()=>Kt,ENV:()=>Ye,Einsum:()=>Zt,Elu:()=>Jt,EluGrad:()=>Qt,Environment:()=>je,Equal:()=>tn,Erf:()=>en,Exp:()=>nn,ExpandDims:()=>an,Expm1:()=>rn,FFT:()=>sn,Fill:()=>on,FlipLeftRight:()=>ln,Floor:()=>un,FloorDiv:()=>dn,FromPixels:()=>cr,FusedBatchNorm:()=>pn,FusedConv2D:()=>gr,FusedDepthwiseConv2D:()=>yr,GPGPUContext:()=>VC,GatherNd:()=>cn,GatherV2:()=>hn,GraphModel:()=>Xy,Greater:()=>fn,GreaterEqual:()=>mn,IFFT:()=>yn,Identity:()=>gn,Imag:()=>xn,IsFinite:()=>An,IsInf:()=>bn,IsNan:()=>wn,KernelBackend:()=>K,LRN:()=>_n,LRNGrad:()=>Pn,LeakyRelu:()=>vn,Less:()=>kn,LessEqual:()=>In,LinSpace:()=>Sn,Log:()=>Cn,Log1p:()=>Nn,LogSoftmax:()=>Mn,LogicalAnd:()=>Tn,LogicalNot:()=>Rn,LogicalOr:()=>En,LogicalXor:()=>$n,LowerBound:()=>Fn,MathBackendCPU:()=>ex,MathBackendWebGL:()=>pT,MatrixBandPart:()=>On,Max:()=>Dn,MaxPool:()=>Ln,MaxPool3D:()=>Bn,MaxPool3DGrad:()=>Vn,MaxPoolGrad:()=>Wn,MaxPoolWithArgmax:()=>Un,Maximum:()=>zn,Mean:()=>Gn,Min:()=>Hn,Minimum:()=>jn,MirrorPad:()=>qn,Mod:()=>Xn,MomentumOptimizer:()=>qc,Multinomial:()=>Kn,Multiply:()=>Yn,Neg:()=>Zn,NonMaxSuppressionV3:()=>Qn,NonMaxSuppressionV4:()=>ea,NonMaxSuppressionV5:()=>ta,NotEqual:()=>Jn,OP_SCOPE_SUFFIX:()=>Js,OneHot:()=>aa,OnesLike:()=>na,Optimizer:()=>Bc,OptimizerConstructors:()=>Jf,Pack:()=>ra,PadV2:()=>sa,Pool:()=>ia,Pow:()=>oa,Prelu:()=>la,Prod:()=>ua,RMSPropOptimizer:()=>Xc,RaggedGather:()=>da,RaggedRange:()=>pa,RaggedTensorToTensor:()=>ha,Range:()=>ca,Rank:()=>xs,Real:()=>fa,RealDiv:()=>Yt,Reciprocal:()=>ma,Reduction:()=>lc,Relu:()=>ga,Relu6:()=>va,Reshape:()=>ya,ResizeBilinear:()=>ba,ResizeBilinearGrad:()=>wa,ResizeNearestNeighbor:()=>xa,ResizeNearestNeighborGrad:()=>Aa,Reverse:()=>ka,RotateWithOffset:()=>fr,Round:()=>Ia,Rsqrt:()=>Sa,SGDOptimizer:()=>jc,ScatterNd:()=>Ca,SearchSorted:()=>Ta,Select:()=>Ra,Selu:()=>Ea,Sigmoid:()=>Pa,Sign:()=>_a,Sin:()=>Ma,Sinh:()=>Fa,Slice:()=>$a,Softmax:()=>Ba,Softplus:()=>Oa,SpaceToBatchND:()=>La,SparseFillEmptyRows:()=>Va,SparseReshape:()=>Ua,SparseSegmentMean:()=>Ga,SparseSegmentSum:()=>Ha,SparseToDense:()=>ja,SplitV:()=>Wa,Sqrt:()=>Da,Square:()=>Xa,SquaredDifference:()=>qa,StaticRegexReplace:()=>Ka,Step:()=>hr,StridedSlice:()=>Ya,StringNGrams:()=>Za,StringSplit:()=>Ja,StringToHashBucketFast:()=>Qa,Sub:()=>er,Sum:()=>za,Tan:()=>tr,Tanh:()=>nr,Tensor:()=>ms,TensorBuffer:()=>hs,TensorScatterUpdate:()=>Na,Tile:()=>ar,TopK:()=>rr,Transform:()=>sr,Transpose:()=>ir,Unique:()=>or,Unpack:()=>lr,UnsortedSegmentSum:()=>ur,UpperBound:()=>dr,Variable:()=>ys,WebGPUBackend:()=>KW,ZerosLike:()=>pr,_FusedMatMul:()=>mr,abs:()=>Mo,acos:()=>Fo,acosh:()=>_o,add:()=>To,addN:()=>Po,all:()=>Oo,any:()=>Do,argMax:()=>zo,argMin:()=>Lo,asin:()=>Wo,asinh:()=>Bo,atan:()=>Vo,atan2:()=>Uo,atanh:()=>Go,avgPool:()=>ol,avgPool3d:()=>ll,backend:()=>Ii,backend_util:()=>am,basicLSTMCell:()=>fl,batchNorm:()=>yl,batchNorm2d:()=>xl,batchNorm3d:()=>Al,batchNorm4d:()=>bl,batchToSpaceND:()=>ml,bincount:()=>wl,bitwiseAnd:()=>vl,booleanMaskAsync:()=>hh,broadcastArgs:()=>kl,broadcastTo:()=>Il,broadcast_util:()=>Xl,browser:()=>wf,buffer:()=>Io,cast:()=>So,ceil:()=>Sl,clipByValue:()=>Nl,clone:()=>Co,complex:()=>ei,concat:()=>ul,concat1d:()=>Tl,concat2d:()=>Rl,concat3d:()=>El,concat4d:()=>$l,conv1d:()=>Fl,conv2d:()=>Ml,conv2dTranspose:()=>Pl,conv3d:()=>Ol,conv3dTranspose:()=>zl,copyRegisteredKernels:()=>Rr,cos:()=>Ll,cosh:()=>Wl,cosineWindow:()=>bh,cumprod:()=>Bl,cumsum:()=>Vl,customGrad:()=>Yu,denseBincount:()=>Ul,deprecationWarn:()=>li,depthToSpace:()=>Gl,depthwiseConv2d:()=>Hl,deregisterOp:()=>mg,device_util:()=>Vs,diag:()=>jl,dilation2d:()=>ql,disableDeprecationWarnings:()=>oi,dispose:()=>fi,disposeVariables:()=>ui,div:()=>Eo,divNoNan:()=>tu,dot:()=>nu,dropout:()=>xh,einsum:()=>au,elu:()=>ru,enableDebugMode:()=>ii,enableProdMode:()=>si,enclosingPowerOfTwo:()=>Ah,engine:()=>di,ensureShape:()=>su,env:()=>Xe,equal:()=>Jl,erf:()=>iu,euclideanNorm:()=>Iu,exp:()=>Su,expandDims:()=>Cu,expm1:()=>Nu,eye:()=>Ru,fft:()=>Pp,fill:()=>Cl,findBackend:()=>wi,findBackendFactory:()=>vi,floor:()=>Eu,floorDiv:()=>Ro,forceHalfFloat:()=>cT,fused:()=>vh,gather:()=>$u,gatherND:()=>yh,gather_util:()=>Rf,getBackend:()=>Ai,getGradient:()=>kr,getKernel:()=>vr,getKernelsForBackend:()=>Ir,getThreadsCount:()=>pW,gpgpu_util:()=>AC,grad:()=>Hu,grads:()=>ju,greater:()=>Mu,greaterEqual:()=>Fu,ifft:()=>Op,imag:()=>_u,image:()=>Rc,inTopKAsync:()=>wh,io:()=>Yc,irfft:()=>Dp,isFinite:()=>Pu,isInf:()=>Ou,isNaN:()=>Du,keep:()=>mi,kernel_impls:()=>pg,leakyRelu:()=>zu,less:()=>Lu,lessEqual:()=>Wu,linalg:()=>Ec,linspace:()=>Bu,loadGraphModel:()=>Ky,loadGraphModelSync:()=>Yy,localResponseNormalization:()=>Vu,log:()=>Uu,log1p:()=>Gu,logSigmoid:()=>ed,logSoftmax:()=>nd,logSumExp:()=>ad,logicalAnd:()=>rd,logicalNot:()=>sd,logicalOr:()=>id,logicalXor:()=>od,losses:()=>$c,lowerBound:()=>dd,matMul:()=>dl,math:()=>xf,max:()=>mu,maxPool:()=>pd,maxPool3d:()=>hd,maxPoolWithArgmax:()=>cd,maximum:()=>fd,mean:()=>md,memory:()=>pi,meshgrid:()=>xd,min:()=>gu,minimum:()=>Ad,mirrorPad:()=>bd,mod:()=>wd,moments:()=>vd,movingAverage:()=>fh,mul:()=>$o,multiRNNCell:()=>kd,multinomial:()=>Id,neg:()=>Ju,nextFrame:()=>tm,node:()=>RK,norm:()=>ku,notEqual:()=>Sd,oneHot:()=>Cd,ones:()=>yd,onesLike:()=>Nd,op:()=>Qs,outerProduct:()=>Td,pad:()=>Rd,pad1d:()=>Ed,pad2d:()=>$d,pad3d:()=>Md,pad4d:()=>Fd,pool:()=>Pd,pow:()=>yu,prelu:()=>Od,print:()=>No,prod:()=>Dd,profile:()=>hi,raggedGather:()=>zd,raggedRange:()=>Ld,raggedTensorToTensor:()=>Wd,rand:()=>Bd,randomGamma:()=>op,randomNormal:()=>lp,randomStandardNormal:()=>up,randomUniform:()=>dp,randomUniformInt:()=>pp,range:()=>hp,ready:()=>xi,real:()=>cp,reciprocal:()=>fp,registerBackend:()=>ki,registerGradient:()=>Cr,registerKernel:()=>Sr,registerOp:()=>cg,relu:()=>mp,relu6:()=>gp,removeBackend:()=>bi,reshape:()=>il,reverse:()=>yp,reverse1d:()=>xp,reverse2d:()=>Ap,reverse3d:()=>bp,reverse4d:()=>wp,rfft:()=>Lp,round:()=>vp,rsqrt:()=>kp,scalar:()=>xu,scatterND:()=>mh,scatter_util:()=>Jp,searchSorted:()=>ud,selu:()=>Ip,separableConv2d:()=>Sp,serialization:()=>_c,setBackend:()=>yi,setPlatform:()=>Si,setThreadsCount:()=>dW,setWasmPath:()=>iW,setWasmPaths:()=>oW,setWebGLContext:()=>LI,setdiff1dAsync:()=>Cp,shared:()=>tx,sigmoid:()=>pl,sign:()=>Np,signal:()=>Tc,sin:()=>Tp,sinh:()=>Rp,slice:()=>hl,slice1d:()=>Ep,slice2d:()=>$p,slice3d:()=>Mp,slice4d:()=>Fp,slice_util:()=>$f,softmax:()=>_p,softplus:()=>Qu,spaceToBatchND:()=>_d,sparse:()=>Mc,sparseToDense:()=>gh,spectral:()=>Nc,split:()=>zp,sqrt:()=>Au,square:()=>bu,squaredDifference:()=>Wp,squeeze:()=>Bp,stack:()=>Vp,step:()=>Up,stridedSlice:()=>Gp,string:()=>Fc,sub:()=>td,sum:()=>wu,sumOutType:()=>Ns,tan:()=>Hp,tanh:()=>cl,tensor:()=>ni,tensor1d:()=>jp,tensor2d:()=>qp,tensor3d:()=>Xp,tensor4d:()=>Kp,tensor5d:()=>Yp,tensor6d:()=>Zp,tensorScatterUpdate:()=>nh,tensor_util:()=>Is,test_util:()=>Ud,tidy:()=>ci,tile:()=>Tu,time:()=>gi,topk:()=>ah,train:()=>Qf,transpose:()=>ch,truncatedNormal:()=>rh,unique:()=>sh,unregisterGradient:()=>Tr,unregisterKernel:()=>Nr,unsortedSegmentSum:()=>ih,unstack:()=>oh,upcastType:()=>Cs,upperBound:()=>lh,util:()=>$r,valueAndGrad:()=>qu,valueAndGrads:()=>Xu,variable:()=>uh,variableGrads:()=>Ku,version:()=>TK,version_converter:()=>Zy,version_core:()=>Zf,version_cpu:()=>Cb,version_wasm:()=>hW,version_webgl:()=>hT,webgl:()=>fT,webgl_util:()=>FI,webgpu_util:()=>PW,where:()=>Ql,whereAsync:()=>ph,zeros:()=>gd,zerosLike:()=>eu});var A=Object.create,b=Object.defineProperty,w=Object.getOwnPropertyDescriptor,v=Object.getOwnPropertyNames,k=Object.getPrototypeOf,I=Object.prototype.hasOwnProperty,S=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),C=(e,t)=>{for(var n in t)b(e,n,{get:t[n],enumerable:!0})},N=(e,t,n)=>(n=null!=e?A(k(e)):{},((e,t,n,a)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let n of v(t))!I.call(e,n)&&undefined!==n&&b(e,n,{get:()=>t[n],enumerable:!(a=w(t,n))||a.enumerable});return e})(!t&&e&&e.__esModule?n:b(n,"default",{value:e,enumerable:!0}),e)),T=S(((e,t)=>{t.exports=a;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function a(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}a.prototype.__isLong__,Object.defineProperty(a.prototype,"__isLong__",{value:!0}),a.isLong=r;var s={},i={};function o(e,t){var n,a,r;return t?(r=0<=(e>>>=0)&&e<256)&&(a=i[e])?a:(n=u(e,(0|e)<0?-1:0,!0),r&&(i[e]=n),n):(r=-128<=(e|=0)&&e<128)&&(a=s[e])?a:(n=u(e,e<0?-1:0,!1),r&&(s[e]=n),n)}function l(e,t){if(isNaN(e))return t?x:y;if(t){if(e<0)return x;if(e>=f)return k}else{if(e<=-m)return I;if(e+1>=m)return v}return e<0?l(-e,t).neg():u(e%c|0,e/c|0,t)}function u(e,t,n){return new a(e,t,n)}a.fromInt=o,a.fromNumber=l,a.fromBits=u;var d=Math.pow;function p(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return y;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var a;if((a=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===a)return p(e.substring(1),t,n).neg();for(var r=l(d(n,8)),s=y,i=0;i<e.length;i+=8){var o=Math.min(8,e.length-i),u=parseInt(e.substring(i,i+o),n);if(o<8){var h=l(d(n,o));s=s.mul(h).add(l(u))}else s=(s=s.mul(r)).add(l(u))}return s.unsigned=t,s}function h(e,t){return"number"==typeof e?l(e,t):"string"==typeof e?p(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}a.fromString=p,a.fromValue=h;var c=4294967296,f=c*c,m=f/2,g=o(1<<24),y=o(0);a.ZERO=y;var x=o(0,!0);a.UZERO=x;var A=o(1);a.ONE=A;var b=o(1,!0);a.UONE=b;var w=o(-1);a.NEG_ONE=w;var v=u(-1,2147483647,!1);a.MAX_VALUE=v;var k=u(-1,-1,!0);a.MAX_UNSIGNED_VALUE=k;var I=u(0,-2147483648,!1);a.MIN_VALUE=I;var S=a.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*c+(this.low>>>0):this.high*c+(this.low>>>0)},S.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=l(e),n=this.div(t),a=n.mul(t).sub(this);return n.toString(e)+a.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var r=l(d(e,6),this.unsigned),s=this,i="";;){var o=s.div(r),u=(s.sub(o.mul(r)).toInt()>>>0).toString(e);if((s=o).isZero())return u+i;for(;u.length<6;)u="0"+u;i=""+u+i}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return 0!=this.high?t+33:t+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return 1==(1&this.low)},S.isEven=function(){return 0==(1&this.low)},S.equals=function(e){return r(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},S.eq=S.equals,S.notEquals=function(e){return!this.eq(e)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(e){return this.comp(e)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(e){return this.comp(e)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(e){return this.comp(e)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(e){return this.comp(e)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(e){if(r(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(A)},S.neg=S.negate,S.add=function(e){r(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,a=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,l=e.low>>>16,d=0,p=0,c=0,f=0;return c+=(f+=s+(65535&e.low))>>>16,p+=(c+=a+l)>>>16,d+=(p+=n+o)>>>16,d+=t+i,u((c&=65535)<<16|(f&=65535),(d&=65535)<<16|(p&=65535),this.unsigned)},S.subtract=function(e){return r(e)||(e=h(e)),this.add(e.neg())},S.sub=S.subtract,S.multiply=function(e){if(this.isZero())return y;if(r(e)||(e=h(e)),n)return u(n.mul(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned);if(e.isZero())return y;if(this.eq(I))return e.isOdd()?I:y;if(e.eq(I))return this.isOdd()?I:y;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(g)&&e.lt(g))return l(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,a=65535&this.high,s=this.low>>>16,i=65535&this.low,o=e.high>>>16,d=65535&e.high,p=e.low>>>16,c=65535&e.low,f=0,m=0,x=0,A=0;return x+=(A+=i*c)>>>16,m+=(x+=s*c)>>>16,x&=65535,m+=(x+=i*p)>>>16,f+=(m+=a*c)>>>16,m&=65535,f+=(m+=s*p)>>>16,m&=65535,f+=(m+=i*d)>>>16,f+=t*c+a*p+s*d+i*o,u((x&=65535)<<16|(A&=65535),(f&=65535)<<16|(m&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(e){if(r(e)||(e=h(e)),e.isZero())throw Error("division by zero");var t,a,s;if(n)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?n.div_u:n.div_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?x:y;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return x;if(e.gt(this.shru(1)))return b;s=x}else{if(this.eq(I))return e.eq(A)||e.eq(w)?I:e.eq(I)?A:(t=this.shr(1).div(e).shl(1)).eq(y)?e.isNegative()?A:w:(a=this.sub(e.mul(t)),s=t.add(a.div(e)));if(e.eq(I))return this.unsigned?x:y;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=y}for(a=this;a.gte(e);){t=Math.max(1,Math.floor(a.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(t)/Math.LN2),o=i<=48?1:d(2,i-48),p=l(t),c=p.mul(e);c.isNegative()||c.gt(a);)c=(p=l(t-=o,this.unsigned)).mul(e);p.isZero()&&(p=A),s=s.add(p),a=a.sub(c)}return s},S.div=S.divide,S.modulo=function(e){return r(e)||(e=h(e)),n?u((this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return u(~this.low,~this.high,this.unsigned)},S.and=function(e){return r(e)||(e=h(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},S.or=function(e){return r(e)||(e=h(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},S.xor=function(e){return r(e)||(e=h(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},S.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},S.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},S.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},a.fromBytes=function(e,t,n){return n?a.fromBytesLE(e,t):a.fromBytesBE(e,t)},a.fromBytesLE=function(e,t){return new a(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},a.fromBytesBE=function(e,t){return new a(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}})),R=S((()=>{})),E=S((()=>{})),$=S(((e,t)=>{!function(e,t,n){function a(e){var t=this,n=function(){var e=4022871197;return function(t){t=String(t);for(var n=0;n<t.length;n++){var a=.02519603282416938*(e+=t.charCodeAt(n));a-=e=a>>>0,e=(a*=e)>>>0,e+=4294967296*(a-=e)}return 2.3283064365386963e-10*(e>>>0)}}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function r(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new a(e),s=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,s&&("object"==typeof s&&r(s,n),i.state=function(){return r(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.alea=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),M=S(((e,t)=>{!function(e,t,n){function a(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),t.next()}function r(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new a(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&r(s,n),i.state=function(){return r(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor128=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),F=S(((e,t)=>{!function(e,t,n){function a(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),a==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function r(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new a(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&r(s,n),i.state=function(){return r(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorwow=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),_=S(((e,t)=>{!function(e,t,n){function a(e){var t=this;t.next=function(){var e,n,a=t.x,r=t.i;return e=a[r],n=(e^=e>>>7)^e<<24,n^=(e=a[r+1&7])^e>>>10,n^=(e=a[r+3&7])^e>>>3,n^=(e=a[r+4&7])^e<<7,e=a[r+7&7],n^=(e^=e<<13)^e<<9,a[r]=n,t.i=r+1&7,n},function(e,t){var n,a=[];if(t===(0|t))a[0]=t;else for(t=""+t,n=0;n<t.length;++n)a[7&n]=a[7&n]<<15^t.charCodeAt(n)+a[n+1&7]<<13;for(;a.length<8;)a.push(0);for(n=0;n<8&&0===a[n];++n);for(8==n?a[7]=-1:a[n],e.x=a,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function r(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new a(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.x&&r(s,n),i.state=function(){return r(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorshift7=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),P=S(((e,t)=>{!function(e,t,n){function a(e){var t=this;t.next=function(){var e,n,a=t.w,r=t.X,s=t.i;return t.w=a=a+1640531527|0,n=r[s+34&127],e=r[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[s]=n^e,t.i=s,n+(a^a>>>16)|0},function(e,t){var n,a,r,s,i,o=[],l=128;for(t===(0|t)?(a=t,t=null):(t+="\0",a=0,l=Math.max(l,t.length)),r=0,s=-32;s<l;++s)t&&(a^=t.charCodeAt((s+32)%t.length)),0===s&&(i=a),a^=a<<10,a^=a>>>15,a^=a<<4,a^=a>>>13,s>=0&&(i=i+1640531527|0,r=0==(n=o[127&s]^=a+i)?r+1:0);for(r>=128&&(o[127&(t&&t.length||0)]=-1),r=127,s=512;s>0;--s)a=o[r+34&127],n=o[r=r+1&127],a^=a<<13,n^=n<<17,a^=a>>>15,n^=n>>>12,o[r]=a^n;e.w=i,e.X=o,e.i=r}(t,e)}function r(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new a(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.X&&r(s,n),i.state=function(){return r(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor4096=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),O=S(((e,t)=>{!function(e,t,n){function a(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,a=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-a|0,a=a<<24^a>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-a|0,t.d=a<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var a=0;a<n.length+20;a++)t.b^=0|n.charCodeAt(a),t.next()}function r(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new a(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&r(s,n),i.state=function(){return r(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.tychei=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),D=S((()=>{})),z=S(((e,t)=>{!function(e,n,r){var s,i=256,o="random",l=r.pow(i,6),u=r.pow(2,52),d=2*u,p=i-1;function h(t,a,p){var h=[],x=g(m((a=1==a?{entropy:!0}:a||{}).entropy?[t,y(n)]:null==t?function(){try{var t;return s&&(t=s.randomBytes)?t=t(i):(t=new Uint8Array(i),(e.crypto||e.msCrypto).getRandomValues(t)),y(t)}catch(t){var a=e.navigator,r=a&&a.plugins;return[+new Date,e,r,e.screen,y(n)]}}():t,3),h),A=new c(h),b=function(){for(var e=A.g(6),t=l,n=0;e<u;)e=(e+n)*i,t*=i,n=A.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return b.int32=function(){return 0|A.g(4)},b.quick=function(){return A.g(4)/4294967296},b.double=b,g(y(A.S),n),(a.pass||p||function(e,t,n,a){return a&&(a.S&&f(a,A),e.state=function(){return f(A,{})}),n?(r[o]=e,t):e})(b,x,"global"in a?a.global:this==r,a.state)}function c(e){var t,n=e.length,a=this,r=0,s=a.i=a.j=0,o=a.S=[];for(n||(e=[n++]);r<i;)o[r]=r++;for(r=0;r<i;r++)o[r]=o[s=p&s+e[r%n]+(t=o[r])],o[s]=t;(a.g=function(e){for(var t,n=0,r=a.i,s=a.j,o=a.S;e--;)t=o[r=p&r+1],n=n*i+o[p&(o[r]=o[s=p&s+t])+(o[s]=t)];return a.i=r,a.j=s,n})(i)}function f(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function m(e,t){var n,a=[],r=typeof e;if(t&&"object"==r)for(n in e)try{a.push(m(e[n],t-1))}catch(e){}return a.length?a:"string"==r?e:e+"\0"}function g(e,t){for(var n,a=e+"",r=0;r<a.length;)t[p&r]=p&(n^=19*t[p&r])+a.charCodeAt(r++);return y(t)}function y(e){return String.fromCharCode.apply(0,e)}if(g(r.random(),n),"object"==typeof t&&t.exports){t.exports=h;try{s=D()}catch(e){}}else"function"==typeof define&&a.amdO?define((function(){return h})):r["seed"+o]=h}("undefined"!=typeof self?self:e,[],Math)})),L=S(((e,t)=>{var n=$(),a=M(),r=F(),s=_(),i=P(),o=O(),l=z();l.alea=n,l.xor128=a,l.xorwow=r,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l})),W=S((()=>{})),B=S((()=>{})),V=S((()=>{})),U=S((()=>{})),G=S((()=>{})),H=S(((e,t)=>{var n,r=(n=(n="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||u,function(e){function t(){return $.buffer!=_&&X($.buffer),O}function r(){return $.buffer!=_&&X($.buffer),D}function s(){return $.buffer!=_&&X($.buffer),z}function i(){return $.buffer!=_&&X($.buffer),L}var o,l,u,d=void 0!==(e=e||{})?e:{};d.ready=new Promise((function(e,t){o=e,l=t})),"undefined"!=typeof process&&process.listeners&&(u={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var p,h,c,f=Object.assign({},d),m=[],g=(e,t)=>{throw t},y="object"==typeof window,x="function"==typeof importScripts,A="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,b=d.ENVIRONMENT_IS_PTHREAD||!1,w="";function v(e){return d.locateFile?d.locateFile(e,w):w+e}if(A){var k=W(),I=B();let e;w=x?I.dirname(w)+"/":"//",p=(e,t)=>(e=le(e)?new URL(e):I.normalize(e),k.readFileSync(e,t?void 0:"utf8")),c=e=>{var t=p(e,!0);return t.buffer||(t=new Uint8Array(t)),t},h=(e,t,n)=>{e=le(e)?new URL(e):I.normalize(e),k.readFile(e,(function(e,a){e?n(e):t(a.buffer)}))},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),m=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof pe))throw e})),process.on("unhandledRejection",(function(e){throw e})),g=(e,t)=>{if(ee())throw process.exitCode=e,t;(function(e){e instanceof pe||R("exiting due to exception: "+e)})(t),process.exit(e)},d.inspect=function(){return"[Emscripten Module object]"};try{e=V()}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}a.g.Worker=e.Worker}else(y||x)&&(x?w=self.location.href:"undefined"!=typeof document&&document.currentScript&&(w=document.currentScript.src),void 0!==n&&n&&(w=n),w=0!==w.indexOf("blob:")?w.substr(0,w.replace(/[?#].*/,"").lastIndexOf("/")+1):"",A||(p=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},x&&(c=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),h=(e,t,n)=>{var a=new XMLHttpRequest;a.open("GET",e,!0),a.responseType="arraybuffer",a.onload=()=>{200==a.status||0==a.status&&a.response?t(a.response):n()},a.onerror=n,a.send(null)}));A&&"undefined"==typeof performance&&(a.g.performance=U().performance);var S=console.log.bind(console),C=console.warn.bind(console);A&&(S=e=>k.writeSync(1,e+"\n"),C=e=>k.writeSync(2,e+"\n"));var N,T=d.print||S,R=d.printErr||C;Object.assign(d,f),f=null,d.arguments&&(m=d.arguments),d.thisProgram&&d.thisProgram,d.quit&&(g=d.quit),Atomics.load,Atomics.store,Atomics.compareExchange,d.wasmBinary&&(N=d.wasmBinary);var E=d.noExitRuntime||!0;"object"!=typeof WebAssembly&&se("no native wasm support detected");var $,M,F,_,P,O,D,z,L,H=!1,j="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function q(e,t,n){for(var a=(t>>>=0)+n,r=t;e[r]&&!(r>=a);)++r;if(r-t>16&&e.buffer&&j)return j.decode(e.buffer instanceof SharedArrayBuffer?e.slice(t,r):e.subarray(t,r));for(var s="";t<r;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var l=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var u=i-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function X(e){_=e,d.HEAP8=P=new Int8Array(e),d.HEAP16=new Int16Array(e),d.HEAP32=D=new Int32Array(e),d.HEAPU8=O=new Uint8Array(e),d.HEAPU16=new Uint16Array(e),d.HEAPU32=z=new Uint32Array(e),d.HEAPF32=new Float32Array(e),d.HEAPF64=L=new Float64Array(e)}b&&(_=d.buffer);var K=d.INITIAL_MEMORY||16777216;if(b)$=d.wasmMemory,_=d.buffer;else if(d.wasmMemory)$=d.wasmMemory;else if(!(($=new WebAssembly.Memory({initial:K/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw R("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),A&&R("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");$&&(_=$.buffer),K=_.byteLength,X(_);var Y,Z=[],J=[],Q=[];function ee(){return E}function te(){!b&&ye(J)}var ne=0,ae=null,re=null;function se(e){d.onAbort&&d.onAbort(e),R(e="Aborted("+e+")"),H=!0,F=1,e+=". Build with -sASSERTIONS for more info.";var t=new WebAssembly.RuntimeError(e);throw l(t),t}var ie;function oe(e){return e.startsWith("data:application/octet-stream;base64,")}function le(e){return e.startsWith("file://")}function ue(e){try{if(e==ie&&N)return new Uint8Array(N);if(c)return c(e);throw"both async and sync fetching of the wasm failed"}catch(e){se(e)}}oe(ie="tfjs-backend-wasm-threaded-simd.wasm")||(ie=v(ie));var de={};function pe(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function he(e){var t=ge.pthreads[e];(function(e,t){e||se(void 0)})(t),ge.returnWorkerToPool(t)}function ce(e){var t=ge.getNewWorker();if(!t)return 6;ge.runningWorkers.push(t),ge.pthreads[e.pthread_ptr]=t,t.pthread_ptr=e.pthread_ptr;var n={cmd:"run",start_routine:e.startRoutine,arg:e.arg,pthread_ptr:e.pthread_ptr};return t.runPthread=()=>{A&&t.ref(),t.postMessage(n,e.transferList),delete t.runPthread},t.loaded&&t.runPthread(),0}function fe(e){if(b)return Se(1,1,e);F=e,ee()||(ge.terminateAllThreads(),d.onExit&&d.onExit(e),H=!0),g(e,new pe(e))}var me=function(e,t){if(F=e,!t&&b)throw xe(e),"unwind";fe(e)},ge={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){b?ge.initWorker():ge.initMainThread()},initMainThread:function(){for(var e=8;e--;)ge.allocateUnusedWorker()},initWorker:function(){E=!1},setExitStatus:function(e){F=e},terminateAllThreads:function(){for(var e of Object.values(ge.pthreads))ge.returnWorkerToPool(e);for(var e of ge.unusedWorkers)e.terminate();ge.unusedWorkers=[]},returnWorkerToPool:function(e){var t=e.pthread_ptr;delete ge.pthreads[t],ge.unusedWorkers.push(e),ge.runningWorkers.splice(ge.runningWorkers.indexOf(e),1),e.pthread_ptr=0,A&&e.unref(),Ge(t)},receiveObjectTransfer:function(e){},threadInitTLS:function(){ge.tlsInitFunctions.forEach((e=>e()))},loadWasmModuleToWorker:function(e,t){e.onmessage=n=>{var a=n.data,r=a.cmd;if(e.pthread_ptr&&(ge.currentProxiedOperationCallerThread=e.pthread_ptr),a.targetThread&&a.targetThread!=We()){var s=ge.pthreads[a.targetThread];return s?s.postMessage(a,a.transferList):R('Internal error! Worker sent a message "'+r+'" to target pthread '+a.targetThread+", but that thread no longer exists!"),void(ge.currentProxiedOperationCallerThread=void 0)}"processProxyingQueue"===r?ke(a.queue):"spawnThread"===r?ce(a):"cleanupThread"===r?he(a.thread):"killThread"===r?function(e){var t=ge.pthreads[e];delete ge.pthreads[e],t.terminate(),Ge(e),ge.runningWorkers.splice(ge.runningWorkers.indexOf(t),1),t.pthread_ptr=0}(a.thread):"cancelThread"===r?function(e){ge.pthreads[e].postMessage({cmd:"cancel"})}(a.thread):"loaded"===r?(e.loaded=!0,A&&e.unref(),t&&t(e),e.runPthread&&e.runPthread()):"print"===r?T("Thread "+a.threadId+": "+a.text):"printErr"===r?R("Thread "+a.threadId+": "+a.text):"alert"===r?alert("Thread "+a.threadId+": "+a.text):"setimmediate"===a.target?e.postMessage(a):"callHandler"===r?d[a.handler](...a.args):r&&R("worker sent an unknown command "+r),ge.currentProxiedOperationCallerThread=void 0},e.onerror=e=>{throw R("worker sent an error! "+e.filename+":"+e.lineno+": "+e.message),e},A&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})),e.on("detachedExit",(function(){})));var a=[];for(var r of["onExit","onAbort","print","printErr"])d.hasOwnProperty(r)&&a.push(r);e.postMessage({cmd:"load",handlers:a,urlOrBlob:d.mainScriptUrlOrBlob||n,wasmMemory:$,wasmModule:M})},allocateUnusedWorker:function(){var e,t=v("tfjs-backend-wasm-threaded-simd.worker.js");e=new Worker(t),ge.unusedWorkers.push(e)},getNewWorker:function(){return 0==ge.unusedWorkers.length&&(ge.allocateUnusedWorker(),ge.loadWasmModuleToWorker(ge.unusedWorkers[0])),ge.unusedWorkers.pop()}};function ye(e){for(;e.length>0;)e.shift()(d)}function xe(e){if(b)return Se(2,0,e);try{me(e)}catch(e){!function(e){if(e instanceof pe||"unwind"==e)return F;g(1,e)}(e)}}d.PThread=ge,d.establishStackSpace=function(){var e=We(),t=r()[e+52>>>2],n=r()[e+56>>>2];je(t,t-n),Xe(t)};var Ae,be=[];function we(e,t,n,a){return b?Se(3,1,e,t,n,a):ve(e,t,n,a)}function ve(e,t,n,a){if("undefined"==typeof SharedArrayBuffer)return R("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var r=[];if(b&&0===r.length)return we(e,t,n,a);var s={startRoutine:n,pthread_ptr:e,arg:a,transferList:r};return b?(s.cmd="spawnThread",postMessage(s,r),0):ce(s)}function ke(e){Atomics.store(r(),e>>2,1),We()&&Ue(e),Atomics.compareExchange(r(),e>>2,1,0)}function Ie(e){Ie.shown||(Ie.shown={}),Ie.shown[e]||(Ie.shown[e]=1,A&&(e="warning: "+e),R(e))}function Se(e,t){var n=arguments.length-2,a=arguments;return function(e){var t=qe(),n=e();return Xe(t),n}((()=>{for(var r=n,s=Ke(8*r),o=s>>3,l=0;l<n;l++){var u=a[2+l];i()[o+l>>>0]=u}return Ve(e,r,s,t)}))}d.invokeEntryPoint=function(e,t){var n=function(e){var t=be[e];return t||(e>=be.length&&(be.length=e+1),be[e]=t=Y.get(e)),t}(e)(t);ee()?ge.setExitStatus(n):He(n)},d.executeNotifiedProxyingQueue=ke,Ae=A?()=>{var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:()=>performance.timeOrigin+performance.now();var Ce=[];function Ne(e){try{return $.grow(e-_.byteLength+65535>>>16),X($.buffer),1}catch(e){}}function Te(e){return b?Se(4,1,e):52}function Re(e,t,n,a,r){return b?Se(5,1,e,t,n,a,r):70}var Ee=[null,[],[]];function $e(e,t){var n=Ee[e];0===t||10===t?((1===e?T:R)(q(n,0)),n.length=0):n.push(t)}function Me(e,n,a,r){if(b)return Se(6,1,e,n,a,r);for(var i=0,o=0;o<a;o++){var l=s()[n>>>2],u=s()[n+4>>>2];n+=8;for(var d=0;d<u;d++)$e(e,t()[l+d>>>0]);i+=u}return s()[r>>>2]=i,0}function Fe(e){return d["_"+e]}function _e(e,n,a,r,s){var i={string:e=>{var n=0;if(null!=e&&0!==e){var a=1+(e.length<<2);!function(e,n,a){!function(e,t,n,a){if(!(a>0))return 0;for(var r=(n>>>=0)+a-1,s=0;s<e.length;++s){var i=e.charCodeAt(s);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++s)),i<=127){if(n>=r)break;t[n++>>>0]=i}else if(i<=2047){if(n+1>=r)break;t[n++>>>0]=192|i>>6,t[n++>>>0]=128|63&i}else if(i<=65535){if(n+2>=r)break;t[n++>>>0]=224|i>>12,t[n++>>>0]=128|i>>6&63,t[n++>>>0]=128|63&i}else{if(n+3>=r)break;t[n++>>>0]=240|i>>18,t[n++>>>0]=128|i>>12&63,t[n++>>>0]=128|i>>6&63,t[n++>>>0]=128|63&i}}t[n>>>0]=0}(e,t(),n,a)}(e,n=Ke(a),a)}return n},array:e=>{var t=Ke(e.length);return function(e,t){($.buffer!=_&&X($.buffer),P).set(e,t>>>0)}(e,t),t}},o=Fe(e),l=[],u=0;if(r)for(var d=0;d<r.length;d++){var p=i[a[d]];p?(0===u&&(u=qe()),l[d]=p(r[d])):l[d]=r[d]}var h,c=o.apply(null,l);return h=c,0!==u&&Xe(u),c=function(e){return"string"===n?function(e,n){return(e>>>=0)?q(t(),e,n):""}(e):"boolean"===n?!!e:e}(h),c}ge.init();var Pe,Oe,De,ze=[null,fe,xe,we,Te,Re,Me],Le={__emscripten_init_main_thread_js:function(e){Be(e,!x,1,!y),ge.threadInitTLS()},__emscripten_thread_cleanup:function(e){b?postMessage({cmd:"cleanupThread",thread:e}):he(e)},__pthread_create_js:ve,_emscripten_default_pthread_stack_size:function(){return 65536},_emscripten_get_now_is_monotonic:function(){return!0},_emscripten_notify_task_queue:function(e,t,n,a){if(e==t)setTimeout((()=>ke(a)));else if(b)postMessage({targetThread:e,cmd:"processProxyingQueue",queue:a});else{var r=ge.pthreads[e];if(!r)return;r.postMessage({cmd:"processProxyingQueue",queue:a})}return 1},_emscripten_set_offscreencanvas_size:function(e,t,n){return-1},abort:function(){se("")},emscripten_check_blocking_allowed:function(){A||x||Ie("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")},emscripten_date_now:function(){return Date.now()},emscripten_get_heap_max:function(){return 4294901760},emscripten_get_now:Ae,emscripten_memcpy_big:function(e,n,a){t().copyWithin(e>>>0,n>>>0,n+a>>>0)},emscripten_num_logical_cores:function(){return A?G().cpus().length:navigator.hardwareConcurrency},emscripten_receive_on_main_thread_js:function(e,t,n){Ce.length=t;for(var a=n>>3,r=0;r<t;r++)Ce[r]=i()[a+r>>>0];return(e<0?de[-e-1]:ze[e]).apply(null,Ce)},emscripten_resize_heap:function(e){var n=t().length;if((e>>>=0)<=n)return!1;var a,r=4294901760;if(e>r)return!1;for(var s=1;s<=4;s*=2){var i=n*(1+.2/s);if(i=Math.min(i,e+100663296),Ne(Math.min(r,(a=Math.max(e,i))+(65536-a%65536)%65536)))return!0}return!1},emscripten_unwind_to_js_event_loop:function(){throw"unwind"},exit:me,fd_close:Te,fd_seek:Re,fd_write:Me,memory:$||d.wasmMemory},We=(function(){var e={env:Le,wasi_snapshot_preview1:Le};function t(e,t){var n=e.exports;if(d.asm=n,function(e){ge.tlsInitFunctions.push(e)}(d.asm._emscripten_tls_init),Y=d.asm.__indirect_function_table,function(e){J.unshift(e)}(d.asm.__wasm_call_ctors),M=t,!b){var a=ge.unusedWorkers.length;ge.unusedWorkers.forEach((function(e){ge.loadWasmModuleToWorker(e,(function(){--a||function(e){if(ne--,d.monitorRunDependencies&&d.monitorRunDependencies(ne),0==ne&&(null!==ae&&(clearInterval(ae),ae=null),re)){var t=re;re=null,t()}}()}))}))}}function n(e){t(e.instance,e.module)}function a(t){return function(){if(!N&&(y||x)){if("function"==typeof fetch&&!le(ie))return fetch(ie,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+ie+"'";return e.arrayBuffer()})).catch((function(){return ue(ie)}));if(h)return new Promise((function(e,t){h(ie,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return ue(ie)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){R("failed to asynchronously prepare wasm: "+e),se(e)}))}if(b||(ne++,d.monitorRunDependencies&&d.monitorRunDependencies(ne)),d.instantiateWasm)try{return d.instantiateWasm(e,t)}catch(e){R("Module.instantiateWasm callback failed with error: "+e),l(e)}(N||"function"!=typeof WebAssembly.instantiateStreaming||oe(ie)||le(ie)||A||"function"!=typeof fetch?a(n):fetch(ie,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return R("wasm streaming compile failed: "+e),R("falling back to ArrayBuffer instantiation"),a(n)}))}))).catch(l)}(),d.___wasm_call_ctors=function(){return(d.___wasm_call_ctors=d.asm.__wasm_call_ctors).apply(null,arguments)},d._init=function(){return(d._init=d.asm.init).apply(null,arguments)},d._init_with_threads_count=function(){return(d._init_with_threads_count=d.asm.init_with_threads_count).apply(null,arguments)},d._get_threads_count=function(){return(d._get_threads_count=d.asm.get_threads_count).apply(null,arguments)},d._register_tensor=function(){return(d._register_tensor=d.asm.register_tensor).apply(null,arguments)},d._dispose_data=function(){return(d._dispose_data=d.asm.dispose_data).apply(null,arguments)},d._dispose=function(){return(d._dispose=d.asm.dispose).apply(null,arguments)},d._Abs=function(){return(d._Abs=d.asm.Abs).apply(null,arguments)},d._Acos=function(){return(d._Acos=d.asm.Acos).apply(null,arguments)},d._Acosh=function(){return(d._Acosh=d.asm.Acosh).apply(null,arguments)},d._Add=function(){return(d._Add=d.asm.Add).apply(null,arguments)},d._AddN=function(){return(d._AddN=d.asm.AddN).apply(null,arguments)},d._All=function(){return(d._All=d.asm.All).apply(null,arguments)},d._Any=function(){return(d._Any=d.asm.Any).apply(null,arguments)},d._ArgMax=function(){return(d._ArgMax=d.asm.ArgMax).apply(null,arguments)},d._ArgMin=function(){return(d._ArgMin=d.asm.ArgMin).apply(null,arguments)},d._Asin=function(){return(d._Asin=d.asm.Asin).apply(null,arguments)},d._Asinh=function(){return(d._Asinh=d.asm.Asinh).apply(null,arguments)},d._Atan=function(){return(d._Atan=d.asm.Atan).apply(null,arguments)},d._Atan2=function(){return(d._Atan2=d.asm.Atan2).apply(null,arguments)},d._Atanh=function(){return(d._Atanh=d.asm.Atanh).apply(null,arguments)},d._AvgPool=function(){return(d._AvgPool=d.asm.AvgPool).apply(null,arguments)},d._AvgPool3D=function(){return(d._AvgPool3D=d.asm.AvgPool3D).apply(null,arguments)},d._AvgPool3DGrad=function(){return(d._AvgPool3DGrad=d.asm.AvgPool3DGrad).apply(null,arguments)},d._AvgPoolGrad=function(){return(d._AvgPoolGrad=d.asm.AvgPoolGrad).apply(null,arguments)},d._BatchMatMul=function(){return(d._BatchMatMul=d.asm.BatchMatMul).apply(null,arguments)},d._Bincount=function(){return(d._Bincount=d.asm.Bincount).apply(null,arguments)},d._BitwiseAnd=function(){return(d._BitwiseAnd=d.asm.BitwiseAnd).apply(null,arguments)},d._Ceil=function(){return(d._Ceil=d.asm.Ceil).apply(null,arguments)},d._ClipByValue=function(){return(d._ClipByValue=d.asm.ClipByValue).apply(null,arguments)},d._Conv2D=function(){return(d._Conv2D=d.asm.Conv2D).apply(null,arguments)},d._Conv2DBackpropInput=function(){return(d._Conv2DBackpropInput=d.asm.Conv2DBackpropInput).apply(null,arguments)},d._Conv3D=function(){return(d._Conv3D=d.asm.Conv3D).apply(null,arguments)},d._Conv3DBackpropFilterV2=function(){return(d._Conv3DBackpropFilterV2=d.asm.Conv3DBackpropFilterV2).apply(null,arguments)},d._Conv3DBackpropInputV2=function(){return(d._Conv3DBackpropInputV2=d.asm.Conv3DBackpropInputV2).apply(null,arguments)},d._Cos=function(){return(d._Cos=d.asm.Cos).apply(null,arguments)},d._Cosh=function(){return(d._Cosh=d.asm.Cosh).apply(null,arguments)},d._CropAndResize=function(){return(d._CropAndResize=d.asm.CropAndResize).apply(null,arguments)},d._Cumprod=function(){return(d._Cumprod=d.asm.Cumprod).apply(null,arguments)},d._Cumsum=function(){return(d._Cumsum=d.asm.Cumsum).apply(null,arguments)},d._DenseBincount=function(){return(d._DenseBincount=d.asm.DenseBincount).apply(null,arguments)},d._DepthToSpace=function(){return(d._DepthToSpace=d.asm.DepthToSpace).apply(null,arguments)},d._DepthwiseConv2dNative=function(){return(d._DepthwiseConv2dNative=d.asm.DepthwiseConv2dNative).apply(null,arguments)},d._Diag=function(){return(d._Diag=d.asm.Diag).apply(null,arguments)},d._Dilation2D=function(){return(d._Dilation2D=d.asm.Dilation2D).apply(null,arguments)},d._Dilation2DBackpropFilter=function(){return(d._Dilation2DBackpropFilter=d.asm.Dilation2DBackpropFilter).apply(null,arguments)},d._Dilation2DBackpropInput=function(){return(d._Dilation2DBackpropInput=d.asm.Dilation2DBackpropInput).apply(null,arguments)},d._Elu=function(){return(d._Elu=d.asm.Elu).apply(null,arguments)},d._EluGrad=function(){return(d._EluGrad=d.asm.EluGrad).apply(null,arguments)},d._Equal=function(){return(d._Equal=d.asm.Equal).apply(null,arguments)},d._Erf=function(){return(d._Erf=d.asm.Erf).apply(null,arguments)},d._Exp=function(){return(d._Exp=d.asm.Exp).apply(null,arguments)},d._Expm1=function(){return(d._Expm1=d.asm.Expm1).apply(null,arguments)},d._FlipLeftRight=function(){return(d._FlipLeftRight=d.asm.FlipLeftRight).apply(null,arguments)},d._Floor=function(){return(d._Floor=d.asm.Floor).apply(null,arguments)},d._FloorDiv=function(){return(d._FloorDiv=d.asm.FloorDiv).apply(null,arguments)},d._FusedBatchNorm=function(){return(d._FusedBatchNorm=d.asm.FusedBatchNorm).apply(null,arguments)},d._FusedConv2D=function(){return(d._FusedConv2D=d.asm.FusedConv2D).apply(null,arguments)},d._FusedDepthwiseConv2D=function(){return(d._FusedDepthwiseConv2D=d.asm.FusedDepthwiseConv2D).apply(null,arguments)},d._Gather=function(){return(d._Gather=d.asm.Gather).apply(null,arguments)},d._GatherNd=function(){return(d._GatherNd=d.asm.GatherNd).apply(null,arguments)},d._Greater=function(){return(d._Greater=d.asm.Greater).apply(null,arguments)},d._GreaterEqual=function(){return(d._GreaterEqual=d.asm.GreaterEqual).apply(null,arguments)},d._IsFinite=function(){return(d._IsFinite=d.asm.IsFinite).apply(null,arguments)},d._IsInf=function(){return(d._IsInf=d.asm.IsInf).apply(null,arguments)},d._IsNan=function(){return(d._IsNan=d.asm.IsNan).apply(null,arguments)},d._LRN=function(){return(d._LRN=d.asm.LRN).apply(null,arguments)},d._LRNGrad=function(){return(d._LRNGrad=d.asm.LRNGrad).apply(null,arguments)},d._LeakyRelu=function(){return(d._LeakyRelu=d.asm.LeakyRelu).apply(null,arguments)},d._Less=function(){return(d._Less=d.asm.Less).apply(null,arguments)},d._LessEqual=function(){return(d._LessEqual=d.asm.LessEqual).apply(null,arguments)},d._LinSpace=function(){return(d._LinSpace=d.asm.LinSpace).apply(null,arguments)},d._Log=function(){return(d._Log=d.asm.Log).apply(null,arguments)},d._Log1p=function(){return(d._Log1p=d.asm.Log1p).apply(null,arguments)},d._LogicalAnd=function(){return(d._LogicalAnd=d.asm.LogicalAnd).apply(null,arguments)},d._LogicalNot=function(){return(d._LogicalNot=d.asm.LogicalNot).apply(null,arguments)},d._LogicalOr=function(){return(d._LogicalOr=d.asm.LogicalOr).apply(null,arguments)},d._LogicalXor=function(){return(d._LogicalXor=d.asm.LogicalXor).apply(null,arguments)},d._Max=function(){return(d._Max=d.asm.Max).apply(null,arguments)},d._MaxPool=function(){return(d._MaxPool=d.asm.MaxPool).apply(null,arguments)},d._MaxPool3D=function(){return(d._MaxPool3D=d.asm.MaxPool3D).apply(null,arguments)},d._MaxPool3DGrad=function(){return(d._MaxPool3DGrad=d.asm.MaxPool3DGrad).apply(null,arguments)},d._MaxPoolGrad=function(){return(d._MaxPoolGrad=d.asm.MaxPoolGrad).apply(null,arguments)},d._MaxPoolWithArgmax=function(){return(d._MaxPoolWithArgmax=d.asm.MaxPoolWithArgmax).apply(null,arguments)},d._Maximum=function(){return(d._Maximum=d.asm.Maximum).apply(null,arguments)},d._Mean=function(){return(d._Mean=d.asm.Mean).apply(null,arguments)},d._Min=function(){return(d._Min=d.asm.Min).apply(null,arguments)},d._Minimum=function(){return(d._Minimum=d.asm.Minimum).apply(null,arguments)},d._MirrorPad=function(){return(d._MirrorPad=d.asm.MirrorPad).apply(null,arguments)},d._Mod=function(){return(d._Mod=d.asm.Mod).apply(null,arguments)},d._Multinomial=function(){return(d._Multinomial=d.asm.Multinomial).apply(null,arguments)},d._Multiply=function(){return(d._Multiply=d.asm.Multiply).apply(null,arguments)},d._Neg=function(){return(d._Neg=d.asm.Neg).apply(null,arguments)},d._NonMaxSuppressionV3=function(){return(d._NonMaxSuppressionV3=d.asm.NonMaxSuppressionV3).apply(null,arguments)},d._NonMaxSuppressionV4=function(){return(d._NonMaxSuppressionV4=d.asm.NonMaxSuppressionV4).apply(null,arguments)},d._NonMaxSuppressionV5=function(){return(d._NonMaxSuppressionV5=d.asm.NonMaxSuppressionV5).apply(null,arguments)},d._NotEqual=function(){return(d._NotEqual=d.asm.NotEqual).apply(null,arguments)},d._OneHot=function(){return(d._OneHot=d.asm.OneHot).apply(null,arguments)},d._PadV2=function(){return(d._PadV2=d.asm.PadV2).apply(null,arguments)},d._Pow=function(){return(d._Pow=d.asm.Pow).apply(null,arguments)},d._Prelu=function(){return(d._Prelu=d.asm.Prelu).apply(null,arguments)},d._Prod=function(){return(d._Prod=d.asm.Prod).apply(null,arguments)},d._RealDiv=function(){return(d._RealDiv=d.asm.RealDiv).apply(null,arguments)},d._Reciprocal=function(){return(d._Reciprocal=d.asm.Reciprocal).apply(null,arguments)},d._Relu=function(){return(d._Relu=d.asm.Relu).apply(null,arguments)},d._Relu6=function(){return(d._Relu6=d.asm.Relu6).apply(null,arguments)},d._ResizeBilinear=function(){return(d._ResizeBilinear=d.asm.ResizeBilinear).apply(null,arguments)},d._ResizeBilinearGrad=function(){return(d._ResizeBilinearGrad=d.asm.ResizeBilinearGrad).apply(null,arguments)},d._ResizeNearestNeighbor=function(){return(d._ResizeNearestNeighbor=d.asm.ResizeNearestNeighbor).apply(null,arguments)},d._ResizeNearestNeighborGrad=function(){return(d._ResizeNearestNeighborGrad=d.asm.ResizeNearestNeighborGrad).apply(null,arguments)},d._Reverse=function(){return(d._Reverse=d.asm.Reverse).apply(null,arguments)},d._RotateWithOffset=function(){return(d._RotateWithOffset=d.asm.RotateWithOffset).apply(null,arguments)},d._Round=function(){return(d._Round=d.asm.Round).apply(null,arguments)},d._Rsqrt=function(){return(d._Rsqrt=d.asm.Rsqrt).apply(null,arguments)},d._ScatterNd=function(){return(d._ScatterNd=d.asm.ScatterNd).apply(null,arguments)},d._SearchSorted=function(){return(d._SearchSorted=d.asm.SearchSorted).apply(null,arguments)},d._SelectV2=function(){return(d._SelectV2=d.asm.SelectV2).apply(null,arguments)},d._Selu=function(){return(d._Selu=d.asm.Selu).apply(null,arguments)},d._Sigmoid=function(){return(d._Sigmoid=d.asm.Sigmoid).apply(null,arguments)},d._Sign=function(){return(d._Sign=d.asm.Sign).apply(null,arguments)},d._Sin=function(){return(d._Sin=d.asm.Sin).apply(null,arguments)},d._Sinh=function(){return(d._Sinh=d.asm.Sinh).apply(null,arguments)},d._Softmax=function(){return(d._Softmax=d.asm.Softmax).apply(null,arguments)},d._Softplus=function(){return(d._Softplus=d.asm.Softplus).apply(null,arguments)},d._SparseFillEmptyRows=function(){return(d._SparseFillEmptyRows=d.asm.SparseFillEmptyRows).apply(null,arguments)},d._SparseReshape=function(){return(d._SparseReshape=d.asm.SparseReshape).apply(null,arguments)},d._SparseSegmentReduction=function(){return(d._SparseSegmentReduction=d.asm.SparseSegmentReduction).apply(null,arguments)},d._SparseToDense=function(){return(d._SparseToDense=d.asm.SparseToDense).apply(null,arguments)},d._Sqrt=function(){return(d._Sqrt=d.asm.Sqrt).apply(null,arguments)},d._Square=function(){return(d._Square=d.asm.Square).apply(null,arguments)},d._SquaredDifference=function(){return(d._SquaredDifference=d.asm.SquaredDifference).apply(null,arguments)},d._Step=function(){return(d._Step=d.asm.Step).apply(null,arguments)},d._StridedSlice=function(){return(d._StridedSlice=d.asm.StridedSlice).apply(null,arguments)},d._Sub=function(){return(d._Sub=d.asm.Sub).apply(null,arguments)},d._Sum=function(){return(d._Sum=d.asm.Sum).apply(null,arguments)},d._Tan=function(){return(d._Tan=d.asm.Tan).apply(null,arguments)},d._Tanh=function(){return(d._Tanh=d.asm.Tanh).apply(null,arguments)},d._TensorScatterUpdate=function(){return(d._TensorScatterUpdate=d.asm.TensorScatterUpdate).apply(null,arguments)},d._Tile=function(){return(d._Tile=d.asm.Tile).apply(null,arguments)},d._TopK=function(){return(d._TopK=d.asm.TopK).apply(null,arguments)},d._Transform=function(){return(d._Transform=d.asm.Transform).apply(null,arguments)},d._Transpose=function(){return(d._Transpose=d.asm.Transpose).apply(null,arguments)},d.__FusedMatMul=function(){return(d.__FusedMatMul=d.asm._FusedMatMul).apply(null,arguments)},d._malloc=function(){return(d._malloc=d.asm.malloc).apply(null,arguments)},d._free=function(){return(d._free=d.asm.free).apply(null,arguments)},d.__emscripten_tls_init=function(){return(d.__emscripten_tls_init=d.asm._emscripten_tls_init).apply(null,arguments)},d._pthread_self=function(){return(We=d._pthread_self=d.asm.pthread_self).apply(null,arguments)}),Be=(d.___errno_location=function(){return(d.___errno_location=d.asm.__errno_location).apply(null,arguments)},d.__emscripten_thread_init=function(){return(Be=d.__emscripten_thread_init=d.asm._emscripten_thread_init).apply(null,arguments)}),Ve=(d.__emscripten_thread_crashed=function(){return(d.__emscripten_thread_crashed=d.asm._emscripten_thread_crashed).apply(null,arguments)},d._emscripten_main_thread_process_queued_calls=function(){return(d._emscripten_main_thread_process_queued_calls=d.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},d._emscripten_main_browser_thread_id=function(){return(d._emscripten_main_browser_thread_id=d.asm.emscripten_main_browser_thread_id).apply(null,arguments)},d._emscripten_run_in_main_runtime_thread_js=function(){return(Ve=d._emscripten_run_in_main_runtime_thread_js=d.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)}),Ue=(d._emscripten_dispatch_to_thread_=function(){return(d._emscripten_dispatch_to_thread_=d.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},d.__emscripten_proxy_execute_task_queue=function(){return(Ue=d.__emscripten_proxy_execute_task_queue=d.asm._emscripten_proxy_execute_task_queue).apply(null,arguments)}),Ge=d.__emscripten_thread_free_data=function(){return(Ge=d.__emscripten_thread_free_data=d.asm._emscripten_thread_free_data).apply(null,arguments)},He=d.__emscripten_thread_exit=function(){return(He=d.__emscripten_thread_exit=d.asm._emscripten_thread_exit).apply(null,arguments)},je=d._emscripten_stack_set_limits=function(){return(je=d._emscripten_stack_set_limits=d.asm.emscripten_stack_set_limits).apply(null,arguments)},qe=d.stackSave=function(){return(qe=d.stackSave=d.asm.stackSave).apply(null,arguments)},Xe=d.stackRestore=function(){return(Xe=d.stackRestore=d.asm.stackRestore).apply(null,arguments)},Ke=d.stackAlloc=function(){return(Ke=d.stackAlloc=d.asm.stackAlloc).apply(null,arguments)};function Ye(e){if(e=e||m,!(ne>0)){if(b)return o(d),te(),void startWorker(d);(function(){if(d.preRun)for("function"==typeof d.preRun&&(d.preRun=[d.preRun]);d.preRun.length;)e=d.preRun.shift(),Z.unshift(e);var e;ye(Z)})(),ne>0||(d.setStatus?(d.setStatus("Running..."),setTimeout((function(){setTimeout((function(){d.setStatus("")}),1),t()}),1)):t())}function t(){Pe||(Pe=!0,d.calledRun=!0,!H&&(te(),o(d),d.onRuntimeInitialized&&d.onRuntimeInitialized(),function(){if(!b){if(d.postRun)for("function"==typeof d.postRun&&(d.postRun=[d.postRun]);d.postRun.length;)e=d.postRun.shift(),Q.unshift(e);ye(Q)}var e}()))}}if(d.dynCall_iijjiiii=function(){return(d.dynCall_iijjiiii=d.asm.dynCall_iijjiiii).apply(null,arguments)},d.dynCall_jiji=function(){return(d.dynCall_jiji=d.asm.dynCall_jiji).apply(null,arguments)},d.keepRuntimeAlive=ee,d.wasmMemory=$,d.cwrap=function(e,t,n,a){var r=(n=n||[]).every((e=>"number"===e||"boolean"===e));return"string"!==t&&r&&!a?Fe(e):function(){return _e(e,t,n,arguments)}},d.ExitStatus=pe,d.PThread=ge,re=function e(){Pe||Ye(),Pe||(re=e)},d.preInit)for("function"==typeof d.preInit&&(d.preInit=[d.preInit]);d.preInit.length>0;)d.preInit.pop()();if(Ye(),u&&(Oe={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!u.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!u.unhandledRejection.indexOf(e)>-1}))}),"undefined"!=typeof WasmBackendModule)De=WasmBackendModule;else{if(void 0===e)throw new Error("Could not find wasm module in post.js");De=e}if(Oe){var Ze=De._dispose;De._dispose=function(){Ze(),Oe.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),Oe.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});"object"==typeof e&&"object"==typeof t?t.exports=r:"function"==typeof define&&a.amdO?define([],(function(){return r})):"object"==typeof e&&(e.WasmBackendModuleThreadedSimd=r)})),j=S(((e,t)=>{t.exports.wasmWorkerContents='"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",data=>onmessage({data:data}));var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8")+"//# sourceURL="+f)},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}var initializedJS=false;var pendingNotifiedProxyingQueues=[];function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"\n");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=(info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onunhandledrejection=e=>{throw e.reason??e};self.startWorker=instance=>{Module=instance;postMessage({"cmd":"loaded"})};self.onmessage=e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;for(const handler of e.data.handlers){Module[handler]=function(){postMessage({cmd:"callHandler",handler:handler,args:[...arguments]})}}Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob=="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module)}else if(e.data.cmd==="run"){Module["__emscripten_thread_init"](e.data.pthread_ptr,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInitTLS();if(!initializedJS){pendingNotifiedProxyingQueues.forEach(queue=>{Module["executeNotifiedProxyingQueue"](queue)});pendingNotifiedProxyingQueues=[];initializedJS=true}try{Module["invokeEntryPoint"](e.data.start_routine,e.data.arg)}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processProxyingQueue"){if(initializedJS){Module["executeNotifiedProxyingQueue"](e.data.queue)}else{pendingNotifiedProxyingQueues.push(e.data.queue)}}else if(e.data.cmd){err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}};'})),q=S(((e,t)=>{var n,r=(n=(n="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||u,function(e){var t,a,r,s=void 0!==(e=e||{})?e:{};s.ready=new Promise((function(e,n){t=e,a=n})),"undefined"!=typeof process&&process.listeners&&(r={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var i,o,l,u=Object.assign({},s),d=[],p="object"==typeof window,h="function"==typeof importScripts,c="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,f="";if(c){var m=W(),g=B();f=h?g.dirname(f)+"/":"//",i=(e,t)=>(e=L(e)?new URL(e):g.normalize(e),m.readFileSync(e,t?void 0:"utf8")),l=e=>{var t=i(e,!0);return t.buffer||(t=new Uint8Array(t)),t},o=(e,t,n)=>{e=L(e)?new URL(e):g.normalize(e),m.readFile(e,(function(e,a){e?n(e):t(a.buffer)}))},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),d=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof U))throw e})),process.on("unhandledRejection",(function(e){throw e})),s.inspect=function(){return"[Emscripten Module object]"}}else(p||h)&&(h?f=self.location.href:"undefined"!=typeof document&&document.currentScript&&(f=document.currentScript.src),n&&(f=n),f=0!==f.indexOf("blob:")?f.substr(0,f.replace(/[?#].*/,"").lastIndexOf("/")+1):"",i=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},h&&(l=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),o=(e,t,n)=>{var a=new XMLHttpRequest;a.open("GET",e,!0),a.responseType="arraybuffer",a.onload=()=>{200==a.status||0==a.status&&a.response?t(a.response):n()},a.onerror=n,a.send(null)});var y,x=s.print||console.log.bind(console),A=s.printErr||console.warn.bind(console);Object.assign(s,u),u=null,s.arguments&&(d=s.arguments),s.thisProgram&&s.thisProgram,s.quit&&s.quit,s.wasmBinary&&(y=s.wasmBinary),s.noExitRuntime,"object"!=typeof WebAssembly&&P("no native wasm support detected");var b,w,v,k,I,S=!1,C="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function N(e,t,n){for(var a=(t>>>=0)+n,r=t;e[r]&&!(r>=a);)++r;if(r-t>16&&e.buffer&&C)return C.decode(e.subarray(t,r));for(var s="";t<r;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var l=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var u=i-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function T(e){w=e,s.HEAP8=v=new Int8Array(e),s.HEAP16=new Int16Array(e),s.HEAP32=new Int32Array(e),s.HEAPU8=k=new Uint8Array(e),s.HEAPU16=new Uint16Array(e),s.HEAPU32=I=new Uint32Array(e),s.HEAPF32=new Float32Array(e),s.HEAPF64=new Float64Array(e)}s.INITIAL_MEMORY;var R=[],E=[],$=[],M=0,F=null,_=null;function P(e){s.onAbort&&s.onAbort(e),A(e="Aborted("+e+")"),S=!0,e+=". Build with -sASSERTIONS for more info.";var t=new WebAssembly.RuntimeError(e);throw a(t),t}var O,D;function z(e){return e.startsWith("data:application/octet-stream;base64,")}function L(e){return e.startsWith("file://")}function V(e){try{if(e==O&&y)return new Uint8Array(y);if(l)return l(e);throw"both async and sync fetching of the wasm failed"}catch(e){P(e)}}function U(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function G(e){for(;e.length>0;)e.shift()(s)}function H(e){try{return b.grow(e-w.byteLength+65535>>>16),T(b.buffer),1}catch(e){}}z(O="tfjs-backend-wasm.wasm")||(D=O,O=s.locateFile?s.locateFile(D,f):f+D);var j=[null,[],[]];function q(e,t){var n=j[e];0===t||10===t?((1===e?x:A)(N(n,0)),n.length=0):n.push(t)}function X(e){return s["_"+e]}function K(e,t,n,a,r){var s={string:e=>{var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);!function(e,t,n){!function(e,t,n,a){if(!(a>0))return 0;for(var r=(n>>>=0)+a-1,s=0;s<e.length;++s){var i=e.charCodeAt(s);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++s)),i<=127){if(n>=r)break;t[n++>>>0]=i}else if(i<=2047){if(n+1>=r)break;t[n++>>>0]=192|i>>6,t[n++>>>0]=128|63&i}else if(i<=65535){if(n+2>=r)break;t[n++>>>0]=224|i>>12,t[n++>>>0]=128|i>>6&63,t[n++>>>0]=128|63&i}else{if(n+3>=r)break;t[n++>>>0]=240|i>>18,t[n++>>>0]=128|i>>12&63,t[n++>>>0]=128|i>>6&63,t[n++>>>0]=128|63&i}}t[n>>>0]=0}(e,k,t,n)}(e,t=ne(n),n)}return t},array:e=>{var t=ne(e.length);return function(e,t){v.set(e,t>>>0)}(e,t),t}},i=X(e),o=[],l=0;if(a)for(var u=0;u<a.length;u++){var d=s[n[u]];d?(0===l&&(l=ee()),o[u]=d(a[u])):o[u]=a[u]}var p,h=i.apply(null,o);return p=h,0!==l&&te(l),h=function(e){return"string"===t?function(e,t){return(e>>>=0)?N(k,e,t):""}(e):"boolean"===t?!!e:e}(p),h}var Y,Z,J,Q={abort:function(){P("")},emscripten_get_heap_max:function(){return 4294901760},emscripten_memcpy_big:function(e,t,n){k.copyWithin(e>>>0,t>>>0,t+n>>>0)},emscripten_resize_heap:function(e){var t,n=k.length,a=4294901760;if((e>>>=0)>a)return!1;for(var r=1;r<=4;r*=2){var s=n*(1+.2/r);if(s=Math.min(s,e+100663296),H(Math.min(a,(t=Math.max(e,s))+(65536-t%65536)%65536)))return!0}return!1},fd_close:function(e){return 52},fd_seek:function(e,t,n,a,r){return 70},fd_write:function(e,t,n,a){for(var r=0,s=0;s<n;s++){var i=I[t>>>2],o=I[t+4>>>2];t+=8;for(var l=0;l<o;l++)q(e,k[i+l>>>0]);r+=o}return I[a>>>2]=r,0}},ee=(function(){var e={env:Q,wasi_snapshot_preview1:Q};function t(e,t){var n=e.exports;s.asm=n,T((b=s.asm.memory).buffer),s.asm.__indirect_function_table,function(e){E.unshift(e)}(s.asm.__wasm_call_ctors),function(e){if(M--,s.monitorRunDependencies&&s.monitorRunDependencies(M),0==M&&(null!==F&&(clearInterval(F),F=null),_)){var t=_;_=null,t()}}()}function n(e){t(e.instance)}function r(t){return function(){if(!y&&(p||h)){if("function"==typeof fetch&&!L(O))return fetch(O,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+O+"'";return e.arrayBuffer()})).catch((function(){return V(O)}));if(o)return new Promise((function(e,t){o(O,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return V(O)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){A("failed to asynchronously prepare wasm: "+e),P(e)}))}if(M++,s.monitorRunDependencies&&s.monitorRunDependencies(M),s.instantiateWasm)try{return s.instantiateWasm(e,t)}catch(e){A("Module.instantiateWasm callback failed with error: "+e),a(e)}(y||"function"!=typeof WebAssembly.instantiateStreaming||z(O)||L(O)||c||"function"!=typeof fetch?r(n):fetch(O,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return A("wasm streaming compile failed: "+e),A("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(a)}(),s.___wasm_call_ctors=function(){return(s.___wasm_call_ctors=s.asm.__wasm_call_ctors).apply(null,arguments)},s._init=function(){return(s._init=s.asm.init).apply(null,arguments)},s._init_with_threads_count=function(){return(s._init_with_threads_count=s.asm.init_with_threads_count).apply(null,arguments)},s._get_threads_count=function(){return(s._get_threads_count=s.asm.get_threads_count).apply(null,arguments)},s._register_tensor=function(){return(s._register_tensor=s.asm.register_tensor).apply(null,arguments)},s._dispose_data=function(){return(s._dispose_data=s.asm.dispose_data).apply(null,arguments)},s._dispose=function(){return(s._dispose=s.asm.dispose).apply(null,arguments)},s._Abs=function(){return(s._Abs=s.asm.Abs).apply(null,arguments)},s._Acos=function(){return(s._Acos=s.asm.Acos).apply(null,arguments)},s._Acosh=function(){return(s._Acosh=s.asm.Acosh).apply(null,arguments)},s._Add=function(){return(s._Add=s.asm.Add).apply(null,arguments)},s._AddN=function(){return(s._AddN=s.asm.AddN).apply(null,arguments)},s._All=function(){return(s._All=s.asm.All).apply(null,arguments)},s._Any=function(){return(s._Any=s.asm.Any).apply(null,arguments)},s._ArgMax=function(){return(s._ArgMax=s.asm.ArgMax).apply(null,arguments)},s._ArgMin=function(){return(s._ArgMin=s.asm.ArgMin).apply(null,arguments)},s._Asin=function(){return(s._Asin=s.asm.Asin).apply(null,arguments)},s._Asinh=function(){return(s._Asinh=s.asm.Asinh).apply(null,arguments)},s._Atan=function(){return(s._Atan=s.asm.Atan).apply(null,arguments)},s._Atan2=function(){return(s._Atan2=s.asm.Atan2).apply(null,arguments)},s._Atanh=function(){return(s._Atanh=s.asm.Atanh).apply(null,arguments)},s._AvgPool=function(){return(s._AvgPool=s.asm.AvgPool).apply(null,arguments)},s._AvgPool3D=function(){return(s._AvgPool3D=s.asm.AvgPool3D).apply(null,arguments)},s._AvgPool3DGrad=function(){return(s._AvgPool3DGrad=s.asm.AvgPool3DGrad).apply(null,arguments)},s._AvgPoolGrad=function(){return(s._AvgPoolGrad=s.asm.AvgPoolGrad).apply(null,arguments)},s._BatchMatMul=function(){return(s._BatchMatMul=s.asm.BatchMatMul).apply(null,arguments)},s._Bincount=function(){return(s._Bincount=s.asm.Bincount).apply(null,arguments)},s._BitwiseAnd=function(){return(s._BitwiseAnd=s.asm.BitwiseAnd).apply(null,arguments)},s._Ceil=function(){return(s._Ceil=s.asm.Ceil).apply(null,arguments)},s._ClipByValue=function(){return(s._ClipByValue=s.asm.ClipByValue).apply(null,arguments)},s._Conv2D=function(){return(s._Conv2D=s.asm.Conv2D).apply(null,arguments)},s._Conv2DBackpropInput=function(){return(s._Conv2DBackpropInput=s.asm.Conv2DBackpropInput).apply(null,arguments)},s._Conv3D=function(){return(s._Conv3D=s.asm.Conv3D).apply(null,arguments)},s._Conv3DBackpropFilterV2=function(){return(s._Conv3DBackpropFilterV2=s.asm.Conv3DBackpropFilterV2).apply(null,arguments)},s._Conv3DBackpropInputV2=function(){return(s._Conv3DBackpropInputV2=s.asm.Conv3DBackpropInputV2).apply(null,arguments)},s._Cos=function(){return(s._Cos=s.asm.Cos).apply(null,arguments)},s._Cosh=function(){return(s._Cosh=s.asm.Cosh).apply(null,arguments)},s._CropAndResize=function(){return(s._CropAndResize=s.asm.CropAndResize).apply(null,arguments)},s._Cumprod=function(){return(s._Cumprod=s.asm.Cumprod).apply(null,arguments)},s._Cumsum=function(){return(s._Cumsum=s.asm.Cumsum).apply(null,arguments)},s._DenseBincount=function(){return(s._DenseBincount=s.asm.DenseBincount).apply(null,arguments)},s._DepthToSpace=function(){return(s._DepthToSpace=s.asm.DepthToSpace).apply(null,arguments)},s._DepthwiseConv2dNative=function(){return(s._DepthwiseConv2dNative=s.asm.DepthwiseConv2dNative).apply(null,arguments)},s._Diag=function(){return(s._Diag=s.asm.Diag).apply(null,arguments)},s._Dilation2D=function(){return(s._Dilation2D=s.asm.Dilation2D).apply(null,arguments)},s._Dilation2DBackpropFilter=function(){return(s._Dilation2DBackpropFilter=s.asm.Dilation2DBackpropFilter).apply(null,arguments)},s._Dilation2DBackpropInput=function(){return(s._Dilation2DBackpropInput=s.asm.Dilation2DBackpropInput).apply(null,arguments)},s._Elu=function(){return(s._Elu=s.asm.Elu).apply(null,arguments)},s._EluGrad=function(){return(s._EluGrad=s.asm.EluGrad).apply(null,arguments)},s._Equal=function(){return(s._Equal=s.asm.Equal).apply(null,arguments)},s._Erf=function(){return(s._Erf=s.asm.Erf).apply(null,arguments)},s._Exp=function(){return(s._Exp=s.asm.Exp).apply(null,arguments)},s._Expm1=function(){return(s._Expm1=s.asm.Expm1).apply(null,arguments)},s._FlipLeftRight=function(){return(s._FlipLeftRight=s.asm.FlipLeftRight).apply(null,arguments)},s._Floor=function(){return(s._Floor=s.asm.Floor).apply(null,arguments)},s._FloorDiv=function(){return(s._FloorDiv=s.asm.FloorDiv).apply(null,arguments)},s._FusedBatchNorm=function(){return(s._FusedBatchNorm=s.asm.FusedBatchNorm).apply(null,arguments)},s._FusedConv2D=function(){return(s._FusedConv2D=s.asm.FusedConv2D).apply(null,arguments)},s._FusedDepthwiseConv2D=function(){return(s._FusedDepthwiseConv2D=s.asm.FusedDepthwiseConv2D).apply(null,arguments)},s._Gather=function(){return(s._Gather=s.asm.Gather).apply(null,arguments)},s._GatherNd=function(){return(s._GatherNd=s.asm.GatherNd).apply(null,arguments)},s._Greater=function(){return(s._Greater=s.asm.Greater).apply(null,arguments)},s._GreaterEqual=function(){return(s._GreaterEqual=s.asm.GreaterEqual).apply(null,arguments)},s._IsFinite=function(){return(s._IsFinite=s.asm.IsFinite).apply(null,arguments)},s._IsInf=function(){return(s._IsInf=s.asm.IsInf).apply(null,arguments)},s._IsNan=function(){return(s._IsNan=s.asm.IsNan).apply(null,arguments)},s._LRN=function(){return(s._LRN=s.asm.LRN).apply(null,arguments)},s._LRNGrad=function(){return(s._LRNGrad=s.asm.LRNGrad).apply(null,arguments)},s._LeakyRelu=function(){return(s._LeakyRelu=s.asm.LeakyRelu).apply(null,arguments)},s._Less=function(){return(s._Less=s.asm.Less).apply(null,arguments)},s._LessEqual=function(){return(s._LessEqual=s.asm.LessEqual).apply(null,arguments)},s._LinSpace=function(){return(s._LinSpace=s.asm.LinSpace).apply(null,arguments)},s._Log=function(){return(s._Log=s.asm.Log).apply(null,arguments)},s._Log1p=function(){return(s._Log1p=s.asm.Log1p).apply(null,arguments)},s._LogicalAnd=function(){return(s._LogicalAnd=s.asm.LogicalAnd).apply(null,arguments)},s._LogicalNot=function(){return(s._LogicalNot=s.asm.LogicalNot).apply(null,arguments)},s._LogicalOr=function(){return(s._LogicalOr=s.asm.LogicalOr).apply(null,arguments)},s._LogicalXor=function(){return(s._LogicalXor=s.asm.LogicalXor).apply(null,arguments)},s._Max=function(){return(s._Max=s.asm.Max).apply(null,arguments)},s._MaxPool=function(){return(s._MaxPool=s.asm.MaxPool).apply(null,arguments)},s._MaxPool3D=function(){return(s._MaxPool3D=s.asm.MaxPool3D).apply(null,arguments)},s._MaxPool3DGrad=function(){return(s._MaxPool3DGrad=s.asm.MaxPool3DGrad).apply(null,arguments)},s._MaxPoolGrad=function(){return(s._MaxPoolGrad=s.asm.MaxPoolGrad).apply(null,arguments)},s._MaxPoolWithArgmax=function(){return(s._MaxPoolWithArgmax=s.asm.MaxPoolWithArgmax).apply(null,arguments)},s._Maximum=function(){return(s._Maximum=s.asm.Maximum).apply(null,arguments)},s._Mean=function(){return(s._Mean=s.asm.Mean).apply(null,arguments)},s._Min=function(){return(s._Min=s.asm.Min).apply(null,arguments)},s._Minimum=function(){return(s._Minimum=s.asm.Minimum).apply(null,arguments)},s._MirrorPad=function(){return(s._MirrorPad=s.asm.MirrorPad).apply(null,arguments)},s._Mod=function(){return(s._Mod=s.asm.Mod).apply(null,arguments)},s._Multinomial=function(){return(s._Multinomial=s.asm.Multinomial).apply(null,arguments)},s._Multiply=function(){return(s._Multiply=s.asm.Multiply).apply(null,arguments)},s._Neg=function(){return(s._Neg=s.asm.Neg).apply(null,arguments)},s._NonMaxSuppressionV3=function(){return(s._NonMaxSuppressionV3=s.asm.NonMaxSuppressionV3).apply(null,arguments)},s._NonMaxSuppressionV4=function(){return(s._NonMaxSuppressionV4=s.asm.NonMaxSuppressionV4).apply(null,arguments)},s._NonMaxSuppressionV5=function(){return(s._NonMaxSuppressionV5=s.asm.NonMaxSuppressionV5).apply(null,arguments)},s._NotEqual=function(){return(s._NotEqual=s.asm.NotEqual).apply(null,arguments)},s._OneHot=function(){return(s._OneHot=s.asm.OneHot).apply(null,arguments)},s._PadV2=function(){return(s._PadV2=s.asm.PadV2).apply(null,arguments)},s._Pow=function(){return(s._Pow=s.asm.Pow).apply(null,arguments)},s._Prelu=function(){return(s._Prelu=s.asm.Prelu).apply(null,arguments)},s._Prod=function(){return(s._Prod=s.asm.Prod).apply(null,arguments)},s._RealDiv=function(){return(s._RealDiv=s.asm.RealDiv).apply(null,arguments)},s._Reciprocal=function(){return(s._Reciprocal=s.asm.Reciprocal).apply(null,arguments)},s._Relu=function(){return(s._Relu=s.asm.Relu).apply(null,arguments)},s._Relu6=function(){return(s._Relu6=s.asm.Relu6).apply(null,arguments)},s._ResizeBilinear=function(){return(s._ResizeBilinear=s.asm.ResizeBilinear).apply(null,arguments)},s._ResizeBilinearGrad=function(){return(s._ResizeBilinearGrad=s.asm.ResizeBilinearGrad).apply(null,arguments)},s._ResizeNearestNeighbor=function(){return(s._ResizeNearestNeighbor=s.asm.ResizeNearestNeighbor).apply(null,arguments)},s._ResizeNearestNeighborGrad=function(){return(s._ResizeNearestNeighborGrad=s.asm.ResizeNearestNeighborGrad).apply(null,arguments)},s._Reverse=function(){return(s._Reverse=s.asm.Reverse).apply(null,arguments)},s._RotateWithOffset=function(){return(s._RotateWithOffset=s.asm.RotateWithOffset).apply(null,arguments)},s._Round=function(){return(s._Round=s.asm.Round).apply(null,arguments)},s._Rsqrt=function(){return(s._Rsqrt=s.asm.Rsqrt).apply(null,arguments)},s._ScatterNd=function(){return(s._ScatterNd=s.asm.ScatterNd).apply(null,arguments)},s._SearchSorted=function(){return(s._SearchSorted=s.asm.SearchSorted).apply(null,arguments)},s._SelectV2=function(){return(s._SelectV2=s.asm.SelectV2).apply(null,arguments)},s._Selu=function(){return(s._Selu=s.asm.Selu).apply(null,arguments)},s._Sigmoid=function(){return(s._Sigmoid=s.asm.Sigmoid).apply(null,arguments)},s._Sign=function(){return(s._Sign=s.asm.Sign).apply(null,arguments)},s._Sin=function(){return(s._Sin=s.asm.Sin).apply(null,arguments)},s._Sinh=function(){return(s._Sinh=s.asm.Sinh).apply(null,arguments)},s._Softmax=function(){return(s._Softmax=s.asm.Softmax).apply(null,arguments)},s._Softplus=function(){return(s._Softplus=s.asm.Softplus).apply(null,arguments)},s._SparseFillEmptyRows=function(){return(s._SparseFillEmptyRows=s.asm.SparseFillEmptyRows).apply(null,arguments)},s._SparseReshape=function(){return(s._SparseReshape=s.asm.SparseReshape).apply(null,arguments)},s._SparseSegmentReduction=function(){return(s._SparseSegmentReduction=s.asm.SparseSegmentReduction).apply(null,arguments)},s._SparseToDense=function(){return(s._SparseToDense=s.asm.SparseToDense).apply(null,arguments)},s._Sqrt=function(){return(s._Sqrt=s.asm.Sqrt).apply(null,arguments)},s._Square=function(){return(s._Square=s.asm.Square).apply(null,arguments)},s._SquaredDifference=function(){return(s._SquaredDifference=s.asm.SquaredDifference).apply(null,arguments)},s._Step=function(){return(s._Step=s.asm.Step).apply(null,arguments)},s._StridedSlice=function(){return(s._StridedSlice=s.asm.StridedSlice).apply(null,arguments)},s._Sub=function(){return(s._Sub=s.asm.Sub).apply(null,arguments)},s._Sum=function(){return(s._Sum=s.asm.Sum).apply(null,arguments)},s._Tan=function(){return(s._Tan=s.asm.Tan).apply(null,arguments)},s._Tanh=function(){return(s._Tanh=s.asm.Tanh).apply(null,arguments)},s._TensorScatterUpdate=function(){return(s._TensorScatterUpdate=s.asm.TensorScatterUpdate).apply(null,arguments)},s._Tile=function(){return(s._Tile=s.asm.Tile).apply(null,arguments)},s._TopK=function(){return(s._TopK=s.asm.TopK).apply(null,arguments)},s._Transform=function(){return(s._Transform=s.asm.Transform).apply(null,arguments)},s._Transpose=function(){return(s._Transpose=s.asm.Transpose).apply(null,arguments)},s.__FusedMatMul=function(){return(s.__FusedMatMul=s.asm._FusedMatMul).apply(null,arguments)},s._malloc=function(){return(s._malloc=s.asm.malloc).apply(null,arguments)},s._free=function(){return(s._free=s.asm.free).apply(null,arguments)},s.___errno_location=function(){return(s.___errno_location=s.asm.__errno_location).apply(null,arguments)},s.stackSave=function(){return(ee=s.stackSave=s.asm.stackSave).apply(null,arguments)}),te=s.stackRestore=function(){return(te=s.stackRestore=s.asm.stackRestore).apply(null,arguments)},ne=s.stackAlloc=function(){return(ne=s.stackAlloc=s.asm.stackAlloc).apply(null,arguments)};function ae(e){function n(){Y||(Y=!0,s.calledRun=!0,!S&&(G(E),t(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),function(){if(s.postRun)for("function"==typeof s.postRun&&(s.postRun=[s.postRun]);s.postRun.length;)e=s.postRun.shift(),$.unshift(e);var e;G($)}()))}e=e||d,M>0||(function(){if(s.preRun)for("function"==typeof s.preRun&&(s.preRun=[s.preRun]);s.preRun.length;)e=s.preRun.shift(),R.unshift(e);var e;G(R)}(),M>0)||(s.setStatus?(s.setStatus("Running..."),setTimeout((function(){setTimeout((function(){s.setStatus("")}),1),n()}),1)):n())}if(s.dynCall_iijjiiii=function(){return(s.dynCall_iijjiiii=s.asm.dynCall_iijjiiii).apply(null,arguments)},s.dynCall_jiji=function(){return(s.dynCall_jiji=s.asm.dynCall_jiji).apply(null,arguments)},s.cwrap=function(e,t,n,a){var r=(n=n||[]).every((e=>"number"===e||"boolean"===e));return"string"!==t&&r&&!a?X(e):function(){return K(e,t,n,arguments)}},_=function e(){Y||ae(),Y||(_=e)},s.preInit)for("function"==typeof s.preInit&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();if(ae(),r&&(Z={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!r.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!r.unhandledRejection.indexOf(e)>-1}))}),void 0!==e)J=e;else{if("undefined"==typeof WasmBackendModuleThreadedSimd)throw new Error("Could not find wasm module in post.js");J=WasmBackendModuleThreadedSimd}if(Z){var re=J._dispose;J._dispose=function(){re(),Z.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),Z.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});"object"==typeof e&&"object"==typeof t?t.exports=r:"function"==typeof define&&a.amdO?define([],(function(){return r})):"object"==typeof e&&(e.WasmBackendModule=r)})),X=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},K=class{refCount(e){return Y("refCount")}incRef(e){return Y("incRef")}timerAvailable(){return!0}time(e){return Y("time")}read(e){return Y("read")}readSync(e){return Y("readSync")}readToGPU(e,t){return Y("readToGPU")}numDataIds(){return Y("numDataIds")}disposeData(e,t){return Y("disposeData")}write(e,t,n){return Y("write")}move(e,t,n,a,r){return Y("move")}createTensorFromGPUData(e,t,n){return Y("createTensorFromGPUData")}memory(){return Y("memory")}floatPrecision(){return Y("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return Y("dispose")}};function Y(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function Z(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,te(e,t,n)}function J(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,a=0;for(;n>0;)a=Math.random()*n|0,n--,te(e,n,a),te(t,n,a)}function Q(e,t,n){return Math.max(e,Math.min(t,n))}function ee(e){return e%2==0?e:e+1}function te(e,t,n){let a=e[t];e[t]=e[n],e[n]=a}function ne(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function ae(e,t){let n=Math.random();return t*n+(1-n)*e}function re(e,t){let n=0;for(let a=0;a<e.length;a++){let r=Number(e[a])-Number(t[a]);n+=r*r}return n}function se(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function ie(e,t,n=""){se(pe(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function oe(e){se(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function le(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function ue(e){return 0===e.length}function de(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}function pe(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function he(e){return e%1==0}function ce(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function fe(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function me(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return Z(t),t}function ge(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function ye(e,t=(e=>0),n,a){return new Promise(((r,s)=>{let i=0,o=()=>{if(e())return void r();i++;let l=t(i);null!=n&&i>=n?s():null!=a?a(o,l):setTimeout(o,l)};o()}))}function xe(e,t){let n=1,a=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==a)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${a} and dim ${t}`);a=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===a){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let r=e.slice();return r[a]=t/n,r}function Ae(e,t){let n=t.length;return se((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),se(e.every((e=>he(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function be(e,t){let n=[],a=[],r=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||r?null:Ae(t,e).sort(),i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),a.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),a.push(t))}return{newShape:n,keptDims:a}}function we(e,t){return ve(e,t)}function ve(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function ke(e,t){for(let n=0;n<e.length;n++){let a=e[n];if(isNaN(a)||!isFinite(a))throw Error(`A tensor of type ${t} being uploaded contains ${a}.`)}}function Ie(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function Se(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function Ce(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function Ne(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function Te(e){return"string"==typeof e||e instanceof String}function Re(e){return"boolean"==typeof e}function Ee(e){return"number"==typeof e}function $e(e){return Array.isArray(e)?$e(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Ee(e)?"float32":Te(e)?"string":Re(e)?"bool":"float32"}function Me(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Fe(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function _e(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let a=t-3;a>=0;--a)n[a]=n[a+1]*e[a+1];return n}function Pe(e,t,n,a=!1){let r=new Array;if(1===t.length){let s=t[0]*(a?2:1);for(let t=0;t<s;t++)r[t]=n[e+t]}else{let s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(a?2:1);for(let t=0;t<s;t++)r[t]=Pe(e+t*o,i,n,a)}return r}function Oe(e,t,n=!1){if(0===e.length)return t[0];let a=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===a)return[];if(a!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Pe(0,e,t,n)}function De(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function ze(e,t){let n=Le(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function Le(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function We(e,t){let n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Oe(e,new Float32Array(n));if("int32"===t)return Oe(e,new Int32Array(n));if("bool"===t)return Oe(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Be(e){e.forEach((t=>{se(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Ve(e,t,n){if(0===t)return 0;if(1===t)return e[0];let a=e[e.length-1];for(let t=0;t<e.length-1;++t)a+=n[t]*e[t];return a}function Ue(e,t,n){if(0===t)return[];if(1===t)return[e];let a=new Array(t);for(let t=0;t<a.length-1;++t)a[t]=Math.floor(e/n[t]),e-=a[t]*n[t];return a[a.length-1]=e,a}function Ge(e){return e&&e.then&&"function"==typeof e.then}var He="tfjsflags",je=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=qe,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(Xe().getBool("IS_TEST")||Xe().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){let t=this.urlFlags[e];Xe().getBool("IS_TEST")||Xe().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(Ge(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;let e=this.getQueryParams(this.global.location.search);He in e&&e[He].split(",").forEach((e=>{let[t,n]=e.split(":");this.urlFlags[t]=function(e,t){let n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)}))}};function qe(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function Xe(){return Ye}var Ke,Ye=null;function Ze(){if(null==Ke){let e;if("undefined"!=typeof window)e=window;else if(void 0!==a.g)e=a.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Ke=e}return Ke}function Je(e,t){let n=function(){let e=Ze();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{let a=t();return n.set(e,a),n.get(e)}}var Qe="Abs",et="Acos",tt="Acosh",nt="Add",at="AddN",rt="All",st="Any",it="ArgMax",ot="ArgMin",lt="Asin",ut="Asinh",dt="Atan",pt="Atanh",ht="Atan2",ct="AvgPool",ft="AvgPoolGrad",mt="AvgPool3D",gt="AvgPool3DGrad",yt="BatchMatMul",xt="BatchToSpaceND",At="Bincount",bt="BitwiseAnd",wt="BroadcastTo",vt="BroadcastArgs",kt="Cast",It="Ceil",St="ClipByValue",Ct="Complex",Nt="ComplexAbs",Tt="Concat",Rt="Conv2D",Et="Conv2DBackpropFilter",$t="Conv2DBackpropInput",Mt="Conv3D",Ft="Conv3DBackpropFilterV2",_t="Conv3DBackpropInputV2",Pt="Cos",Ot="Cosh",Dt="Cumprod",zt="Cumsum",Lt="CropAndResize",Wt="DenseBincount",Bt="DepthToSpace",Vt="DepthwiseConv2dNative",Ut="DepthwiseConv2dNativeBackpropFilter",Gt="DepthwiseConv2dNativeBackpropInput",Ht="Diag",jt="Dilation2D",qt="Dilation2DBackpropInput",Xt="Dilation2DBackpropFilter",Kt="Draw",Yt="RealDiv",Zt="Einsum",Jt="Elu",Qt="EluGrad",en="Erf",tn="Equal",nn="Exp",an="ExpandDims",rn="Expm1",sn="FFT",on="Fill",ln="FlipLeftRight",un="Floor",dn="FloorDiv",pn="FusedBatchNorm",hn="GatherV2",cn="GatherNd",fn="Greater",mn="GreaterEqual",gn="Identity",yn="IFFT",xn="Imag",An="IsFinite",bn="IsInf",wn="IsNan",vn="LeakyRelu",kn="Less",In="LessEqual",Sn="LinSpace",Cn="Log",Nn="Log1p",Tn="LogicalAnd",Rn="LogicalNot",En="LogicalOr",$n="LogicalXor",Mn="LogSoftmax",Fn="LowerBound",_n="LRN",Pn="LRNGrad",On="MatrixBandPart",Dn="Max",zn="Maximum",Ln="MaxPool",Wn="MaxPoolGrad",Bn="MaxPool3D",Vn="MaxPool3DGrad",Un="MaxPoolWithArgmax",Gn="Mean",Hn="Min",jn="Minimum",qn="MirrorPad",Xn="Mod",Kn="Multinomial",Yn="Multiply",Zn="Neg",Jn="NotEqual",Qn="NonMaxSuppressionV3",ea="NonMaxSuppressionV4",ta="NonMaxSuppressionV5",na="OnesLike",aa="OneHot",ra="Pack",sa="PadV2",ia="Pool",oa="Pow",la="Prelu",ua="Prod",da="RaggedGather",pa="RaggedRange",ha="RaggedTensorToTensor",ca="Range",fa="Real",ma="Reciprocal",ga="Relu",ya="Reshape",xa="ResizeNearestNeighbor",Aa="ResizeNearestNeighborGrad",ba="ResizeBilinear",wa="ResizeBilinearGrad",va="Relu6",ka="Reverse",Ia="Round",Sa="Rsqrt",Ca="ScatterNd",Na="TensorScatterUpdate",Ta="SearchSorted",Ra="Select",Ea="Selu",$a="Slice",Ma="Sin",Fa="Sinh",_a="Sign",Pa="Sigmoid",Oa="Softplus",Da="Sqrt",za="Sum",La="SpaceToBatchND",Wa="SplitV",Ba="Softmax",Va="SparseFillEmptyRows",Ua="SparseReshape",Ga="SparseSegmentMean",Ha="SparseSegmentSum",ja="SparseToDense",qa="SquaredDifference",Xa="Square",Ka="StaticRegexReplace",Ya="StridedSlice",Za="StringNGrams",Ja="StringSplit",Qa="StringToHashBucketFast",er="Sub",tr="Tan",nr="Tanh",ar="Tile",rr="TopK",sr="Transform",ir="Transpose",or="Unique",lr="Unpack",ur="UnsortedSegmentSum",dr="UpperBound",pr="ZerosLike",hr="Step",cr="FromPixels",fr="RotateWithOffset",mr="_FusedMatMul",gr="FusedConv2D",yr="FusedDepthwiseConv2D";function xr(...e){Xe().getBool("IS_TEST")||Xe().getBool("PROD")||console.warn(...e)}function Ar(...e){Xe().getBool("IS_TEST")||Xe().getBool("PROD")||console.log(...e)}var br=Je("kernelRegistry",(()=>new Map)),wr=Je("gradRegistry",(()=>new Map));function vr(e,t){let n=Er(e,t);return br.get(n)}function kr(e){return wr.get(e)}function Ir(e){let t=br.entries(),n=[];for(;;){let{done:a,value:r}=t.next();if(a)break;let[s,i]=r,[o]=s.split("_");o===e&&n.push(i)}return n}function Sr(e){let{kernelName:t,backendName:n}=e,a=Er(t,n);br.has(a)&&xr(`The kernel '${t}' for backend '${n}' is already registered`),br.set(a,e)}function Cr(e){let{kernelName:t}=e;wr.has(t)&&Xe().getBool("DEBUG")&&xr(`Overriding the gradient for '${t}'`),wr.set(t,e)}function Nr(e,t){let n=Er(e,t);if(!br.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);br.delete(n)}function Tr(e){if(!wr.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);wr.delete(e)}function Rr(e,t){Ir(e).forEach((e=>{Sr(Object.assign({},e,{backendName:t}))}))}function Er(e,t){return`${t}_${e}`}var $r={};function Mr(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}C($r,{arraysEqual:()=>pe,arraysEqualWithNull:()=>de,assert:()=>se,assertNonNegativeIntegerDimensions:()=>Be,assertNonNull:()=>oe,assertShapesMatch:()=>ie,bytesFromStringArray:()=>Ne,bytesPerElement:()=>Ce,checkConversionForErrors:()=>ke,clamp:()=>Q,computeStrides:()=>_e,convertBackendValuesAndArrayBuffer:()=>De,createScalarValue:()=>qr,createShuffledIndices:()=>me,decodeString:()=>Jr,distSquared:()=>re,encodeString:()=>Zr,fetch:()=>Yr,fingerPrint64:()=>jr,flatten:()=>es,getArrayFromDType:()=>ve,getTypedArrayFromDType:()=>we,hasEncodingLoss:()=>Se,hexToLong:()=>Pr,indexToLoc:()=>Ue,inferDtype:()=>$e,inferFromImplicitShape:()=>xe,isBoolean:()=>Re,isFunction:()=>Me,isInt:()=>he,isNumber:()=>Ee,isPromise:()=>Ge,isScalarShape:()=>ue,isString:()=>Te,isTypedArray:()=>Qr,isValidDtype:()=>Ie,locToIndex:()=>Ve,makeOnesTypedArray:()=>ze,makeZerosNestedTypedArray:()=>We,makeZerosTypedArray:()=>Le,nearestDivisor:()=>Fe,nearestLargerEven:()=>ee,now:()=>Kr,parseAxisParam:()=>Ae,randUniform:()=>ae,repeatedTry:()=>ye,rightPad:()=>ge,shuffle:()=>Z,shuffleCombo:()=>J,sizeFromShape:()=>le,sizeToSquarishShape:()=>fe,squeezeShape:()=>be,sum:()=>ne,swap:()=>te,tanh:()=>ce,toNestedArray:()=>Oe,toTypedArray:()=>Xr});var Fr=N(T()),_r=Fr.default||Fr;function Pr(e){return _r.fromString(e,!0,16)}var Or=Pr("c3a5c85c97cb3127"),Dr=Pr("b492b66fbe98f273"),zr=Pr("9ae16a3b2f90404f");function Lr(e){return e.xor(e.shru(47))}function Wr(e,t,n){let a=e.slice(t,t+n);return _r.fromBytes(Array.from(a),!0,!0)}function Br(e,t){return Wr(e,t,8)}function Vr(e,t){return Wr(e,t,4)}function Ur(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Gr(e,t,n=Pr("9ddfea08eb382d69")){let a=e.xor(t).mul(n);a=a.xor(a.shru(47));let r=t.xor(a).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function Hr(e,t,n,a){return function(e,t,n,a,r,s){r=r.add(e),s=Ur(s.add(r).add(a),21);let i=r;return r=(r=r.add(t)).add(n),s=s.add(Ur(r,44)),[r.add(a),s.add(i)]}(Br(e,t),Br(e,t+8),Br(e,t+16),Br(e,t+24),n,a)}function jr(e,t=e.length){let n=_r.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){let n=zr.add(2*t),a=Br(e,0).add(zr),r=Br(e,t-8);return Gr(Ur(r,37).mul(n).add(a),Ur(a,25).add(r).mul(n),n)}if(t>=4){let n=zr.add(2*t);return Gr(Vr(e,0).shl(3).add(t),Vr(e,t-4),n)}if(t>0){let n=e[0]+(e[t>>1]<<8),a=t+(e[t-1]<<2);return Lr(zr.mul(n).xor(Or.mul(a))).mul(zr)}return zr}(e,t):function(e,t=e.length){let n=zr.add(2*t),a=Br(e,0).mul(Dr),r=Br(e,8),s=Br(e,t-8).mul(n),i=Br(e,t-16).mul(zr);return Gr(Ur(a.add(r),43).add(Ur(s,30)).add(i),a.add(Ur(r.add(zr),18)).add(s),n)}(e,t);if(t<=64)return function(e,t=e.length){let n=zr.add(2*t),a=Br(e,0).mul(zr),r=Br(e,8),s=Br(e,t-8).mul(n),i=Br(e,t-16).mul(zr),o=Ur(a.add(r),43).add(Ur(s,30)).add(i),l=Gr(o,a.add(Ur(r.add(zr),18)).add(s),n),u=Br(e,16).mul(n),d=Br(e,24),p=o.add(Br(e,t-32)).mul(n),h=l.add(Br(e,t-24)).mul(n);return Gr(Ur(u.add(d),43).add(Ur(p,30)).add(h),u.add(Ur(d.add(a),18)).add(p),n)}(e,t);let a=n,r=n.mul(Dr).add(113),s=Lr(r.mul(zr).add(113)).mul(zr),i=[_r.UZERO,_r.UZERO],o=[_r.UZERO,_r.UZERO];a=a.mul(zr).add(Br(e,0));let l=0,u=64*(t-1>>6),d=u+(t-1&63)-63;do{a=Ur(a.add(r).add(i[0]).add(Br(e,l+8)),37).mul(Dr),r=Ur(r.add(i[1]).add(Br(e,l+48)),42).mul(Dr),a=a.xor(o[1]),r=r.add(i[0]).add(Br(e,l+40)),s=Ur(s.add(o[0]),33).mul(Dr),i=Hr(e,l,i[1].mul(Dr),a.add(o[0])),o=Hr(e,l+32,s.add(o[1]),r.add(Br(e,l+16))),[s,a]=[a,s],l+=64}while(l!==u);let p=Dr.add(s.and(255).shl(1));return l=d,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),a=Ur(a.add(r).add(i[0]).add(Br(e,l+8)),37).mul(p),r=Ur(r.add(i[1]).add(Br(e,l+48)),42).mul(p),a=a.xor(o[1].mul(9)),r=r.add(i[0].mul(9).add(Br(e,l+40))),s=Ur(s.add(o[0]),33).mul(p),i=Hr(e,l,i[1].mul(p),a.add(o[0])),o=Hr(e,l+32,s.add(o[1]),r.add(Br(e,l+16))),[s,a]=[a,s],Gr(Gr(i[0],o[0],p).add(Lr(r).mul(Or)).add(s),Gr(i[1],o[1],p).add(a),p)}function qr(e,t){return"string"===t?Zr(e):Xr([e],t)}function Xr(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=es(e)),Xe().getBool("DEBUG")&&ke(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){let t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Kr(){return Xe().platform.now()}function Yr(e,t){return Xe().platform.fetch(e,t)}function Zr(e,t="utf-8"){return t=t||"utf-8",Xe().platform.encode(e,t)}function Jr(e,t="utf-8"){return t=t||"utf-8",Xe().platform.decode(e,t)}function Qr(e){return null!=Xe().platform.isTypedArray?Xe().platform.isTypedArray(e):Mr(e)}function es(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||Ge(e)||null==e||Qr(e)&&n)t.push(e);else if(Array.isArray(e)||Qr(e))for(let a=0;a<e.length;++a)es(e[a],t,n);else{let a=-1;for(let t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(a=Math.max(a,Number(t)));for(let r=0;r<=a;r++)es(e[r],t,n)}return t}var ts=class{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new as)}profileKernel(e,t,n){let a,r,s=()=>{a=n()},i=Kr();if(this.backendTimer.timerAvailable())r=this.backendTimer.time(s);else{s();for(let e of a)e.dataSync();r=Promise.resolve({kernelMs:Kr()-i})}if(Xe().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<a.length;t++){let n=a[t];n.data().then((t=>{ns(t,n.dtype,e)}))}return{kernelName:e,outputs:a,inputs:t,timeMs:r.then((e=>e.kernelMs)),extraInfo:r.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:a,inputs:r,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),a,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])}))}))}};function ns(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){let a=e[t];if(isNaN(a)||!isFinite(a))return console.warn(`Found ${a} in the result of '${n}'`),!0}return!1}var as=class{logKernelProfile(e,t,n,a,r,s){let i="number"==typeof a?ge(`${a}ms`,9):a.error,o=ge(e,25),l=t.rank,u=t.size,d=ge(t.shape.toString(),14),p="";for(let e in r){let n=r[e];if(null!=n){let a=n.shape||t.shape,r=a.length;p+=`${e}: ${r}D ${r>0?a:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${d}\t%c${u}\t%c${p}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}},rs=20,ss=3,is=7;function os(e,t,n,a){let r=_e(t),s=function(e,t,n,a){let r=le(t),s=a[a.length-1],i=new Array(s).fill(0),o=t.length,l="complex64"===n?ps(e):e;if(o>1)for(let e=0;e<r/s;e++){let t=e*s;for(let e=0;e<s;e++)i[e]=Math.max(i[e],ls(l[t+e],0,n).length)}return i}(e,t,n,r),i=t.length,o=ds(e,t,n,r,s),l=["Tensor"];return a&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function ls(e,t,n){let a;return a=Array.isArray(e)?`${parseFloat(e[0].toFixed(is))} + ${parseFloat(e[1].toFixed(is))}j`:Te(e)?`'${e}'`:"bool"===n?us(e):parseFloat(e.toFixed(is)).toString(),ge(a,t)}function us(e){return 0===e?"false":"true"}function ds(e,t,n,a,r,s=!0){let i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[ls(ps(e)[0],0,n)]:"bool"===n?[us(e[0])]:[e[0].toString()];if(1===l){if(o>rs){let t=ss*i,a=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-ss)*i,o*i));return"complex64"===n&&(a=ps(a),s=ps(s)),["["+a.map(((e,t)=>ls(e,r[t],n))).join(", ")+", ..., "+s.map(((e,t)=>ls(e,r[o-ss+t],n))).join(", ")+"]"]}return["["+("complex64"===n?ps(e):Array.from(e)).map(((e,t)=>ls(e,r[t],n))).join(", ")+"]"]}let u=t.slice(1),d=a.slice(1),p=a[0]*i,h=[];if(o>rs){for(let t=0;t<ss;t++){let a=t*p,s=a+p;h.push(...ds(e.slice(a,s),u,n,d,r,!1))}h.push("...");for(let t=o-ss;t<o;t++){let a=t*p,s=a+p;h.push(...ds(e.slice(a,s),u,n,d,r,t===o-1))}}else for(let t=0;t<o;t++){let a=t*p,s=a+p;h.push(...ds(e.slice(a,s),u,n,d,r,t===o-1))}let c=2===l?",":"";h[0]="["+(o>0?h[0]+c:"");for(let e=1;e<h.length-1;e++)h[e]=" "+h[e]+c;let f=",\n";for(let e=2;e<l;e++)f+="\n";return h[h.length-1]=" "+h[h.length-1]+"]"+(s?"":f),h}function ps(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var hs=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=le(e),null!=n){let e=n.length;se(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||ve(t,this.size),this.strides=_e(e)}set(e,...t){0===t.length&&(t=[0]),se(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));let n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(let n of e){if(n<0||n>=this.shape[t]){let t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return cs().makeTensor(this.values,this.shape,this.dtype)}},cs=null,fs=null,ms=class{constructor(e,t,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=le(e),this.strides=_e(e),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return fs.buffer(this.shape,this.dtype,e)}bufferSync(){return fs.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Oe(this.shape,e,"complex64"===this.dtype)}arraySync(){return Oe(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();let e=cs().read(this.dataId);if("string"===this.dtype){let t=await e;try{return t.map((e=>Jr(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),cs().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=cs().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Jr(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await cs().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),cs().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return fs.print(this,e)}clone(){return this.throwIfDisposed(),fs.clone(this)}toString(e=!1){return os(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),fs.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),cs().makeVariable(this,e,t,n)}};function gs(){return Je("Tensor",(()=>ms))}Object.defineProperty(ms,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),gs();var ys=class extends ms{constructor(e,t,n,a){super(e.shape,e.dtype,e.dataId,a),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!pe(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);cs().disposeTensor(this),this.dataId=e.dataId,cs().incRef(this,null)}dispose(){cs().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(ys,Symbol.hasInstance,{value:e=>e instanceof ms&&null!=e.assign&&e.assign instanceof Function});var xs,As,bs,ws,vs,ks,Is={};C(Is,{assertTypesMatch:()=>$s,getTensorsInContainer:()=>Fs,isTensorInList:()=>Ms,makeTypesMatch:()=>Es}),(As=xs||(xs={})).R0="R0",As.R1="R1",As.R2="R2",As.R3="R3",As.R4="R4",As.R5="R5",As.R6="R6",function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(bs||(bs={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(ws||(ws={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(vs||(vs={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(ks||(ks={}));var Ss={float32:vs,int32:bs,bool:ws,complex64:ks};function Cs(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Ss[e][t]}function Ns(e){return Cs(e,"int32")}function Ts(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function Rs(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function Es(e,t){if(e.dtype===t.dtype)return[e,t];let n=Cs(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function $s(e,t){se(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function Ms(e,t){return t.some((t=>t.id===e.id))}function Fs(e){let t=[];return _s(e,t,new Set),t}function _s(e,t,n){if(null==e)return;if(e instanceof ms)return void t.push(e);if(!function(e){return Array.isArray(e)||"object"==typeof e}(e))return;let a=e;for(let e in a){let r=a[e];n.has(r)||(n.add(r),_s(r,t,n))}}function Ps(e){return null!=e.kernelName}var Os=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},Ds=class e{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Os}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{let{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(xr(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new ts(this.backendInstance),!0}setupRegisteredKernels(){Ir(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Ir(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){let t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(!n||n instanceof K||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{let t=++this.pendingBackendInitId,a=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,xr(`Initialization of backend ${e} failed`),xr(n.stack||n.message)),!1)));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(t){return xr(`Initialization of backend ${e} failed`),xr(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:a,asyncInit:r}=this.initializeBackend(n);if(r||a)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),a=n.backend,r=this.readSync(t),s=a.refCount(t);a.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,a=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=e}return this.scopedRun((()=>this.startScope(a)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{let e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return e.nextTensorId++}nextVariableId(){return e.nextVariableId++}clone(e){let t=Ls.runKernel(gn,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{let t={x:e};return Ls.runKernel(kt,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==vr(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let a=this.backend.numDataIds(),r=0;n.forEach((e=>{r+="complex64"===e.dtype?3:1}));let s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=a-t-r-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n,a=[],r=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;let o,l=Ps(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Ps(e)){let{kernelName:t,inputs:s,attrs:i}=e;null==this.backendName&&this.backend;let l=vr(t,this.backendName);se(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),n=()=>{let e=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:i,backend:this.backend});let n=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,n);let u=n.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){let e=this.getTensorsForGradient(t,s,u);a=this.saveTensorsForBackwardMode(e)}return u}}else{let{forwardFunc:t}=e,s=e=>{r&&(a=e.map((e=>this.keep(this.clone(e)))))};n=()=>{let e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,s)));let n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}let u,{inputs:d,attrs:p}=e,h=Ps(e)?null:e.backwardsFunc;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(u=this.profiler.profileKernel(l,d,(()=>n())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(u),t=u.outputs):t=n()})),r&&this.addTapeNode(l,d,t,h,a,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map((e=>null!=d[e]?d[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:u.timeMs,extraInfo:u.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){let a=kr(e);if(null!=a){let e,r=a.inputsToSave||[],s=a.outputsToSave||[];a.saveAllInputs?(se(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),e=Object.keys(t).map((e=>t[e]))):e=r.map((e=>t[e]));let i=n.filter(((e,t)=>s[t]));return e.concat(i)}return[]}makeTensor(e,t,n,a){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",a=a||this.backend;let r=e;"string"===n&&Te(e[0])&&(r=e.map((e=>Zr(e))));let s=a.write(r,t,n),i=new ms(t,n,s,this.nextTensorId());if(this.trackTensor(i,a),"string"===n){let e=this.state.tensorInfo.get(s),t=Ne(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,a){let r={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(r,a)}makeTensorFromTensorInfo(e,t){let{dataId:n,shape:a,dtype:r}=e,s=new ms(a,r,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e,t=!0,n,a){n=n||this.nextVariableId().toString(),null!=a&&a!==e.dtype&&(e=e.cast(a));let r=new ys(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*Ce(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof ys||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){let t=e.size*Ce(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,a,r,s){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},o=kr(e);null!=o&&(a=o.gradFunc),null!=a&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){let e=n[t],a=Le(e.size,e.dtype);return this.makeTensor(a,e.shape,e.dtype)}return e})),a(e.length>1?e:e[0],r,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=Fs(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){let t=this.state.activeScope.track[e];!t.kept&&!n.has(t.id)&&t.dispose()}let a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{!e.kept&&e.scopeId===a.id&&this.track(e)}))}gradients(e,t,n,a=!1){if(se(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));se(r instanceof ms,(()=>"The result y returned by f() must be a tensor."));let s=function(e,t,n){let a={},r={};for(let e=0;e<t.length;e++)a[t[e].id]=!0;for(let n=0;n<e.length;n++){let s=e[n],i=s.inputs;for(let e in i){let n=i[e],o=!1;for(let e=0;e<t.length;e++)if(a[n.id]){s.outputs.forEach((e=>a[e.id]=!0)),o=!0,r[s.id]=!0;break}if(o)break}}let s={};s[n.id]=!0;let i={};for(let t=e.length-1;t>=0;t--){let n=e[t],a=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(let e in a)s[a[e].id]=!0,i[n.id]=!0;break}}let o=[];for(let t=0;t<e.length;t++){let n=e[t];if(r[n.id]&&i[n.id]){let e={};for(let t in n.inputs){let r=n.inputs[t];a[r.id]&&(e[t]=r)}let t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,r);if(!a&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{let e={};e[r.id]=null==n?function(e){let t=ze(le(e),"float32");return Ls.makeTensor(t,e,"float32")}(r.shape):n,function(e,t,n,a){for(let r=t.length-1;r>=0;r--){let s=t[r],i=[];if(s.outputs.forEach((t=>{let n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let o=s.gradient(i);for(let t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);let r=n((()=>o[t]()));if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${r.dtype}'`);let i=s.inputs[t];if(!pe(r.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${r.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=r;else{let t=e[i.id];e[i.id]=a(t,r),t.dispose()}}}}(e,s,(e=>this.tidy(e)),Ws);let a=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(let t of e.saved)t.dispose()})),this.state.activeTape=null),{value:r,grads:a}}))}customGrad(e){return se(Me(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{se(t.every((e=>e instanceof ms)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));let n,a={};return t.forEach(((e,t)=>{a[t]=e})),this.runKernelFunc({forwardFunc:(a,r)=>(n=e(...t,r),se(n.value instanceof ms,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),se(Me(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,a)=>{let r=n.gradFunc(e,a),s=Array.isArray(r)?r:[r];se(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),se(s.every((e=>e instanceof ms)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));let i={};return s.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:a})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=Kr(),n=await this.backend.time(e);return n.wallMs=Kr()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Os;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};function zs(){let e=Ze();if(null==e._tfengine){let t=new je(e);e._tfengine=new Ds(t)}return function(e){Ye=e}(e._tfengine.ENV),function(e){cs=e}((()=>e._tfengine)),e._tfengine}Ds.nextTensorId=0,Ds.nextVariableId=0;var Ls=zs();function Ws(e,t){let n={a:e,b:t};return Ls.runKernel(nt,n)}var Bs,Vs={};function Us(e){Bs=e}function Gs(e){if(void 0!==Bs)return Bs;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;let t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){let t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Hs(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}C(Vs,{isBrowser:()=>Hs,isMobile:()=>Gs,mockIsMobile:()=>Us});var js=Xe();function qs(e,t){let n=e;if(Qr(e))return"string"===t?[]:[e.length];if(Ts(e)){let t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(Rs(e))return[e.buffer.size/(null==t?4:Ce(t))];if(!Array.isArray(e))return[];let a=[];for(;Array.isArray(n)||Qr(n)&&"string"!==t;)a.push(n.length),n=n[0];return Array.isArray(e)&&Xe().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Xs(e,a,[]),a}function Xs(e,t,n){if(n=n||[],!Array.isArray(e)&&!Qr(e))return void se(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));se(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),se(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));let a=t.slice(1);for(let t=0;t<e.length;++t)Xs(e[t],a,n.concat(t))}function Ks(e,t,n,a){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${a}' must be ${e} tensor, but got ${t} tensor`)}}function Ys(e,t,n,a="numeric"){if(e instanceof gs())return Ks(a,e.dtype,t,n),e;let r=$e(e);if("string"!==r&&["bool","int32","float32"].indexOf(a)>=0&&(r=a),Ks(a,r,t,n),null==e||!Qr(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){let a=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${a}'`)}let s=qs(e,r);!Qr(e)&&!Array.isArray(e)&&(e=[e]);let i="string"!==r?Xr(e,r):es(e,[],!0);return Ls.makeTensor(i,s,r)}function Zs(e,t,n,a="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,r)=>Ys(e,`${t}[${r}]`,n,a)))}js.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),js.registerFlag("IS_BROWSER",(()=>Hs())),js.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),js.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),js.registerFlag("IS_SAFARI",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),js.registerFlag("PROD",(()=>!1)),js.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>js.getBool("DEBUG"))),js.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),js.registerFlag("IS_TEST",(()=>!1)),js.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>js.getBool("DEBUG"))),js.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),js.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),js.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));var Js="__op";function Qs(e){let t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],a=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Js;let r=(...e)=>{Ls.startScope(n);try{let t=a(...e);return Ge(t)&&console.error("Cannot return a Promise inside of tidy."),Ls.endScope(t),t}catch(e){throw Ls.endScope(null),e}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}var ei=Qs({complex_:function(e,t){let n=Ys(e,"real","complex"),a=Ys(t,"imag","complex");ie(n.shape,a.shape,`real and imag shapes, ${n.shape} and ${a.shape}, must match in call to tf.complex().`);let r={real:n,imag:a};return Ls.runKernel(Ct,r)}});function ti(e,t,n,a){if(null==a)a=$e(e);else if("complex64"===a)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Rs(e)||Ts(e)){if("float32"!==a&&"int32"!==a)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${a}.`);return Ls.backend.createTensorFromGPUData(e,t||n,a)}if(!Qr(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Be(t);let e=le(t),a=le(n);se(e===a,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${a}`));for(let e=0;e<n.length;++e){let a=n[e],r=e!==n.length-1||a!==le(t.slice(e));se(n[e]===t[e]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return!Qr(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e="string"!==a?Xr(e,a):es(e,[],!0),Ls.makeTensor(e,t,a)}function ni(e,t,n){return ti(e,t,qs(e,n),n)}var ai={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},ri=class e{static join(t){return new e(t).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e||(e instanceof Array||(e=[e]),0===(e=e.map((e=>Qr(e)?e.buffer:e))).length))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){let a=e[n];n!==e.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);let r=t+a.byteLength;this.shards.push({buffer:a,start:t,end:r}),t=r}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e)return new ArrayBuffer(0);let n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);let a=new ArrayBuffer(t-e),r=new Uint8Array(a),s=0;for(let a=n;a<this.shards.length;a++){let n=this.shards[a],i=e+s-n.start,o=s,l=Math.min(t,n.end)-n.start,u=new Uint8Array(n.buffer,i,l-i);if(r.set(u,o),s+=u.length,t<n.end)break}return a}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;let n=function(e,t){let n=0,a=e.length;for(;n<=a;){let r=Math.floor((a-n)/2)+n,s=t(e[r]);if(0===s)return r;s<0?a=r:n=r+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}};function si(){Xe().set("PROD",!0)}function ii(){Xe().set("DEBUG",!0)}function oi(){Xe().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function li(e){Xe().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function ui(){Ls.disposeVariables()}function di(){return Ls}function pi(){return Ls.memory()}function hi(e){return Ls.profile(e)}function ci(e,t){return Ls.tidy(e,t)}function fi(e){Fs(e).forEach((e=>e.dispose()))}function mi(e){return Ls.keep(e)}function gi(e){return Ls.time(e)}function yi(e){return Ls.setBackend(e)}function xi(){return Ls.ready()}function Ai(){return Ls.backendName}function bi(e){Ls.removeBackend(e)}function wi(e){return Ls.findBackend(e)}function vi(e){return Ls.findBackendFactory(e)}function ki(e,t,n=1){return Ls.registerBackend(e,t,n)}function Ii(){return Ls.backend}function Si(e,t){Xe().setPlatform(e,t)}var Ci=4;async function Ni(e,t){let n=[],a=[],r=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<r.length;++s){let i=r[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);let l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){let e=new Promise((async e=>{let t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+Ci*t.length,a=new Uint8Array(n),r=0;for(let e=0;e<t.length;e++){let n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);a.set(s,r),r+=Ci,a.set(n,r),r+=n.length}e(a)}));a.push(e)}else a.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:_i(await Promise.all(a)),specs:n}}function Ti(e,t){let n=new ri(e),a={},r=0;for(let e of t){let t=Ri(e,((e,t)=>n.slice(r+e,r+t)));a[e.name]=$i(e,n.slice(r,r+t)),r+=t}return a}function Ri(e,t){let n,a=le(e.shape);if("quantization"in e){let t=e.quantization;n=ai[t.dtype]}else{if("string"===e.dtype){let e=0;for(let n=0;n<a;n++)e+=Ci+new Uint32Array(t(e,e+Ci))[0];return e}n=ai[e.dtype]}return a*n}async function Ei(e,t){let n,a=le(e.shape);if("quantization"in e){let t=e.quantization;n=ai[t.dtype]}else{if("string"===e.dtype){let e=0;for(let n=0;n<a;n++)e+=Ci+new Uint32Array(await t(e,e+Ci))[0];return e}n=ai[e.dtype]}return a*n}function $i(e,t){let n,a=e.name,r=e.dtype,s=e.shape,i=le(s),o=0;if("quantization"in e){let s=e.quantization;if("uint8"===s.dtype||"uint16"===s.dtype){if(!("min"in s)||!("scale"in s))throw new Error(`Weight ${e.name} with quantization ${s.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==s.dtype)throw new Error(`Weight ${e.name} has unknown quantization dtype ${s.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==r)throw new Error(`Weight ${e.name} is quantized with ${s.dtype} which only supports weights of type float32 not ${r}.`)}let l=ai[s.dtype],u="uint8"===s.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===r)if("uint8"===s.dtype||"uint16"===s.dtype){n=new Float32Array(u.length);for(let e=0;e<u.length;e++){let t=u[e];n[e]=t*s.scale+s.min}}else{if("float16"!==s.dtype)throw new Error(`Unsupported quantization type ${s.dtype} for weight type float32.`);n=function(){let e=function(){let e=e=>{let t=e<<13,n=0;for(;!(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return a=>{let r=new ArrayBuffer(4*a.length),s=new Uint32Array(r);for(let r=0;r<a.length;r++){let i=a[r],o=e[n[i>>10]+(1023&i)]+t[i>>10];s[r]=o}return new Float32Array(r)}}()(u)}else{if("int32"!==r)throw new Error(`Unsupported dtype in weight '${a}': ${r}`);if("uint8"!==s.dtype&&"uint16"!==s.dtype)throw new Error(`Unsupported quantization type ${s.dtype} for weight type int32.`);n=new Int32Array(u.length);for(let e=0;e<u.length;e++){let t=u[e];n[e]=Math.round(t*s.scale+s.min)}}o+=i*l}else if("string"===r){let a=le(e.shape);n=[];for(let e=0;e<a;e++){let e=new Uint32Array(t.slice(o,o+Ci))[0];o+=Ci;let a=new Uint8Array(t.slice(o,o+e));n.push(a),o+=e}}else{let e=ai[r];if("float32"===r)n=new Float32Array(t);else if("int32"===r)n=new Int32Array(t);else{if("bool"!==r){if("complex64"===r){n=new Float32Array(t);let e=new Float32Array(n.length/2),a=new Float32Array(n.length/2);for(let t=0;t<e.length;t++)e[t]=n[2*t],a[t]=n[2*t+1];let r=ni(e,s,"float32"),i=ni(a,s,"float32"),o=ei(r,i);return r.dispose(),i.dispose(),o}throw new Error(`Unsupported dtype in weight '${a}': ${r}`)}n=new Uint8Array(t)}o+=i*e}return ni(n,s,r)}async function Mi(e,t,n){let a=new Uint8Array(t);for(;a.byteLength<n;){let{done:t,value:r}=await e.read();if(t&&null==r){let e=n-a.byteLength;throw new Error(`Reader is done but ${e} bytes are still expected`)}let s=new Uint8Array(a.length+r.byteLength);s.set(a,0),s.set(new Uint8Array(r),a.length),a=s}return a.buffer}async function Fi(e,t){let n={},a=e.getReader(),r=new ArrayBuffer(0);for(let e of t){let t=await Ei(e,(async(e,t)=>(r=await Mi(a,r,t),r.slice(e,t))));r=await Mi(a,r,t);let s=r.slice(0,t);r=r.slice(t);let i=$i(e,s);if(n[e.name]=i,"webgpu"===Ai()){let e=Ii();"uploadToGPU"in e&&le(i.shape)>=Xe().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(i.dataId)}}return n}function _i(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));let a=new Uint8Array(t),r=0;return n.forEach((e=>{a.set(new Uint8Array(e.buffer),r),r+=e.byteLength})),a.buffer}var Pi="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Oi(e){return Pi?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function Di(e){return ri.join(e)}function zi(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);let t=e.split("/");return t[t.length-1]}function Li(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function Wi(e,t,n){let a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(a.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");a.weightSpecs=t,a.weightData=n}return null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(a.initializerSignature=e.initializerSignature),a}async function Bi(e,t){let n,a;return null!=e.weightsManifest&&([n,a]=await t(e.weightsManifest)),Wi(e,n,a)}function Vi(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Oi(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Oi(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new ri(e.weightData).byteLength}}function Ui(e){let t=[];for(let n of e)t.push(...n.weights);return t}var Gi=class e{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==e.instance&&(e.instance=new e),e.instance}static registerSaveRouter(t){e.getInstance().saveRouters.push(t)}static registerLoadRouter(t){e.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return e.getHandlers(t,"save")}static getLoadHandlers(t,n){return e.getHandlers(t,"load",n)}static getHandlers(t,n,a){let r=[];return("load"===n?e.getInstance().loadRouters:e.getInstance().saveRouters).forEach((e=>{let n=e(t,a);null!==n&&r.push(n)})),r}},Hi=e=>Gi.registerSaveRouter(e),ji=e=>Gi.registerLoadRouter(e),qi=e=>Gi.getSaveHandlers(e),Xi=(e,t)=>Gi.getLoadHandlers(e,t),Ki="tensorflowjs",Yi="models_store",Zi="model_info_store";function Ji(){if(!Xe().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Qi(e){let t=e.result;t.createObjectStore(Yi,{keyPath:"modelPath"}),t.createObjectStore(Zi,{keyPath:"modelPath"})}var eo=class{constructor(e){if(this.indexedDB=Ji(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{let a=this.indexedDB.open(Ki,1);a.onupgradeneeded=()=>Qi(a),a.onsuccess=()=>{let r=a.result;if(null==t){let t=r.transaction(Yi,"readonly"),a=t.objectStore(Yi).get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return r.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(a.result.modelArtifacts)},a.onerror=e=>(r.close(),n(a.error)),t.oncomplete=()=>r.close()}else{t.weightData=ri.join(t.weightData);let a,s,i=Vi(t),o=r.transaction(Zi,"readwrite"),l=o.objectStore(Zi);try{a=l.put({modelPath:this.modelPath,modelArtifactsInfo:i})}catch(e){return n(e)}a.onsuccess=()=>{s=r.transaction(Yi,"readwrite");let a,u=s.objectStore(Yi);try{a=u.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i})}catch(e){return n(e)}a.onsuccess=()=>e({modelArtifactsInfo:i}),a.onerror=e=>{l=o.objectStore(Zi);let t=l.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(a.error)),t.onerror=e=>(r.close(),n(a.error))}},a.onerror=e=>(r.close(),n(a.error)),o.oncomplete=()=>{null==s?r.close():s.oncomplete=()=>r.close()}}},a.onerror=e=>n(a.error)}))}};eo.URL_SCHEME="indexeddb://";var to=e=>Xe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(eo.URL_SCHEME)?function(e){return new eo(e)}(e.slice(eo.URL_SCHEME.length)):null;Gi.registerSaveRouter(to),Gi.registerLoadRouter(to);var no="/",ao="tensorflowjs_models",ro="info",so="model_topology",io="weight_specs",oo="weight_data",lo="model_metadata";function uo(e){return{info:[ao,e,ro].join(no),topology:[ao,e,so].join(no),weightSpecs:[ao,e,io].join(no),weightData:[ao,e,oo].join(no),modelMetadata:[ao,e,lo].join(no)}}function po(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function ho(e){let t=e.split(no);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(no)}var co=class{constructor(e){if(!Xe().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=uo(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),a=Vi(e),r=ri.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Pi)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let e=0,a=t.length;e<a;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(r));let s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:a}}catch(e){throw po(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==a)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=a;let r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){let e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}let s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Pi){let t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}};co.URL_SCHEME="localstorage://";var fo=e=>Xe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(co.URL_SCHEME)?function(e){return new co(e)}(e.slice(co.URL_SCHEME.length)):null;Gi.registerSaveRouter(fo),Gi.registerLoadRouter(fo);var mo="://",go=class e{constructor(){this.managers={}}static getInstance(){return null==e.instance&&(e.instance=new e),e.instance}static registerManager(t,n){se(null!=t,(()=>"scheme must not be undefined or null.")),t.endsWith(mo)&&(t=t.slice(0,t.indexOf(mo))),se(t.length>0,(()=>"scheme must not be an empty string."));let a=e.getInstance();se(null==a.managers[t],(()=>`A model store manager is already registered for scheme '${t}'.`)),a.managers[t]=n}static getManager(t){let n=e.getInstance().managers[t];if(null==n)throw new Error(`Cannot find model manager for scheme '${t}'`);return n}static getSchemes(){return Object.keys(e.getInstance().managers)}};function yo(e){if(-1===e.indexOf(mo))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${go.getSchemes().join(",")}`);return{scheme:e.split(mo)[0],path:e.split(mo)[1]}}async function xo(e,t,n=!1){se(e!==t,(()=>`Old path and new path are the same: '${e}'`));let a=Gi.getLoadHandlers(e);se(a.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),se(a.length<2,(()=>`Copying failed because more than one (${a.length}) load handlers for source URL ${e}.`));let r=a[0],s=Gi.getSaveHandlers(t);se(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),se(s.length<2,(()=>`Copying failed because more than one (${a.length}) save handlers for destination URL ${t}.`));let i=s[0],o=yo(e).scheme,l=yo(e).path,u=o===yo(e).scheme,d=await r.load();n&&u&&await go.getManager(o).removeModel(l);let p=await i.save(d);return n&&!u&&await go.getManager(o).removeModel(l),p.modelArtifactsInfo}async function Ao(){let e=go.getSchemes(),t={};for(let n of e){let e=await go.getManager(n).listModels();for(let a in e)t[n+mo+a]=e[a]}return t}async function bo(e){let t=yo(e);return go.getManager(t.scheme).removeModel(t.path)}async function wo(e,t){return xo(e,t,!1)}async function vo(e,t){return xo(e,t,!0)}if(Xe().get("IS_BROWSER")){Xe().setPlatform("browser",new class{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!=typeof window&&Xe().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{e.source===window&&e.data.name===this.messageName&&(e.stopPropagation(),(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))}),!0))):setTimeout(e,t)}isTypedArray(e){return Mr(e)}});try{go.registerManager(co.URL_SCHEME,new class{constructor(){se(Xe().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),se("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){let e={},t=ao+no,n=no+ro;for(let a=0;a<this.LS.length;++a){let r=this.LS.key(a);r.startsWith(t)&&r.endsWith(n)&&(e[ho(r)]=JSON.parse(this.LS.getItem(r)))}return e}async removeModel(e){e=function(e){return e.startsWith(co.URL_SCHEME)?e.slice(co.URL_SCHEME.length):e}(e);let t=uo(e);if(null==this.LS.getItem(t.info))throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return po(t),n}})}catch(As){}try{go.registerManager(eo.URL_SCHEME,new class{constructor(){this.indexedDB=Ji()}async listModels(){return new Promise(((e,t)=>{let n=this.indexedDB.open(Ki,1);n.onupgradeneeded=()=>Qi(n),n.onsuccess=()=>{let a=n.result,r=a.transaction(Zi,"readonly"),s=r.objectStore(Zi).getAll();s.onsuccess=()=>{let t={};for(let e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(a.close(),t(s.error)),r.oncomplete=()=>a.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){return e=function(e){return e.startsWith(eo.URL_SCHEME)?e.slice(eo.URL_SCHEME.length):e}(e),new Promise(((t,n)=>{let a=this.indexedDB.open(Ki,1);a.onupgradeneeded=()=>Qi(a),a.onsuccess=()=>{let r,s=a.result,i=s.transaction(Zi,"readwrite"),o=i.objectStore(Zi),l=o.get(e);l.onsuccess=()=>{if(null==l.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let a=o.delete(e),i=()=>{r=s.transaction(Yi,"readwrite");let a=r.objectStore(Yi).delete(e);a.onsuccess=()=>t(l.result.modelArtifactsInfo),a.onerror=e=>n(l.error)};a.onsuccess=i,a.onerror=e=>(i(),s.close(),n(l.error))}},l.onerror=e=>(s.close(),n(l.error)),i.oncomplete=()=>{null==r?s.close():r.oncomplete=()=>s.close()}},a.onerror=e=>n(a.error)}))}})}catch(As){}}var ko;function Io(e,t="float32",n){return t=t||"float32",Be(e),new hs(e,t,n)}Xe().get("IS_NODE")&&!Xe().get("IS_BROWSER")&&Xe().setPlatform("node",new class{constructor(){this.util=E(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Xe().global.fetch?Xe().global.fetch(e,t):(null==ko&&(ko=R()),ko(e,t))}now(){let e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}});var So=Qs({cast_:function(e,t){let n=Ys(e,"x","cast");if(!Ie(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");let a={x:n},r={dtype:t};return Ls.runKernel(kt,a,r)}}),Co=Qs({clone_:function(e){let t={x:Ys(e,"x","clone","string_or_numeric")};return Ls.runKernel(gn,t)}});function No(e,t=!1){console.log(e.toString(t))}zs(),function(e){fs=e}({buffer:Io,cast:So,clone:Co,print:No});var To=Qs({add_:function(e,t){let n=Ys(e,"a","add"),a=Ys(t,"b","add");[n,a]=Es(n,a);let r={a:n,b:a};return Ls.runKernel(nt,r)}}),Ro=Qs({floorDiv_:function(e,t){let n=Ys(e,"a","floorDiv"),a=Ys(t,"b","floorDiv");[n,a]=Es(n,a);let r={a:n,b:a};return Ls.runKernel(dn,r)}}),Eo=Qs({div_:function(e,t){let n=Ys(e,"a","div"),a=Ys(t,"b","div");if([n,a]=Es(n,a),"int32"===n.dtype&&"int32"===a.dtype)return Ro(n,a);let r={a:n,b:a};return Ls.runKernel(Yt,r,{})}}),$o=Qs({mul_:function(e,t){let n=Ys(e,"a","mul"),a=Ys(t,"b","mul");[n,a]=Es(n,a);let r={a:n,b:a};return Ls.runKernel(Yn,r)}}),Mo=Qs({abs_:function(e){let t=Ys(e,"x","abs");if("complex64"===t.dtype){let e={x:t};return Ls.runKernel(Nt,e)}{let e={x:t};return Ls.runKernel(Qe,e)}}}),Fo=Qs({acos_:function(e){let t={x:Ys(e,"x","acos")};return Ls.runKernel(et,t)}}),_o=Qs({acosh_:function(e){let t={x:Ys(e,"x","acosh")};return Ls.runKernel(tt,t)}}),Po=Qs({addN_:function(e){se(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),se(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));let t=e.map(((e,t)=>Ys(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!pe(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));let a=t;return Ls.runKernel(at,a)}}),Oo=Qs({all_:function(e,t=null,n=!1){let a={x:Ys(e,"x","all","bool")},r={axis:t,keepDims:n};return Ls.runKernel(rt,a,r)}}),Do=Qs({any_:function(e,t=null,n=!1){let a={x:Ys(e,"x","any","bool")},r={axis:t,keepDims:n};return Ls.runKernel(st,a,r)}}),zo=Qs({argMax_:function(e,t=0){let n={x:Ys(e,"x","argMax")},a={axis:t};return Ls.runKernel(it,n,a)}}),Lo=Qs({argMin_:function(e,t=0){let n={x:Ys(e,"x","argMin")},a={axis:t};return Ls.runKernel(ot,n,a)}}),Wo=Qs({asin_:function(e){let t={x:Ys(e,"x","asin")};return Ls.runKernel(lt,t)}}),Bo=Qs({asinh_:function(e){let t={x:Ys(e,"x","asinh")};return Ls.runKernel(ut,t)}}),Vo=Qs({atan_:function(e){let t={x:Ys(e,"x","atan")};return Ls.runKernel(dt,t)}}),Uo=Qs({atan2_:function(e,t){let n=Ys(e,"a","atan2"),a=Ys(t,"b","atan2");[n,a]=Es(n,a);let r={a:n,b:a};return Ls.runKernel(ht,r)}}),Go=Qs({atanh_:function(e){let t={x:Ys(e,"x","atanh")};return Ls.runKernel(pt,t)}});function Ho(e,t,n,a,r="NHWC",s){return Xo(e,[...t,e[3]],n,s,a,null,null,rl(r))}function jo(e,t,n,a,r,s,i="channelsLast"){let o,[l,u]=Zo(t);if("channelsLast"===i)o=[l,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);o=[l,u,e[1],e[1]]}return Xo(e,o,n,a,r,s,!1,i)}function qo(e,t,n,a,r,s,i="NDHWC"){let o,l,[u,d,p]=Jo(t);if("NDHWC"===i)l="channelsLast",o=[u,d,p,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);l="channelsFirst",o=[u,d,p,e[1],e[1]]}return Ko(e,o,n,a,r,!1,l,s)}function Xo(e,t,n,a,r,s,i=!1,o="channelsLast"){let[l,u,d,p]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,d,p]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,p,u,d]=e}let h,[c,f,,m]=t,[g,y]=Zo(n),[x,A]=Zo(a),b=Qo(c,x),w=Qo(f,A),{padInfo:v,outHeight:k,outWidth:I}=function(e,t,n,a,r,s,i,o,l){let u,d,p;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};let r=function(e,t,n,a,r){null==a&&(a=Yo(e,t,n));let s=e[1];return[el((e[0]-t+2*a)/n+1,r),el((s-t+2*a)/n+1,r)]}([t,n],s,a,e,o);d=r[0],p=r[1]}else if("same"===e){d=Math.ceil(t/a),p=Math.ceil(n/r);let e=Math.max(0,(d-1)*a+s-t),o=Math.max(0,(p-1)*r+i-n),l=Math.floor(e/2),h=e-l,c=Math.floor(o/2);u={top:l,bottom:h,left:c,right:o-c,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-s+1)/a),p=Math.ceil((n-i+1)/r);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{let h="channelsLast"===l?e[1][0]:e[2][0],c="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:h,bottom:c,left:f,right:m,type:0===h&&0===c&&0===f&&0===m?"VALID":"EXPLICIT"},d=el((t-s+h+c)/a+1,o),p=el((n-i+f+m)/r+1,o)}}return{padInfo:u,outHeight:d,outWidth:p}}(r,u,d,g,y,b,w,s,o),S=i?m*p:m;return"channelsFirst"===o?h=[l,S,k,I]:"channelsLast"===o&&(h=[l,k,I,S]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:d,inChannels:p,outHeight:k,outWidth:I,outChannels:S,padInfo:v,strideHeight:g,strideWidth:y,filterHeight:c,filterWidth:f,effectiveFilterHeight:b,effectiveFilterWidth:w,dilationHeight:x,dilationWidth:A,inShape:e,outShape:h,filterShape:t}}function Ko(e,t,n,a,r,s=!1,i="channelsLast",o){let[l,u,d,p,h]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,d,p,h]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,h,u,d,p]=e}let c,[f,m,g,,y]=t,[x,A,b]=Jo(n),[w,v,k]=Jo(a),I=Qo(f,w),S=Qo(m,v),C=Qo(g,k),{padInfo:N,outDepth:T,outHeight:R,outWidth:E}=function(e,t,n,a,r,s,i,o,l,u,d){let p,h,c,f;if("valid"===e&&(e=0),"number"==typeof e){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};let m=function(e,t,n,a,r,s){null==r&&(r=Yo(e,t[0],a[0]));let i=[0,0,0,1];for(let n=0;n<3;n++)e[n]+2*r>=t[n]&&(i[n]=el((e[n]-t[n]+2*r)/a[n]+1,s));return i}([t,n,a,1],[o,l,u],0,[r,s,i],e,d);h=m[0],c=m[1],f=m[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{h=Math.ceil(t/r),c=Math.ceil(n/s),f=Math.ceil(a/i);let e=(h-1)*r+o-t,d=(c-1)*s+l-n,m=(f-1)*i+u-a,g=Math.floor(e/2),y=e-g,x=Math.floor(d/2),A=d-x,b=Math.floor(m/2);p={top:x,bottom:A,left:b,right:m-b,front:g,back:y,type:"SAME"}}}return{padInfo:p,outDepth:h,outHeight:c,outWidth:f}}(r,u,d,p,x,A,b,I,S,C,o),$=s?y*h:y;return"channelsFirst"===i?c=[l,$,T,R,E]:"channelsLast"===i&&(c=[l,T,R,E,$]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:d,inWidth:p,inChannels:h,outDepth:T,outHeight:R,outWidth:E,outChannels:$,padInfo:N,strideDepth:x,strideHeight:A,strideWidth:b,filterDepth:f,filterHeight:m,filterWidth:g,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:C,dilationDepth:w,dilationHeight:v,dilationWidth:k,inShape:e,outShape:c,filterShape:t}}function Yo(e,t,n,a=1){let r=Qo(t,a);return Math.floor((e[0]*(n-1)-n+r)/2)}function Zo(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Jo(e){return"number"==typeof e?[e,e,e]:e}function Qo(e,t){return t<=1?e:e+(e-1)*(t-1)}function el(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function tl(e){let[t,n,a]=Zo(e);return 1===t&&1===n&&1===a}function nl(e,t){return tl(e)||tl(t)}function al(e){return Zo(e).every((e=>e>0))}function rl(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function sl(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)se(he(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{se(he(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}var il=Qs({reshape_:function(e,t){let n={x:Ys(e,"x","reshape","string_or_numeric")},a={shape:t};return Ls.runKernel(ya,n,a)}}),ol=Qs({avgPool_:function(e,t,n,a,r){let s=Ys(e,"x","avgPool","float32");se(nl(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=s,o=!1;3===s.rank&&(o=!0,i=il(s,[1,s.shape[0],s.shape[1],s.shape[2]])),se(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),sl("avgPool",a,r);let l={x:i},u={filterSize:t,strides:n,pad:a,dimRoundingMode:r},d=Ls.runKernel(ct,l,u);return d=So(d,s.dtype),o?il(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),ll=Qs({avgPool3d_:function(e,t,n,a,r,s="NDHWC"){let i=Ys(e,"x","avgPool3d","float32"),o=i,l=!1;4===i.rank&&(l=!0,o=il(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),se(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),se("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),se("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),sl("avgPool3d",a,r);let u={x:o},d={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s},p=Ls.runKernel(mt,u,d);return p=So(p,o.dtype),l?il(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),ul=Qs({concat_:function(e,t=0){se(e.length>=1,(()=>"Pass at least one tensor to concat"));let n=Zs(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Co(n[0]);let a=n,r={axis:t};return Ls.runKernel(Tt,a,r)}}),dl=Qs({matMul_:function(e,t,n=!1,a=!1){let r=Ys(e,"a","matMul"),s=Ys(t,"b","matMul");[r,s]=Es(r,s);let i={a:r,b:s},o={transposeA:n,transposeB:a};return Ls.runKernel(yt,i,o)}}),pl=Qs({sigmoid_:function(e){let t={x:Ys(e,"x","sigmoid","float32")};return Ls.runKernel(Pa,t)}}),hl=Qs({slice_:function(e,t,n){let a=Ys(e,"x","slice","string_or_numeric");if(0===a.rank)throw new Error("Slicing scalar is not possible");let r={x:a},s={begin:t,size:n};return Ls.runKernel($a,r,s)}}),cl=Qs({tanh_:function(e){let t={x:Ys(e,"x","tanh","float32")};return Ls.runKernel(nr,t)}}),fl=Qs({basicLSTMCell_:function(e,t,n,a,r,s){let i=Ys(e,"forgetBias","basicLSTMCell"),o=Ys(t,"lstmKernel","basicLSTMCell"),l=Ys(n,"lstmBias","basicLSTMCell"),u=Ys(a,"data","basicLSTMCell"),d=Ys(r,"c","basicLSTMCell"),p=Ys(s,"h","basicLSTMCell"),h=ul([u,p],1),c=dl(h,o),f=To(c,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],x=hl(f,[0,0],y),A=hl(f,[0,g],y),b=hl(f,[0,2*g],y),w=hl(f,[0,3*g],y),v=To($o(pl(x),cl(A)),$o(d,pl(To(i,b))));return[v,$o(cl(v),pl(w))]}}),ml=Qs({batchToSpaceND_:function(e,t,n){let a=Ys(e,"x","batchToSpaceND"),r=t.reduce(((e,t)=>e*t));se(a.rank>=1+t.length,(()=>`input rank is ${a.rank} but should be > than blockShape.length ${t.length}`)),se(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),se(a.shape[0]%r==0,(()=>`input tensor batch is ${a.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`));let s={x:a},i={blockShape:t,crops:n};return Ls.runKernel(xt,s,i)}});function gl(e){let t;return t=0===e.rank||1===e.rank?il(e,[1,1,1,e.size]):2===e.rank?il(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?il(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}var yl=Qs({batchNorm_:function(e,t,n,a,r,s){null==s&&(s=.001);let i,o,l=Ys(e,"x","batchNorm"),u=Ys(t,"mean","batchNorm"),d=Ys(n,"variance","batchNorm");null!=r&&(i=Ys(r,"scale","batchNorm")),null!=a&&(o=Ys(a,"offset","batchNorm")),se(u.rank===d.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),se(null==o||u.rank===o.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),se(null==i||u.rank===i.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let p={x:gl(l),scale:i,offset:o,mean:u,variance:d},h={varianceEpsilon:s},c=Ls.runKernel(pn,p,h);return il(c,l.shape)}}),xl=Qs({batchNorm2d_:function(e,t,n,a,r,s){let i,o,l=Ys(e,"x","batchNorm"),u=Ys(t,"mean","batchNorm"),d=Ys(n,"variance","batchNorm");return null!=r&&(i=Ys(r,"scale","batchNorm")),null!=a&&(o=Ys(a,"offset","batchNorm")),se(2===l.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${l.rank}.`)),se(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${u.rank}.`)),se(2===d.rank||1===d.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${d.rank}.`)),null!=i&&se(2===i.rank||1===i.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${i.rank}.`)),null!=o&&se(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${o.rank}.`)),yl(l,u,d,o,i,s)}}),Al=Qs({batchNorm3d_:function(e,t,n,a,r,s){let i,o,l=Ys(e,"x","batchNorm"),u=Ys(t,"mean","batchNorm"),d=Ys(n,"variance","batchNorm");return null!=r&&(i=Ys(r,"scale","batchNorm")),null!=a&&(o=Ys(a,"offset","batchNorm")),se(3===l.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${l.rank}.`)),se(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${u.rank}.`)),se(3===d.rank||1===d.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${d.rank}.`)),null!=i&&se(3===i.rank||1===i.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${i.rank}.`)),null!=o&&se(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${o.rank}.`)),yl(l,u,d,o,i,s)}}),bl=Qs({batchNorm4d_:function(e,t,n,a,r,s){let i,o,l=Ys(e,"x","batchNorm"),u=Ys(t,"mean","batchNorm"),d=Ys(n,"variance","batchNorm");return null!=r&&(i=Ys(r,"scale","batchNorm")),null!=a&&(o=Ys(a,"offset","batchNorm")),se(4===l.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${l.rank}.`)),se(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${u.rank}.`)),se(4===d.rank||1===d.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${d.rank}.`)),null!=i&&se(4===i.rank||1===i.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${i.rank}.`)),null!=o&&se(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${o.rank}.`)),yl(l,u,d,o,i,s)}}),wl=Qs({bincount_:function(e,t,n){let a=Ys(e,"x","bincount"),r=Ys(t,"weights","bincount");se("int32"===a.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${a.dtype}`)),se(n>=0,(()=>`size must be non-negative, but got ${n}.`)),se(r.size===a.size||0===r.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${a.shape}, weights shape: ${r.shape}.`));let s={x:a,weights:r},i={size:n};return Ls.runKernel(At,s,i)}}),vl=Qs({bitwiseAnd_:function(e,t){let n=Ys(e,"x","bitwiseAnd"),a=Ys(t,"y","bitwiseAnd");if(!pe(n.shape,a.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${a.shape}`);if("int32"!==n.dtype||"int32"!==a.dtype)throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${a.dtype}`);let r={a:n,b:a};return Ls.runKernel(bt,r)}}),kl=Qs({broadcastArgs_:function(e,t){let n=Ys(e,"s0","broadcastArgs","int32"),a=Ys(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==a.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${a.rank}`);let r={s0:n,s1:a};return Ls.runKernel(vt,r)}}),Il=Qs({broadcastTo_:function(e,t){let n=Ys(e,"broadcastTo","x"),a=n.shape;if(Be(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=il(n,e)}let r=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(r[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Co(n);let i={x:n},o={reps:s};return Ls.runKernel(ar,i,o)}}),Sl=Qs({ceil_:function(e){let t={x:Ys(e,"x","ceil","float32")};return Ls.runKernel(It,t)}});function Cl(e,t,n){Be(e);let a={shape:e,value:t,dtype:n=n||$e(t)};return Ls.runKernel(on,{},a)}var Nl=Qs({clipByValue_:function(e,t,n){let a=Ys(e,"x","clipByValue");if(se(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return Cl(a.shape,t,a.dtype);let r={x:a},s={clipValueMin:t,clipValueMax:n};return Ls.runKernel(St,r,s)}}),Tl=Qs({concat1d_:function(e){return ul(e,0)}}),Rl=Qs({concat2d_:function(e,t){return ul(e,t)}}),El=Qs({concat3d_:function(e,t){return ul(e,t)}}),$l=Qs({concat4d_:function(e,t){return ul(e,t)}}),Ml=Qs({conv2d_:function(e,t,n,a,r="NHWC",s=[1,1],i){let o=Ys(e,"x","conv2d","float32"),l=Ys(t,"filter","conv2d","float32"),u=o,d=!1;3===o.rank&&(d=!0,u=il(o,[1,o.shape[0],o.shape[1],o.shape[2]])),se(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),se(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),sl("conv2d",a,i);let p="NHWC"===r?u.shape[3]:u.shape[1];se(p===l.shape[2],(()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`)),se(nl(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),se(al(s),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),se(al(n),(()=>"Error in conv2D: Strides should be larger than 0."));let h={x:u,filter:l},c={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:i},f=Ls.runKernel(Rt,h,c);return d?il(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Fl=Qs({conv1d_:function(e,t,n,a,r="NWC",s=1,i){let o=Ys(e,"x","conv1d"),l=Ys(t,"filter","conv1d"),u=o,d=!1;2===o.rank&&(d=!0,u=il(o,[1,o.shape[0],o.shape[1]])),se(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),se(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),sl("conv1d",a,i),se(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),se(nl(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),se(al(s),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),se(al(n),(()=>"Error in conv1D: Stride should be larger than 0.")),se("NWC"===r,(()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`));let p=il(l,[1,l.shape[0],l.shape[1],l.shape[2]]),h=il(u,[u.shape[0],1,u.shape[1],u.shape[2]]),c=Ml(h,p,[1,n],a,"NHWC",[1,s],i);return il(c,d?[c.shape[2],c.shape[3]]:[c.shape[0],c.shape[2],c.shape[3]])}}),_l=Qs({conv2DBackpropInput_:function(e,t,n,a,r,s="NHWC",i){se(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=il(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),se(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),se(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),se(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));let d="NHWC"===s?o[3]:o[1],p="NHWC"===s?l.shape[3]:l.shape[1];se(d===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${d}) must match input depth for filter ${n.shape[2]}.`)),se(p===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[3]}.`)),sl("conv2dDerInput",r,i);let h={dy:l,filter:n},c={strides:a,pad:r,dataFormat:s,dimRoundingMode:i,inputShape:o},f=Ls.runKernel($t,h,c);return u?il(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Pl=Qs({conv2dTranspose_:function(e,t,n,a,r,s){let i=Ys(e,"x","conv2dTranspose"),o=Ys(t,"filter","conv2dTranspose");return _l(n,i,o,a,r,"NHWC",s)}}),Ol=Qs({conv3d_:function(e,t,n,a,r="NDHWC",s=[1,1,1]){let i=Ys(e,"x","conv3d"),o=Ys(t,"filter","conv3d"),l=i,u=!1;4===i.rank&&(u=!0,l=il(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),se(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),se(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),se(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),se(nl(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),se("NDHWC"===r,(()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`)),se(al(s),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),se(al(n),(()=>"Error in conv3D: Strides should be larger than 0."));let d={x:l,filter:o},p={strides:n,pad:a,dataFormat:r,dilations:s},h=Ls.runKernel(Mt,d,p);return u?il(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Dl=Qs({conv3DBackpropInput_:function(e,t,n,a,r){se(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=il(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);let l=s[4],u=i.shape[4];se(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),se(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),se(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),se(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),se(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));let d={dy:i,filter:n},p={pad:r,strides:a,inputShape:s},h=Ls.runKernel(_t,d,p);return o?il(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),zl=Qs({conv3dTranspose_:function(e,t,n,a,r){let s=Ys(e,"x","conv3dTranspose"),i=Ys(t,"filter","conv3dTranspose");return Dl(n,s,i,a,r)}}),Ll=Qs({cos_:function(e){let t={x:Ys(e,"x","cos","float32")};return Ls.runKernel(Pt,t)}}),Wl=Qs({cosh_:function(e){let t={x:Ys(e,"x","cosh","float32")};return Ls.runKernel(Ot,t)}}),Bl=Qs({cumprod_:function(e,t=0,n=!1,a=!1){let r={x:Ys(e,"x","cumprod")},s={axis:t,exclusive:n,reverse:a};return Ls.runKernel(Dt,r,s)}}),Vl=Qs({cumsum_:function(e,t=0,n=!1,a=!1){let r={x:Ys(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:a};return Ls.runKernel(zt,r,s)}}),Ul=Qs({denseBincount_:function(e,t,n,a=!1){let r=Ys(e,"x","denseBincount"),s=Ys(t,"weights","denseBincount");se("int32"===r.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`)),se(r.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`)),se(n>=0,(()=>`size must be non-negative, but got ${n}.`)),se(s.size===r.size||0===s.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${s.shape}.`));let i={x:r,weights:s},o={size:n,binaryOutput:a};return Ls.runKernel(Wt,i,o)}}),Gl=Qs({depthToSpace_:function(e,t,n="NHWC"){let a=Ys(e,"x","depthToSpace","float32"),r="NHWC"===n?a.shape[1]:a.shape[2],s="NHWC"===n?a.shape[2]:a.shape[3],i="NHWC"===n?a.shape[3]:a.shape[1];se(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),se(r*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${r} and ${t}  for depthToSpace with input shape\n    ${a.shape}`)),se(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${a.shape}`)),se(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${a.shape}`));let o={x:a},l={blockSize:t,dataFormat:n};return Ls.runKernel(Bt,o,l)}}),Hl=Qs({depthwiseConv2d_:function(e,t,n,a,r="NHWC",s=[1,1],i){let o=Ys(e,"x","depthwiseConv2d","float32"),l=Ys(t,"filter","depthwiseConv2d","float32"),u=o,d=!1;3===o.rank&&(d=!0,u=il(o,[1,o.shape[0],o.shape[1],o.shape[2]])),se(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),se(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`));let p="NHWC"===r?u.shape[3]:u.shape[1];se(p===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${p}) must match the inChannels dimension in filter ${l.shape[2]}.`)),sl("depthwiseConv2d",a,i);let h={x:u,filter:l},c={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:i},f=Ls.runKernel(Vt,h,c);return d?il(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),jl=Qs({diag_:function(e){let t={x:Ys(e,"x","diag")};return Ls.runKernel(Ht,t)}}),ql=Qs({dilation2d_:function(e,t,n,a,r=[1,1],s="NHWC"){let i=Ys(e,"x","dilation2d"),o=Ys(t,"filter","dilation2d");se(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),se(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),se("NHWC"===s,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`));let l=i,u=!1;3===i.rank&&(l=il(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0),se(l.shape[3]===o.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`));let d={x:l,filter:o},p={strides:n,pad:a,dilations:r},h=Ls.runKernel(jt,d,p);return u?il(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Xl={};function Kl(e,t){let n=e.length,a=[];for(let r=0;r<n;r++){let s=n-1-r,i=e[s]||1;(t[t.length-1-r]||1)>1&&1===i&&a.unshift(s)}return a}function Yl(e,t){let n=[];for(let a=0;a<t.length;a++){let r=e[e.length-a-1],s=t.length-a-1,i=t[s];(null==r||1===r&&i>1)&&n.unshift(s)}return n}function Zl(e,t){let n=Math.max(e.length,t.length),a=new Array(n);for(let r=0;r<n;r++){let s=e[e.length-r-1];null==s&&(s=1);let i=t[t.length-r-1];if(null==i&&(i=1),1===s)a[n-r-1]=i;else if(1===i)a[n-r-1]=s;else{if(s!==i)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);a[n-r-1]=s}}return a}C(Xl,{assertAndGetBroadcastShape:()=>Zl,getBroadcastDims:()=>Kl,getReductionAxes:()=>Yl});var Jl=Qs({equal_:function(e,t){let n=Ys(e,"a","equal","string_or_numeric"),a=Ys(t,"b","equal","string_or_numeric");[n,a]=Es(n,a),Zl(n.shape,a.shape);let r={a:n,b:a};return Ls.runKernel(tn,r)}}),Ql=Qs({where_:function(e,t,n){let a=Ys(t,"a","where"),r=Ys(n,"b","where"),s=Ys(e,"condition","where","bool"),i=Zl(Zl(s.shape,a.shape),r.shape),o={condition:Il(s,i),t:Il(a,i),e:Il(r,i)};return Ls.runKernel(Ra,o)}}),eu=Qs({zerosLike_:function(e){let t={x:Ys(e,"x","zerosLike")};return Ls.runKernel(pr,t)}}),tu=Qs({divNoNan_:function(e,t){let n=Ys(e,"a","div"),a=Ys(t,"b","div");[n,a]=Es(n,a);let r=Eo(n,a),s=eu(r),i=Jl(a,s);return Ql(i,s,r)}}),nu=Qs({dot_:function(e,t){let n=Ys(e,"t1","dot"),a=Ys(t,"t2","dot");se(!(1!==n.rank&&2!==n.rank||1!==a.rank&&2!==a.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${a.rank}.`));let r=1===n.rank?n.size:n.shape[1],s=1===a.rank?a.size:a.shape[0];if(se(r===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${s}.`)),1===n.rank&&1===a.rank){let e=il(n,[1,-1]),t=il(a,[-1,1]),r=dl(e,t);return il(r,[])}if(1===n.rank&&2===a.rank){let e=il(n,[1,-1]),t=il(a,[a.shape[0],a.shape[1]]),r=dl(e,t);return il(r,[r.size])}if(2===n.rank&&1===a.rank){let e=il(a,[-1,1]),t=dl(n,e);return il(t,[t.size])}{let e=il(a,[a.shape[0],a.shape[1]]);return dl(n,e)}}}),au=Qs({einsum_:function(e,...t){let n=t.map(((e,t)=>Ys(e,`tensors${t}`,"einsum"))),a={equation:e};return Ls.runKernel(Zt,n,a)}}),ru=Qs({elu_:function(e){let t={x:Ys(e,"x","elu","float32")};return Ls.runKernel(Jt,t)}}),su=Qs({ensureShape_:function(e,t){let n=Ys(e,"x","ensureShape","string_or_numeric");if(!de(n.shape,t))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${t}`);return e}}),iu=Qs({erf_:function(e){let t=Ys(e,"x","erf");se("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=So(t,"float32"));let n={x:t};return Ls.runKernel(en,n)}});function ou(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function lu(e,t,n){let a=e.length+t.length,r=[],s=0,i=0;for(let o=0;o<a;o++)-1===n.indexOf(o)?r.push(e[s++]):r.push(t[i++]);return r}function uu(e,t){let n=[],a=e.length;for(let r=0;r<a;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map((t=>e[t]))]}function du(e,t){return lu(e,t.map((e=>1)),t)}function pu(e,t,n){se(ou(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function hu(e,t){if(ou(e,t))return null;let n=[];for(let a=0;a<t;++a)-1===e.indexOf(a)&&n.push(a);return e.forEach((e=>n.push(e))),n}function cu(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function fu(e,t){let n=[];for(let a=t-e;a<t;++a)n.push(a);return n}var mu=Qs({max_:function(e,t=null,n=!1){let a={x:Ys(e,"x","max")},r={reductionIndices:t,keepDims:n};return Ls.runKernel(Dn,a,r)}}),gu=Qs({min_:function(e,t=null,n=!1){let a={x:Ys(e,"x","min")},r={axis:t,keepDims:n};return Ls.runKernel(Hn,a,r)}}),yu=Qs({pow_:function(e,t){let n=Ys(e,"base","pow"),a=Ys(t,"exp","pow");[n,a]=Es(n,a);let r={a:n,b:a};return Ls.runKernel(oa,r)}});function xu(e,t){if((Qr(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Qr(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ti(e,[],[],t)}var Au=Qs({sqrt_:function(e){let t={x:Ys(e,"x","sqrt","float32")};return Ls.runKernel(Da,t)}}),bu=Qs({square_:function(e){let t=Ys(e,"x","square");return Ls.runKernel("Square",{x:t},{})}}),wu=Qs({sum_:function(e,t=null,n=!1){let a=Ys(e,"x","sum");"bool"===a.dtype&&(a=So(a,"int32"));let r={x:a},s={axis:t,keepDims:n};return Ls.runKernel(za,r,s)}});function vu(e,t,n=null){if(0===e.rank)return Mo(e);if(1!==e.rank&&null===n)return vu(il(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return wu(Mo(e),n);if(t===1/0)return mu(Mo(e),n);if(t===-1/0)return gu(Mo(e),n);if("euclidean"===t||2===t)return Au(wu(yu(Mo(e),xu(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return mu(wu(Mo(e),n[0]),n[1]-1);if(t===1/0)return mu(wu(Mo(e),n[1]),n[0]);if(t===-1/0)return gu(wu(Mo(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Au(wu(bu(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var ku=Qs({norm_:function(e,t="euclidean",n=null,a=!1){let r=vu(e=Ys(e,"x","norm"),t,n),s=r.shape;if(a){let t=Ae(n,e.shape);s=du(r.shape,t)}return il(r,s)}}),Iu=Qs({euclideanNorm_:function(e,t=null,n=!1){return ku(e,"euclidean",t,n)}}),Su=Qs({exp_:function(e){let t={x:Ys(e,"x","exp")};return Ls.runKernel(nn,t)}}),Cu=Qs({expandDims_:function(e,t=0){let n=Ys(e,"x","expandDims","string_or_numeric");se(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));let a={input:n},r={dim:t};return Ls.runKernel(an,a,r)}}),Nu=Qs({expm1_:function(e){let t={x:Ys(e,"x","expm1")};return Ls.runKernel(rn,t)}}),Tu=Qs({tile_:function(e,t){let n=Ys(e,"x","tile","string_or_numeric");se(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));let a={x:n},r={reps:t};return Ls.runKernel(ar,a,r)}}),Ru=Qs({eye_:function(e,t,n,a="float32"){null==t&&(t=e);let r=Io([e,t],a),s=e<=t?e:t;for(let e=0;e<s;++e)r.set(1,e,e);let i=il(r.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return Tu(Cu(i,0),[n[0],1,1]);if(2===n.length)return Tu(Cu(Cu(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Tu(Cu(Cu(Cu(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),Eu=Qs({floor_:function(e){let t={x:Ys(e,"x","floor","float32")};return Ls.runKernel(un,t)}}),$u=Qs({gather_:function(e,t,n=0,a=0){let r={x:Ys(e,"x","gather"),indices:Ys(t,"indices","gather","int32")},s={axis:n,batchDims:a};return Ls.runKernel(hn,r,s)}}),Mu=Qs({greater_:function(e,t){let n=Ys(e,"a","greater","string_or_numeric"),a=Ys(t,"b","greater","string_or_numeric");[n,a]=Es(n,a),Zl(n.shape,a.shape);let r={a:n,b:a};return Ls.runKernel(fn,r)}}),Fu=Qs({greaterEqual_:function(e,t){let n=Ys(e,"a","greaterEqual","string_or_numeric"),a=Ys(t,"b","greaterEqual","string_or_numeric");[n,a]=Es(n,a),Zl(n.shape,a.shape);let r={a:n,b:a};return Ls.runKernel(mn,r)}}),_u=Qs({imag_:function(e){let t={input:Ys(e,"input","imag")};return Ls.runKernel(xn,t)}}),Pu=Qs({isFinite_:function(e){let t={x:Ys(e,"x","isFinite")};return Ls.runKernel(An,t)}}),Ou=Qs({isInf_:function(e){let t={x:Ys(e,"x","isInf")};return Ls.runKernel(bn,t)}}),Du=Qs({isNaN_:function(e){let t={x:Ys(e,"x","isNaN")};return Ls.runKernel(wn,t)}}),zu=Qs({leakyRelu_:function(e,t=.2){let n={x:Ys(e,"x","leakyRelu")},a={alpha:t};return Ls.runKernel(vn,n,a)}}),Lu=Qs({less_:function(e,t){let n=Ys(e,"a","less","string_or_numeric"),a=Ys(t,"b","less","string_or_numeric");[n,a]=Es(n,a),Zl(n.shape,a.shape);let r={a:n,b:a};return Ls.runKernel(kn,r)}}),Wu=Qs({lessEqual_:function(e,t){let n=Ys(e,"a","lessEqual","string_or_numeric"),a=Ys(t,"b","lessEqual","string_or_numeric");[n,a]=Es(n,a),Zl(n.shape,a.shape);let r={a:n,b:a};return Ls.runKernel(In,r)}});function Bu(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let a={start:e,stop:t,num:n};return Ls.runKernel(Sn,{},a)}var Vu=Qs({localResponseNormalization_:function(e,t=5,n=1,a=1,r=.5){let s=Ys(e,"x","localResponseNormalization");se(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),se(he(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=s,o=!1;3===s.rank&&(o=!0,i=il(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:i},u={depthRadius:t,bias:n,alpha:a,beta:r},d=Ls.runKernel(_n,l,u);return o?il(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Uu=Qs({log_:function(e){let t={x:Ys(e,"x","log","float32")};return Ls.runKernel(Cn,t)}}),Gu=Qs({log1p_:function(e){let t={x:Ys(e,"x","log1p")};return Ls.runKernel(Nn,t)}});function Hu(e){return se(Me(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{let a=Ys(t,"x","tf.grad","string_or_numeric"),r=null!=n?Ys(n,"dy","tf.grad"):null;return Ls.tidy((()=>{let{value:t,grads:n}=Ls.gradients((()=>e(a)),[a],r);return null!=r&&ie(t.shape,r.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Zu(n),n[0]}))}}function ju(e){return se(Me(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{se(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));let a=Zs(t,"args","tf.grads","string_or_numeric"),r=null!=n?Ys(n,"dy","tf.grads"):null;return Ls.tidy((()=>{let{value:t,grads:n}=Ls.gradients((()=>e(...a)),a,r);return null!=r&&ie(t.shape,r.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Zu(n),n}))}}function qu(e){return se(Me(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{se(t instanceof ms,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),se(null==n||n instanceof ms,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));let{grads:a,value:r}=Ls.gradients((()=>e(t)),[t],n);return Zu(a),{grad:a[0],value:r}}}function Xu(e){return se(Me(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{se(Array.isArray(t)&&t.every((e=>e instanceof ms)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),se(null==n||n instanceof ms,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));let a=Ls.gradients((()=>e(...t)),t,n);return null!=n&&ie(a.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Zu(a.grads),a}}function Ku(e,t){se(Me(e),(()=>"The f passed in variableGrads(f) must be a function")),se(null==t||Array.isArray(t)&&t.every((e=>e instanceof ys)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));let n=null!=t;if(!n){t=[];for(let e in Ls.registeredVariables)t.push(Ls.registeredVariables[e])}let a=n?t.filter((e=>!e.trainable)):null,r=t.length;se((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`));let{value:s,grads:i}=Ls.gradients(e,t,null,!0);se(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),se(0===s.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`));let o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=a&&a.forEach((e=>o[e.name]=null)),{value:s,grads:o}}function Yu(e){return Ls.customGrad(e)}function Zu(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}var Ju=Qs({neg_:function(e){let t={x:Ys(e,"x","neg")};return Ls.runKernel(Zn,t)}}),Qu=Qs({softplus_:function(e){let t={x:Ys(e,"x","softplus")};return Ls.runKernel(Oa,t)}}),ed=Qs({logSigmoid_:function(e){let t=Ys(e,"x","logSigmoid");return Yu((e=>({value:Ju(Qu(Ju(e))),gradFunc:t=>$o(t,pl(Ju(e)))})))(t)}}),td=Qs({sub_:function(e,t){let n=Ys(e,"a","sub"),a=Ys(t,"b","sub");[n,a]=Es(n,a);let r={a:n,b:a};return Ls.runKernel(er,r)}}),nd=Qs({logSoftmax_:function(e,t=-1){let n=Ys(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Yu(((e,n)=>{let a=mu(e,t,!0),r=td(e,a),s=td(So(r,"float32"),Uu(wu(Su(r),t,!0)));return n([s]),{value:s,gradFunc:(e,n)=>{let[a]=n,r=Su(a);return td(e,$o(wu(e,t,!0),r))}}}))(n)}}),ad=Qs({logSumExp_:function(e,t=null,n=!1){let a=Ys(e,"x","logSumExp"),r=Ae(t,a.shape),s=mu(a,r,!0),i=td(a,s),o=Su(i),l=wu(o,r),u=Uu(l),d=To(il(s,u.shape),u);if(n){let e=du(d.shape,r);return il(d,e)}return d}}),rd=Qs({logicalAnd_:function(e,t){let n=Ys(e,"a","logicalAnd","bool"),a=Ys(t,"b","logicalAnd","bool");Zl(n.shape,a.shape);let r={a:n,b:a};return Ls.runKernel(Tn,r)}}),sd=Qs({logicalNot_:function(e){let t={x:Ys(e,"x","logicalNot","bool")};return Ls.runKernel(Rn,t)}}),id=Qs({logicalOr_:function(e,t){let n=Ys(e,"a","logicalOr","bool"),a=Ys(t,"b","logicalOr","bool");Zl(n.shape,a.shape);let r={a:n,b:a};return Ls.runKernel(En,r)}}),od=Qs({logicalXor_:function(e,t){let n=Ys(e,"a","logicalXor","bool"),a=Ys(t,"b","logicalXor","bool");return Zl(n.shape,a.shape),rd(id(e,t),sd(rd(e,t)))}}),ld=2147483648,ud=Qs({searchSorted_:function(e,t,n="left"){let a=Ys(e,"sortedSequence","searchSorted"),r=Ys(t,"values","searchSorted"),s=a.shape[a.shape.length-1],i=r.shape[r.shape.length-1],o=il(a,[-1,s]),l=il(r,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(le(l.shape)>=ld)throw new Error(`values tensor size must less than ${ld}`);if(o.shape[1]>=ld)throw new Error(`trailing dim_size must less than ${ld} for int32 output type, was ${o.shape[1]}`);let u={sortedSequence:o,values:l},d={side:n};return Ls.runKernel(Ta,u,d)}});function dd(e,t){return ud(e,t,"left")}var pd=Qs({maxPool_:function(e,t,n,a,r){let s=Ys(e,"x","maxPool"),i=s,o=!1;3===s.rank&&(o=!0,i=il(s,[1,s.shape[0],s.shape[1],s.shape[2]])),se(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),se(nl(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),sl("maxPool",a,r);let l={x:i},u={filterSize:t,strides:n,pad:a,dimRoundingMode:r},d=Ls.runKernel(Ln,l,u);return o?il(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),hd=Qs({maxPool3d_:function(e,t=[1,1,1],n,a,r,s="NDHWC"){let i=Ys(e,"x","maxPool3d"),o=i,l=!1;4===i.rank&&(l=!0,o=il(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),se(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),se("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),sl("maxPool3d",a,r);let u={x:o},d={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s},p=Ls.runKernel(Bn,u,d);return l?il(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),cd=Qs({maxPoolWithArgmax_:function(e,t,n,a,r=!1){let s={x:Ys(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:a,includeBatchInIndex:r},o=Ls.runKernel(Un,s,i);return{result:o[0],indexes:o[1]}}}),fd=Qs({maximum_:function(e,t){let n=Ys(e,"a","maximum"),a=Ys(t,"b","maximum");[n,a]=Es(n,a),"bool"===n.dtype&&(n=So(n,"int32"),a=So(a,"int32")),Zl(n.shape,a.shape);let r={a:n,b:a};return Ls.runKernel(zn,r)}}),md=Qs({mean_:function(e,t=null,n=!1){let a={x:Ys(e,"x","mean")},r={axis:t,keepDims:n};return Ls.runKernel(Gn,a,r)}});function gd(e,t="float32"){if(Be(e),"complex64"===t){let t=gd(e,"float32"),n=gd(e,"float32");return ei(t,n)}let n=Le(le(e),t);return Ls.makeTensor(n,e,t)}function yd(e,t="float32"){if(Be(e),"complex64"===t){let t=yd(e,"float32"),n=gd(e,"float32");return ei(t,n)}let n=ze(le(e),t);return Ls.makeTensor(n,e,t)}function xd(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let a=Ys(e,"x","meshgrid",e instanceof ms?e.dtype:"float32");if(void 0===t)return[a];let r=Ys(t,"y","meshgrid",t instanceof ms?t.dtype:"float32"),s=le(a.shape),i=le(r.shape);return"xy"===n?(a=il(a,[1,-1]),r=il(r,[-1,1]),[dl(yd([i,1],a.dtype),a),dl(r,yd([1,s],r.dtype))]):(a=il(a,[-1,1]),r=il(r,[1,-1]),[dl(a,yd([1,i],a.dtype)),dl(yd([s,1],r.dtype),r)])}var Ad=Qs({minimum_:function(e,t){let n=Ys(e,"a","minimum"),a=Ys(t,"b","minimum");[n,a]=Es(n,a),"bool"===n.dtype&&(n=So(n,"int32"),a=So(a,"int32")),Zl(n.shape,a.shape);let r={a:n,b:a};return Ls.runKernel(jn,r)}}),bd=Qs({mirrorPad_:function(e,t,n){se("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));let a=Ys(e,"x","mirrorPad");if(0===a.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");se(t.length===a.rank,(()=>`Padding doesn't match input. Must be ${a.rank}. Got ${t.length}.`));let r="reflect"===n?1:0;for(let e=0;e<a.rank;e++)se(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),se(t[e][0]>=0&&t[e][0]<=a.shape[e]-r&&t[e][1]>=0&&t[e][1]<=a.shape[e]-r,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${a.shape[e]-r} or less than 0 for input of shape ${a.shape}`));let s={paddings:t,mode:n},i={x:a};return Ls.runKernel(qn,i,s)}}),wd=Qs({mod_:function(e,t){let n=Ys(e,"a","mod"),a=Ys(t,"b","mod");[n,a]=Es(n,a);let r={a:n,b:a};return Ls.runKernel(Xn,r)}}),vd=Qs({moments_:function(e,t=null,n=!1){let a=Ae(t,(e=Ys(e,"x","moments")).shape),r=md(e,a,n),s=r.shape;n||(s=du(r.shape,a));let i=bu(td(So(e,"float32"),il(r,s)));return{mean:r,variance:md(i,a,n)}}}),kd=Qs({multiRNNCell_:function(e,t,n,a){let r=Ys(t,"data","multiRNNCell"),s=Zs(n,"c","multiRNNCell"),i=Zs(a,"h","multiRNNCell"),o=r,l=[];for(let t=0;t<e.length;t++){let n=e[t](o,s[t],i[t]);l.push(n[0]),l.push(n[1]),o=n[1]}let u=[],d=[];for(let e=0;e<l.length;e+=2)u.push(l[e]),d.push(l[e+1]);return[u,d]}}),Id=Qs({multinomial_:function(e,t,n,a=!1){let r=Ys(e,"logits","multinomial"),s=r.size,i=r.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();let o={logits:1===i?il(r,[1,-1]):r},l={numSamples:t,seed:n,normalized:a},u=Ls.runKernel(Kn,o,l);return 1===i?il(u,[u.size]):u}}),Sd=Qs({notEqual_:function(e,t){let n=Ys(e,"a","notEqual","string_or_numeric"),a=Ys(t,"b","notEqual","string_or_numeric");[n,a]=Es(n,a),Zl(n.shape,a.shape);let r={a:n,b:a};return Ls.runKernel(Jn,r)}}),Cd=Qs({oneHot_:function(e,t,n=1,a=0,r="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let s={indices:Ys(e,"indices","oneHot","int32")},i={dtype:r,depth:t,onValue:n,offValue:a};return Ls.runKernel(aa,s,i)}}),Nd=Qs({onesLike_:function(e){let t={x:Ys(e,"x","onesLike")};return Ls.runKernel(na,t)}}),Td=Qs({outerProduct_:function(e,t){let n=Ys(e,"v1","outerProduct"),a=Ys(t,"v2","outerProduct");se(1===n.rank&&1===a.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${a.rank}.`));let r=il(n,[-1,1]),s=il(a,[1,-1]);return dl(r,s)}}),Rd=Qs({pad_:function(e,t,n=0){let a=Ys(e,"x","pad");if(0===a.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let r={paddings:t,constantValue:n},s={x:a};return Ls.runKernel(sa,s,r)}}),Ed=Qs({pad1d_:function(e,t,n=0){return se(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),Rd(e,[t],n)}}),$d=Qs({pad2d_:function(e,t,n=0){return se(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Rd(e,t,n)}}),Md=Qs({pad3d_:function(e,t,n=0){return se(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Rd(e,t,n)}}),Fd=Qs({pad4d_:function(e,t,n=0){return se(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Rd(e,t,n)}}),_d=Qs({spaceToBatchND_:function(e,t,n){let a=Ys(e,"x","spaceToBatchND");se(a.rank>=1+t.length,(()=>`input rank ${a.rank} should be > than [blockShape] ${t.length}`)),se(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),se(a.shape.reduce(((e,a,r)=>r>0&&r<=t.length?e&&(a+n[r-1][0]+n[r-1][1])%t[r-1]==0:e),!0),(()=>`input spatial dimensions ${a.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));let r={x:a},s={blockShape:t,paddings:n};return Ls.runKernel(La,r,s)}}),Pd=Qs({pool_:function(e,t,n,a,r,s,i){null==r&&(r=[1,1]),null==s&&(s=1),0===a&&(a="valid");let o=Ys(e,"x","maxPool"),l=o,u=!1;3===o.rank&&(u=!0,l=il(o,[1,o.shape[0],o.shape[1],o.shape[2]])),se(nl(s,r),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${r}'`));let d,p=jo(l.shape,t,s,r,a),h=[p.dilationHeight,p.dilationWidth];d="same"===a?function(e,t){let n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),a=n.map((e=>Math.floor(e/2))),r=n.map(((e,t)=>e-a[t]));return n.map(((e,t)=>[a[t],r[t]]))}([p.filterHeight,p.filterWidth],h):[[0,0],[0,0]];let c=1===h[0]&&1===h[1],[f,m]=function(e,t,n){let a=n.map((e=>e[0])),r=n.map((e=>e[1])),s=e.concat(a,r),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=r.map(((e,t)=>e+i[t])),l=t.map(((e,t)=>[a[t],o[t]])),u=t.map(((e,t)=>[0,i[t]]));return[l,u]}([p.inHeight,p.inWidth],h,d),g=c?a:"valid",y=c?l:_d(l,h,f),x=("avg"===n?()=>ol(y,t,s,g,i):()=>pd(y,t,s,g,i))(),A=c?x:ml(x,h,m);return u?il(A,[A.shape[1],A.shape[2],A.shape[3]]):A}}),Od=Qs({prelu_:function(e,t){let n={x:Ys(e,"x","prelu"),alpha:Ys(t,"alpha","prelu")};return Ls.runKernel(la,n)}}),Dd=Qs({prod_:function(e,t=null,n=!1){let a=Ys(e,"x","prod");"bool"===a.dtype&&(a=So(a,"int32"));let r={x:a},s={axis:t,keepDims:n};return Ls.runKernel(ua,r,s)}}),zd=Qs({raggedGather_:function(e,t,n,a){let r={paramsNestedSplits:e.map(((e,t)=>Ys(e,`tensors${t}`,"raggedGather","int32"))),paramsDenseValues:Ys(t,"paramsDenseValues","raggedGather"),indices:Ys(n,"indices","raggedGather","int32")},s={outputRaggedRank:a},i=Ls.runKernel(da,r,s);return{outputNestedSplits:i.slice(0,i.length-1),outputDenseValues:i[i.length-1]}}}),Ld=Qs({raggedRange_:function(e,t,n){let a=Ys(e,"starts","raggedRange"),r={starts:a,limits:Ys(t,"limits","raggedRange",a.dtype),deltas:Ys(n,"deltas","raggedRange",a.dtype)},s=Ls.runKernel(pa,r);return{rtNestedSplits:s[0],rtDenseValues:s[1]}}}),Wd=Qs({raggedTensorToTensor_:function(e,t,n,a,r){let s=Ys(e,"shape","raggedTensorToTensor","int32"),i=Ys(t,"values","raggedTensorToTensor"),o={shape:s,values:i,defaultValue:Ys(n,"defaultValue","raggedTensorToTensor",i.dtype),rowPartitionTensors:a.map(((e,t)=>Ys(e,`tensors${t}`,"raggedTensorToTensor","int32")))},l={rowPartitionTypes:r};return Ls.runKernel(ha,o,l)}}),Bd=Qs({rand_:function(e,t,n){Be(e);let a=le(e),r=null;if(null==n||"float32"===n)r=new Float32Array(a);else if("int32"===n)r=new Int32Array(a);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);r=new Uint8Array(a)}for(let e=0;e<a;e++)r[e]=t();return Ls.makeTensor(r,e,n)}}),Vd=N(L()),Ud={};C(Ud,{TEST_EPSILON_FLOAT16:()=>Hd,createVideoElement:()=>np,encodeStrings:()=>tp,expectArrayBuffersEqual:()=>ep,expectArraysClose:()=>jd,expectArraysEqual:()=>Yd,expectNumbersClose:()=>Zd,expectPromiseToFail:()=>Kd,expectValuesInRange:()=>Qd,play:()=>ap,testEpsilon:()=>qd});var Gd=.001,Hd=.1;function jd(e,t,n){return null==n&&(n=qd()),Xd(e,t,((e,t)=>Jd(e,t,n)))}function qd(){return 32===Ls.backend.floatPrecision()?Gd:Hd}function Xd(e,t,n){let a=!0;if((Qr(e)||Qr(t))&&(a=!1),Qr(e)&&Qr(t)&&(a=!0),a){let n=e.constructor.name,a=t.constructor.name;if(n!==a)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${a}`)}if(Array.isArray(e)&&Array.isArray(t)){let n=qs(e),a=qs(t);if(!pe(n,a))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${a}]`)}let r=Qr(e)?e:es(e),s=Qr(t)?t:es(t);if(r.length!==s.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${s.length}.\nActual:   ${r}.\nExpected: ${s}.`);for(let e=0;e<s.length;++e){let t=r[e],a=s[e];if(!n(t,a))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${a}.\nActual:   ${r}.\nExpected: ${s}.`)}"undefined"!=typeof expect&&expect().nothing()}function Kd(e,t){e().then((()=>t.fail()),(()=>t())),"undefined"!=typeof expect&&expect().nothing()}function Yd(e,t){let n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return Te(e)||Te(e[0])||Te(t)||Te(t[0])?Xd(e,n,((e,t)=>e==t)):Xd(e,t,((e,t)=>Jd(e,t,0)))}function Zd(e,t,n){if(null==n&&(n=qd()),!Jd(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);"undefined"!=typeof expect&&expect().nothing()}function Jd(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Qd(e,t,n){for(let a=0;a<e.length;a++)if(e[a]<t||e[a]>n)throw new Error(`Value out of range:${e[a]} low: ${t}, high: ${n}`)}function ep(e,t){let n=new Float32Array(e),a=new Float32Array(t);if(n.length!==a.length)throw new Error(`Expected ArrayBuffer to be of length ${a.length}, but it was ${n.length}`);for(let e=0;e<a.length;e++)if(n[e]!==a[e])throw new Error(`Expected ArrayBuffer value at ${e} to be ${a[e]} but got ${n[e]} instead`)}function tp(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?tp(n):e[t]=Zr(n)}return e}function np(e){let t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise((e=>{t.addEventListener("loadeddata",(n=>e(t))),t.load()}))}async function ap(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise((t=>{e.requestVideoFrameCallback(t)}))}var rp=class{constructor(e,t,n,a,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);let s=r||Math.random();this.random=Vd.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){let e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let a,r,s;do{a=2*this.random()-1,r=2*this.random()-1,s=a*a+r*r}while(s>=1||0===s);let i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*a*i,t=this.mean+this.stdDev*r*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},sp=class{constructor(e,t,n,a){this.alpha=e,this.beta=1/t,this.dtype=n;let r=a||Math.random();this.randu=Vd.alea(r.toString()),this.randn=new rp(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,a,r,s;for(;;){do{a=this.randn.nextValue(),s=1+this.c*a}while(s<=0);if(s*=s*s,e=a*a,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),r=this.randu(),r<t||Math.log(r)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}},ip=class{constructor(e=0,t=1,n,a){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"==typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Vd.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}},op=Qs({randomGamma_:function(e,t,n=1,a="float32",r){if(Be(e),null==n&&(n=1),null==a&&(a="float32"),"float32"!==a&&"int32"!==a)throw new Error(`Unsupported data type ${a}`);let s=new sp(t,n,a,r),i=Io(e,a);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),lp=Qs({randomNormal_:function(e,t=0,n=1,a,r){if(Be(e),null!=a&&"bool"===a)throw new Error(`Unsupported data type ${a}`);let s=new rp(t,n,a,!1,r),i=Io(e,a);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),up=Qs({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return lp(e,0,1,t,n)}}),dp=Qs({randomUniform_:function(e,t=0,n=1,a="float32",r){Be(e);let s=Io(e,a),i=new ip(t,n,null,r);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}}),pp=Qs({randomUniformInt_:function(e,t,n,a){return dp(e,t,n,"int32",a)}});function hp(e,t,n=1,a="float32"){if(0===n)throw new Error("Cannot have a step of zero");let r={start:e,stop:t,step:n,dtype:a};return Ls.runKernel(ca,{},r)}var cp=Qs({real_:function(e){let t={input:Ys(e,"input","real")};return Ls.runKernel(fa,t)}}),fp=Qs({reciprocal_:function(e){let t={x:Ys(e,"x","reciprocal")};return Ls.runKernel(ma,t)}}),mp=Qs({relu_:function(e){let t={x:Ys(e,"x","relu")};return Ls.runKernel(ga,t)}}),gp=Qs({relu6_:function(e){let t={x:Ys(e,"x","relu6")};return Ls.runKernel(va,t)}}),yp=Qs({reverse_:function(e,t){let n={x:Ys(e,"x","reverse")},a={dims:t};return Ls.runKernel(ka,n,a)}}),xp=Qs({reverse1d_:function(e){let t=Ys(e,"x","reverse");return se(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),yp(t,0)}}),Ap=Qs({reverse2d_:function(e,t){let n=Ys(e,"x","reverse");return se(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),yp(n,t)}}),bp=Qs({reverse3d_:function(e,t){let n=Ys(e,"x","reverse");return se(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),yp(n,t)}}),wp=Qs({reverse4d_:function(e,t){let n=Ys(e,"x","reverse");return se(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),yp(n,t)}}),vp=Qs({round_:function(e){let t={x:Ys(e,"x","round")};return Ls.runKernel(Ia,t)}}),kp=Qs({rsqrt_:function(e){let t={x:Ys(e,"x","rsqrt","float32")};return Ls.runKernel(Sa,t)}}),Ip=Qs({selu_:function(e){let t={x:Ys(e,"x","selu")};return Ls.runKernel(Ea,t)}}),Sp=Qs({separableConv2d_:function(e,t,n,a,r,s=[1,1],i="NHWC"){let o=Ys(e,"x","separableConv2d"),l=Ys(t,"depthwiseFilter","separableConv2d"),u=Ys(n,"pointwiseFilter","separableConv2d"),d=o,p=!1;if(3===o.rank&&(p=!0,d=il(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");se(4===d.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${d.rank}.`)),se(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),se(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),se(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),se(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));let h=l.shape[2],c=l.shape[3];se(u.shape[2]===h*c,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*c}, but got ${u.shape[2]}.`));let f=Hl(d,l,a,r,i,s),m=Ml(f,u,1,"valid",i);return p?il(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Cp=async function(e,t){let n=Ys(e,"x","setdiff1d"),a=Ys(t,"y","setdiff1d");se(n.dtype===a.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${a.dtype}).`)),se(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),se(1===a.rank,(()=>`y should be 1D tensor, but got y (${a.shape}).`));let r=await n.data(),s=await a.data(),i=new Set(s),o=0;for(let e=0;e<r.length;e++)i.has(r[e])||o++;let l=new hs([o],n.dtype),u=new hs([o],"int32");for(let e=0,t=0;e<r.length;e++)i.has(r[e])||(l.values[t]=r[e],u.values[t]=e,t++);return[l.toTensor(),u.toTensor()]},Np=Qs({sign_:function(e){let t={x:Ys(e,"x","sign")};return Ls.runKernel(_a,t)}}),Tp=Qs({sin_:function(e){let t={x:Ys(e,"x","sin","float32")};return Ls.runKernel(Ma,t)}}),Rp=Qs({sinh_:function(e){let t={x:Ys(e,"x","sinh")};return Ls.runKernel(Fa,t)}}),Ep=Qs({slice1d_:function(e,t,n){let a=Ys(e,"x","slice1d");return se(1===a.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${a.rank} tensor`)),hl(a,[t],[n])}}),$p=Qs({slice2d_:function(e,t,n){let a=Ys(e,"x","slice2d");return se(2===a.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${a.rank} tensor`)),hl(a,t,n)}}),Mp=Qs({slice3d_:function(e,t,n){let a=Ys(e,"x","slice3d");return se(3===a.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${a.rank} tensor`)),hl(a,t,n)}}),Fp=Qs({slice4d_:function(e,t,n){let a=Ys(e,"x","slice4d");return se(4===a.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${a.rank} tensor`)),hl(a,t,n)}}),_p=Qs({softmax_:function(e,t=-1){let n=Ys(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let a={logits:n},r={dim:t};return Ls.runKernel(Ba,a,r)}}),Pp=Qs({fft_:function(e){se("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));let t={input:e};return Ls.runKernel(sn,t)}}),Op=Qs({ifft_:function(e){se("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));let t={input:e};return Ls.runKernel(yn,t)}}),Dp=Qs({irfft_:function(e){let t,n=e.shape[e.shape.length-1],a=e.size/n;if(n<=2){let r=il(e,[a,n]);t=Op(r)}else{let r=[a,2*(n-1)],s=il(cp(e),[a,n]),i=il(_u(e),[a,n]),o=yp(hl(s,[0,1],[a,n-2]),1),l=$o(yp(hl(i,[0,1],[a,n-2]),1),xu(-1)),u=ul([s,o],1),d=ul([i,l],1),p=il(ei(u,d),[r[0],r[1]]);t=Op(p)}if(t=cp(t),3===e.rank&&0!==e.shape[0]){let n=t,a=e.shape[0];t=il(t,[a,t.shape[0]/a,t.shape[1]]),n.dispose()}return t}}),zp=Qs({split_:function(e,t,n=0){let a={x:Ys(e,"x","split")},r={numOrSizeSplits:t,axis:n};return Ls.runKernel(Wa,a,r)}}),Lp=Qs({rfft_:function(e,t){se("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n,a=e.shape[e.shape.length-1],r=e.size/a;if(null!=t&&t<a){let r=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,n=hl(e,r,s),a=t}else if(null!=t&&t>a){let r=e.shape.map((e=>e));r[e.shape.length-1]=t-a,n=ul([e,gd(r)],e.shape.length-1),a=t}else n=e;let s=eu(n),i=il(ei(n,s),[r,a]),o=Pp(i),l=Math.floor(a/2)+1,u=cp(o),d=_u(o),p=zp(u,[l,a-l],u.shape.length-1),h=zp(d,[l,a-l],d.shape.length-1),c=n.shape.slice();return c[n.shape.length-1]=l,il(ei(p[0],h[0]),c)}}),Wp=Qs({squaredDifference_:function(e,t){let n=Ys(e,"a","squaredDifference"),a=Ys(t,"b","squaredDifference");[n,a]=Es(n,a),Zl(n.shape,a.shape);let r={a:n,b:a};return Ls.runKernel(qa,r,{})}}),Bp=Qs({squeeze_:function(e,t){let n=Ys(e,"x","squeeze","string_or_numeric");return il(n,be(n.shape,t).newShape)}}),Vp=Qs({stack_:function(e,t=0){let n=Zs(e,"tensors","stack","string_or_numeric");se(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&se(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));let a=n,r={axis:t};return Ls.runKernel(ra,a,r)}}),Up=Qs({step_:function(e,t=0){let n={x:Ys(e,"x","step")},a={alpha:t};return Ls.runKernel(hr,n,a)}}),Gp=Qs({stridedSlice_:function(e,t,n,a,r=0,s=0,i=0,o=0,l=0){let u={x:Ys(e,"x","stridedSlice","string_or_numeric")},d={begin:t,end:n,strides:a,beginMask:r,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return Ls.runKernel(Ya,u,d)}}),Hp=Qs({tan_:function(e){let t={x:Ys(e,"x","tan","float32")};return Ls.runKernel(tr,t)}});function jp(e,t){oe(e);let n=qs(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ti(e,null,n,t)}function qp(e,t,n){if(oe(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");let a=qs(e,n);if(2!==a.length&&1!==a.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ti(e,t,a,n)}function Xp(e,t,n){if(oe(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");let a=qs(e,n);if(3!==a.length&&1!==a.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return ti(e,t,a,n)}function Kp(e,t,n){if(oe(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");let a=qs(e,n);if(4!==a.length&&1!==a.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return ti(e,t,a,n)}function Yp(e,t,n){if(oe(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");let a=qs(e,n);if(5!==a.length&&1!==a.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return ti(e,t,a,n)}function Zp(e,t,n){if(oe(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");let a=qs(e,n);if(6!==a.length&&1!==a.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return ti(e,t=t||a,a,n)}var Jp={};function Qp(e,t,n){let a=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${a}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(s+` update.rank < ${r}. `);if(e.length<a+(n.rank-r))throw new Error(s+` Output shape length < ${a+(n.rank-r)}`);if(n.rank!==r+e.length-a)throw new Error(s+" update.rank != "+(r+e.length-a));for(let e=0;e<r;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-r;++t)if(n.shape[t+r]!==e[t+a])throw new Error(s+` updates.shape[${t+r}] (${n.shape[t+r]}) != shape[${t+r}] (${e[t+r]})`)}function eh(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Qp(n,t,e)}function th(e,t,n){let a=t.shape.length,r=a>1?t.shape[a-1]:1,s=n.length,i=1;for(let e=r;e<s;++e)i*=n[e];let o=r<1?1:r;return{sliceRank:r,numUpdates:le(t.shape)/o,sliceSize:i,strides:[..._e(n.slice(0,r)),1],outputSize:le(n)}}C(Jp,{calculateShapes:()=>th,validateInput:()=>eh,validateUpdateShape:()=>Qp});var nh=Qs({tensorScatterUpdate_:function(e,t,n){let a=Ys(e,"tensor","tensorScatterupdate"),r=Ys(t,"indices","tensorScatterupdate","int32"),s=Ys(n,"updates","tensorScatterupdate");if(eh(s,r,a.shape),a.dtype!==s.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${a.dtype} and ${s.dtype}.`);let i={tensor:a,indices:r,updates:s};return Ls.runKernel(Na,i,{})}}),ah=Qs({topk_:function(e,t=1,n=!0){let a=Ys(e,"x","topk");if(0===a.rank)throw new Error("topk() expects the input to be of rank 1 or higher");let r=a.shape[a.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);let s={x:a},i={k:t,sorted:n},[o,l]=Ls.runKernel(rr,s,i);return{values:o,indices:l}}}),rh=Qs({truncatedNormal_:function(e,t=0,n=1,a,r){if(Be(e),null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");let s=new rp(t,n,a,!0,r),i=Io(e,a);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),sh=Qs({unique_:function(e,t=0){let n=Ys(e,"x","unique","string_or_numeric");se(n.rank>0,(()=>"The input tensor must be at least 1D"));let a={x:n},r={axis:t},[s,i]=Ls.runKernel(or,a,r);return{values:s,indices:i}}}),ih=Qs({unsortedSegmentSum_:function(e,t,n){let a=Ys(e,"x","unsortedSegmentSum"),r=Ys(t,"segmentIds","unsortedSegmentSum","int32");se(he(n),(()=>"numSegments must be of dtype int"));let s={x:a,segmentIds:r},i={numSegments:n};return Ls.runKernel(ur,s,i)}}),oh=Qs({unstack_:function(e,t=0){let n=Ys(e,"x","unstack","string_or_numeric");se(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));let a={value:n},r={axis:t};return Ls.runKernel(lr,a,r)}});function lh(e,t){return ud(e,t,"right")}function uh(e,t=!0,n,a){return Ls.makeVariable(e,t,n,a)}function dh(e,t){let n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);let a=Io(e,"int32"),r=Io([n.length,e.length],"int32");for(let t=0;t<n.length;t++){let s=a.indexToLoc(n[t]),i=t*e.length;r.values.set(s,i)}return r.toTensor()}var ph=async function(e){let t=Ys(e,"condition","whereAsync","bool"),n=await t.data(),a=dh(t.shape,n);return e!==t&&t.dispose(),a},hh=async function(e,t,n){let a=Ys(e,"tensor","boolMask"),r=Ys(t,"mask","boolMask","bool"),s=null==n?0:n,i=r.rank,o=a.shape;se(i>0,(()=>"mask cannot be scalar")),ie(o.slice(s,s+i),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let e=s;e<s+i;e++)l*=o[e];let u=o.slice(0,s).concat([l],o.slice(s+i)),d=il(a,u),p=il(r,[-1]),h=await ph(p),c=Bp(h,[1]),f=$u(d,c,s);return e!==a&&a.dispose(),t!==r&&r.dispose(),c.dispose(),d.dispose(),p.dispose(),h.dispose(),f},ch=Qs({transpose_:function(e,t,n){let a=Ys(e,"x","transpose");if(null==t&&(t=a.shape.map(((e,t)=>t)).reverse()),se(a.rank===t.length,(()=>`Error in transpose: rank of input ${a.rank} must match length of perm ${t}.`)),t.forEach((e=>{se(e>=0&&e<a.rank,(()=>`All entries in 'perm' must be between 0 and ${a.rank-1} but got ${t}`))})),a.rank<=1)return a.clone();let r={x:a},s={perm:t};return"complex64"===a.dtype?ci((()=>{let e=cp(a),t=_u(a);return e=Ls.runKernel(ir,{x:e},s),t=Ls.runKernel(ir,{x:t},s),n&&(t=Ju(t)),ei(e,t)})):Ls.runKernel(ir,r,s)}}),fh=Qs({movingAverage_:function(e,t,n,a,r=!0){let s=Ys(e,"v","movingAverage"),i=Ys(t,"x","movingAverage"),o=Ys(n,"decay","movingAverage");$s(s,i),se(pe(s.shape,i.shape),(()=>"Shape mismatch in v and x"));let l=xu(1),u=td(l,o),d=$o(td(i,s),u);if(r){se(null!=a,(()=>"When using zeroDebias: true, step is required."));let e=Ys(a,"step","movingAverage");d=Eo(d,td(l,yu(o,e)))}return To(s,d)}}),mh=Qs({scatterND_:function(e,t,n){Be(n);let a=Ys(e,"indices","scatterND","int32"),r=Ys(t,"updates","scatterND");eh(r,a,n);let s={indices:a,updates:r},i={shape:n};return Ls.runKernel(Ca,s,i)}}),gh=Qs({sparseToDense_:function(e,t,n,a=0){Be(n);let r=Ys(e,"sparseIndices","sparseToDense","int32"),s=Ys(t,"sparseValues","sparseToDense","string_or_numeric"),i=Ys(a,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,a){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let r=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);let i=t.size;if(0!==t.rank&&(1!==t.rank||i!==r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==a.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(r,s,n,i);let o={sparseIndices:r,sparseValues:s,defaultValue:i},l={outputShape:n};return Ls.runKernel(ja,o,l)}}),yh=Qs({gatherND_:function(e,t){let n=Ys(t,"indices","gatherND","int32"),a={params:Ys(e,"x","gatherND","string_or_numeric"),indices:n};return Ls.runKernel(cn,a)}}),xh=Qs({dropout_:function(e,t,n,a){let r=Ys(e,"x","dropout");if(se("float32"===r.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`)),se(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof ms?r.clone():r;let s=function(e,t){if(null==t)return e.shape.slice();if(pe(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let a=0;a<e.shape.length;a++)null==t[a]&&null!=e.shape[a]?n.push(e.shape[a]):n.push(t[a]);return n}return t}(r,n),i=1-t,o=Eo(Eu(To(dp(s,0,1,"float32",a),i)),i);return $o(r,o)}});function Ah(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function bh(e,t,n){let a=1-e%2,r=new Float32Array(e);for(let s=0;s<e;++s){let i=2*Math.PI*s/(e+a-1);r[s]=t-n*Math.cos(i)}return jp(r,"float32")}var wh=async function(e,t,n=1){let a=Ys(e,"predictions","inTopK"),r=Ys(t,"targets","inTopK");se(a.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${a.rank}`)),se(a.rank-1===r.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${a.rank} and targets rank ${r.rank}`)),ie(a.shape.slice(0,a.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=a.shape[a.shape.length-1];se(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));let i=await a.data(),o=await r.data(),[l,u]=[i.length/s,s],d=we("bool",l);for(let e=0;e<l;e++){let t=e*u,a=i.subarray(t,t+u),r=[];for(let e=0;e<a.length;e++)r.push({value:a[e],index:e});r.sort(((e,t)=>t.value-e.value)),d[e]=0;for(let t=0;t<n;t++)if(r[t].index===o[e]){d[e]=1;break}}return e!==a&&a.dispose(),t!==r&&r.dispose(),ni(d,r.shape,"bool")},vh={};C(vh,{conv2d:()=>Th,depthwiseConv2d:()=>$h,matMul:()=>Mh});var kh=Qs({conv2DBackpropFilter_:function(e,t,n,a,r,s="NHWC",i){let o=e;3===e.rank&&(o=il(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=il(t,[1,t.shape[0],t.shape[1],t.shape[2]])),se(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),se(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),se(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));let u="NHWC"===s?o.shape[3]:o.shape[1],d="NHWC"===s?l.shape[3]:l.shape[1];se(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),se(d===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${d}) must match output depth for filter (${n[3]}).`)),sl("conv2dDerFilter",r,i);let p={x:o,dy:l},h={strides:a,pad:r,dataFormat:s,dimRoundingMode:i,filterShape:n};return Ls.runKernel(Et,p,h)}});function Ih(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return $o(e,Up(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Sh(e,t){let n=t,a=Yl(e.shape,t.shape);return a.length>0&&(n=wu(n,a)),il(n,e.shape)}function Ch(e,t,n,a){if("linear"===t)return e;if("relu"===t)return mp(e);if("elu"===t)return ru(e);if("relu6"===t)return gp(e);if("prelu"===t)return Od(e,n);if("leakyrelu"===t)return zu(e,a);if("sigmoid"===t)return pl(e);throw new Error(`Unknown fused activation ${t}.`)}var Nh=(e,t)=>!(e>0)||"linear"===t,Th=Qs({fusedConv2d_:function({x:e,filter:t,strides:n,pad:a,dataFormat:r="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:d}){if(l=l||"linear",!1===Nh(Ls.state.gradientDepth,l)){se("NHWC"===r,(()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let p=Ml(e,t,n,a,r,s,i);return null!=o&&(p=To(p,o)),Ch(p,l,u,d)}let p=Ys(e,"x","conv2d","float32"),h=Ys(t,"filter","conv2d","float32"),c=p,f=!1;3===p.rank&&(f=!0,c=il(p,[1,p.shape[0],p.shape[1],p.shape[2]])),se(4===c.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${c.rank}.`)),se(4===h.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`)),sl("fused conv2d",a,i);let m="NHWC"===r?c.shape[3]:c.shape[1];se(h.shape[2]===m,(()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${h.shape[2]}.`)),se(nl(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));let g,y,x=Xo(c.shape,h.shape,n,s,a,i);if(null!=o&&(g=Ys(o,"bias","fused conv2d"),[g]=Es(g,p),"NHWC"===r?Zl(x.outShape,g.shape):(se(g.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${g.shape.length}.`)),se(0===g.shape.length||g.shape[0]===x.outChannels||1===g.shape[0],(()=>`Error in fused conv2d: bias shape (${g.shape}) is not compatible with the number of output channels (${x.outChannels})`)))),null!=u){let e=u.shape;if(se(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)se(1===e[0]||e[0]===x.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${x.outChannels}).`));else if(3===e.length)try{Zl(e,x.outShape)}catch(t){let n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${x.outShape}).`;throw Error(n)}y=Ys(u,"prelu weights","fused conv2d")}let A=(e,t)=>{se("NHWC"===r,(()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`));let[i,o,u,d]=t,p=Ih(e,u,l);se(tl(s),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));let h=[_l(o.shape,p,i,n,a),kh(o,p,i.shape,n,a)];if(null!=d){let e=Sh(d,p);h.push(e)}return h},b={x:c,filter:h,bias:g,preluActivationWeights:y},w={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:d};return null==o?Yu(((e,t,n)=>{let a=Ls.runKernel(gr,b,w);return n([t,e,a]),f&&(a=il(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:A}}))(c,h):Yu(((e,t,n,a)=>{let r=Ls.runKernel(gr,b,w);return a([t,e,r,n]),f&&(r=il(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:A}}))(c,h,g)}}),Rh=Qs({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,a,r,s=[1,1],i){let o=e;3===e.rank&&(o=il(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=il(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:o,dy:l},d={strides:a,pad:r,dimRoundingMode:i,dilations:s,filterShape:n};return Ls.runKernel(Ut,u,d)}}),Eh=Qs({depthwiseConv2dNativeBackpropInput_:function(e,t,n,a,r,s=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=il(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:o,filter:n},d={strides:a,pad:r,dimRoundingMode:i,dilations:s,inputShape:e},p=Ls.runKernel(Gt,u,d);return l?il(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),$h=Qs({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:a,dataFormat:r="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:d}){if(!1===Nh(Ls.state.gradientDepth,l)){let p=Hl(e,t,n,a,r,s,i);return null!=o&&(p=To(p,o)),Ch(p,l,u,d)}let p=Ys(e,"x","depthwiseConv2d","float32"),h=Ys(t,"filter","depthwiseConv2d","float32"),c=p,f=!1;3===p.rank&&(f=!0,c=il(p,[1,p.shape[0],p.shape[1],p.shape[2]])),se(4===c.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`)),se(4===h.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`)),se(c.shape[3]===h.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`)),null==s&&(s=[1,1]),se(nl(n,s),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),sl("fused depthwiseConv2d",a,i);let m,g,y=Xo(c.shape,h.shape,n,s,a,i,!0);null!=o&&(m=Ys(o,"bias","fused conv2d"),[m]=Es(m,p),Zl(y.outShape,m.shape)),null!=u&&(g=Ys(u,"prelu weights","fused depthwiseConv2d"));let x=(e,t)=>{se(tl(s),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`));let[r,o,u,d]=t,p=Ih(e,u,l),h=Eh(o.shape,p,r,n,a,s,i),c=Rh(o,p,r.shape,n,a,s,i);return null!=d?[h,c,Sh(m,p)]:[h,c]},A={x:c,filter:h,bias:m,preluActivationWeights:g},b={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:d};return null==o?Yu(((e,t,n)=>{let a=Ls.runKernel(yr,A,b);return n([t,e,a]),f&&(a=il(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}))(c,h):Yu(((e,t,n,a)=>{let r=Ls.runKernel(yr,A,b);return a([t,e,r,n]),f&&(r=il(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}))(c,h,m)}}),Mh=Qs({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:a=!1,bias:r,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(!1===Nh(Ls.state.gradientDepth,s)){let l=dl(e,t,n,a);return null!=r&&(l=To(l,r)),Ch(l,s,i,o)}let l=Ys(e,"a","fused matMul"),u=Ys(t,"b","fused matMul");[l,u]=Es(l,u);let d=n?l.shape[l.rank-2]:l.shape[l.rank-1],p=a?u.shape[u.rank-1]:u.shape[u.rank-2],h=n?l.shape[l.rank-1]:l.shape[l.rank-2],c=a?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=le(f),y=le(m);se(d===p,(()=>`Error in fused matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${a} must match.`));let x,A,b=Zl(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([h,c]),w=il(l,n?[g,d,h]:[g,h,d]),v=il(u,a?[y,c,p]:[y,p,c]);null!=r&&(x=Ys(r,"bias","fused matMul"),[x]=Es(x,l),Zl(b,x.shape)),null!=i&&(A=Ys(i,"prelu weights","fused matMul"));let k=(e,t)=>{let i,o,[l,u,d,p]=t,h=Ih(il(e,d.shape),d,s);return n||a?!n&&a?(i=dl(h,u,!1,!1),o=dl(h,l,!0,!1)):n&&!a?(i=dl(u,h,!1,!0),o=dl(l,h,!1,!1)):(i=dl(u,h,!0,!0),o=dl(h,l,!0,!0)):(i=dl(h,u,!1,!0),o=dl(l,h,!0,!1)),null!=r?[i,o,Sh(p,h)]:[i,o]},I={a:w,b:v,bias:x,preluActivationWeights:A},S={transposeA:n,transposeB:a,activation:s,leakyreluAlpha:o};return null==r?Yu(((e,t,n)=>{let a=Ls.runKernel(mr,I,S);return n([e,t,a]),{value:il(a,b),gradFunc:k}}))(w,v):Yu(((e,t,n,a)=>{let r=Ls.runKernel(mr,I,S);return a([e,t,r,n]),{value:il(r,b),gradFunc:k}}))(w,v,x)}}),Fh=Qs({hammingWindow_:function(e){return bh(e,.54,.46)}}),_h=Qs({hannWindow_:function(e){return bh(e,.5,.5)}}),Ph=Qs({frame_:function(e,t,n,a=!1,r=0){let s=0,i=[];for(;s+t<=e.size;)i.push(hl(e,s,t)),s+=n;if(a)for(;s<e.size;){let a=s+t-e.size,o=ul([hl(e,s,t-a),Cl([a],r)]);i.push(o),s+=n}return 0===i.length?qp([],[0,t]):il(ul(i),[i.length,t])}}),Oh=Qs({stft_:function(e,t,n,a,r=_h){null==a&&(a=Ah(t));let s=Ph(e,t,n),i=$o(s,r(t));return Lp(i,a)}}),Dh=Qs({cropAndResize_:function(e,t,n,a,r="bilinear",s=0){let i=Ys(e,"image","cropAndResize"),o=Ys(t,"boxes","cropAndResize","float32"),l=Ys(n,"boxInd","cropAndResize","int32"),u=o.shape[0];se(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),se(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),se(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),se(2===a.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${a.length}.`)),se(a[0]>=1&&a[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${a}`)),se("bilinear"===r||"nearest"===r,(()=>`method must be bilinear or nearest, but was ${r}`));let d={image:i,boxes:o,boxInd:l},p={method:r,extrapolationValue:s,cropSize:a};return Ls.runKernel(Lt,d,p)}}),zh=Qs({flipLeftRight_:function(e){let t=Ys(e,"image","flipLeftRight","float32");se(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));let n={image:t};return Ls.runKernel(ln,n,{})}}),Lh=Qs({grayscaleToRGB_:function(e){let t=Ys(e,"image","grayscaleToRGB"),n=t.rank-1,a=t.shape[n];se(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),se(1===a,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${a}.`));let r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,Tu(t,r)}}),Wh=Qs({rgbToGrayscale_:function(e){let t=Ys(e,"image","RGBToGrayscale"),n=t.rank-1,a=t.shape[n];se(t.rank>=2,(()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`)),se(3===a,(()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${a}.`));let r,s=t.dtype,i=So(t,"float32"),o=jp([.2989,.587,.114]);switch(t.rank){case 2:r=au("ij,j->i",i,o);break;case 3:r=au("ijk,k->ij",i,o);break;case 4:r=au("ijkl,l->ijk",i,o);break;case 5:r=au("ijklm,m->ijkl",i,o);break;case 6:r=au("ijklmn,n->ijklm",i,o);break;default:throw new Error("Not a valid tensor rank.")}return r=Cu(r,-1),So(r,s)}}),Bh=Qs({rotateWithOffset_:function(e,t,n=0,a=.5){let r=Ys(e,"image","rotateWithOffset","float32");se(4===r.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`));let s={image:r},i={radians:t,fillValue:n,center:a};return Ls.runKernel(fr,s,i)}});function Vh(e,t,n,a,r,s){null==a&&(a=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==s&&(s=0);let i=e.shape[0];return n=Math.min(n,i),se(0<=a&&a<=1,(()=>`iouThreshold must be in [0, 1], but was '${a}'`)),se(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),se(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),se(1===t.rank,(()=>"scores must be a 1D tensor")),se(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),se(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s}}var Uh=Qs({nonMaxSuppression_:function(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY){let s=Ys(e,"boxes","nonMaxSuppression","float32"),i=Ys(t,"scores","nonMaxSuppression","float32"),o=Vh(s,i,n,a,r),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:a=o.iouThreshold,scoreThreshold:r=o.scoreThreshold};return Ls.runKernel(Qn,{boxes:s,scores:i},l)}});function Gh(e,t,n){let a=function(e,t,n){return function(e,t,n){let a=0,r=e.length,s=0,i=!1;for(;a<r;){s=a+(r-a>>>1);let o=n(t,e[s]);o>0?a=s+1:(r=s,i=!o)}return i?a:-a-1}(e,t,n||Hh)}(e,t,n),r=a<0?-(a+1):a;e.splice(r,0,t)}function Hh(e,t){return e>t?1:e<t?-1:0}function jh(e,t,n,a,r){return Kh(e,t,n,a,r,0)}function qh(e,t,n,a,r,s){return Kh(e,t,n,a,r,0,!1,s,!0)}function Xh(e,t,n,a,r,s){return Kh(e,t,n,a,r,s,!0)}function Kh(e,t,n,a,r,s,i=!1,o=!1,l=!1){let u=[];for(let e=0;e<t.length;e++)t[e]>r&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(Jh);let d=s>0?-.5/s:0,p=[],h=[];for(;p.length<n&&u.length>0;){let t=u.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<r)break;let o=!1;for(let n=p.length-1;n>=i;--n){let i=Yh(e,s,p[n]);if(i>=a){o=!0;break}if(t.score=t.score*Zh(a,d,i),t.score<=r)break}t.suppressBeginIndex=p.length,o||(t.score===n?(p.push(s),h.push(t.score)):t.score>r&&Gh(u,t,Jh))}let c=p.length,f=n-c;o&&f>0&&(p.push(...new Array(f).fill(0)),h.push(...new Array(f).fill(0)));let m={selectedIndices:p};return i&&(m.selectedScores=h),l&&(m.validOutputs=c),m}function Yh(e,t,n){let a=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),s=Math.min(a[0],a[2]),i=Math.min(a[1],a[3]),o=Math.max(a[0],a[2]),l=Math.max(a[1],a[3]),u=Math.min(r[0],r[2]),d=Math.min(r[1],r[3]),p=Math.max(r[0],r[2]),h=Math.max(r[1],r[3]),c=(o-s)*(l-i),f=(p-u)*(h-d);if(c<=0||f<=0)return 0;let m=Math.max(s,u),g=Math.max(i,d),y=Math.min(o,p),x=Math.min(l,h),A=Math.max(y-m,0)*Math.max(x-g,0);return A/(c+f-A)}function Zh(e,t,n){let a=Math.exp(t*n*n);return n<=e?a:0}function Jh(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}var Qh=Qs({nonMaxSuppressionWithScore_:function(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,s=0){let i=Ys(e,"boxes","nonMaxSuppression"),o=Ys(t,"scores","nonMaxSuppression"),l=Vh(i,o,n,a,r,s),u={boxes:i,scores:o},d={maxOutputSize:n=l.maxOutputSize,iouThreshold:a=l.iouThreshold,scoreThreshold:r=l.scoreThreshold,softNmsSigma:s=l.softNmsSigma},p=Ls.runKernel(ta,u,d);return{selectedIndices:p[0],selectedScores:p[1]}}}),ec=Qs({nonMaxSuppressionPadded_:function(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,s=!1){let i=Ys(e,"boxes","nonMaxSuppression"),o=Ys(t,"scores","nonMaxSuppression"),l=Vh(i,o,n,a,r,null),u={boxes:i,scores:o},d={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:s},p=Ls.runKernel(ea,u,d);return{selectedIndices:p[0],validOutputs:p[1]}}}),tc=Qs({resizeBilinear_:function(e,t,n=!1,a=!1){let r=Ys(e,"images","resizeBilinear");se(3===r.rank||4===r.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`)),se(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),se(!1===a||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=r,i=!1;3===r.rank&&(i=!0,s=il(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:a,size:t},u=Ls.runKernel(ba,o,l);return i?il(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),nc=Qs({resizeNearestNeighbor_:function(e,t,n=!1,a=!1){let r=Ys(e,"images","resizeNearestNeighbor");se(3===r.rank||4===r.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`)),se(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),se("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),se(!1===a||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=r,i=!1;3===r.rank&&(i=!0,s=il(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:a,size:t},u=Ls.runKernel(xa,o,l);return i?il(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),ac=Qs({threshold_:function(e,t="binary",n=!1,a=.5){let r,s,i,o,l=Ys(e,"image","threshold"),u=l.shape[0]*l.shape[1],d=$o(jp([a]),255);if(se(3===l.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${l.rank}.`)),se(3===l.shape[2]||1===l.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${l.shape[2]}.`)),se("int32"===l.dtype||"float32"===l.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${l.dtype}.`)),se("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===l.shape[2]){[r,s,i]=zp(l,[1,1,1],-1);let e=$o(r,.2989),t=$o(s,.587),n=$o(i,.114);o=To(To(e,t),n)}else o=e;"otsu"===t&&(d=function(e,t){let n,a,r,s,i,o,l=jp([-1]),u=jp([0]),d=jp([0]);for(let p=0;p<e.size-1;p++){n=hl(e,0,p+1),a=hl(e,p+1),i=Eo(wu(n),t),o=Eo(wu(a),t);let h=wu($o(n,hp(0,n.size)));r=Eo(h,wu(n));let c=Cl(a.shape,n.size),f=To(hp(0,a.size),c),m=$o(a,f);s=Eo(wu(m),wu(a));let g=td(r,s),y=td(r,s),x=$o(i,o);d=$o($o(x,g),y);let A=Mu(d,u);u=Ql(A,d,u),l=Ql(A,jp([p]),l)}return l}(wl(So(vp(o),"int32"),ni([]),256),u));let p=n?Wu(o,d):Mu(o,d);return So($o(p,255),"int32")}}),rc=Qs({transform_:function(e,t,n="nearest",a="constant",r=0,s){let i=Ys(e,"image","transform","float32"),o=Ys(t,"transforms","transform","float32");se(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),se(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),se(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));let l={image:i,transforms:o},u={interpolation:n,fillMode:a,fillValue:r,outputShape:s};return Ls.runKernel(sr,l,u)}}),sc=Qs({bandPart_:function(e,t,n){let a=Ys(e,"a","bandPart");se(a.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${a.rank}.`));let r,s,i=a.shape,[o,l]=a.shape.slice(-2);"number"==typeof t?(se(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),se(t<=o,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${o}).`)),r=Ys(t<0?o:t,"numLower","bandPart")):(se("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),r=Ql(Lu(t,0),o,Ad(t,o))),"number"==typeof n?(se(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),se(n<=l,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${l}).`)),s=Ys(n<0?l:n,"numUpper","bandPart")):(se("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),s=Ql(Lu(n,0),l,Ad(n,l)));let u=il(hp(0,o,1,"int32"),[-1,1]),d=hp(0,l,1,"int32"),p=td(u,d),h=rd(Wu(p,r),Fu(p,Ju(s))),c=gd([o,l],a.dtype);return il(Vp(oh(il(a,[-1,o,l])).map((e=>Ql(h,e,c)))),i)}}),ic=Qs({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,se(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));let n=e[0].shape[0];for(let t=1;t<e.length;++t)se(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=zp(e,e.shape[0],0).map((e=>Bp(e,[0])));se(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));let n=[],a=e;for(let t=0;t<e.length;++t)n.push(Ls.tidy((()=>{let e=a[t];if(t>0)for(let a=0;a<t;++a){let t=$o(wu($o(n[a],e)),n[a]);e=td(e,t)}return Eo(e,ku(e,"euclidean"))})));return t?Vp(n,0):n}});function oc(e,t=!1){return Ls.tidy((()=>{se(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));let n=e.shape[0],a=e.shape[1],r=Ru(n),s=Co(e),i=qp([[1]],[1,1]),o=Co(i),l=n>=a?a:n;for(let e=0;e<l;++e){let t=s,l=o,u=r;[o,s,r]=Ls.tidy((()=>{let t=hl(s,[e,e],[n-e,1]),l=ku(t),u=hl(s,[e,e],[1,1]),d=Ql(Mu(u,0),qp([[-1]]),qp([[1]])),p=td(u,$o(d,l)),h=Eo(t,p);o=1===h.shape[0]?Co(i):ul([i,hl(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);let c=Ju(Eo(dl(d,p),l)),f=hl(s,[e,0],[n-e,a]),m=$o(c,o),g=ch(o);if(0===e)s=td(f,dl(m,dl(g,f)));else{let t=td(f,dl(m,dl(g,f)));s=ul([hl(s,[0,0],[e,a]),t],0)}let y=ch(m),x=hl(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=td(x,dl(dl(x,o),y));else{let t=td(x,dl(dl(x,o),y));r=ul([hl(r,[0,0],[n,e]),t],1)}return[o,s,r]})),fi([t,l,u])}return!t&&n>a&&(r=hl(r,[0,0],[n,a]),s=hl(s,[0,0],[a,a])),[r,s]}))}var lc,uc=Qs({qr_:function(e,t=!1){if(se(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return oc(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),a=oh(il(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],s=[];return a.forEach((e=>{let[n,a]=oc(e,t);r.push(n),s.push(a)})),[il(Vp(r,0),e.shape),il(Vp(s,0),e.shape)]}}});!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(lc||(lc={}));var dc=Qs({computeWeightedLoss_:function(e,t,n=lc.SUM_BY_NONZERO_WEIGHTS){let a=Ys(e,"losses","computeWeightedLoss"),r=null;null!=t&&(r=Ys(t,"weights","computeWeightedLoss"));let s=null==r?a:$o(a,r);if(n===lc.NONE)return s;if(n===lc.SUM)return wu(s);if(n===lc.MEAN){if(null==r)return md(s);{let e=a.size/r.size,t=Eo(wu(s),wu(r));return e>1?Eo(t,xu(e)):t}}if(n===lc.SUM_BY_NONZERO_WEIGHTS){if(null==r)return Eo(wu(s),xu(a.size));{let e=$o(r,yd(a.shape)),t=So(wu(Sd(e,xu(0))),"float32");return Eo(wu(s),t)}}throw Error(`Unknown reduction: ${n}`)}}),pc=Qs({absoluteDifference_:function(e,t,n,a=lc.SUM_BY_NONZERO_WEIGHTS){let r=Ys(e,"labels","absoluteDifference"),s=Ys(t,"predictions","absoluteDifference"),i=null;null!=n&&(i=Ys(n,"weights","absoluteDifference")),ie(r.shape,s.shape,"Error in absoluteDifference: ");let o=Mo(td(r,s));return dc(o,i,a)}}),hc=Qs({cosineDistance_:function(e,t,n,a,r=lc.SUM_BY_NONZERO_WEIGHTS){let s=Ys(e,"labels","cosineDistance"),i=Ys(t,"predictions","cosineDistance"),o=null;null!=a&&(o=Ys(a,"weights","cosineDistance")),ie(s.shape,i.shape,"Error in cosineDistance: ");let l=xu(1),u=td(l,wu($o(s,i),n,!0));return dc(u,o,r)}}),cc=Qs({hingeLoss_:function(e,t,n,a=lc.SUM_BY_NONZERO_WEIGHTS){let r=Ys(e,"labels","hingeLoss"),s=Ys(t,"predictions","hingeLoss"),i=null;null!=n&&(i=Ys(n,"weights","hingeLoss")),ie(r.shape,s.shape,"Error in hingeLoss: ");let o=xu(1);r=td($o(xu(2),r),o);let l=mp(td(o,$o(r,s)));return dc(l,i,a)}}),fc=Qs({huberLoss_:function(e,t,n,a=1,r=lc.SUM_BY_NONZERO_WEIGHTS){let s=Ys(e,"labels","huberLoss"),i=Ys(t,"predictions","huberLoss"),o=null;null!=n&&(o=Ys(n,"weights","huberLoss")),ie(s.shape,i.shape,"Error in huberLoss: ");let l=xu(a),u=Mo(td(i,s)),d=Ad(u,l),p=td(u,d),h=To($o(xu(.5),bu(d)),$o(l,p));return dc(h,o,r)}}),mc=Qs({logLoss_:function(e,t,n,a=1e-7,r=lc.SUM_BY_NONZERO_WEIGHTS){let s=Ys(e,"labels","logLoss"),i=Ys(t,"predictions","logLoss"),o=null;null!=n&&(o=Ys(n,"weights","logLoss")),ie(s.shape,i.shape,"Error in logLoss: ");let l=xu(1),u=xu(a),d=Ju($o(s,Uu(To(i,u)))),p=$o(td(l,s),Uu(To(td(l,i),u))),h=td(d,p);return dc(h,o,r)}}),gc=Qs({meanSquaredError_:function(e,t,n,a=lc.SUM_BY_NONZERO_WEIGHTS){let r=Ys(e,"labels","meanSquaredError"),s=Ys(t,"predictions","meanSquaredError"),i=null;null!=n&&(i=Ys(n,"weights","meanSquaredError")),ie(r.shape,s.shape,"Error in meanSquaredError: ");let o=Wp(r,s);return dc(o,i,a)}}),yc=Qs({sigmoidCrossEntropy_:function(e,t,n,a=0,r=lc.SUM_BY_NONZERO_WEIGHTS){let s=Ys(e,"multiClassLabels","sigmoidCrossEntropy"),i=Ys(t,"logits","sigmoidCrossEntropy"),o=null;if(null!=n&&(o=Ys(n,"weights","sigmoidCrossEntropy")),ie(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),a>0){let e=xu(a),t=xu(1),n=xu(.5);s=To($o(s,td(t,e)),$o(n,e))}let l=function(e,t){let n=Ys(e,"labels","sigmoidCrossEntropyWithLogits"),a=Ys(t,"logits","sigmoidCrossEntropyWithLogits");ie(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");let r=mp(a),s=$o(a,n),i=Gu(Su(Ju(Mo(a))));return To(td(r,s),i)}(s,i);return dc(l,o,r)}}),xc=Qs({softmaxCrossEntropy_:function(e,t,n,a=0,r=lc.SUM_BY_NONZERO_WEIGHTS){let s=Ys(e,"onehotLabels","softmaxCrossEntropy"),i=Ys(t,"logits","softmaxCrossEntropy"),o=null;if(null!=n&&(o=Ys(n,"weights","softmaxCrossEntropy")),ie(s.shape,i.shape,"Error in softmaxCrossEntropy: "),a>0){let e=xu(a),t=xu(1),n=xu(s.shape[1]);s=To($o(s,td(t,e)),Eo(e,n))}let l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Yu(((e,t,a)=>{let r=ad(t,[n],!0),s=td(So(t,"float32"),r);a([e,s]);let i=Ju($o(s,e));return{value:wu(i,[n]),gradFunc:(e,t)=>{let[a,r]=t,s=du(e.shape,[n]);return[$o(il(e,s),td(So(a,"float32"),Su(r))),$o(il(e,s),td(Su(r),So(a,"float32")))]}}}))(e,t)}(s,i);return dc(l,o,r)}}),Ac=Qs({sparseFillEmptyRows_:function(e,t,n,a){let r=Ys(e,"indices","sparseFillEmptyRows","int32"),s=Ys(t,"values","sparseFillEmptyRows"),i=Ys(n,"denseShape","sparseFillEmptyRows","int32"),o=Ys(a,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==r.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);let l={indices:r,values:s,denseShape:i,defaultValue:o},u=Ls.runKernel(Va,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),bc=Qs({sparseReshape_:function(e,t,n){let a=Ys(e,"inputIndices","sparseReshape","int32"),r=Ys(t,"inputShape","sparseReshape","int32"),s=Ys(n,"newShape","sparseReshape","int32");if(2!==a.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==r.rank)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let i={inputIndices:a,inputShape:r,newShape:s},o=Ls.runKernel(Ua,i);return{outputIndices:o[0],outputShape:o[1]}}}),wc=Qs({sparseSegmentMean_:function(e,t,n){let a=Ys(e,"data","sparseSegmentMean"),r=Ys(t,"indices","sparseSegmentMean","int32"),s=Ys(n,"segmentIds","sparseSegmentMean","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${r.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);let i={data:a,indices:r,segmentIds:s};return Ls.runKernel(Ga,i)}}),vc=Qs({sparseSegmentSum_:function(e,t,n){let a=Ys(e,"data","sparseSegmentSum"),r=Ys(t,"indices","sparseSegmentSum","int32"),s=Ys(n,"segmentIds","sparseSegmentSum","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${r.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);let i={data:a,indices:r,segmentIds:s};return Ls.runKernel(Ha,i)}}),kc=Qs({stringNGrams_:function(e,t,n,a,r,s,i,o){let l=Ys(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);let u=Ys(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");let d={separator:n,nGramWidths:a,leftPad:r,rightPad:s,padWidth:i,preserveShortSequences:o},p={data:l,dataSplits:u},h=Ls.runKernel(Za,p,d);return{nGrams:h[0],nGramsSplits:h[1]}}}),Ic=Qs({stringSplit_:function(e,t,n=!0){let a=Ys(e,"input","stringSplit","string"),r=Ys(t,"delimiter","stringSplit","string");if(1!==a.rank)throw new Error(`Input should be Tensor1D but received shape ${a.shape}`);if(0!==r.rank)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);let s={skipEmpty:n},i={input:a,delimiter:r},o=Ls.runKernel(Ja,i,s);return{indices:o[0],values:o[1],shape:o[2]}}}),Sc=Qs({stringToHashBucketFast_:function(e,t){let n=Ys(e,"input","stringToHashBucketFast","string"),a={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let r={input:n};return Ls.runKernel(Qa,r,a)}}),Cc=Qs({staticRegexReplace_:function(e,t,n,a=!0){let r=Ys(e,"input","staticRegexReplace","string"),s={pattern:t,rewrite:n,replaceGlobal:a};return Ls.runKernel(Ka,{x:r},s)}}),Nc={fft:Pp,ifft:Op,rfft:Lp,irfft:Dp},Tc={hammingWindow:Fh,hannWindow:_h,frame:Ph,stft:Oh},Rc={flipLeftRight:zh,grayscaleToRGB:Lh,resizeNearestNeighbor:nc,resizeBilinear:tc,rgbToGrayscale:Wh,rotateWithOffset:Bh,cropAndResize:Dh,nonMaxSuppression:Uh,nonMaxSuppressionAsync:async function(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY){let s=Ys(e,"boxes","nonMaxSuppressionAsync"),i=Ys(t,"scores","nonMaxSuppressionAsync"),o=Vh(s,i,n,a,r);n=o.maxOutputSize,a=o.iouThreshold,r=o.scoreThreshold;let l=await Promise.all([s.data(),i.data()]),u=l[0],d=l[1],{selectedIndices:p}=jh(u,d,n,a,r);return s!==e&&s.dispose(),i!==t&&i.dispose(),jp(p,"int32")},nonMaxSuppressionWithScore:Qh,nonMaxSuppressionWithScoreAsync:async function(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,s=0){let i=Ys(e,"boxes","nonMaxSuppressionAsync"),o=Ys(t,"scores","nonMaxSuppressionAsync"),l=Vh(i,o,n,a,r,s);n=l.maxOutputSize,a=l.iouThreshold,r=l.scoreThreshold,s=l.softNmsSigma;let u=await Promise.all([i.data(),o.data()]),d=u[0],p=u[1],{selectedIndices:h,selectedScores:c}=Xh(d,p,n,a,r,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:jp(h,"int32"),selectedScores:jp(c)}},nonMaxSuppressionPadded:ec,nonMaxSuppressionPaddedAsync:async function(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,s=!1){let i=Ys(e,"boxes","nonMaxSuppressionAsync"),o=Ys(t,"scores","nonMaxSuppressionAsync"),l=Vh(i,o,n,a,r,null),u=l.maxOutputSize,d=l.iouThreshold,p=l.scoreThreshold,[h,c]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=qh(h,c,u,d,p,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:jp(f,"int32"),validOutputs:xu(m,"int32")}},threshold:ac,transform:rc},Ec={bandPart:sc,gramSchmidt:ic,qr:uc},$c={absoluteDifference:pc,computeWeightedLoss:dc,cosineDistance:hc,hingeLoss:cc,huberLoss:fc,logLoss:mc,meanSquaredError:gc,sigmoidCrossEntropy:yc,softmaxCrossEntropy:xc},Mc={sparseFillEmptyRows:Ac,sparseReshape:bc,sparseSegmentMean:wc,sparseSegmentSum:vc},Fc={stringNGrams:kc,stringSplit:Ic,stringToHashBucketFast:Sc,staticRegexReplace:Cc},_c={};C(_c,{Serializable:()=>Dc,SerializationMap:()=>zc,getRegisteredName:()=>Wc,registerClass:()=>Lc});var Pc=new Map,Oc=new Map,Dc=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},zc=class e{constructor(){this.classNameMap={}}static getMap(){return null==e.instance&&(e.instance=new e),e.instance}static register(t){e.getMap().classNameMap[t.className]=[t,t.fromConfig]}};function Lc(e,t,n){se(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),se("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),se(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),void 0===t&&(t="Custom"),void 0===n&&(n=e.className);let a=t+">"+n;return zc.register(e),Pc.set(a,e),Oc.set(e,a),e}function Wc(e){return Oc.has(e)?Oc.get(e):e.className}var Bc=class extends Dc{minimize(e,t=!1,n){let{value:a,grads:r}=this.computeGradients(e,n);if(null!=n){let e=n.map((e=>({name:e.name,tensor:r[e.name]})));this.applyGradients(e)}else this.applyGradients(r);return fi(r),t?a:(a.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Ku(e,t)}dispose(){null!=this.iterations_&&fi(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:xu(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Bc,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var Vc=class extends Bc{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Ls.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let a=Ls.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:ci((()=>eu(a).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:ci((()=>eu(a).variable(!1)))});let r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;let s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;ci((()=>{let e=To($o(s,this.rho),$o(bu(r),1-this.rho)),t=$o(Eo(Au(To(i,this.epsilon)),Au(To(s,this.epsilon))),r),n=To($o(i,this.rho),$o(bu(t),1-this.rho));s.assign(e),i.assign(n);let o=To($o(t,-this.learningRate),a);a.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(fi(this.accumulatedGrads.map((e=>e.variable))),fi(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){let t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}},Uc=class extends Bc{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let a=Ls.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:ci((()=>Cl(a.shape,this.initialAccumulatorValue).variable(!1)))});let r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;let s=this.accumulatedGrads[n].variable;ci((()=>{let e=To(s,bu(r));s.assign(e);let t=To($o(Eo(r,Au(To(e,Ls.backend.epsilon()))),-this.learningRate),a);a.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&fi(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}},Gc=class extends Bc{static get className(){return"Adam"}constructor(e,t,n,a=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],ci((()=>{this.accBeta1=xu(t).variable(),this.accBeta2=xu(n).variable()})),null==a&&(this.epsilon=Ls.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);ci((()=>{let n=td(1,this.accBeta1),a=td(1,this.accBeta2);t.forEach(((t,r)=>{let s=Ls.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:ci((()=>eu(s).variable(!1)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:`${t}/v`,variable:ci((()=>eu(s).variable(!1)))});let i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;let o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedSecondMoment[r].variable,u=To($o(o,this.beta1),$o(i,1-this.beta1)),d=To($o(l,this.beta2),$o(bu(i),1-this.beta2)),p=Eo(u,n),h=Eo(d,a);o.assign(u),l.assign(d);let c=To($o(Eo(p,To(Au(h),this.epsilon)),-this.learningRate),s);s.assign(c)})),this.accBeta1.assign($o(this.accBeta1,this.beta1)),this.accBeta2.assign($o(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&fi(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&fi(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),ci((()=>{this.accBeta1.assign(yu(this.beta1,this.iterations_+1)),this.accBeta2.assign(yu(this.beta2,this.iterations_+1))}));let t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}},Hc=class extends Bc{static get className(){return"Adamax"}constructor(e,t,n,a=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],ci((()=>{this.iteration=xu(0).variable(),this.accBeta1=xu(t).variable()})),null==a&&(this.epsilon=Ls.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);ci((()=>{let n=td(1,this.accBeta1),a=Eo(-this.learningRate,To($o(this.iteration,this.decay),1));t.forEach(((t,r)=>{let s=Ls.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:eu(s).variable(!1)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:`${t}/v`,variable:eu(s).variable(!1)});let i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;let o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedWeightedInfNorm[r].variable,u=To($o(o,this.beta1),$o(i,1-this.beta1)),d=$o(l,this.beta2),p=Mo(i),h=fd(d,p);o.assign(u),l.assign(h);let c=To($o(Eo(a,n),Eo(u,To(h,this.epsilon))),s);s.assign(c)})),this.iteration.assign(To(this.iteration,1)),this.accBeta1.assign($o(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&fi(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&fi(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}},jc=class extends Bc{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;let r=Ls.registeredVariables[t];ci((()=>{let e=To($o(this.c,a),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=mi(xu(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}},qc=class extends jc{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=xu(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let a=Ls.registeredVariables[t];null==this.accumulations[n]&&(this.accumulations[n]={originalName:`${t}/momentum`,variable:ci((()=>eu(a).variable(!1)))});let r=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&ci((()=>{let e,t=To($o(this.m,r),s);e=this.useNesterov?To($o(this.c,To(s,$o(t,this.m))),a):To($o(this.c,t),a),r.assign(t),a.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&fi(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}},Xc=class extends Bc{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,a=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==a&&(this.epsilon=Ls.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let a=Ls.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:ci((()=>eu(a).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:ci((()=>eu(a).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:ci((()=>eu(a).variable(r)))});let s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;let i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;ci((()=>{let e=To($o(i,this.decay),$o(bu(s),1-this.decay));if(this.centered){let t=this.accumulatedMeanGrads[n].variable,r=To($o(t,this.decay),$o(s,1-this.decay)),l=Eo($o(s,this.learningRate),Au(td(e,To(bu(r),this.epsilon)))),u=To($o(o,this.momentum),l);i.assign(e),t.assign(r),o.assign(u);let d=td(a,u);a.assign(d)}else{let e=To($o(i,this.decay),$o(bu(s),1-this.decay)),t=To($o(o,this.momentum),Eo($o(s,this.learningRate),Au(To(e,this.epsilon))));i.assign(e),o.assign(t);let n=td(a,t);a.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&fi(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&fi(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&fi(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}},Kc=[Vc,Uc,Gc,Hc,qc,Xc,jc],Yc={};function Zc(e){return new Promise((e=>setTimeout(e))).then(e)}C(Yc,{CompositeArrayBuffer:()=>ri,browserFiles:()=>ef,browserHTTPRequest:()=>df,concatenateArrayBuffers:()=>Di,copyModel:()=>wo,decodeWeights:()=>Ti,decodeWeightsStream:()=>Fi,encodeWeights:()=>Ni,fromMemory:()=>ff,fromMemorySync:()=>mf,getLoadHandlers:()=>Xi,getModelArtifactsForJSON:()=>Bi,getModelArtifactsForJSONSync:()=>Wi,getModelArtifactsInfoForJSON:()=>Vi,getSaveHandlers:()=>qi,getWeightSpecs:()=>Ui,http:()=>uf,isHTTPScheme:()=>of,listModels:()=>Ao,loadWeights:()=>af,moveModel:()=>vo,registerLoadRouter:()=>ji,registerSaveRouter:()=>Hi,removeModel:()=>bo,weightsLoaderFactory:()=>rf,withSaveHandler:()=>gf,withSaveHandlerSync:()=>yf});var Jc=class e{constructor(t){if(!Xe().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(e.URL_SCHEME)&&(t=t.slice(e.URL_SCHEME.length)),(null==t||0===t.length)&&(t="model"),this.modelJsonFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=ri.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let t=Li(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),a=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),r=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(r.download=this.modelJsonFileName,r.href=a,await Zc((()=>r.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){let e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await Zc((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Vi(e)}}}};Jc.URL_SCHEME="downloads://";var Qc=class{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{let n=new FileReader;n.onload=n=>{let a=JSON.parse(n.target.result),r=a.modelTopology;if(null==r)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==a.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:r});let s=Bi(a,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){let t=[],n=[];for(let a of e)t.push(...a.weights),n.push(...a.paths);let a=this.checkManifestAndWeightFiles(e),r=n.map((e=>this.loadWeightsFile(e,a[e])));return Promise.all(r).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,a)=>{let r=new FileReader;r.onload=e=>{let t=e.target.result;n(t)},r.onerror=t=>a(`Failed to weights data from file of path '${e}'.`),r.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map((e=>zi(e.name))),a={};for(let r of e)r.paths.forEach((e=>{let r=zi(e);if(-1!==t.indexOf(r))throw new Error(`Duplicate file basename found in weights manifest: '${r}'`);if(t.push(r),-1===n.indexOf(r))throw new Error(`Weight file with basename '${r}' is not provided.`);a[e]=this.weightsFiles[n.indexOf(r)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return a}};function ef(e){return new Qc(e)}function tf(e,t,n,a){var r;se(null!=(r=e)&&Array.isArray(r)&&r.length>0,(()=>"promises must be a none empty array")),function(e,t){se(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),se(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),se(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,a=null==a?1:a);let s=0;return Promise.all(e.map((r=>(r.then((r=>{let i=n+ ++s/e.length*(a-n);return t(i),r})),r))))}async function nf(e,t){null==t&&(t={});let n=null==t.fetchFunc?Xe().platform.fetch:t.fetchFunc,a=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),r=(null==t.onProgress?await Promise.all(a):await tf(a,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(r):await tf(r,t.onProgress,.5,1)}async function af(e,t="",n,a){return rf((e=>nf(e,{requestInit:a})))(e,t,n)}function rf(e){return async(t,n="",a)=>{let r=t.map((()=>!1)),s={},i=null!=a?a.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{let l="quantization"in e?e.quantization.dtype:e.dtype,u=ai[l]*le(e.shape),d=()=>{r[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=a?a.forEach(((t,n)=>{t===e.name&&(d(),i[n]=!0)})):d(),o.push(e.name),n+=u}))})),!i.every((e=>e))){let e=a.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}let l=r.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{let t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));let d=await e(u),p={},h=0;return l.forEach((e=>{let n=t[e].paths.length,a=new ri(d.slice(h,h+n));s[e].forEach((e=>{let t=Ti(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(let e in t)p[e]=t[e]})),h+=n})),p}}Gi.registerSaveRouter((e=>Xe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Jc.URL_SCHEME)?function(e="model"){return new Jc(e)}(e.slice(Jc.URL_SCHEME.length)):null));var sf=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(se("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Xe().platform.fetch,se(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&se(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=Li(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){let n=ri.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}let a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:Vi(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async loadModelJSON(){let e,t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);try{e=await t.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}let n=e.modelTopology,a=e.weightsManifest;if(null==n&&null==a)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return e}async load(){return this.loadOptions.streamWeights?this.loadStream():Bi(await this.loadModelJSON(),(e=>this.loadWeights(e)))}async loadStream(){let e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=Ui(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;let a,r=null==t.fetchFunc?Xe().platform.fetch:t.fetchFunc,s=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var i;s<e.length;){a||(a=(await r(e[s],t.requestInit,{isBinary:!0})).body.getReader());let{done:o,value:l}=await a.read();if(!o)return void n.enqueue(l);s++,a=void 0,null===(i=t.onProgress)||void 0===i||i.call(t,s/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,a]=function(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),r=this.weightPathPrefix||n,s=[],i=[];for(let t of e)for(let e of t.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):s.push(r+e+a);return this.weightUrlConverter&&s.push(...await Promise.all(i)),s}async loadWeights(e){let t=await this.getWeightUrls(e);return[Ui(e),await nf(t,this.loadOptions)]}};function of(e){return null!=e.match(sf.URL_SCHEME_REGEX)}sf.URL_SCHEME_REGEX=/^https?:\/\//;var lf=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>of(e))):of(e),n)return uf(e,t)}return null};function uf(e,t){return new sf(e,t)}function df(e,t){return uf(e,t)}Gi.registerSaveRouter(lf),Gi.registerLoadRouter(lf);var pf=class{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}},hf=class{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}},cf=class{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}};function ff(e,t,n,a){return new cf(mf(...arguments))}function mf(e,t,n,a){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new pf(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new pf({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new pf({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:a}))}function gf(e){return new hf(e)}function yf(e){return new hf(e)}var xf={};C(xf,{confusionMatrix:()=>bf});var Af,bf=Qs({confusionMatrix_:function(e,t,n){let a=Ys(e,"labels","confusionMatrix"),r=Ys(t,"predictions","confusionMatrix");se(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),se(1===a.rank,(()=>`Expected the rank of labels to be 1, but got ${a.rank}`)),se(1===r.rank,(()=>`Expected the rank of predictions to be 1, but got ${r.rank}`)),se(a.shape[0]===r.shape[0],(()=>`Mismatch in the number of examples: ${a.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`)),se(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));let s=Cd(So(a,"int32"),n),i=Cd(So(r,"int32"),n),o=ch(s),l=dl(o,i);return So(l,"int32")}}),wf={};C(wf,{draw:()=>Nf,fromPixels:()=>Tf,fromPixelsAsync:()=>If,toPixels:()=>Cf});var vf=!1;function kf(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,a=!1,r=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)a=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)r=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(null!=vr(cr,Ls.backendName)){let n={pixels:e},a={numChannels:t};return Ls.runKernel(cr,n,a)}let l,u,[d,p]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height];if(i)l=e.getContext("2d").getImageData(0,0,d,p).data;else if(a||n)l=e.data;else if(s||r||o){if(null==Af)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Af=new OffscreenCanvas(1,1).getContext("2d")}else Af=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Af.canvas.width=d,Af.canvas.height=p,Af.drawImage(e,0,0,d,p),l=Af.getImageData(0,0,d,p).data}if(4===t)u=new Int32Array(l);else{let e=d*p;u=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)u[n*t+e]=l[4*n+e]}return Xp(u,[p,d,t],"int32")}async function If(e,t=3){let n=null;if(Xe().getBool("WRAP_TO_IMAGEBITMAP")&&function(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return kf(n,t)}function Sf(e){if(2!==e.rank&&3!==e.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);let t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}async function Cf(e,t){let n=Ys(e,"img","toPixels");if(!(e instanceof ms)){let e=n;n=So(e,"int32"),e.dispose()}Sf(n);let[a,r]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2],i=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(r*a*4);for(let e=0;e<a*r;++e){let t=[0,0,0,255];for(let a=0;a<s;a++){let r=i[e*s+a];if("float32"===n.dtype){if(r<0||r>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${r}.`)}else if("int32"===n.dtype&&(r<0||r>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${r}.`);1===s?(t[0]=r*o,t[1]=r*o,t[2]=r*o):t[a]=r*o}let a=4*e;l[a+0]=Math.round(t[0]),l[a+1]=Math.round(t[1]),l[a+2]=Math.round(t[2]),l[a+3]=Math.round(t[3])}if(null!=t){vf||null!=vr(Kt,Ls.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),vf=!0),t.width=r,t.height=a;let e=t.getContext("2d"),n=new ImageData(l,r,a);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}function Nf(e,t,n){let a=Ys(e,"img","draw");if(!(e instanceof ms)){let e=a;a=So(e,"int32"),e.dispose()}Sf(a),function(e){let t=(null==e?void 0:e.alpha)||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}(null==n?void 0:n.imageOptions);let r={image:a},s={canvas:t,options:n};Ls.runKernel(Kt,r,s)}var Tf=Qs({fromPixels_:kf}),Rf={};function Ef(e,t){let n=e.shape.length,a=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(a<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${a}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[a-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[a-1]} vs. ${n}`);if(0===le(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let r=t.shape,s=r[r.length-1],i=1;for(let e=0;e<r.length-1;++e)i*=r[e];let o=e.shape,l=r.slice();l.pop();let u=1;for(let e=s;e<n;++e)u*=o[e],l.push(o[e]);let d=[..._e(e.shape).map((e=>e/u)),1].slice(0,s);return[l,i,u,d]}C(Rf,{prepareAndValidate:()=>Ef});var $f={};C($f,{assertParamsValid:()=>_f,computeFlatOffset:()=>qf,computeOutShape:()=>Of,getNormalizedAxes:()=>Wf,isSliceContinous:()=>jf,maskToAxes:()=>Pf,parseSliceParams:()=>Xf,sliceInfo:()=>Kf,startForAxis:()=>Gf,startIndicesWithElidedDims:()=>Bf,stopForAxis:()=>Hf,stopIndicesWithElidedDims:()=>Vf,stridesForAxis:()=>Uf,stridesWithElidedDims:()=>Df});var Mf=-2,Ff=-1;function _f(e,t,n){let a=e.shape.length;se(a===t.length,(()=>`Error in slice${a}D: Length of begin ${t} must match the rank of the array (${a}).`)),se(a===n.length,(()=>`Error in slice${a}D: Length of size ${n} must match the rank of the array (${a}).`));for(let r=0;r<a;++r)se(t[r]+n[r]<=e.shape[r],(()=>`Error in slice${a}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`))}function Pf(e){let t=[],n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Of(e,t,n){let a=[];for(let r=0;r<e.length;r++)a[r]=Math.ceil((t[r]-e[r])/n[r]);return a}function Df(e,t,n,a){let r=[...e];for(let e=r.length;e<a.length;e++)r.push(1);for(let e=0;e<n;e++)0===e?r[t]=1:(r.splice(t,0,1),r.pop());return r}function zf(e,t,n){return n<=e?n:n-(t-1)}function Lf(e,t){let n=[];for(let a=0;a<e;a++)n.push(t+a);return n}function Wf(e,t,n,a,r,s,i,o,l){let u=e.length,d=new Array(u),p=new Array(u),h=new Array(u);if(t.length&&n>0){let l=t[0],u=n+1;d=Bf(i,l,u,a,e),p=Vf(o,l,u,r,e),h=Df(s,l,u,e)}else for(let t=0;t<u;t++)d[t]=Gf(i,a,s,e,t,l),p[t]=Hf(o,r,s,e,t,l),h[t]=Uf(s,t,l);return{begin:d,end:p,strides:h}}function Bf(e,t,n,a,r){let s=[...r],i=Lf(n,t);for(let r=0;r<s.length;r++)if(i.indexOf(r)>-1)s[r]=0;else{let i=zf(t,n,r),o=a[i];e&1<<i&&(o=0),s[r]=o}return s}function Vf(e,t,n,a,r){let s=[...r],i=Lf(n,t);for(let r=0;r<s.length;r++)if(i.indexOf(r)>-1)s[r]=Number.MAX_SAFE_INTEGER;else{let i=zf(t,n,r),o=a[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),s[r]=o}for(let e=0;e<s.length;e++){let t=r[e];s[e]<0&&(s[e]+=t),s[e]=Q(0,s[e],r[e])}return s}function Uf(e,t,n){let a=e[t];return(n&1<<t||null==a)&&(a=1),a}function Gf(e,t,n,a,r,s){let i=t[r],o=n[r]||1;(e&1<<r||s&1<<r||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);let l=a[r];return i<0&&(i+=l),i=Q(0,i,l-1),i}function Hf(e,t,n,a,r,s){let i=t[r],o=n[r]||1;(e&1<<r||s&1<<r||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);let l=a[r];return i<0&&(i+=l),i=o>0?Q(0,i,l):Q(-1,i,l-1),i}function jf(e,t,n){let a=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){a=e;break}for(let r=a+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function qf(e,t){let n=e.length>0?e[e.length-1]:1;for(let a=0;a<e.length-1;a++)n+=e[a]*t[a];return n}function Xf(e,t,n){let a,r,s=e.shape.length;return a="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),a.forEach((e=>{se(-1!==e,(()=>"slice() does not support negative begin indexing."))})),r=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,r=r.map(((t,n)=>t>=0?t:(se(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-a[n]))),[a,r]}function Kf(e,t,n,a,r,s,i,o,l){let u;if(null==a?(u=new Array(t.length),u.fill(1)):u=a,null!=i&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let d=!1,p={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:r,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<p.dims;e++)d&&1<<e&o&&p.numAddAxisAfterEllipsis++,1<<e&i&&(d=!0);d||(p.ellipsisMask|=1<<p.dims,p.dims++);let h={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let a=0;a<e.dims;a++)if(1<<a&e.ellipsisMask){let r=Math.min(t.dims-(e.dims-a)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=a}else if(1<<a&e.newAxisMask)t.finalShapeGatherIndices.push(Mf),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[a]),null!=e.end&&(t.end[n]=e.end[a]),t.strides[n]=e.strides[a],e.beginMask&1<<a&&(t.beginMask|=1<<n),e.endMask&1<<a&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<a?(t.finalShapeGatherIndices.push(Ff),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(a)),t.inputShapeGatherIndicesSparse[n]=a,n++}}(p,h);let c=!0,f=!0,m=!0,g=[],y=[];for(let t=0;t<e.length;++t){if(0===h.strides[t])throw Error(`strides[${t}] must be non-zero`);let n=!!(h.shrinkAxisMask&1<<t),a=e[t];if(-1===a){g.push(n?1:-1);continue}let r=[h.beginMask&1<<t,h.endMask&1<<t],s=[h.strides[t]>0?0:-1,h.strides[t]>0?a:a-1];if(n&&h.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===h.strides[t];let i=!!(h.beginMask&1<<t&&h.endMask&1<<t);if(h.beginValid&&h.endValid){if(n){let e=h.begin[t]<0?a+h.begin[t]:h.begin[t];if(h.begin[t]=e,h.end[t]=h.begin[t]+1,e<0||e>=a)throw Error(`slice index ${h.begin[t]} of dimension ${t} out of bounds.`)}else h.begin[t]=Yf(h.begin[t],0,h.strides[t],a,r,s),h.end[t]=Yf(h.end[t],1,h.strides[t],a,r,s);let e=1===h.strides[t]&&0===h.begin[t]&&h.end[t]===a;c=c&&e,f=f&&(0===t&&1===h.strides[t]||e)}else c=c&&1===h.strides[t]&&i,f=f&&(0===t&&1===h.strides[t]||i);let o,l=!1;if(h.beginValid&&h.endValid?(o=h.end[t]-h.begin[t],l=!0):n?(o=1,l=!0):i&&a>=0&&(o=h.strides[t]<0?-a:a,l=!0),l){let e;e=0===o||o<0!=h.strides[t]<0?0:Math.trunc(o/h.strides[t])+(o%h.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<h.finalShapeGatherIndices.length;++e){let t=h.finalShapeGatherIndices[e];t>=0?y.push(g[t]):t===Mf&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>h.finalShapeGatherIndices[t]!==Mf)),finalShape:y,isIdentity:c,sliceDim0:f,isSimpleSlice:m,begin:h.begin,end:h.end,strides:h.strides}}function Yf(e,t,n,a,r,s){if(r[t])return n>0?s[t]:s[t+1&1];{let t=e<0?a+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}var Zf="4.21.0",Jf=class{static sgd(e){return new jc(e)}static momentum(e,t,n=!1){return new qc(e,t,n)}static rmsprop(e,t=.9,n=0,a=null,r=!1){return new Xc(e,t,n,a,r)}static adam(e=.001,t=.9,n=.999,a=null){return new Gc(e,t,n,a)}static adadelta(e=.001,t=.95,n=null){return new Vc(e,t,n)}static adamax(e=.002,t=.9,n=.999,a=null,r=0){return new Hc(e,t,n,a,r)}static adagrad(e,t=.1){return new Uc(e,t)}},Qf=Jf,em="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function tm(){return new Promise((e=>em((()=>e()))))}var nm,am={};function rm(e,t){let n=e[0].length;e.forEach(((e,t)=>{se(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),se(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));let a=e[0];e.forEach(((e,r)=>{for(let s=0;s<n;s++)se(s===t||e[s]===a[s],(()=>`Error in concat${n}D: Shape of tensors[${r}] (${e}) does not match the shape of the rest (${a}) along the non-concatenated axis ${r}.`))}))}function sm(e,t){let n=e[0].slice();for(let a=1;a<e.length;a++)n[t]+=e[a][t];return n}function im(e,t,n){let a=new Array;if(null==n&&null==t)return a;if(null==t)for(;a.length<e+n.length;)a.push(-1);else a=t.slice();if(null==n)return a;if(e+n.length!==a.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${a.length}`);for(let r=1;r<n.length;++r){let s=n[r],i=a[a.length-n.length+r],o=a[i];if(s>=0)if(o>=0){if(o!==s)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${r+e}] = ${s} but shape[${r+e}] = ${o}`)}else a[i]=s}return a}function om(e){let t={FIRST_DIM_SIZE:nm.FIRST_DIM_SIZE,VALUE_ROWIDS:nm.VALUE_ROWIDS,ROW_LENGTHS:nm.ROW_LENGTHS,ROW_SPLITS:nm.ROW_SPLITS,ROW_LIMITS:nm.ROW_LIMITS,ROW_STARTS:nm.ROW_STARTS},n=[];for(let a of e){if(!(a in t))break;n.push(t[a])}return n}function lm(e){return 0===e.length?0:e[0]===nm.FIRST_DIM_SIZE?e.length-1:e.length}function um(e,t){if(null==e||null==t)return;let n=e.length,a=t.length;if(n>=a)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${a})`);for(let r=0;r<Math.min(n,a-1);++r){let n=e[r],a=t[r+1];if(n>=0&&a>=0&&1!==n&&n!==a)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${r-e.length}] = ${n} but ragged tensor input.flatValues.shape[${r-e.length}] = ${a}`)}}C(am,{ERF_A1:()=>wm,ERF_A2:()=>vm,ERF_A3:()=>km,ERF_A4:()=>Im,ERF_A5:()=>Sm,ERF_P:()=>bm,PARALLELIZE_THRESHOLD:()=>dm,RowPartitionType:()=>nm,SELU_SCALE:()=>Am,SELU_SCALEALPHA:()=>xm,applyActivation:()=>Ch,assertAndGetBroadcastShape:()=>Zl,assertAxesAreInnerMostDims:()=>pu,assertParamsConsistent:()=>rm,assignToTypedArray:()=>$m,axesAreInnerMostDims:()=>ou,calculateShapes:()=>th,checkEinsumDimSizes:()=>Wm,checkPadOnDimRoundingMode:()=>sl,combineLocations:()=>lu,combineRaggedTensorToTensorShapes:()=>im,complexWithEvenIndex:()=>Tm,complexWithOddIndex:()=>Rm,computeConv2DInfo:()=>Xo,computeConv3DInfo:()=>Ko,computeDefaultPad:()=>Yo,computeDilation2DInfo:()=>Ho,computeOptimalWindowSize:()=>pm,computeOutAndReduceShapes:()=>uu,computeOutShape:()=>sm,computePool2DInfo:()=>jo,computePool3DInfo:()=>qo,convertConv2DDataFormat:()=>rl,decodeEinsumEquation:()=>zm,eitherStridesOrDilationsAreOne:()=>nl,expandShapeToKeepDim:()=>du,exponent:()=>Fm,exponents:()=>Mm,fromStringArrayToUint8:()=>lg,fromUint8ToStringArray:()=>og,getAxesPermutation:()=>hu,getBroadcastDims:()=>Kl,getComplexWithIndex:()=>Em,getEinsumComputePath:()=>Bm,getEinsumPermutation:()=>Lm,getFusedBiasGradient:()=>Sh,getFusedDyActivation:()=>Ih,getImageCenter:()=>hm,getInnerMostAxes:()=>fu,getPermuted:()=>fm,getRaggedRank:()=>lm,getReductionAxes:()=>Yl,getReshaped:()=>cm,getReshapedPermuted:()=>mm,getRowPartitionTypesHelper:()=>om,getSliceBeginCoords:()=>gm,getSliceSize:()=>ym,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Hm,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>jm,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>qm,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Ym,getSparseReshapeInputOutputMismatchErrorMessage:()=>Jm,getSparseReshapeInputOutputMultipleErrorMessage:()=>Zm,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Xm,getSparseReshapeNegativeOutputDimErrorMessage:()=>Km,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>ng,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Qm,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>eg,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>tg,getUndoAxesPermutation:()=>cu,isIdentityPermutation:()=>Vm,log:()=>Ar,mergeRealAndImagArrays:()=>Cm,prepareAndValidate:()=>Ef,prepareSplitSize:()=>Gm,segment_util:()=>ag,shouldFuse:()=>Nh,slice_util:()=>$f,splitRealAndImagArrays:()=>Nm,stridesOrDilationsArePositive:()=>al,tupleValuesAreOne:()=>tl,upcastType:()=>Cs,validateDefaultValueShape:()=>um,validateInput:()=>eh,validateUpdateShape:()=>Qp,warn:()=>xr}),function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(nm||(nm={}));var dm=30;function pm(e){return e<=dm?e:Fe(e,Math.floor(Math.sqrt(e)))}function hm(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function cm(e,t,n,a=!0){let r=[];if(a)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);let n=t.length;for(let a=0;a<n;++a)r=r.concat([e[a+1]/t[a],t[a]]);r=r.concat(e.slice(n+1))}return r}function fm(e,t,n=!0){let a=[];if(n){a.push(t);for(let n=t+1;n<e;++n)n<=2*t?(a.push(n),a.push(n-(t+1))):a.push(n)}else{let n=[],r=[];for(let a=1;a<e;++a)a>=2*t+1||a%2==1?r.push(a):n.push(a);a.push(...n),a.push(0),a.push(...r)}return a}function mm(e,t,n,a=!0){let r=[];a?r.push(e[0]/n):r.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?a?r.push(t[n-1]*e[n]):r.push(e[n]/t[n-1]):r.push(e[n]);return r}function gm(e,t){let n=[0];for(let a=0;a<t;++a)n.push(e[a][0]);return n}function ym(e,t,n){let a=e.slice(0,1);for(let r=0;r<n;++r)a.push(e[r+1]-t[r][0]-t[r][1]);return a}var xm=1.7580993408473768,Am=1.0507009873554805,bm=.3275911,wm=.254829592,vm=-.284496736,km=1.421413741,Im=-1.453152027,Sm=1.061405429;function Cm(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(2*e.length);for(let a=0;a<n.length;a+=2)n[a]=e[a/2],n[a+1]=t[a/2];return n}function Nm(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let a=0;a<e.length;a+=2)t[a/2]=e[a],n[a/2]=e[a+1];return{real:t,imag:n}}function Tm(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],a[Math.floor(t/4)]=e[t+1];return{real:n,imag:a}}function Rm(e){let t=Math.floor(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],a[Math.floor(t/4)]=e[t+1];return{real:n,imag:a}}function Em(e,t){return{real:e[2*t],imag:e[2*t+1]}}function $m(e,t,n,a){e[2*a]=t,e[2*a+1]=n}function Mm(e,t){let n=new Float32Array(e/2),a=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){let s=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(s),a[r]=Math.sin(s)}return{real:n,imag:a}}function Fm(e,t,n){let a=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(a),imag:Math.sin(a)}}var _m="->",Pm=/->/g,Om=",",Dm="...";function zm(e,t){let n=((e=e.replace(/\s/g,"")).length-e.replace(Pm,"").length)/_m.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${_m}").`);let[a,r]=e.split(_m);se(-1===a.indexOf(Dm),(()=>`The ellipsis notation ("${Dm}") is not supported yet.`));let s=a.split(Om),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let e=0;e<r.length;++e){let t=r[e];if(!s.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<a.length;++e){let t=a[e];-1===o.indexOf(t)&&t!==Om&&o.push(t)}let l=new Array(s.length);for(let e=0;e<i;++e){if(new Set(s[e].split("")).size!==s[e].length)throw new Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<s[e].length;++t)l[e].push(o.indexOf(s[e][t]))}let u=o.length,d=[];for(let e=r.length;e<u;++e)d.push(e);return{allDims:o,summedDims:d,idDims:l}}function Lm(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;let a=[];for(let t=0;t<e;++t)-1===n[t]&&a.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:a}}function Wm(e,t,n){let a=new Array(e);for(let e=0;e<n.length;++e){let r=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===a[t[e][n]]?a[t[e][n]]=r[n]:se(a[t[e][n]]===r[n],(()=>`Expected dimension ${a[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(r)}, but got dimension ${r[n]}`))}}function Bm(e,t){let n=e,a=[],r=0;0===e.length&&n.push(-1),r=e.length+1;for(let e=0;e<r;++e)a.push([]);let s=[];for(let e=0;e<n.length;++e){let r=Um(t,n[e]);for(let t of r)-1===s.indexOf(t)&&(a[e].push(t),s.push(t))}return{path:n,steps:a}}function Vm(e){return e.every(((e,t)=>e===t))}function Um(e,t){let n=[];for(let a=0;a<e.length;++a)(0===e[a].length||-1!==e[a].indexOf(t)||-1===t)&&n.push(a);return n}function Gm(e,t,n=0){let a=[];if("number"==typeof t)se(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),a=new Array(t).fill(e.shape[n]/t);else{se(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));let r=t.indexOf(-1);if(-1!==r){let a=t.reduce(((e,t)=>t>0?e+t:e));t[r]=e.shape[n]-a}se(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),a=t}return a}function Hm(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function jm(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function qm(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Xm(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Km(e,t){return`size ${e} must be non-negative, not ${t}`}function Ym(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Zm(e,t){return`Input to reshape is a SparseTensor with ${le(e)}\n  dense values, but the requested shape requires a multiple of ${le(t)}. inputShape=${e} outputShape= ${t}`}function Jm(e,t){return`Input to reshape is a tensor with ${le(e)} dense values, but the requested shape has ${le(t)}. inputShape=${e} outputShape=${t}`}function Qm(){return"segment ids must be >= 0"}function eg(){return"segment ids are not increasing"}function tg(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function ng(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var ag={};function rg(e,t){let n,a=!1;for(e<=dm?(n=e,a=!0):n=Fe(e,Math.floor(Math.sqrt(e)));!a;)n>t||n===e?a=!0:n=Fe(e,n+1);return n}function sg(e,t,n){let a=[],r=e.length;for(let s=0;s<r;s++)s!==t?a.push(e[s]):a.push(n);return a}function ig(e,t,n,a){let r=t.shape.length,s=e.shape.length;if(0!==a&&(a<-r||a>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${a}`);if(a<0&&(a+=r),a>s)throw new Error(`batchDims (${a}) must be less than rank(x) (\n    ${s}).`);if(n<a)throw new Error(`batchDims (${a}) must be less than or equal to axis (${n}).`);for(let n=0;n<a;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);let i=e.shape[n],o=[],l=1,u=1,d=1;for(let t=0;t<a;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=a;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=a;e<r;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),d*=e.shape[t];return{batchSize:l,sliceSize:d,outerSize:u,dimSize:i,outputShape:o}}function og(e){try{return e.map((e=>Jr(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function lg(e){return e.map((e=>Zr(e)))}C(ag,{collectGatherOpShapeInfo:()=>ig,computeOutShape:()=>sg,segOpComputeOptimalWindowSize:()=>rg});var ug,dg,pg={};C(pg,{nonMaxSuppressionV3Impl:()=>jh,nonMaxSuppressionV4Impl:()=>qh,nonMaxSuppressionV5Impl:()=>Xh,whereImpl:()=>dh}),function(){for(let e of Kc)Lc(e)}(),Xe().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(ug||(ug={})),function(e){let t;var n;(n=t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"}(dg||(dg={}));var hg={};function cg(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};hg[e]=n}function fg(e){return hg[e]}function mg(e){delete hg[e]}function gg(e,t,n,a,r){let s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){let e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd,o=e<0?t.inputNames.length+e:e;if("tensor"===s.type)return yg(t.inputNames[o],n,a,r);if("tensors"===s.type){let s=t.inputs.slice(e,i);return t.inputNames.slice(e,i).filter(((e,t)=>{var n;return"NoOp"!==(null===(n=s[t])||void 0===n?void 0:n.op)})).map((e=>yg(e,n,a,r)))}let l=yg(t.inputNames[o],n,a,r),u=l.dataSync();return"number"===s.type?u[0]:$r.toNestedArray(l.shape,u)}let i=t.attrParams[e];return i&&i.value}function yg(e,t,n,a){let[r,s]=wg(e,n);if(null!=a){let e=a.getHashTableHandleByName(r);if(null!=e)return e}let i=n.currentContextIds.find((e=>!!t[bg(r,e)]));return void 0!==i?t[bg(r,i)][s]:void 0}function xg(e,t,n){return t[bg(e,n.currentContextId)]}function Ag(e,t){let[n,a,r]=wg(e,t);return[bg(n,t&&t.currentContextId),a,r]}function bg(e,t){return t?`${e}-${t}`:e}function wg(e,t){if(""===e)return["",0,void 0];let n=null!=t&&null!=t.parseNodeNameCache;if(n){let n=t.parseNodeNameCache.get(e);if(null!=n)return n}let a,r=e.split(":");if(1===r.length)a=[e,0,void 0];else{let e=r[0],t=3===r.length?r[1]:void 0;a=[e,Number(r[r.length-1]),t]}return n&&t.parseNodeNameCache.set(e,a),a}function vg(e,t,n){let a=gg("pad",e,t,n);if("explicit"===a){a=gg("explicitPaddings",e,t,n);let r=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)r[e][0]=a[2*e],r[e][1]=a[2*e+1];return r}return a}function kg(e){return e.kept?e:Co(e)}var Ig={};C(Ig,{json:()=>Sg});var Sg=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Cg={};C(Cg,{json:()=>Ng});var Ng=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Tg={};C(Tg,{json:()=>Rg});var Rg=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],Eg={};C(Eg,{json:()=>$g});var $g=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],Mg={};C(Mg,{json:()=>Fg});var Fg=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],_g={};C(_g,{json:()=>Pg});var Pg=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Og={};C(Og,{json:()=>Dg});var Dg=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],zg={};C(zg,{json:()=>Lg});var Lg=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],Wg={};C(Wg,{json:()=>Bg});var Bg=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],Vg={};C(Vg,{json:()=>Ug});var Ug=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],Gg={};C(Gg,{json:()=>Hg});var Hg=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],jg={};C(jg,{json:()=>qg});var qg=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],Xg={};C(Xg,{json:()=>Kg});var Kg=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],Yg={};C(Yg,{json:()=>Zg});var Zg=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],Jg={};C(Jg,{json:()=>Qg});var Qg=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],ey={};C(ey,{json:()=>ty});var ty=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],ny={};C(ny,{json:()=>ay});var ay=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],ry={};C(ry,{json:()=>sy});var sy=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],iy={};C(iy,{json:()=>oy});var oy=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],ly=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[].concat(...[Ig,Cg,Tg,Eg,Mg,_g,Og,zg,Wg,Vg,Gg,jg,Xg,Yg,Jg,ey,ny,ry,iy].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){let n=e.node,a=[],r=[],s=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?a.push(e[t.name]):"Const"===t.op?r.push(e[t.name]):(null==t.input||0===t.input.length)&&s.push(e[t.name]),e)),{}),o=[],l=[],u={},d={};null!=t&&(u=this.mapSignatureEntries(t.inputs),d=this.mapSignatureEntries(t.outputs));let p=Object.keys(i);p.forEach((e=>{let t=i[e];t.inputNames.forEach(((e,n)=>{let[a,,r]=Ag(e),s=i[a];if(null!=s.outputs){let e=s.outputs.indexOf(r);if(-1!==e){let r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(d).length?p.forEach((e=>{let t=i[e];0===t.children.length&&l.push(t)})):Object.keys(d).forEach((e=>{let[t]=Ag(e),n=i[t];null!=n&&(n.signatureKey=d[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{let[t]=Ag(e),n=i[t];n&&(n.signatureKey=u[e],o.push(n))})):o=a;let h={};null!=e.library&&null!=e.library.function&&(h=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));let c={nodes:i,inputs:o,outputs:l,weights:r,placeholders:a,signature:t,functions:h};return s.length>0&&(c.initNodes=s),c}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){let t=fg(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{let a,r=n.type;switch(n.type){case"string":a=dy(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=dy(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=by(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=by(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=hy(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=hy(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=Ay(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Ay(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=py(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=py(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=vy(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=vy(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=xy(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=xy(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=wy(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=wy(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=my(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=my(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=gy(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=gy(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=fy(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=fy(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t}),{})),n}mapFunction(e){let t=e.nodeDef,n=[],a={};null!=t&&(a=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));let r=[],s=[];e.signature.inputArg.forEach((e=>{let[t]=Ag(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:cy(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,r.push(n),a[t]=n})),Object.keys(a).forEach((e=>{let t=a[e];t.inputNames.forEach(((e,n)=>{let[r,,s]=Ag(e),i=a[r];if(null!=i.outputs){let e=i.outputs.indexOf(s);if(-1!==e){let a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(i),i.children.push(t)}))}));let i=e.ret;e.signature.outputArg.forEach((e=>{let[t,n]=Ag(i[e.name]),r=a[t];null!=r&&(r.defaultOutput=n,s.push(r))}));let o=this.mapArgsToSignature(e);return{nodes:a,inputs:r,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}};function uy(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){let t=Xe().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function dy(e,t,n,a=!1){let r=e[t];return null!=r?uy(r.s,a):n}function py(e,t,n){let a=e[t];return a?a.b:n}function hy(e,t,n){let a=e[t]||{},r=null!=a.i?a.i:null!=a.f?a.f:n;return"number"==typeof r?r:parseInt(r,10)}function cy(e){switch("string"==typeof e&&(e=ug[e]),e){case ug.DT_FLOAT:case ug.DT_HALF:return"float32";case ug.DT_INT32:case ug.DT_INT64:case ug.DT_INT8:case ug.DT_UINT8:return"int32";case ug.DT_BOOL:return"bool";case ug.DT_DOUBLE:return"float32";case ug.DT_STRING:return"string";case ug.DT_COMPLEX64:case ug.DT_COMPLEX128:return"complex64";default:return null}}function fy(e,t,n){let a=e[t];return a&&a.func?a.func.name:n}function my(e,t,n){let a=e[t];return a&&a.type?cy(a.type):n}function gy(e,t,n){let a=e[t];return a&&a.list&&a.list.type?a.list.type.map((e=>cy(e))):n}function yy(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function xy(e,t,n){let a=e[t];return a&&a.shape?yy(a.shape):n}function Ay(e,t,n){let a=e[t];return a?((a.list.f&&a.list.f.length?a.list.f:a.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function by(e,t,n,a=!1){let r=e[t];return r&&r.list&&r.list.s?r.list.s.map((e=>uy(e,a))):n}function wy(e,t,n){let a=e[t];return a&&a.list&&a.list.shape?a.list.shape.map((e=>yy(e))):n}function vy(e,t,n){let a=e[t];return a&&a.list&&a.list.b?a.list.b:n}var ky=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return yg(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(null!=n.tensor)return yg(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return hy(this.node.rawAttrs,e,t);if(null!=n.s)return dy(this.node.rawAttrs,e,t);if(null!=n.b)return py(this.node.rawAttrs,e,t);if(null!=n.shape)return xy(this.node.rawAttrs,e,t);if(null!=n.type)return my(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Ay(this.node.rawAttrs,e,t);if(null!=n.list.s)return by(this.node.rawAttrs,e,t);if(null!=n.list.shape)return wy(this.node.rawAttrs,e,t);if(null!=n.list.b)return vy(this.node.rawAttrs,e,t);if(null!=n.list.type)return gy(this.node.rawAttrs,e,t)}return t}},Iy={};function Sy(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){$r.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let a=0;a<e.length;a++){let r=e[a],s=t[a];$r.assert(r<0||s<0||r===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function Cy(e){return!("number"==typeof e||e.some((e=>e<0)))}function Ny(e,t,n){let a=Ty(e,n),r=!Cy(a);if(r&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${a}`);if(r&&t.forEach((e=>{a=Ty(e.shape,a)})),!Cy(a))throw new Error(`Non-fully-defined elementShape: ${a}`);return a}function Ty(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let a=0;a<e.length;++a){let r=e[a],s=t[a];if(r>=0&&s>=0&&r!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[a]=r>=0?r:s}return n}C(Iy,{OP_SCOPE_SUFFIX:()=>Js,abs:()=>Mo,acos:()=>Fo,acosh:()=>_o,add:()=>To,addN:()=>Po,all:()=>Oo,any:()=>Do,argMax:()=>zo,argMin:()=>Lo,asin:()=>Wo,asinh:()=>Bo,atan:()=>Vo,atan2:()=>Uo,atanh:()=>Go,avgPool:()=>ol,avgPool3d:()=>ll,basicLSTMCell:()=>fl,batchNorm:()=>yl,batchNorm2d:()=>xl,batchNorm3d:()=>Al,batchNorm4d:()=>bl,batchToSpaceND:()=>ml,bincount:()=>wl,bitwiseAnd:()=>vl,booleanMaskAsync:()=>hh,broadcastArgs:()=>kl,broadcastTo:()=>Il,buffer:()=>Io,cast:()=>So,ceil:()=>Sl,clipByValue:()=>Nl,clone:()=>Co,complex:()=>ei,concat:()=>ul,concat1d:()=>Tl,concat2d:()=>Rl,concat3d:()=>El,concat4d:()=>$l,conv1d:()=>Fl,conv2d:()=>Ml,conv2dTranspose:()=>Pl,conv3d:()=>Ol,conv3dTranspose:()=>zl,cos:()=>Ll,cosh:()=>Wl,cosineWindow:()=>bh,cumprod:()=>Bl,cumsum:()=>Vl,denseBincount:()=>Ul,depthToSpace:()=>Gl,depthwiseConv2d:()=>Hl,diag:()=>jl,dilation2d:()=>ql,div:()=>Eo,divNoNan:()=>tu,dot:()=>nu,dropout:()=>xh,einsum:()=>au,elu:()=>ru,enclosingPowerOfTwo:()=>Ah,ensureShape:()=>su,equal:()=>Jl,erf:()=>iu,euclideanNorm:()=>Iu,exp:()=>Su,expandDims:()=>Cu,expm1:()=>Nu,eye:()=>Ru,fft:()=>Pp,fill:()=>Cl,floor:()=>Eu,floorDiv:()=>Ro,fused:()=>vh,gather:()=>$u,gatherND:()=>yh,greater:()=>Mu,greaterEqual:()=>Fu,ifft:()=>Op,imag:()=>_u,image:()=>Rc,inTopKAsync:()=>wh,irfft:()=>Dp,isFinite:()=>Pu,isInf:()=>Ou,isNaN:()=>Du,leakyRelu:()=>zu,less:()=>Lu,lessEqual:()=>Wu,linalg:()=>Ec,linspace:()=>Bu,localResponseNormalization:()=>Vu,log:()=>Uu,log1p:()=>Gu,logSigmoid:()=>ed,logSoftmax:()=>nd,logSumExp:()=>ad,logicalAnd:()=>rd,logicalNot:()=>sd,logicalOr:()=>id,logicalXor:()=>od,losses:()=>$c,lowerBound:()=>dd,matMul:()=>dl,max:()=>mu,maxPool:()=>pd,maxPool3d:()=>hd,maxPoolWithArgmax:()=>cd,maximum:()=>fd,mean:()=>md,meshgrid:()=>xd,min:()=>gu,minimum:()=>Ad,mirrorPad:()=>bd,mod:()=>wd,moments:()=>vd,movingAverage:()=>fh,mul:()=>$o,multiRNNCell:()=>kd,multinomial:()=>Id,neg:()=>Ju,norm:()=>ku,notEqual:()=>Sd,oneHot:()=>Cd,ones:()=>yd,onesLike:()=>Nd,op:()=>Qs,outerProduct:()=>Td,pad:()=>Rd,pad1d:()=>Ed,pad2d:()=>$d,pad3d:()=>Md,pad4d:()=>Fd,pool:()=>Pd,pow:()=>yu,prelu:()=>Od,print:()=>No,prod:()=>Dd,raggedGather:()=>zd,raggedRange:()=>Ld,raggedTensorToTensor:()=>Wd,rand:()=>Bd,randomGamma:()=>op,randomNormal:()=>lp,randomStandardNormal:()=>up,randomUniform:()=>dp,randomUniformInt:()=>pp,range:()=>hp,real:()=>cp,reciprocal:()=>fp,relu:()=>mp,relu6:()=>gp,reshape:()=>il,reverse:()=>yp,reverse1d:()=>xp,reverse2d:()=>Ap,reverse3d:()=>bp,reverse4d:()=>wp,rfft:()=>Lp,round:()=>vp,rsqrt:()=>kp,scalar:()=>xu,scatterND:()=>mh,searchSorted:()=>ud,selu:()=>Ip,separableConv2d:()=>Sp,setdiff1dAsync:()=>Cp,sigmoid:()=>pl,sign:()=>Np,signal:()=>Tc,sin:()=>Tp,sinh:()=>Rp,slice:()=>hl,slice1d:()=>Ep,slice2d:()=>$p,slice3d:()=>Mp,slice4d:()=>Fp,softmax:()=>_p,softplus:()=>Qu,spaceToBatchND:()=>_d,sparse:()=>Mc,sparseToDense:()=>gh,spectral:()=>Nc,split:()=>zp,sqrt:()=>Au,square:()=>bu,squaredDifference:()=>Wp,squeeze:()=>Bp,stack:()=>Vp,step:()=>Up,stridedSlice:()=>Gp,string:()=>Fc,sub:()=>td,sum:()=>wu,tan:()=>Hp,tanh:()=>cl,tensor:()=>ni,tensor1d:()=>jp,tensor2d:()=>qp,tensor3d:()=>Xp,tensor4d:()=>Kp,tensor5d:()=>Yp,tensor6d:()=>Zp,tensorScatterUpdate:()=>nh,tile:()=>Tu,topk:()=>ah,transpose:()=>ch,truncatedNormal:()=>rh,unique:()=>sh,unsortedSegmentSum:()=>ih,unstack:()=>oh,upperBound:()=>lh,variable:()=>uh,where:()=>Ql,whereAsync:()=>ph,zeros:()=>gd,zerosLike:()=>eu});var Ry=class{constructor(e,t,n,a,r,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=a,this.identicalElementShapes=r,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=xu(0),mi(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{(null==e||!e.has(t.tensor.id))&&t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0===this.size()&&(null==this.elementShape||0===this.elementShape.length)&&(this.elementShape=t.shape),Sy(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,mi(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return ni([],[0].concat(this.elementShape));let n=this.readMany(e);return Sy(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Vp(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return ni([],[0].concat(this.elementShape));let t=[];for(let e=0;e<this.size();e++)t.push(e);let n=this.readMany(t);return Sy(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),ul(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,oh(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,a=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let r=0===n?0:t.size/n,s=[];ci((()=>{t=il(t,[1,n,r]);for(let n=0;n<e.length;++n){let i=[0,0===n?0:a[n-1],0],o=[1,e[n],r];s[n]=il(hl(t,i,o),this.elementShape)}return s}));let i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,s)}},Ey=class e{get id(){return this.idTensor.id}constructor(e,t,n,a=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);Sy(t,e.shape,"TensorList shape mismatch: "),mi(e)})),this.idTensor=xu(0),this.maxNumElements=a,mi(this.idTensor)}copy(){return new e([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{(null==e||!e.has(t.id))&&t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Sy(e,this.elementShape,"TensorList shape mismatch: ");let a=Ny(this.elementShape,this.tensors,e);return ci((()=>{let e=this.tensors.map((e=>il(e,a)));return Vp(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");let n=Ny(this.elementShape,this.tensors,e),a=this.tensors.pop();return a.kept=!1,Sy(a.shape,e,"TensorList shape mismatch: "),il(a,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Sy(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");mi(e),this.tensors.push(e)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(-1!==this.maxNumElements&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);let n=new e([],this.elementShape,this.elementDtype,this.maxNumElements);n.tensors.length=t;for(let e=0;e<Math.min(this.tensors.length,t);++e)n.tensors[e]=this.tensors[e];return n}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);Sy(this.tensors[e].shape,t,"TensorList shape mismatch: ");let a=Ny(this.elementShape,this.tensors,t);return il(this.tensors[e],a)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Sy(this.elementShape,t.shape,"TensorList shape mismatch: "),mi(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Sy(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let a=Ny(this.elementShape,this.tensors,n);return 0===e.length?ni([],[0].concat(a)):ci((()=>{let t=e.map((e=>il(this.tensors[e],a)));return Vp(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Sy(this.elementShape,t,"TensorList shape mismatch: ");let n=Ny(this.elementShape,this.tensors,t);return 0===this.size()?ni([],[0].concat(n)):ci((()=>{let e=this.tensors.map((e=>il(e,n)));return ul(e,0)}))}};function $y(e,t,n){let[a,r]=gg("fusedOps",e,t,n),s="biasadd"===a,i=!s,o="prelu"===r,l="fusedbatchnorm"===a,u=gg("numArgs",e,t,n);if(s){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let d=gg("strides",e,t,n),p=vg(e,t,n),h=gg("dataFormat",e,t,n).toUpperCase(),c=gg("dilations",e,t,n),[f,m]=gg("args",e,t,n);return i&&(m=f,f=void 0),{stride:d,pad:p,dataFormat:h,dilations:c,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:gg("leakyreluAlpha",e,t,n)}}function My(e,t,n){return{boxes:gg("boxes",e,t,n),scores:gg("scores",e,t,n),maxOutputSize:gg("maxOutputSize",e,t,n),iouThreshold:gg("iouThreshold",e,t,n),scoreThreshold:gg("scoreThreshold",e,t,n),softNmsSigma:gg("softNmsSigma",e,t,n)}}var Fy=class{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=xu(0),this.tensorMap=new Map,mi(this.handle)}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return xu(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),ci((()=>{let e=oh(t),a=n.length,r=e.length;$r.assert(a===r,(()=>`The number of elements doesn't match, keys has ${a} elements, the values has ${r} elements.`));for(let t=0;t<a;t++){let a=n[t],r=e[t];mi(r),this.tensorMap.set(a,r)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return ci((()=>{let e=[];for(let a=0;a<n.length;a++){let r=n[a],s=this.findWithDefault(r,t);e.push(s)}return Vp(e)}))}findWithDefault(e,t){let n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}};function _y(e,t,n,a,r=ci){let s=((e,t,n)=>{switch(e.category){case"arithmetic":return r((()=>((e,t,n,a=Iy)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[a.add(gg("a",e,t,n),gg("b",e,t,n))];case"AddN":return[a.addN(gg("tensors",e,t,n))];case"FloorMod":case"Mod":return[a.mod(gg("a",e,t,n),gg("b",e,t,n))];case"Mul":return[a.mul(gg("a",e,t,n),gg("b",e,t,n))];case"RealDiv":case"Div":return[a.div(gg("a",e,t,n),gg("b",e,t,n))];case"DivNoNan":return[a.divNoNan(gg("a",e,t,n),gg("b",e,t,n))];case"FloorDiv":return[a.floorDiv(gg("a",e,t,n),gg("b",e,t,n))];case"Sub":return[a.sub(gg("a",e,t,n),gg("b",e,t,n))];case"Minimum":return[a.minimum(gg("a",e,t,n),gg("b",e,t,n))];case"Maximum":return[a.maximum(gg("a",e,t,n),gg("b",e,t,n))];case"Pow":return[a.pow(gg("a",e,t,n),gg("b",e,t,n))];case"SquaredDifference":return[a.squaredDifference(gg("a",e,t,n),gg("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return r((()=>((e,t,n,a=Iy)=>{switch(e.op){case"Abs":case"ComplexAbs":return[a.abs(gg("x",e,t,n))];case"Acos":return[a.acos(gg("x",e,t,n))];case"Acosh":return[a.acosh(gg("x",e,t,n))];case"Asin":return[a.asin(gg("x",e,t,n))];case"Asinh":return[a.asinh(gg("x",e,t,n))];case"Atan":return[a.atan(gg("x",e,t,n))];case"Atan2":return[a.atan2(gg("x",e,t,n),gg("y",e,t,n))];case"Atanh":return[a.atanh(gg("x",e,t,n))];case"Ceil":return[a.ceil(gg("x",e,t,n))];case"Complex":return[a.complex(gg("real",e,t,n),gg("imag",e,t,n))];case"Cos":return[a.cos(gg("x",e,t,n))];case"Cosh":return[a.cosh(gg("x",e,t,n))];case"Elu":return[a.elu(gg("x",e,t,n))];case"Erf":return[a.erf(gg("x",e,t,n))];case"Exp":return[a.exp(gg("x",e,t,n))];case"Expm1":return[a.expm1(gg("x",e,t,n))];case"Floor":return[a.floor(gg("x",e,t,n))];case"Log":return[a.log(gg("x",e,t,n))];case"Log1p":return[a.log1p(gg("x",e,t,n))];case"Imag":return[a.imag(gg("x",e,t,n))];case"Neg":return[a.neg(gg("x",e,t,n))];case"Reciprocal":return[a.reciprocal(gg("x",e,t,n))];case"Real":return[a.real(gg("x",e,t,n))];case"Relu":return[a.relu(gg("x",e,t,n))];case"Round":return[a.round(gg("x",e,t,n))];case"Selu":return[a.selu(gg("x",e,t,n))];case"Sigmoid":return[a.sigmoid(gg("x",e,t,n))];case"Sin":return[a.sin(gg("x",e,t,n))];case"Sign":return[a.sign(gg("x",e,t,n))];case"Sinh":return[a.sinh(gg("x",e,t,n))];case"Softplus":return[a.softplus(gg("x",e,t,n))];case"Sqrt":return[a.sqrt(gg("x",e,t,n))];case"Square":return[a.square(gg("x",e,t,n))];case"Tanh":return[a.tanh(gg("x",e,t,n))];case"Tan":return[a.tan(gg("x",e,t,n))];case"ClipByValue":return[a.clipByValue(gg("x",e,t,n),gg("clipValueMin",e,t,n),gg("clipValueMax",e,t,n))];case"Relu6":return[a.relu6(gg("x",e,t,n))];case"Rsqrt":return[a.rsqrt(yg(e.inputNames[0],t,n))];case"LeakyRelu":return[a.leakyRelu(gg("x",e,t,n),gg("alpha",e,t,n))];case"Prelu":return[a.prelu(gg("x",e,t,n),gg("alpha",e,t,n))];case"IsNan":return[a.isNaN(yg(e.inputNames[0],t,n))];case"IsInf":return[a.isInf(yg(e.inputNames[0],t,n))];case"IsFinite":return[a.isFinite(yg(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let a=gg("thenBranch",e,t,n),r=gg("elseBranch",e,t,n),s=gg("cond",e,t,n),i=gg("args",e,t,n);return(await s.data())[0]?n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let a=gg("body",e,t,n),r=gg("cond",e,t,n),s=gg("args",e,t,n),i=await n.functionMap[r].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map((e=>e.id)),l=await i[0].data();i.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&e.dispose()}));let u=s;for(;l[0];){let e=u;u=await n.functionMap[a].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);let t=u.map((e=>e.id));e.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()}));let s=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await s[0].data(),s.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()}))}return u}case"LoopCond":return[kg(gg("pred",e,t,n))];case"Switch":{let a=gg("pred",e,t,n),r=gg("data",e,t,n);return r.kept||(r=kg(r)),(await a.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{let a=e.inputNames.find((e=>void 0!==yg(e,t,n)));return a?[kg(yg(a,t,n))]:void 0}case"Enter":{let a=gg("frameName",e,t,n),r=gg("tensor",e,t,n);return n.enterFrame(a),[kg(r)]}case"Exit":{let a=gg("tensor",e,t,n);return n.exitFrame(),[kg(a)]}case"NextIteration":{let a=gg("tensor",e,t,n);return n.nextIteration(),[kg(a)]}case"TensorArrayV3":{let a=gg("size",e,t,n),r=gg("dtype",e,t,n),s=gg("elementShape",e,t,n),i=gg("dynamicSize",e,t,n),o=gg("clearAfterRead",e,t,n),l=gg("identicalElementShapes",e,t,n),u=gg("name",e,t,n),d=new Ry(u,r,a,s,l,i,o);return n.addTensorArray(d),[d.idTensor,xu(1)]}case"TensorArrayWriteV3":{let a=gg("tensorArrayId",e,t,n),r=gg("index",e,t,n),s=gg("tensor",e,t,n),i=n.getTensorArray(a.id);return i.write(r,s),[i.idTensor]}case"TensorArrayReadV3":{let a=gg("tensorArrayId",e,t,n),r=gg("index",e,t,n);return[n.getTensorArray(a.id).read(r)]}case"TensorArrayGatherV3":{let a=gg("tensorArrayId",e,t,n),r=gg("indices",e,t,n),s=gg("dtype",e,t,n);return[n.getTensorArray(a.id).gather(r,s)]}case"TensorArrayScatterV3":{let a=gg("tensorArrayId",e,t,n),r=gg("indices",e,t,n),s=gg("tensor",e,t,n),i=n.getTensorArray(a.id);return i.scatter(r,s),[i.idTensor]}case"TensorArrayConcatV3":{let a=gg("tensorArrayId",e,t,n),r=n.getTensorArray(a.id),s=gg("dtype",e,t,n);return[r.concat(s)]}case"TensorArraySplitV3":{let a=gg("tensorArrayId",e,t,n),r=gg("tensor",e,t,n),s=gg("lengths",e,t,n),i=n.getTensorArray(a.id);return i.split(s,r),[i.idTensor]}case"TensorArraySizeV3":{let a=gg("tensorArrayId",e,t,n);return[xu(n.getTensorArray(a.id).size(),"int32")]}case"TensorArrayCloseV3":{let a=gg("tensorArrayId",e,t,n),r=n.getTensorArray(a.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{let a=gg("tensorListId",e,t,n),r=gg("index",e,t,n),s=gg("tensor",e,t,n),i=n.getTensorList(a.id);return i.setItem(r,s),[i.idTensor]}case"TensorListGetItem":{let a=gg("tensorListId",e,t,n),r=gg("index",e,t,n),s=gg("elementShape",e,t,n),i=gg("elementDType",e,t,n);return[n.getTensorList(a.id).getItem(r,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let a=gg("indices",e,t,n),r=function(e,t,n,a){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let r=Math.max(...t);if(null!=a&&-1!==a&&r>=a)throw new Error(`Max index must be < array size (${r}  vs. ${a})`);let s=new Ey([],n,e.dtype,a),i=oh(e,0);return t.forEach(((e,t)=>{s.setItem(e,i[t])})),s}(gg("tensor",e,t,n),a,gg("elementShape",e,t,n),gg("numElements",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let a,r=gg("elementShape",e,t,n),s=gg("elementDType",e,t,n);a="TensorListReserve"===e.op?"numElements":"maxNumElements";let i=gg(a,e,t,n),o=function(e,t,n,a){return new Ey([],e,t,a)}(r,s,0,"TensorListReserve"===e.op?-1:i);return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{let a=gg("tensorListId",e,t,n),r=gg("indices",e,t,n),s=gg("elementShape",e,t,n),i=gg("elementDType",e,t,n);return[n.getTensorList(a.id).gather(r,i,s)]}case"TensorListStack":{let a=gg("tensorListId",e,t,n),r=gg("elementShape",e,t,n),s=gg("elementDType",e,t,n),i=gg("numElements",e,t,n);return[n.getTensorList(a.id).stack(r,s,i)]}case"TensorListFromTensor":{let a=function(e,t,n){let a=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);Sy(e.shape.slice(1),t,"TensorList shape mismatch: ");let r=oh(e);return new Ey(r,t,a)}(gg("tensor",e,t,n),gg("elementShape",e,t,n),gg("elementDType",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let a=gg("tensorListId",e,t,n),r=n.getTensorList(a.id),s=gg("dtype",e,t,n),i=gg("elementShape",e,t,n);return[r.concat(s,i)]}case"TensorListPushBack":{let a=gg("tensorListId",e,t,n),r=gg("tensor",e,t,n),s=n.getTensorList(a.id);return s.pushBack(r),[s.idTensor]}case"TensorListPopBack":{let a=gg("tensorListId",e,t,n),r=gg("elementShape",e,t,n),s=gg("elementDType",e,t,n);return[n.getTensorList(a.id).popBack(r,s)]}case"TensorListSplit":{let a=gg("tensor",e,t,n),r=gg("elementShape",e,t,n),s=function(e,t,n){let a=0,r=t.map((e=>(a+=e,a)));if(a!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${a}, and tensor's shape is: ${e.shape}`);let s=Ty(e.shape.slice(1),n),i=0===a?0:e.size/a,o=ci((()=>{let n=[];e=il(e,[1,a,i]);for(let a=0;a<t.length;++a){let o=[0,0===a?0:r[a-1],0],l=[1,t[a],i];n[a]=il(hl(e,o,l),s)}return e.dispose(),n})),l=new Ey([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)l.setItem(e,o[e]);return l}(a,gg("lengths",e,t,n),r);return n.addTensorList(s),[s.idTensor]}case"TensorListLength":{let a=gg("tensorListId",e,t,n);return[xu(n.getTensorList(a.id).size(),"int32")]}case"TensorListResize":{let a=gg("tensorListId",e,t,n),r=gg("size",e,t,n),s=n.getTensorList(a.id).resize(r);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return r((()=>((e,t,n,a=Iy)=>{switch(e.op){case"Conv1D":{let r=gg("stride",e,t,n),s=gg("pad",e,t,n),i=gg("dataFormat",e,t,n).toUpperCase(),o=gg("dilation",e,t,n);return[a.conv1d(gg("x",e,t,n),gg("filter",e,t,n),r,s,i,o)]}case"Conv2D":{let r=gg("strides",e,t,n),s=vg(e,t,n),i=gg("dataFormat",e,t,n).toUpperCase(),o=gg("dilations",e,t,n);return[a.conv2d(gg("x",e,t,n),gg("filter",e,t,n),[r[1],r[2]],s,i,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:r,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:d,leakyreluAlpha:p}=$y(e,t,n);return[a.fused.conv2d({x:gg("x",e,t,n),filter:gg("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:d,preluActivationWeights:u,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{let{stride:r,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:d,leakyreluAlpha:p}=$y(e,t,n);return[a.fused.depthwiseConv2d({x:gg("x",e,t,n),filter:gg("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:d,preluActivationWeights:u,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let r=gg("outputShape",e,t,n),s=gg("strides",e,t,n),i=vg(e,t,n);return[a.conv2dTranspose(gg("x",e,t,n),gg("filter",e,t,n),r,[s[1],s[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let r=gg("strides",e,t,n),s=vg(e,t,n),i=gg("dilations",e,t,n),o=gg("dataFormat",e,t,n).toUpperCase();return[a.depthwiseConv2d(gg("input",e,t,n),gg("filter",e,t,n),[r[1],r[2]],s,o,[i[1],i[2]])]}case"Conv3D":{let r=gg("strides",e,t,n),s=gg("pad",e,t,n),i=gg("dataFormat",e,t,n).toUpperCase(),o=gg("dilations",e,t,n);return[a.conv3d(gg("x",e,t,n),gg("filter",e,t,n),[r[1],r[2],r[3]],s,i,[o[1],o[2],o[3]])]}case"AvgPool":{let r=gg("strides",e,t,n),s=gg("pad",e,t,n),i=gg("kernelSize",e,t,n);return[a.avgPool(gg("x",e,t,n),[i[1],i[2]],[r[1],r[2]],s)]}case"MaxPool":{let r=gg("strides",e,t,n),s=gg("pad",e,t,n),i=gg("kernelSize",e,t,n);return[a.maxPool(gg("x",e,t,n),[i[1],i[2]],[r[1],r[2]],s)]}case"MaxPoolWithArgmax":{let r=gg("strides",e,t,n),s=gg("pad",e,t,n),i=gg("kernelSize",e,t,n),o=gg("includeBatchInIndex",e,t,n),{result:l,indexes:u}=a.maxPoolWithArgmax(gg("x",e,t,n),[i[1],i[2]],[r[1],r[2]],s,o);return[l,u]}case"AvgPool3D":{let r=gg("strides",e,t,n),s=gg("pad",e,t,n),i=gg("kernelSize",e,t,n);return[a.avgPool3d(gg("x",e,t,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],s)]}case"MaxPool3D":{let r=gg("strides",e,t,n),s=gg("pad",e,t,n),i=gg("kernelSize",e,t,n);return[a.maxPool3d(gg("x",e,t,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],s)]}case"Dilation2D":{let r=gg("strides",e,t,n),s=gg("pad",e,t,n),i=gg("dilations",e,t,n),o=r[1],l=r[2],u=i[1],d=i[2];return[a.dilation2d(gg("x",e,t,n),gg("filter",e,t,n),[o,l],s,[u,d],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return r((()=>((e,t,n,a=Iy)=>{switch(e.op){case"Fill":{let r=gg("shape",e,t,n),s=gg("dtype",e,t,n),i=gg("value",e,t,n);return[a.fill(r,i,s)]}case"LinSpace":{let r=gg("start",e,t,n),s=gg("stop",e,t,n),i=gg("num",e,t,n);return[a.linspace(r,s,i)]}case"Multinomial":{let r=gg("logits",e,t,n),s=gg("numSamples",e,t,n),i=gg("seed",e,t,n);return[a.multinomial(r,s,i)]}case"OneHot":{let r=gg("indices",e,t,n),s=gg("depth",e,t,n),i=gg("onValue",e,t,n),o=gg("offValue",e,t,n),l=gg("dtype",e,t,n);return[a.oneHot(r,s,i,o,l)]}case"Ones":return[a.ones(gg("shape",e,t,n),gg("dtype",e,t,n))];case"OnesLike":return[a.onesLike(gg("x",e,t,n))];case"RandomStandardNormal":return[a.randomStandardNormal(gg("shape",e,t,n),gg("dtype",e,t,n),gg("seed",e,t,n))];case"RandomUniform":return[a.randomUniform(gg("shape",e,t,n),gg("minval",e,t,n),gg("maxval",e,t,n),gg("dtype",e,t,n))];case"RandomUniformInt":return[a.randomUniformInt(gg("shape",e,t,n),gg("minval",e,t,n),gg("maxval",e,t,n),gg("seed",e,t,n))];case"Range":{let r=gg("start",e,t,n),s=gg("stop",e,t,n),i=gg("step",e,t,n);return[a.range(r,s,i,gg("dtype",e,t,n))]}case"TruncatedNormal":{let r=gg("shape",e,t,n),s=gg("mean",e,t,n),i=gg("stdDev",e,t,n),o=gg("seed",e,t,n);return[a.truncatedNormal(r,s,i,gg("dtype",e,t,n),o)]}case"Zeros":return[a.zeros(gg("shape",e,t,n),gg("dtype",e,t,n))];case"ZerosLike":return[a.zerosLike(gg("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n,a,r=Iy)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:a,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=My(e,t,n),d=await r.image.nonMaxSuppressionWithScoreAsync(a,s,i,o,l,u);return[d.selectedIndices,d.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:a,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=My(e,t,n),u=gg("padToMaxOutputSize",e,t,n),d=await r.image.nonMaxSuppressionPaddedAsync(a,s,i,o,l,u);return[d.selectedIndices,d.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:a,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=My(e,t,n);return[await r.image.nonMaxSuppressionAsync(a,s,i,o,l)]}case"Where":{let a=r.cast(gg("condition",e,t,n),"bool"),s=[await r.whereAsync(a)];return a.dispose(),s}case"ListDiff":return r.setdiff1dAsync(gg("x",e,t,n),gg("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return r((()=>((e,t,n,a=Iy)=>{switch(e.op){case"LowerBound":{let r=gg("sortedSequence",e,t,n),s=gg("values",e,t,n);return[a.lowerBound(r,s)]}case"TopKV2":{let r=gg("x",e,t,n),s=gg("k",e,t,n),i=gg("sorted",e,t,n),o=a.topk(r,s,i);return[o.values,o.indices]}case"UpperBound":{let r=gg("sortedSequence",e,t,n),s=gg("values",e,t,n);return[a.upperBound(r,s)]}case"Unique":{let r=gg("x",e,t,n),s=a.unique(r);return[s.values,s.indices]}case"UniqueV2":{let r=gg("x",e,t,n),s=gg("axis",e,t,n),i=a.unique(r,s);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return r((()=>((e,t,n,a=Iy)=>{switch(e.op){case"ResizeBilinear":{let r=gg("images",e,t,n),s=gg("size",e,t,n),i=gg("alignCorners",e,t,n),o=gg("halfPixelCenters",e,t,n);return[a.image.resizeBilinear(r,[s[0],s[1]],i,o)]}case"ResizeNearestNeighbor":{let r=gg("images",e,t,n),s=gg("size",e,t,n),i=gg("alignCorners",e,t,n),o=gg("halfPixelCenters",e,t,n);return[a.image.resizeNearestNeighbor(r,[s[0],s[1]],i,o)]}case"CropAndResize":{let r=gg("image",e,t,n),s=gg("boxes",e,t,n),i=gg("boxInd",e,t,n),o=gg("cropSize",e,t,n),l=gg("method",e,t,n),u=gg("extrapolationValue",e,t,n);return[a.image.cropAndResize(r,s,i,o,l,u)]}case"ImageProjectiveTransformV3":{let r=gg("images",e,t,n),s=gg("transforms",e,t,n),i=gg("outputShape",e,t,n),o=gg("fillValue",e,t,n),l=gg("interpolation",e,t,n),u=gg("fillMode",e,t,n);return[a.image.transform(r,s,l.toLowerCase(),u.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return r((()=>((e,t,n,a=Iy)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let r=gg("default",e,t,n);return[yg(e.name,t,n)||r];case"Placeholder":return[yg(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[kg(gg("x",e,t,n))];case"IdentityN":return gg("x",e,t,n).map((e=>kg(e)));case"Shape":return[a.tensor1d(gg("x",e,t,n).shape,"int32")];case"ShapeN":return gg("x",e,t,n).map((e=>a.tensor1d(e.shape)));case"Size":return[a.scalar(gg("x",e,t,n).size,"int32")];case"Rank":return[a.scalar(gg("x",e,t,n).rank,"int32")];case"NoOp":return[a.scalar(1)];case"Print":let s=gg("x",e,t,n),i=gg("data",e,t,n),o=gg("message",e,t,n),l=gg("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<i.length;e++)console.log(Array.prototype.slice.call(i[e].dataSync()).slice(0,l));return[s];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return r((()=>((e,t,n,a=Iy)=>{switch(e.op){case"Equal":return[a.equal(gg("a",e,t,n),gg("b",e,t,n))];case"NotEqual":return[a.notEqual(gg("a",e,t,n),gg("b",e,t,n))];case"Greater":return[a.greater(gg("a",e,t,n),gg("b",e,t,n))];case"GreaterEqual":return[a.greaterEqual(gg("a",e,t,n),gg("b",e,t,n))];case"Less":return[a.less(gg("a",e,t,n),gg("b",e,t,n))];case"LessEqual":return[a.lessEqual(gg("a",e,t,n),gg("b",e,t,n))];case"LogicalAnd":return[a.logicalAnd(gg("a",e,t,n),gg("b",e,t,n))];case"LogicalNot":return[a.logicalNot(gg("a",e,t,n))];case"LogicalOr":return[a.logicalOr(gg("a",e,t,n),gg("b",e,t,n))];case"Select":case"SelectV2":return[a.where(gg("condition",e,t,n),gg("a",e,t,n),gg("b",e,t,n))];case"BitwiseAnd":return[a.bitwiseAnd(gg("a",e,t,n),gg("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return r((()=>((e,t,n,a=Iy)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[a.matMul(gg("a",e,t,n),gg("b",e,t,n),gg("transposeA",e,t,n),gg("transposeB",e,t,n))];case"Einsum":return[a.einsum(gg("equation",e,t,n),...gg("tensors",e,t,n))];case"Transpose":return[a.transpose(gg("x",e,t,n),gg("perm",e,t,n))];case"_FusedMatMul":let[r,s]=gg("fusedOps",e,t,n),i="biasadd"===r,o="prelu"===s,l=gg("numArgs",e,t,n),u=gg("leakyreluAlpha",e,t,n);if(i){if(o&&2!==l)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==l)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[d,p]=gg("args",e,t,n);return[a.fused.matMul({a:gg("a",e,t,n),b:gg("b",e,t,n),transposeA:gg("transposeA",e,t,n),transposeB:gg("transposeB",e,t,n),bias:d,activation:s,preluActivationWeights:p,leakyreluAlpha:u})];case"MatrixBandPart":return[a.linalg.bandPart(gg("a",e,t,n),gg("numLower",e,t,n),gg("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return r((()=>((e,t,n,a=Iy)=>{switch(e.op){case"EuclideanNorm":return[a.euclideanNorm(gg("x",e,t,n),gg("axis",e,t,n),gg("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[a.batchNorm(gg("x",e,t,n),gg("mean",e,t,n),gg("variance",e,t,n),gg("offset",e,t,n),gg("scale",e,t,n),gg("epsilon",e,t,n))];case"LRN":return[a.localResponseNormalization(gg("x",e,t,n),gg("radius",e,t,n),gg("bias",e,t,n),gg("alpha",e,t,n),gg("beta",e,t,n))];case"Softmax":return[a.softmax(gg("x",e,t,n))];case"LogSoftmax":return[a.logSoftmax(gg("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"ragged":return r((()=>((e,t,n,a=Iy)=>{switch(e.op){case"RaggedGather":{let{outputNestedSplits:r,outputDenseValues:s}=a.raggedGather(gg("paramsNestedSplits",e,t,n),gg("paramsDenseValues",e,t,n),gg("indices",e,t,n),gg("outputRaggedRank",e,t,n));return r.concat(s)}case"RaggedRange":{let{rtNestedSplits:r,rtDenseValues:s}=a.raggedRange(gg("starts",e,t,n),gg("limits",e,t,n),gg("splits",e,t,n));return[r,s]}case"RaggedTensorToTensor":return[a.raggedTensorToTensor(gg("shape",e,t,n),gg("values",e,t,n),gg("defaultValue",e,t,n),gg("rowPartitionTensors",e,t,n),gg("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return r((()=>((e,t,n,a=Iy)=>{switch(e.op){case"Max":{let r=gg("axis",e,t,n),s=gg("keepDims",e,t,n);return[a.max(gg("x",e,t,n),r,s)]}case"Mean":{let r=gg("axis",e,t,n),s=gg("keepDims",e,t,n);return[a.mean(gg("x",e,t,n),r,s)]}case"Min":{let r=gg("axis",e,t,n),s=gg("keepDims",e,t,n);return[a.min(gg("x",e,t,n),r,s)]}case"Sum":{let r=gg("axis",e,t,n),s=gg("keepDims",e,t,n);return[a.sum(gg("x",e,t,n),r,s)]}case"All":{let r=gg("axis",e,t,n),s=gg("keepDims",e,t,n);return[a.all(gg("x",e,t,n),r,s)]}case"Any":{let r=gg("axis",e,t,n),s=gg("keepDims",e,t,n);return[a.any(gg("x",e,t,n),r,s)]}case"ArgMax":{let r=gg("axis",e,t,n);return[a.argMax(gg("x",e,t,n),r)]}case"ArgMin":{let r=gg("axis",e,t,n);return[a.argMin(gg("x",e,t,n),r)]}case"Prod":{let r=gg("axis",e,t,n),s=gg("keepDims",e,t,n);return[a.prod(gg("x",e,t,n),r,s)]}case"Cumprod":{let r=gg("axis",e,t,n),s=gg("exclusive",e,t,n),i=gg("reverse",e,t,n);return[a.cumprod(gg("x",e,t,n),r,s,i)]}case"Cumsum":{let r=gg("axis",e,t,n),s=gg("exclusive",e,t,n),i=gg("reverse",e,t,n);return[a.cumsum(gg("x",e,t,n),r,s,i)]}case"Bincount":let r=gg("x",e,t,n),s=gg("weights",e,t,n),i=gg("size",e,t,n);return[a.bincount(r,s,i)];case"DenseBincount":{let r=gg("x",e,t,n),s=gg("weights",e,t,n),i=gg("size",e,t,n),o=gg("binaryOutput",e,t,n);return[a.denseBincount(r,s,i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return r((()=>((e,t,n,a=Iy)=>{switch(e.op){case"ConcatV2":case"Concat":{let r=gg("n",e,t,n),s=gg("axis",e,t,n),i=gg("tensors",e,t,n);return i=i.slice(0,r),[a.concat(i,s)]}case"Gather":{let r=gg("x",e,t,n),s=gg("indices",e,t,n);return[a.gather(r,a.cast(s,"int32"),0)]}case"GatherV2":{let r=gg("axis",e,t,n),s=gg("batchDims",e,t,n),i=gg("x",e,t,n),o=gg("indices",e,t,n);return[a.gather(i,a.cast(o,"int32"),r,s)]}case"Reverse":{let r=gg("dims",e,t,n),s=[];for(let e=0;e<r.length;e++)r[e]&&s.push(e);let i=gg("x",e,t,n);return[a.reverse(i,s)]}case"ReverseV2":{let r=gg("axis",e,t,n),s=gg("x",e,t,n);return[a.reverse(s,r)]}case"Slice":{let r=gg("begin",e,t,n),s=gg("size",e,t,n);return[a.slice(gg("x",e,t,n),r,s)]}case"StridedSlice":{let r=gg("begin",e,t,n),s=gg("end",e,t,n),i=gg("strides",e,t,n),o=gg("beginMask",e,t,n),l=gg("endMask",e,t,n),u=gg("ellipsisMask",e,t,n),d=gg("newAxisMask",e,t,n),p=gg("shrinkAxisMask",e,t,n),h=gg("x",e,t,n);return[a.stridedSlice(h,r,s,i,o,l,u,d,p)]}case"Pack":return ci((()=>{let r=gg("axis",e,t,n),s=gg("tensors",e,t,n),i=s[0].shape,o=a.squeeze(s[0]).shape,l=s.map((e=>{let t=$r.arraysEqual(e.shape,i);if(!t&&!$r.arraysEqual(a.squeeze(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:a.reshape(e,i)}));return[a.stack(l,r)]}));case"Unpack":{let r=gg("axis",e,t,n),s=gg("tensor",e,t,n);return a.unstack(s,r)}case"Tile":{let r=gg("reps",e,t,n);return[a.tile(gg("x",e,t,n),r)]}case"Split":case"SplitV":{let r=gg("axis",e,t,n),s=gg("numOrSizeSplits",e,t,n),i=gg("x",e,t,n);return a.split(i,s,r)}case"ScatterNd":{let r=gg("indices",e,t,n),s=gg("values",e,t,n),i=gg("shape",e,t,n);return[a.scatterND(r,s,i)]}case"GatherNd":{let r=gg("x",e,t,n),s=gg("indices",e,t,n);return[a.gatherND(r,s)]}case"SparseToDense":{let r=gg("sparseIndices",e,t,n),s=gg("outputShape",e,t,n),i=gg("sparseValues",e,t,n),o=gg("defaultValue",e,t,n);return[a.sparseToDense(r,i,s,i.dtype===o.dtype?o:a.cast(o,i.dtype))]}case"TensorScatterUpdate":{let r=gg("indices",e,t,n),s=gg("values",e,t,n),i=gg("tensor",e,t,n);return[a.tensorScatterUpdate(i,r,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return r((()=>((e,t,n,a=Iy)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:r,outputValues:s,emptyRowIndicator:i,reverseIndexMap:o}=a.sparse.sparseFillEmptyRows(gg("indices",e,t,n),gg("values",e,t,n),gg("denseShape",e,t,n),gg("defaultValue",e,t,n));return[r,s,i,o]}case"SparseReshape":{let{outputIndices:r,outputShape:s}=a.sparse.sparseReshape(gg("inputIndices",e,t,n),gg("inputShape",e,t,n),gg("newShape",e,t,n));return[r,s]}case"SparseSegmentMean":return[a.sparse.sparseSegmentMean(gg("data",e,t,n),gg("indices",e,t,n),gg("segmentIds",e,t,n))];case"SparseSegmentSum":return[a.sparse.sparseSegmentSum(gg("data",e,t,n),gg("indices",e,t,n),gg("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return r((()=>((e,t,n,a=Iy)=>{switch(e.op){case"FFT":return[a.fft(gg("x",e,t,n))];case"IFFT":return[a.ifft(gg("x",e,t,n))];case"RFFT":return[a.rfft(gg("x",e,t,n))];case"IRFFT":return[a.irfft(gg("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return r((()=>((e,t,n,a=Iy)=>{switch(e.op){case"StaticRegexReplace":return[a.string.staticRegexReplace(gg("input",e,t,n),gg("pattern",e,t,n),gg("rewrite",e,t,n),gg("replaceGlobal",e,t,n))];case"StringNGrams":{let{nGrams:r,nGramsSplits:s}=a.string.stringNGrams(gg("data",e,t,n),gg("dataSplits",e,t,n),gg("separator",e,t,n),gg("nGramWidths",e,t,n),gg("leftPad",e,t,n),gg("rightPad",e,t,n),gg("padWidth",e,t,n),gg("preserveShortSequences",e,t,n));return[r,s]}case"StringSplit":{let{indices:r,values:s,shape:i}=a.string.stringSplit(gg("input",e,t,n),gg("delimiter",e,t,n),gg("skipEmpty",e,t,n));return[r,s,i]}case"StringToHashBucketFast":return[a.string.stringToHashBucketFast(gg("input",e,t,n),gg("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return r((()=>((e,t,n,a=Iy)=>{switch(e.op){case"Cast":return[a.cast(gg("x",e,t,n),gg("dtype",e,t,n))];case"ExpandDims":{let r=gg("axis",e,t,n);return[a.expandDims(gg("x",e,t,n),r)]}case"Squeeze":{let r=gg("axis",e,t,n);return[a.squeeze(gg("x",e,t,n),r)]}case"Reshape":return[a.reshape(gg("x",e,t,n),gg("shape",e,t,n))];case"EnsureShape":return[a.ensureShape(gg("x",e,t,n),gg("shape",e,t,n))];case"MirrorPad":return[a.mirrorPad(gg("x",e,t,n),gg("padding",e,t,n),gg("mode",e,t,n))];case"PadV2":case"Pad":return[a.pad(gg("x",e,t,n),gg("padding",e,t,n),gg("constantValue",e,t,n))];case"SpaceToBatchND":{let r=gg("blockShape",e,t,n),s=gg("paddings",e,t,n);return[a.spaceToBatchND(gg("x",e,t,n),r,s)]}case"BatchToSpaceND":{let r=gg("blockShape",e,t,n),s=gg("crops",e,t,n);return[a.batchToSpaceND(gg("x",e,t,n),r,s)]}case"DepthToSpace":{let r=gg("blockSize",e,t,n),s=gg("dataFormat",e,t,n).toUpperCase();return[a.depthToSpace(gg("x",e,t,n),r,s)]}case"BroadcastTo":return[a.broadcastTo(gg("x",e,t,n),gg("shape",e,t,n))];case"BroadcastArgs":return[a.broadcastArgs(gg("s0",e,t,n),gg("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,a)=>{switch(e.op){case"HashTable":case"HashTableV2":{let r=a.getHashTableHandleByName(e.name);if(null!=r)return[r];{let r=gg("keyDType",e,t,n),s=gg("valueDType",e,t,n),i=new Fy(r,s);return a.addHashTable(e.name,i),[i.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{let r=gg("tableHandle",e,t,n,a),s=gg("keys",e,t,n),i=gg("values",e,t,n);return[await a.getHashTableById(r.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let r=gg("tableHandle",e,t,n,a),s=gg("keys",e,t,n),i=gg("defaultValue",e,t,n);return[await a.getHashTableById(r.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let r=gg("tableHandle",e,t,n,a);return[a.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,a);case"custom":let s=fg(e.op);if(s&&s.customExecutor)return s.customExecutor(new ky(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return $r.isPromise(s)?s.then((e=>[].concat(e))):[].concat(s)}var Py=class{constructor(e={},t={},n={},a={},r){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=a,this.parseNodeNameCache=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function Oy(e,t,n,a){let r=new Set,s=[],i=null,o=null,l=new Set,u=new Set(Object.keys(e).map((e=>wg(e)[0])));a=a||[];let d=new Set(a.map((e=>wg(e.name)[0]))),p=[...t];for(;p.length>0;){let e=p.pop();if((By(e)||Vy(e)||Uy(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>r.has(e)))),r.add(e.name),null==n[e.name]&&!u.has(e.name)&&!d.has(e.name)){if(0===e.inputs.length){s.push(e.name);continue}e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),p.push(e))}))}}return{inputs:e,outputs:t,usedNodes:r,missingInputs:s,dynamicNode:i,syncInputs:o}}var Dy=class extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}},zy=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),Ly=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),Wy=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function By(e){return zy.has(e.op)}function Vy(e){return Ly.has(e.op)}function Uy(e){return Wy.has(e.op)}var Gy=class e{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}constructor(t,n){this.graph=t,this.parent=n,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,null!=t.functions&&Object.keys(t.functions).forEach((n=>{this._functionExecutorMap[n]=new e(t.functions[n],this)}))}getCompilationKey(e,t){let n=e.map((e=>e.name)).sort(),a=t.map((e=>e.name)).sort();return n.join(this.SEPARATOR)+"--"+a.join(this.SEPARATOR)}compile(e,t){let n=Oy(e,t,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:r,syncInputs:s}=n;if(null!=r)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(a.length>0){let n=t.map((e=>e.name)),r=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${r}]. Missing the following inputs: [${a}]`)}let i=function(e,t){let{usedNodes:n,inputs:a}=t,r=Object.keys(a).map((e=>wg(e)[0])).map((t=>e.nodes[t])),s=e.initNodes||[],i=e=>n.has("string"==typeof e?e:e.name);function o(e){return[...new Map(e.map((e=>[e.name,e]))).values()]}let l=o([...r,...e.weights,...s]).filter(i),u=o([...l,...Object.values(e.nodes)]).filter(i),d=new Map(u.map((e=>[e.name,e]))),p={};for(let e of u){p[e.name]=p[e.name]||0;for(let t of e.children)i(t)||(p[t.name]=Number.POSITIVE_INFINITY),p[t.name]=(p[t.name]||0)+1}let h=Object.entries(p).filter((([,e])=>0===e)).map((([e])=>e)),c=[...h];for(;h.length>0;){let e=h.pop(),t=d.get(e);for(let e of t.children.filter(i))0==--p[e.name]&&(c.push(e.name),h.push(e.name))}let f=function(e,t){let n=new Map(e.map((e=>[e.name,e]))),a=t.map((e=>e.name)),r=new Set(a);for(;a.length>0;){let e=a.pop(),t=n.get(e);for(let e of t.children)!n.has(e.name)||r.has(e.name)||(r.add(e.name),a.push(e.name))}return e.filter((e=>r.has(e.name)))}(c.map((e=>d.get(e))),l);return function(e,t){let n=new Map(e.map(((e,t)=>[e.name,t]))),a=new Set(t.map((e=>e.name))),r=e=>a.has("string"==typeof e?e:e.name),s=new Set(e.map((e=>e.name))),i=e=>s.has("string"==typeof e?e:e.name);for(let t of e){for(let e of t.children.filter(i)){if(!n.has(e.name))throw new Dy(`Child ${e.name} of node ${t.name} is unreachable.`);if(n.get(t.name)>n.get(e.name))throw new Dy(`Node ${t.name} is scheduled to run after its child ${e.name}.`)}if(!r(t))for(let e of t.inputs){if(!n.has(e.name))throw new Dy(`Input ${e.name} of node ${t.name} is unreachable.`);if(n.get(e.name)>n.get(t.name))throw new Dy(`Node ${t.name} is scheduled to run before its input ${e.name}.`)}}}(f,l),f}(this.graph,n),o=function(e){let t=new Map(e.map(((e,t)=>[e.name,t]))),n=Number.MAX_SAFE_INTEGER,a=e.map(((e,t)=>By(e)?n:t)),r=e=>{let n=a[t.get(e.name)];return null==n?-1:n},s=e.map(((e,t)=>e.children.map(r).reduce(((e,t)=>Math.max(e,t)),a[t]))),i=new Map;for(let t=0;t<e.length;++t){let a=s[t];if(a===n)continue;let r=e[t],o=e[a];i.has(o.name)||i.set(o.name,[]),i.get(o.name).push(r)}return i}(i);return{orderedNodes:i,nodeLiveUntilMap:o}}cloneAndKeepTensor(e){if(null==e)return null;let t=e.clone();return mi(t),t}cloneTensorList(e){return e?e.map((e=>this.cloneAndKeepTensor(e))):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((([e,t])=>[e,this.cloneTensorList(t)])))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let a=n.map((e=>this.graph.nodes[wg(e)[0]])),r=t.map((e=>wg(e)[0])),s=new Set(r),i=r.map((e=>this.graph.nodes[e]));0===i.length&&(i=this._outputs);let o=this.getCompilationKey(a,i),l=this.compiledMap.get(o);null==l&&(l=this.compile(e,i),this.compiledMap.set(o,l));try{this.keepIntermediateTensors=Xe().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}let u={},d={};return ci((()=>{let n=new Py(this.weightMap,u,d,this.functionExecutorMap,this.parseNodeNameCache),a=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{let[r,s]=wg(t,n),i=[];i[s]=e[t],a[r]=i,this.keepIntermediateTensors&&(this.clonedTensorsMap[r]=this.cloneTensorList(i))}));let r=this.getFrozenTensorIds(a),{orderedNodes:i,nodeLiveUntilMap:o}=l;for(let e of i){if(a[e.name])continue;let t=_y(e,a,n,this._resourceManager);if($r.isPromise(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);a[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,a,n,r,s,o.get(e.name))}return null==this.parent&&n.dispose(r),t.map((e=>yg(e,a,n)))}))}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,a,r,s,i){if(!By(t)&&!s.has(e)){for(let a of n[e])null!=a&&(i[a.id]=(i[a.id]||0)+t.children.length);for(let e of t.inputs){if(By(e))continue;let t=xg(e.name,n,a);if(null!=t)for(let e of t){if(!e||e.kept||r.has(e.id))continue;let t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,a,r,s){function i(e){return By(e)||r.has(e.name)}if(!By(e)&&null!=s)for(let e of s){if(i(e))continue;let r=xg(e.name,t,n);for(let e of r)!e||e.kept||a.has(e.id)||e.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(let t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,n=!1,a={},r={}){this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=Xe().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}let s=new Py(this.weightMap,a,r,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));let i=await this.executeWithControlFlow(e,s,t,n),o=t.map((e=>yg(e,i,s))),l=o.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id)),d=new Set([...l,...u,...this.weightIds]);return Object.values(i).forEach((e=>{e.forEach((e=>{e&&!e.isDisposed&&!d.has(e.id)&&e.dispose()}))})),null==this.parent&&s.dispose(d),o}async executeFunctionAsync(e,t,n){let a=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(a,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,a){let r=Object.keys(e),s=r.map((e=>this.graph.nodes[wg(e)[0]])),i=n.map((e=>wg(e)[0])),o=new Set(i),l=i.map((e=>this.graph.nodes[e]));0===l.length&&(l=this._outputs);let{usedNodes:u,missingInputs:d,dynamicNode:p,syncInputs:h}=Oy(e,l,this.weightMap,this._initNodes),c=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),f=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{let[n,a]=wg(t),r=[];r[a]=e[t],f[n]=r}));let m={},g=this.getFrozenTensorIds(f),y={};for(;c.length>0;){let e=this.processStack(s,c,t,f,y,g,o,m,u);await Promise.all(e)}null==p&&!a&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let x=l.filter((e=>!By(e)&&!yg(e.name,f,t))).map((e=>e.name));if(x.length>0){let e="";throw null!=p&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${x}] from the provided inputs [${r}]. Consider providing the following inputs: [${d}]. ${e}`)}return f}processStack(e,t,n,a,r,s,i,o,l){let u=[];for(;t.length>0;){let e=t.pop();n.currentContext=e.contexts;let d="";if("Enter"===e.node.op&&gg("isConstant",e.node,a,n)&&([d]=Ag(e.node.name,n)),null==a[e.node.name]){let p=_y(e.node,a,n,this._resourceManager);d||([d]=Ag(e.node.name,n));let h=n.currentContext;$r.isPromise(p)?u.push(p.then((u=>(a[d]=u,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(u)),n.currentContext=h,this.checkTensorForDisposal(d,e.node,a,n,s,i,o),this.processChildNodes(e.node,t,n,a,r,l),u)))):(a[d]=p,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(p)),this.checkTensorForDisposal(d,e.node,a,n,s,i,o),this.processChildNodes(e.node,t,n,a,r,l))}else this.processChildNodes(e.node,t,n,a,r,l)}return u}processChildNodes(e,t,n,a,r,s){e.children.forEach((e=>{let[i]=Ag(e.name,n);r[i]||!s.has(e.name)||("Merge"===e.op?e.inputNames.some((e=>!!yg(e,a,n)))&&(r[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!yg(e,a,n)))&&(r[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{let n=e[t],[a]=wg(t),r=this.graph.nodes[a];if(r.attrParams.shape&&r.attrParams.shape.value){let e=r.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));$r.assert(t,(()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}r.attrParams.dtype&&r.attrParams.dtype.value&&$r.assert(n.dtype===r.attrParams.dtype.value,(()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){var t,n;let a={};for(let r in e){let s=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[r];null!=s?a[s.name]=e[r]:a[r]=e[r]}return a}checkInputs(e){let t=Object.keys(e).filter((e=>{let[t]=wg(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{var t,n;let a=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=a?a.name:e}),{})}checkOutputs(e){e.forEach((e=>{let[t]=wg(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}},Hy=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},jy="?tfjs-format=file",qy="model.json",Xy=class{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},n=Yc){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new Hy}findIOHandler(){let e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return $r.isPromise(e)?e.then((e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e))):this.loadSync(e)}loadSync(e){let t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw new Error("Model artifacts missing streamWeights function");let t=await Fi(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;let n=this.artifacts.modelTopology,a=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){let e=this.artifacts.userDefinedMetadata;null!=e.signature&&(a=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=a,this.version=`${n.versions.producer}.${n.versions.minConsumer}`,this.executor=new Gy(ly.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){let t=ly.Instance.transformGraph(e.modelInitializer);this.initializer=new Gy(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"==typeof e){let t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){let t={};return(e instanceof ms?[e]:e).forEach(((e,n)=>t[this.structuredOutputKeys[n]]=e)),t}return e}predict(e,t){let n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){let n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof ms||Array.isArray(e))){let n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(let t in n){let a=n[t];null!=a.resourceId&&(e[t]=this.resourceIdToCapturedInput[a.resourceId])}return e}e=Array.isArray(e)?e:[e];let n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let a=0;return this.inputNodes.reduce(((t,n)=>{var r,s,i;let o=null===(i=null===(s=null===(r=this.signature)||void 0===r?void 0:r.inputs)||void 0===s?void 0:s[n])||void 0===i?void 0:i.resourceId;return t[n]=null!=o?this.resourceIdToCapturedInput[o]:e[a++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){let t=this.initializerSignature.outputs,n=Object.keys(t);for(let a=0;a<n.length;a++){let r=t[n[a]];this.resourceIdToCapturedInput[r.resourceId]=e[a]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&fi(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}};async function Ky(e,t={},n=Yc){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&(e=function(e){return e.endsWith("/")||(e+="/"),`${e}${qy}${jy}`}(e));let a=new Xy(e,t,n);return await a.load(),a}function Yy(e){if(null==e)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){let[n,a]=e;if(!n)throw new Error("modelJSON must be the first element of the array");if(!(a&&a instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw new Error("Model JSON is missing 'weightsManifest'");let r=Yc.getWeightSpecs(n.weightsManifest),s=Yc.getModelArtifactsForJSONSync(n,r,a);t=Yc.fromMemorySync(s)}else if("load"in e)t=e;else{if(!("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e))throw new Error("Unknown model format");t=Yc.fromMemorySync(e)}let n=new Xy(t);return n.load(),n}var Zy="4.21.0";function Jy(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&$r.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}var Qy=pg.whereImpl,ex=class e extends K{nextDataId(){return e.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new X(this,di())}write(e,t,n){this.firstUse&&(this.firstUse=!1,Xe().get("IS_NODE")&&am.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));let a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:n,refCount:1}),a}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&$r.isString(n[0])){let r=n.map((e=>$r.encodeString(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,a,r){this.data.set(e,{values:t,dtype:a,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){let e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return am.mergeRealAndImagArrays(e,t)}return $r.convertBackendValuesAndArrayBuffer(this.data.get(e).values,t)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let n=t.map((e=>$r.decodeString(e)));return Io(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Io(e.shape,e.dtype,t)}makeOutput(e,t,n){return di().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=$r.now();return e(),{kernelMs:$r.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Jy([e],"where");let t=this.readSync(e.dataId);return Qy(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};ex.nextDataId=0;var tx={};function nx(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}C(tx,{addImpl:()=>yx,bincountImpl:()=>wx,bincountReduceImpl:()=>vx,bitwiseAndImpl:()=>kx,castImpl:()=>hx,ceilImpl:()=>Rx,concatImpl:()=>Mx,equalImpl:()=>Fx,expImpl:()=>Ox,expm1Impl:()=>Lx,floorDivImpl:()=>Hx,floorImpl:()=>Vx,gatherNdImpl:()=>Xx,gatherV2Impl:()=>Kx,greaterEqualImpl:()=>Qx,greaterImpl:()=>Yx,lessEqualImpl:()=>sA,lessImpl:()=>nA,linSpaceImpl:()=>lA,logImpl:()=>uA,maxImpl:()=>hA,maximumImpl:()=>cA,minimumImpl:()=>gA,multiplyImpl:()=>AA,negImpl:()=>kA,notEqualImpl:()=>SA,prodImpl:()=>$A,raggedGatherImpl:()=>_A,raggedRangeImpl:()=>OA,raggedTensorToTensorImpl:()=>BA,rangeImpl:()=>VA,rsqrtImpl:()=>UA,scatterImpl:()=>jA,sigmoidImpl:()=>qA,simpleAbsImpl:()=>nx,sliceImpl:()=>YA,sparseFillEmptyRowsImpl:()=>QA,sparseReshapeImpl:()=>eb,sparseSegmentReductionImpl:()=>tb,sqrtImpl:()=>nb,squaredDifferenceImpl:()=>sb,staticRegexReplaceImpl:()=>lb,stridedSliceImpl:()=>pb,stringNGramsImpl:()=>cb,stringSplitImpl:()=>mb,stringToHashBucketFastImpl:()=>gb,subImpl:()=>yb,tileImpl:()=>wb,topKImpl:()=>Ib,transposeImpl:()=>TA,uniqueImpl:()=>Sb});var ax={kernelName:Qe,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,n=e.backend;Jy(t,"abs");let a=new Float32Array($r.sizeFromShape(t.shape));return a=nx(n.data.get(t.dataId).values),n.makeOutput(a,t.shape,t.dtype)}};function rx(e){return(t,n,a,r,s)=>{let i=am.assertAndGetBroadcastShape(t,n),o=i.length,l=$r.computeStrides(i),u=$r.sizeFromShape(i),d=$r.getTypedArrayFromDType(s,u),p=t.length,h=n.length,c=$r.computeStrides(t),f=$r.computeStrides(n),m=am.getBroadcastDims(t,i),g=am.getBroadcastDims(n,i);if(m.length+g.length===0)for(let t=0;t<d.length;++t)d[t]=e(a[t%a.length],r[t%r.length]);else for(let t=0;t<d.length;++t){let n=$r.indexToLoc(t,o,l),s=n.slice(-p);m.forEach((e=>s[e]=0));let i=$r.locToIndex(s,p,c),u=n.slice(-h);g.forEach((e=>u[e]=0));let y=$r.locToIndex(u,h,f);d[t]=e(a[i],r[y])}return[d,i]}}function sx(e){let{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,o=n.makeTensorInfo(a.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(a.shape,"float32",s),imag:n.makeTensorInfo(r.shape,"float32",i)},o}var ix={kernelName:Ct,backendName:"cpu",kernelFunc:sx};function ox(e,t,n="float32"){if("complex64"===n)return sx({inputs:{real:ox(e,t,"float32"),imag:ox(e,t,"float32")},backend:e});let a=$r.makeZerosTypedArray($r.sizeFromShape(t),n);return e.makeTensorInfo(t,n,a)}function lx(e){let{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}var ux={kernelName:gn,backendName:"cpu",kernelFunc:lx};function dx(e){let{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.real,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}var px={kernelName:fa,backendName:"cpu",kernelFunc:dx};function hx(e,t,n,a){if("int32"===a)return[t,"int32",Int32Array.from(e)];if("bool"===a){let a=$r.toTypedArray([0],n),[r,s]=rx(((e,t)=>e!==t?1:0))(t,[],e,a,"bool");return[s,"bool",r]}throw new Error(`Error in Cast: failed to cast ${n} to ${a}`)}function cx(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dtype:s}=a;if("complex64"===s){if("complex64"===r.dtype)return lx({inputs:{x:r},backend:n});let e=ox(n,r.shape,r.dtype),t=cx({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),a=sx({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),a}if("complex64"===r.dtype){let e=dx({inputs:{input:r},backend:n}),t=cx({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!$r.hasEncodingLoss(r.dtype,s)){let e=lx({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}let i=n.data.get(r.dataId).values,[o,l,u]=hx(i,r.shape,r.dtype,s);return n.makeTensorInfo(o,l,u)}var fx={kernelName:kt,backendName:"cpu",kernelFunc:cx};function mx(e,t,n,a){return null==n?({inputs:n,backend:r})=>{let{a:s,b:i}=n,o=r;Jy([s,i],e);let l=o.data.get(s.dataId).values,u=o.data.get(i.dataId).values,d="string"===s.dtype?am.fromUint8ToStringArray(l):l,p="string"===s.dtype?am.fromUint8ToStringArray(u):u,h=a||s.dtype,[c,f]=t(s.shape,i.shape,d,p,h);return o.makeTensorInfo(f,h,c)}:({inputs:e,backend:r})=>{let{a:s,b:i}=e,o=r;if("complex64"===s.dtype||"complex64"===i.dtype){let e=cx({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),a=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,l=o.data.get(a.dataId).values,u=o.data.get(r.dataId).values,d=cx({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),p=o.data.get(d.dataId),h=p.complexTensorInfos.real,c=p.complexTensorInfos.imag,f=o.data.get(h.dataId).values,m=o.data.get(c.dataId).values,[g,y,x]=n(s.shape,i.shape,l,u,f,m),A=o.makeTensorInfo(x,"float32",g),b=o.makeTensorInfo(x,"float32",y),w=sx({inputs:{real:A,imag:b},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(d),o.disposeIntermediateTensorInfo(A),o.disposeIntermediateTensorInfo(b),w}{let e=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,r=a||s.dtype,[l,u]=t(s.shape,i.shape,e,n,r);return o.makeTensorInfo(u,r,l)}}}function gx(e){return(t,n,a,r,s,i)=>{let o=am.assertAndGetBroadcastShape(t,n),l=$r.sizeFromShape(o),u=o.length,d=$r.computeStrides(o),p=$r.getTypedArrayFromDType("float32",l),h=$r.getTypedArrayFromDType("float32",l),c=am.getBroadcastDims(t,o),f=am.getBroadcastDims(n,o),m=am.mergeRealAndImagArrays(a,r),g=am.mergeRealAndImagArrays(s,i),y=t.length,x=$r.computeStrides(t),A=n.length,b=$r.computeStrides(n);if(c.length+f.length===0)for(let t=0;t<p.length;t++){let n=t%m.length,a=t%g.length,r=e(m[2*n],m[2*n+1],g[2*a],g[2*a+1]);p[t]=r.real,h[t]=r.imag}else for(let t=0;t<p.length;t++){let n=$r.indexToLoc(t,u,d),a=n.slice(-y);c.forEach((e=>a[e]=0));let r=$r.locToIndex(a,y,x),s=n.slice(-A);f.forEach((e=>s[e]=0));let i=$r.locToIndex(s,A,b),o=e(m[2*r],m[2*r+1],g[2*i],g[2*i+1]);p[t]=o.real,h[t]=o.imag}return[p,h,o]}}var yx=rx(((e,t)=>e+t)),xx=gx(((e,t,n,a)=>({real:e+n,imag:t+a}))),Ax=mx(nt,yx,xx),bx={kernelName:nt,backendName:"cpu",kernelFunc:Ax};function wx(e,t,n,a,r){let s=$r.sizeFromShape(a),i=$r.makeZerosTypedArray(r,n);for(let n=0;n<e.length;n++){let a=e[n];if(a<0)throw new Error("Input x must be non-negative!");a>=r||(i[a]+=s>0?t[n]:1)}return i}function vx(e,t,n,a=!1){let r=e.shape[0],s=e.shape[1],i=Io([r,n],t.dtype);for(let o=0;o<r;o++)for(let r=0;r<s;r++){let s=e.get(o,r);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(a?i.set(1,o,s):t.size>0?i.set(i.get(o,s)+t.get(o,r),o,s):i.set(i.get(o,s)+1,o,s))}return i}var kx=rx(((e,t)=>e&t)),Ix=mx(bt,kx),Sx={kernelName:bt,backendName:"cpu",kernelFunc:Ix};function Cx(e){return(t,n,a)=>{let r=$r.getArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)r[n]=e(t[n],a);return r}}function Nx(e,t,n){return Tx(e,Cx(t),n)}function Tx(e,t,n){return({inputs:a,attrs:r,backend:s})=>{let{x:i}=a;Jy(i,e);let o,l=s,u=l.data.get(i.dataId).values;if("string"===i.dtype){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");o=am.fromUint8ToStringArray(u)}else o=u;let d=n||i.dtype,p=t(o,d,r);return l.makeTensorInfo(i.shape,d,p)}}var Rx=Cx((e=>Math.ceil(e))),Ex=Tx(It,Rx),$x={kernelName:It,backendName:"cpu",kernelFunc:Ex};function Mx(e,t,n,a){let r=$r.getArrayFromDType(n,$r.sizeFromShape(t));if(a&&"string"!==n){let t=0;e.forEach((e=>{let n=$r.sizeFromShape(e.shape);r.set(e.vals,t),t+=n}))}else{let a=0;e.forEach((e=>{let s="string"===n?am.fromUint8ToStringArray(e.vals):e.vals,i=0;for(let n=0;n<e.shape[0];++n){let o=n*t[1]+a;for(let t=0;t<e.shape[1];++t)r[o+t]=s[i++]}a+=e.shape[1]}))}return r}var Fx=rx(((e,t)=>e===t?1:0)),_x=mx(tn,Fx,null,"bool"),Px={kernelName:tn,backendName:"cpu",kernelFunc:_x},Ox=Cx((e=>Math.exp(e))),Dx=Tx(nn,Ox,"float32"),zx={kernelName:nn,backendName:"cpu",kernelFunc:Dx},Lx=Cx((e=>Math.expm1(e))),Wx=Tx(rn,Lx),Bx={kernelName:rn,backendName:"cpu",kernelFunc:Wx},Vx=Cx((e=>Math.floor(e))),Ux=Tx(un,Vx),Gx={kernelName:un,backendName:"cpu",kernelFunc:Ux},Hx=rx(((e,t)=>Math.floor(e/t))),jx=mx(dn,Hx,null,"int32"),qx={kernelName:dn,backendName:"cpu",kernelFunc:jx};function Xx(e,t,n,a,r,s,i,o,l){let u=Io([a,s],n);for(let n=0;n<a;n++){let a=[],d=0;for(let t=0;t<r;t++){let s=e[n*r+t];d+=s*i[t],a.push(s)}if(d<0||d>=l/s)throw new Error(`Invalid indices: ${a} does not index into ${o}`);for(let e=0;e<s;e++)u.values[n*s+e]=t.get(...t.indexToLoc(d*s+e))}return u}function Kx(e,t,n){let a=Io(n,e.dtype);for(let n=0;n<a.size;++n){let r=a.indexToLoc(n).slice(),s=r[0],i=r[2],o=t.locToIndex([s,i]);r[2]=t.values[o];let l=e.locToIndex(r);0<=l&&l<e.values.length&&(a.values[n]=e.values[l])}return a}var Yx=rx(((e,t)=>e>t?1:0)),Zx=mx(fn,Yx,null,"bool"),Jx={kernelName:fn,backendName:"cpu",kernelFunc:Zx},Qx=rx(((e,t)=>e>=t?1:0)),eA=mx(mn,Qx,null,"bool"),tA={kernelName:mn,backendName:"cpu",kernelFunc:eA},nA=rx(((e,t)=>e<t?1:0)),aA=mx(kn,nA,null,"bool"),rA={kernelName:kn,backendName:"cpu",kernelFunc:aA},sA=rx(((e,t)=>e<=t?1:0)),iA=mx(In,sA,null,"bool"),oA={kernelName:In,backendName:"cpu",kernelFunc:iA};function lA(e,t,n){let a=(t-e)/(n-1),r=$r.makeZerosTypedArray(n,"float32");r[0]=e;for(let e=1;e<r.length;e++)r[e]=r[e-1]+a;return r}var uA=Cx((e=>Math.log(e))),dA=Tx(Cn,uA),pA={kernelName:Cn,backendName:"cpu",kernelFunc:dA};function hA(e,t,n,a){let r=$r.getTypedArrayFromDType(a,$r.sizeFromShape(n));for(let n=0;n<r.length;++n){let a=n*t,s=e[a];for(let n=0;n<t;++n){let t=e[a+n];(Number.isNaN(t)||t>s)&&(s=t)}r[n]=s}return r}var cA=rx(((e,t)=>Math.max(e,t))),fA=mx(zn,cA),mA={kernelName:zn,backendName:"cpu",kernelFunc:fA},gA=rx(((e,t)=>Math.min(e,t))),yA=mx(jn,gA),xA={kernelName:jn,backendName:"cpu",kernelFunc:yA},AA=rx(((e,t)=>e*t)),bA=gx(((e,t,n,a)=>({real:e*n-t*a,imag:e*a+t*n}))),wA=mx(Yn,AA,bA),vA={kernelName:Yn,backendName:"cpu",kernelFunc:wA};function kA(e,t,n){let a=$r.createScalarValue(-1,n);return AA([],t,a,e,n)}var IA={kernelName:Zn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a}=t;Jy(a,"neg");let r=n.data.get(a.dataId).values,[s,i]=kA(r,a.shape,a.dtype);return n.makeTensorInfo(i,a.dtype,s)}},SA=rx(((e,t)=>e!==t?1:0)),CA=mx(Jn,SA,null,"bool"),NA={kernelName:Jn,backendName:"cpu",kernelFunc:CA};function TA(e,t,n,a,r){let s=t.length,i=$r.sizeFromShape(t),o=$r.computeStrides(t),l=$r.computeStrides(r),u=$r.getTypedArrayFromDType(n,$r.sizeFromShape(r));for(let t=0;t<i;++t){let n=$r.indexToLoc(t,s,o),r=new Array(n.length);for(let e=0;e<r.length;e++)r[e]=n[a[e]];u[$r.locToIndex(r,s,l)]=e[t]}return u}function RA(e){let{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{perm:s}=n;Jy(r,"transpose");let i=r.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=r.shape[s[e]];let l=TA(a.data.get(r.dataId).values,r.shape,r.dtype,s,o);return{dataId:a.write(l,o,r.dtype),shape:o,dtype:r.dtype}}var EA={kernelName:ir,backendName:"cpu",kernelFunc:RA};function $A(e,t,n,a){let[r,s]=am.computeOutAndReduceShapes(e,a),i=Cs(t,"int32"),o=$r.makeZerosTypedArray($r.sizeFromShape(r),i),l=$r.sizeFromShape(s);for(let e=0;e<o.length;++e){let t=e*l,a=1;for(let e=0;e<l;++e)a*=n[t+e];o[e]=a}return{outVals:o,outShape:r,outDtype:i}}var MA={kernelName:ua,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;Jy(r,"prod");let o=r.shape.length,l=$r.parseAxisParam(s,r.shape),u=am.getAxesPermutation(l,o),d=l,p=r,h=[];null!=u&&(p=RA({inputs:{x:r},backend:n,attrs:{perm:u}}),h.push(p),d=am.getInnerMostAxes(d.length,o));let c=n.data.get(p.dataId).values,{outVals:f,outShape:m,outDtype:g}=$A(p.shape,p.dtype,c,d),y=m;return i&&(y=am.expandShapeToKeepDim(m,l)),h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function FA(e,t){let n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let a=t;a<e.length;a++)n[t-1]*=e[a];return n}function _A(e,t,n,a,r,s,i,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,a)=>{if(e<0||e>=n){let r=$r.indexToLoc(a,t.length,$r.computeStrides(t)).join(",");throw new Error(`indices[${r}] = ${e} is not in [0, ${n})`)}}))}(s,i,t[0][0]-1),0===a.length)throw new Error("params.rank must be nonzero");let l=a[0],{outSplits:u,valueSlices:d,numValues:p}=function(e,t,n,a){let r=[],s=0,i=t.length-1+n.length,o=new Array(i).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){let a=e[n],r=n===e.length-1?t:e[n+1].length;if(0===a.length)throw new Error("Ragged splits may not be empty");if(a[0]<0)throw new Error("Ragged splits must be non-negative");if(a[a.length-1]>r)throw new Error("Ragged splits must not point past values");for(let e=1;e<a.length;++e)if(a[e-1]>a[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,a);let l=1;for(let e=0;e<t.length-1;++e){l*=t[e];let n=t[e+1];for(let t=1;t<l+1;++t)o[e].push(t*n)}for(let a=0;a<e.length;++a){let i=e[a],l=e[a]+1;for(let e=0;e<n.length;++e){let a=n[e],r=e+t.length-1;if(r>=0){let e=o[r],t=e[e.length-1]-a[i];for(let e=i;e<l;++e)o[r].push(a[e+1]+t)}i=a[i],l=a[l]}l!==i&&(r.push([i,l]),s+=l-i)}return{outSplits:o,valueSlices:r,numValues:s}}(s,i,e,l),h=function(e){let t=[];for(let n=0;n<e.length;++n){let a=e[n].length,r=$r.getArrayFromDType("int32",a);t.push(r),e[n].forEach(((e,t)=>r[t]=e))}return t}(u),c=function(e,t,n,a,r){let s=t.slice();s[0]=r;let i=$r.getArrayFromDType(n,$r.sizeFromShape(s)),o=e.length;return function(e,t,n,a,r,s){let i=FA(t,2)[1],o=FA(s,2)[1],l=0;for(let t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<a;++t)r[l*o+t]=e[n*i+t];++l}}(e,t,a,0===o?0:o/t[0],i,s),[i,s]}(n,a,r,d,p);return[h,c[0],c[1]]}var PA=2147483647;function OA(e,t,n,a,r,s,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");let o=0===t.length,l=0===r.length,u=0===i.length,d=[];o||d.push(t[0]),l||d.push(r[0]),u||d.push(i[0]);for(let e=1;e<d.length;++e)if(d[e]!==d[e-1])throw new Error("starts, limits, and deltas must have the same shape");let p=0===d.length?1:d[0],h=$r.getArrayFromDType("int32",p+1);h[0]=0;for(let t=0;t<p;++t){let n,r=o?e[0]:e[t],i=l?a[0]:a[t],d=u?s[0]:s[t];if(0===d)throw new Error("Requires delta != 0");if(d>0&&i<r||d<0&&i>r)n=0;else if(n=Math.ceil(Math.abs((i-r)/d)),n>PA)throw new Error(`Requires ((limit - start) / delta) <= ${PA}`);h[t+1]=h[t]+n}let c=h[p],f=$r.getArrayFromDType(n,c),m=0;for(let t=0;t<p;++t){let n=h[t+1]-h[t],a=o?e[0]:e[t],r=u?s[0]:s[t];for(let e=0;e<n;++e)f[m++]=a,a+=r}return[h,f]}var DA=am.RowPartitionType,zA=class e{constructor(e,t,n,a,r,s,i,o,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=a,this.valuesDType=r,this.defaultValue=s,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=am.getRowPartitionTypesHelper(u),this.raggedRank=am.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===DA.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===DA.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(t){let n=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case DA.VALUE_ROWIDS:return e.getMaxWidthValueRowID(n);case DA.ROW_SPLITS:return e.getMaxWidthRowSplit(n);default:throw new Error(`Cannot handle partition type ${DA[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(e){let t=e.length;if(0===t||1===t)return 0;let n=0;for(let a=0;a<t-1;++a){let t=e[a+1]-e[a];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){let t=e.length;if(0===t)return 0;let n=0,a=e[0],r=0;for(let s=1;s<t;++s){let t=e[s];t!==a&&(a=t,r=Math.max(s-n,r),n=s)}return Math.max(t-n,r)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return WA(e,n)}calculateOutputSize(e){let t=this.valuesShape,n=this.defaultValueShape;am.validateDefaultValueShape(n,t);let a=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=am.combineRaggedTensorToTensorShapes(this.raggedRank,a,t);r[0]<0&&(r[0]=e);for(let e=1;e<=this.raggedRank;++e)r[e]<0&&(r[e]=this.getMaxWidth(e));return r}calculateFirstParentOutputIndex(e,t,n){let a=Math.min(e,n),r=[],s=0;for(let e=0;e<a;++e,s+=t)r.push(s);for(let t=a;t<e;++t)r.push(-1);return $r.assert(r.length===e,(()=>"Final length of result must be equal to firstDimension.")),r}calculateOutputIndexRowSplit(e,t,n,a){let r=e.length,s=[];for(let i=0;i<r-1;++i){let r=e[i+1]-e[i],o=Math.min(a,r),l=t[i];-1===l&&(o=0);for(let e=0;e<o;++e)s.push(l),l+=n;for(let e=0;e<r-o;++e)s.push(-1)}if(r>0&&s.length!==e[r-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(e,t,n,a){let r=e.length,s=[];if(0===r)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];s.push(l);for(let u=1;u<r;++u){let r=e[u];if(r===o)l>=0&&(++i,i<a?l+=n:l=-1);else{if(i=0,o=r,r>=t.length)throw new Error(`Got nextValueRowId=${r} which is not less than ${t.length}`);l=t[r]}s.push(l)}if(s.length!==e.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(e,t,n,a){let r=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case DA.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,n,a);case DA.ROW_SPLITS:if(r.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(r,t,n,a);default:throw new Error(`Unsupported partition type: ${DA[s]}`)}}getFirstDimensionSize(){let e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");let t=this.rowPartitionTypes[0];switch(t){case DA.FIRST_DIM_SIZE:return e[0];case DA.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case DA.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${DA[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];let a=WA(t,!1),r=$r.getArrayFromDType(this.valuesDType,$r.sizeFromShape(a));if(n[0]*t[0]>0){let s=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)s=this.calculateOutputIndex(e-1,s,n[e],t[e]);this.setOutput(this.raggedRank,s,r,a)}return[a,r]}setOutput(e,t,n,a){if(0===n.length)return;let r=this.values,s=n,i=a.slice();i=i.slice(e+1);let o=$r.sizeFromShape(i),l=t.length,u=this.defaultValue;if(u.length!==o&&1!==u.length){let e=this.defaultValueShape;ci((()=>{let t=il(u,e);u=Il(t,i).dataSync()}))}let d=0,p=0,h=0;for(let e=0;e<=l;++e){let a=e<l?t[e]:-1;if(a!==h){if(p<h){let e=r.subarray(d*o);LA(s.subarray(p*o),e,(h-p)*o)}if(e>=l){let e=n.length;a=Math.floor(e/o)}if(a>h)if(1===this.defaultValue.length)s.subarray(h*o,a*o).fill(this.defaultValue[0]),h=a;else for(;a>h;)LA(s.slice(h*o),u,o),++h;a<0?(d=e+1,p=h):(d=e,p=h,h=p+1)}else++h}}};function LA(e,t,n){for(let a=0;a<n;a++)e[a]=t[a]}function WA(e,t){let n=[];for(let a of e){if(a<0){if(!t)throw new Error(`Dimension ${a} must be >= 0`);if(a<-1)throw new Error(`Dimension ${a} must be >= -1`);a=-1}n.push(a)}return n}function BA(e,t,n,a,r,s,i,o,l,u){return new zA(e,t,n,a,r,s,i,o,l,u).compute()}function VA(e,t,n,a){if(e===t||e<t&&n<0||t<e&&n>1)return $r.makeZerosTypedArray(0,a);let r=Math.abs(Math.ceil((t-e)/n)),s=$r.makeZerosTypedArray(r,a);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}var UA=Cx((e=>1/Math.sqrt(e))),GA=Tx(Sa,UA),HA={kernelName:Sa,backendName:"cpu",kernelFunc:GA};function jA(e,t,n,a,r,s,i,o,l,u){let d=[a/r,r],p=e.values,h=t.values;if(0===a)return Io(n,t.dtype);let c=l instanceof hs?l:Io(d,t.dtype);"string"==typeof l||"number"==typeof l?c.values.fill(l):"boolean"==typeof l&&c.values.fill(+l);for(let e=0;e<s;e++){let s=[],l=0;for(let t=0;t<i;t++){let n=p[e*i+t];s.push(n),l+=n*o[t]}if(l<0||l>=a/r)throw new Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<r;n++)u?c.values[l*r+n]+=h[e*r+n]:c.values[l*r+n]=0===t.rank?h[0]:h[e*r+n]}return c}var qA=Cx((e=>1/(1+Math.exp(-e)))),XA=Nx(Pa,(e=>1/(1+Math.exp(-e)))),KA={kernelName:Pa,backendName:"cpu",kernelFunc:XA};function YA(e,t,n,a,r){let s=$f.isSliceContinous(a,t,n),i=$r.sizeFromShape(n),o=$r.computeStrides(a);if(s){let n=$f.computeFlatOffset(t,o);return"string"===r?e.slice(n,n+i):e.subarray(n,n+i)}let l=Io(a,r,"string"===r?am.fromUint8ToStringArray(e):e),u=Io(n,r);for(let e=0;e<u.size;++e){let n=u.indexToLoc(e),a=n.map(((e,n)=>e+t[n]));u.set(l.get(...a),...n)}return"string"===r?am.fromStringArrayToUint8(u.values):u.values}function ZA(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:i}=a;Jy(r,"slice");let[o,l]=$f.parseSliceParams(r,s,i);$f.assertParamsValid(r,o,l);let u=YA(n.data.get(r.dataId).values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,u)}var JA={kernelName:$a,backendName:"cpu",kernelFunc:ZA};function QA(e,t,n,a,r,s,i){let o=t[0],l=s[0],u=new Array(l),d=new Array(o),p=t[1];if(0===l){if(0!==o)throw new Error(am.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));return[$r.getArrayFromDType(n,0),[0,p],$r.getArrayFromDType(r,0),u,d]}let h=!0,c=0,f=new Array(l).fill(0);for(let t=0;t<o;++t){let n=e[t*p];if(n<0)throw new Error(am.getSparseFillEmptyRowsNegativeIndexErrorMessage(t,n));if(n>=l)throw new Error(am.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(t,n,l));++f[n],h=h&&n>=c,c=n}let m=!0;for(let e=0;e<l;++e){let t=0===f[e];u[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&h){let t=e,n=a;for(let e=0;e<o;++e)d[e]=e;return[t,[o,p],n,u,d]}{let t=f[l-1],s=$r.getArrayFromDType(n,t*p),h=$r.getArrayFromDType(r,t),c=new Array(l).fill(0);for(let t=0;t<o;++t){let n=e[t*p],r=c[n],i=(0===n?0:f[n-1])+r;c[n]++;for(let n=0;n<p;++n)s[i*p+n]=e[t*p+n];h[i]=a[t],d[t]=i}for(let e=0;e<l;++e)if(0===c[e]){let t=0===e?0:f[e-1];s[t*p+0]=e;for(let e=1;e<p;++e)s[t*p+e]=0;h[t]=i}return[s,[t,p],h,u,d]}}function eb(e,t,n,a,r){let s=$r.sizeFromShape(a),i=t[0],o=r.length,l=[],u=1,d=-1;for(let e=0;e<o;++e){let t=r[e];if(-1===t){if(-1!==d)throw new Error(am.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(d,e));d=e,l.push(1)}else{if(t<0)throw new Error(am.getSparseReshapeNegativeOutputDimErrorMessage(e,t));u*=t,l.push(t)}}if(-1!==d){if(u<=0)throw new Error(am.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let e=Math.trunc(s/u);if(u*e!==s)throw new Error(am.getSparseReshapeInputOutputMultipleErrorMessage(a,l));l[d]=e}if($r.sizeFromShape(l)!==s)throw new Error(am.getSparseReshapeInputOutputMismatchErrorMessage(a,l));let p=a.length,h=[];if(p>0){h[p-1]=1;for(let e=p-2;e>=0;--e)h[e]=h[e+1]*a[e+1]}let c=[];if(o>0){c[o-1]=1;for(let e=o-2;e>=0;--e)c[e]=c[e+1]*l[e+1]}let f=$r.getArrayFromDType(n,i*o);for(let t=0;t<i;++t){let n=0;for(let a=0;a<p;++a)n+=e[t*p+a]*h[a];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/c[e]),n%=c[e]}return[f,[i,o],l]}function tb(e,t,n,a,r,s=!1,i=0){let o=a.length,l=[t[0],e.length/t[0]],u=l[1],d=o>0?r[o-1]+1:0;if(d<0)throw new Error(am.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let p=t.slice();p[0]=d;let h=p.reduce(((e,t)=>e*t),1),c=$r.getArrayFromDType(n,h);if(0===o)return d>0&&c.fill(i),[c,p];if(d<=0)throw new Error(am.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,y=r[f];for(;;){let t=0;if(m<o){if(t=r[m],y===t){++m;continue}if(y>=t)throw new Error(am.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=d)throw new Error(am.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,d));y>g&&c.fill(i,g*u,y*u);for(let t=f;t<m;++t){let n=a[t];if(n<0||n>=l[0])throw new Error(am.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(t,a[t],l[0]));for(let t=0;t<u;t++)c[y*u+t]+=e[n*u+t]}if(s)for(let e=0;e<u;e++)c[y*u+e]/=m-f;if(f=m,++m,g=y+1,y=t,m>o)break}return g<d&&c.fill(i,g*u,d*u),[c,p]}var nb=Cx((e=>Math.sqrt(e))),ab=Nx(Da,(e=>Math.sqrt(e))),rb={kernelName:Da,backendName:"cpu",kernelFunc:ab},sb=rx(((e,t)=>{let n=e-t;return n*n})),ib=mx(qa,sb),ob={kernelName:qa,backendName:"cpu",kernelFunc:ib},lb=Cx(((e,t)=>{let{pattern:n,replaceGlobal:a,rewrite:r}=t;return e.replace(new RegExp(n,a?"g":""),r)})),ub=Tx(Ka,lb),db={kernelName:Ka,backendName:"cpu",kernelFunc:ub};function pb(e,t,n,a){let r=Io(e,t.dtype);for(let e=0;e<r.size;e++){let s=r.indexToLoc(e),i=new Array(s.length);for(let e=0;e<i.length;e++)i[e]=s[e]*n[e]+a[e];r.set(t.get(...i),...s)}return r}var hb=class{constructor(e,t,n,a,r,s){this.separator=$r.encodeString(e),this.nGramWidths=t,this.leftPad=$r.encodeString(n),this.rightPad=$r.encodeString(a),this.padWidth=r,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,a,r,s){for(let i=0;i<r;++i){let o=this.getPadWidth(s),l=Math.max(0,o-i),u=Math.max(0,o-(r-(i+1))),d=s-(l+u),p=t+(l>0?0:i-o),h=0;h+=l*this.leftPad.length;for(let t=0;t<d;++t)h+=e[p+t].length;h+=u*this.rightPad.length,h+=(l+u+d-1)*this.separator.length,n[a+i]=new Uint8Array(h);let c=n[a+i],f=0,m=e=>e.forEach((e=>c[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<d-1;++t)m(e[p+t]),m(this.separator);if(d>0){m(e[p+d-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){let n=e.length,a=t.length;if(a>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let r=1;r<a;++r){let a=t[r]>=e;if(a=a&&t[r]<=n,!a)throw new Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}let r=a-1,s=$r.getArrayFromDType("int32",a);if(0===n||0===a){let e=new Array(n);for(let e=0;e<=r;++e)s[e]=0;return[e,s]}s[0]=0;for(let e=1;e<=r;++e){let n=t[e]-t[e-1],a=0;this.nGramWidths.forEach((e=>{a+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===a&&(a=1),s[e]=s[e-1]+a}let i=new Array(s[r]);for(let n=0;n<r;++n){let a=t[n],r=s[n];if(this.nGramWidths.forEach((s=>{let o=t[n+1]-t[n],l=this.getNumNGrams(o,s);this.createNGrams(e,a,i,r,l,s),r+=l})),this.preserveShort&&r===s[n]){let s=t[n+1]-t[n];if(0===s)continue;let o=s+2*this.padWidth;this.createNGrams(e,a,i,r,1,o)}}return[i,s]}};function cb(e,t,n,a,r,s,i,o){return new hb(n,a,r,s,i,o).compute(e,t)}function fb(e,t,n,a){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)a.push(e.subarray(t,t+1));return}if(1===t.length){let r=t[0],s=e.indexOf(r);for(;-1!==s;){let t=e.subarray(0,s);(!n||0!==t.length)&&a.push(t),s=(e=e.subarray(s+1)).indexOf(r)}return void((!n||0!==e.length)&&a.push(e))}let r=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){let t=e.subarray(r,s);(!n||0!==t.length)&&a.push(t),r=s+1}}function mb(e,t,n){let a=e.length,r=[],s=0,i=0,o=new Array(a);for(let l=0;l<a;++l){let a=r.length;fb(e[l],t,n,r);let u=r.length-a;o[l]=u,s+=u,i=Math.max(i,u)}let l=$r.getArrayFromDType("int32",2*s),u=new Array(s),d=[a,i],p=0;for(let e=0;e<a;++e)for(let t=0;t<o[e];++t)l[2*p]=e,l[2*p+1]=t,u[p]=r[p],++p;return[l,u,d]}function gb(e,t){let n=$r.getArrayFromDType("int32",e.length);for(let a=0;a<e.length;++a)n[a]=$r.fingerPrint64(e[a]).modulo(t).getLowBitsUnsigned();return n}var yb=rx(((e,t)=>e-t)),xb=gx(((e,t,n,a)=>({real:e-n,imag:t-a}))),Ab=mx(er,yb,xb),bb={kernelName:er,backendName:"cpu",kernelFunc:Ab};function wb(e,t){let n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=e.shape[a]*t[a];let a=Io(n,e.dtype);for(let t=0;t<a.values.length;++t){let n=a.indexToLoc(t),r=new Array(e.rank);for(let t=0;t<r.length;t++)r[t]=n[t]%e.shape[t];let s=e.locToIndex(r);a.values[t]=e.values[s]}return a}var vb=(e,t)=>{let n=t.value-e.value;return 0===n?e.index-t.index:n};function kb(e,t,n=0,a=e.length-1){for(;a>n;){if(a-n>600){let r=a-n+1,s=t-n+1,i=Math.log(r),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(r-o)/r)*Math.sign(s-r/2);kb(e,t,Math.max(n,Math.floor(t-s*o/r+l)),Math.min(a,Math.floor(t+(r-s)*o/r+l)))}let r=e[t],s=n,i=a;for($r.swap(e,n,t),vb(e[a],r)>0&&$r.swap(e,n,a);s<i;){for($r.swap(e,s,i),s++,i--;vb(e[s],r)<0;)s+=1;for(;vb(e[i],r)>0;)i-=1}0===vb(e[n],r)?$r.swap(e,n,i):(i+=1,$r.swap(e,i,a)),i<=t&&(n=i+1),t<=i&&(a=i-1)}}function Ib(e,t,n,a,r){let s=t[t.length-1],[i,o]=[e.length/s,s],l=$r.getTypedArrayFromDType(n,i*a),u=$r.getTypedArrayFromDType("int32",i*a);for(let t=0;t<i;t++){let n=t*o,s=e.subarray(n,n+o),i=new Array(s.length);s.forEach(((e,t)=>i[t]={value:e,index:t})),a<i.length&&(kb(i,a),i=i.slice(0,a)),r&&i.sort(vb);let d=t*a,p=l.subarray(d,d+a),h=u.subarray(d,d+a);for(let e=0;e<a;e++)p[e]=i[e].value,h[e]=i[e].index}let d=t.slice();return d[d.length-1]=a,[Io(d,n,l),Io(d,"int32",u)]}function Sb(e,t,n,a){let r=$r.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let e=0;e<r;e++)s[0]*=n[e];s[1]=n[r];for(let e=r+1;e<n.length;e++)s[2]*=n[e];let i=new Map,o=new Int32Array(n[r]),l=new hs(s,a,e),u=[],d=1===s[0]&&1===s[2];for(let t=0;t<n[r];t++){let n;if(d)n=e[t].toString();else{let e=[];for(let n=0;n<s[0];n++)for(let a=0;a<s[2];a++)e.push(l.get(n,t,a));n=e.join(",")}let a=i.get(n);if(null!=a)o[t]=a;else{let e=i.size;i.set(n,e),o[t]=e,u.push(t)}}let p=s.slice();p[1]=i.size;let h=new hs(p,a);u.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let a=0;a<s[2];a++)h.set(l.get(n,e,a),n,t,a)}));let c=n.slice();return c[r]=p[1],{outputValues:h.values,outputShape:c,indices:o}}var Cb="4.21.0";ki("cpu",(()=>new ex),1);var Nb=Nx(Jt,(e=>e>=0?e:Math.exp(e)-1)),Tb={kernelName:Jt,backendName:"cpu",kernelFunc:Nb};function Rb(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a;Jy([r],"leakyRelu");let i=$r.sizeFromShape(r.shape),o=n.data.get(r.dataId).values,l=$r.getTypedArrayFromDType("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?s*o[e]:o[e];return n.makeTensorInfo(r.shape,"float32",l)}var Eb={kernelName:vn,backendName:"cpu",kernelFunc:Rb},$b=rx(((e,t)=>e<0?t*e:e));function Mb(e){let{inputs:t,backend:n}=e,{x:a,alpha:r}=t;Jy([a,r],"prelu");let s=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,[o,l]=$b(a.shape,r.shape,s,i,"float32");return n.makeTensorInfo(l,"float32",o)}var Fb={kernelName:la,backendName:"cpu",kernelFunc:Mb},_b=Nx(ga,(e=>Math.max(0,e))),Pb={kernelName:ga,backendName:"cpu",kernelFunc:_b},Ob=Nx(va,(e=>Math.min(Math.max(0,e),6))),Db={kernelName:va,backendName:"cpu",kernelFunc:Ob};function zb(e,t,n,a,r){if("linear"===n)return lx({inputs:{x:t},backend:e});if("relu"===n)return _b({inputs:{x:t},backend:e});if("elu"===n)return Nb({inputs:{x:t},backend:e});if("relu6"===n)return Ob({inputs:{x:t},backend:e});if("prelu"===n)return Mb({inputs:{x:t,alpha:a},backend:e});if("leakyrelu"===n)return Rb({inputs:{x:t},backend:e,attrs:{alpha:r}});if("sigmoid"===n)return XA({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function Lb(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:s}=a,i=$r.sizeFromShape(r.shape),o=$r.inferFromImplicitShape(s,i),l=$r.sizeFromShape(o);$r.assert(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(r.dataId);let u=n.data.get(r.dataId);if(null!=u.complexTensorInfos){let e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}var Wb={kernelName:ya,backendName:"cpu",kernelFunc:Lb};function Bb(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:i,transposeB:o}=a;Jy([r,s],"matMul");let l=r.shape.length,u=s.shape.length,d=i?r.shape[l-2]:r.shape[l-1],p=o?s.shape[u-1]:s.shape[u-2],h=i?r.shape[l-1]:r.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=r.shape.slice(0,-2),m=s.shape.slice(0,-2),g=$r.sizeFromShape(f),y=$r.sizeFromShape(m),x=Xl.assertAndGetBroadcastShape(r.shape.slice(0,-2),s.shape.slice(0,-2)).concat([h,c]);$r.assert(d===p,(()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${r.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));let A=o?[y,c,p]:[y,p,c],b=Lb({inputs:{x:r},backend:n,attrs:{shape:i?[g,d,h]:[g,h,d]}}),w=Lb({inputs:{x:s},backend:n,attrs:{shape:A}}),v=i?b.shape[1]:b.shape[2],k=i?b.shape[2]:b.shape[1],I=o?w.shape[1]:w.shape[2],S=Math.max(g,y),C=n.data.get(b.dataId).values,N=n.data.get(w.dataId).values,T=$r.computeStrides(b.shape),R=$r.computeStrides(w.shape),[E,$,M]=i?[T[0],1,T[1]]:[T[0],T[1],1],[F,_,P]=o?[1,R[1],R[0]]:[R[1],1,R[0]],O=k*I,D=Io([S,k,I],b.dtype),z=D.values,L=n.blockSize;for(let e=0;e<S;e++){let t=e%g,n=e%y;for(let a=0;a<k;a+=L){let r=Math.min(a+L,k);for(let s=0;s<I;s+=L){let i=Math.min(s+L,I);for(let o=0;o<v;o+=L){let l=Math.min(o+L,v);for(let u=a;u<r;u++)for(let a=s;a<i;a++){let r=0;for(let e=o;e<l;e++)r+=C[t*E+u*$+e*M]*N[e*F+a*_+n*P];z[e*O+(u*I+a)]+=r}}}}}return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(x,D.dtype,D.values)}var Vb={kernelName:yt,backendName:"cpu",kernelFunc:Bb},Ub={kernelName:mr,backendName:"cpu",kernelFunc:function(e){let t,n,a,{inputs:r,backend:s,attrs:i}=e,{a:o,b:l,bias:u,preluActivationWeights:d}=r,{transposeA:p,transposeB:h,activation:c,leakyreluAlpha:f}=i,m=[];t=Bb({inputs:{a:o,b:l},attrs:{transposeA:p,transposeB:h},backend:s}),u&&(n=Ax({inputs:{a:t,b:u},backend:s}),m.push(t),t=n),c&&(a=zb(s,t,c,d,f),m.push(t),t=a);for(let e of m)s.disposeIntermediateTensorInfo(e);return t}},Gb=Nx(et,(e=>Math.acos(e))),Hb={kernelName:et,backendName:"cpu",kernelFunc:Gb},jb=Nx(tt,(e=>Math.acosh(e))),qb={kernelName:tt,backendName:"cpu",kernelFunc:jb},Xb={kernelName:at,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,a=t;Jy(t,"addN");let r=a.map((e=>n.data.get(e.dataId).values)),s=Io(a[0].shape,a[0].dtype),i=s.values;for(let e=0;e<a.length;e++){let t=r[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}},Kb={kernelName:rt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;Jy(r,"all");let o=$r.parseAxisParam(s,r.shape),l=o,u=am.getAxesPermutation(l,r.shape.length),d=r;null!=u&&(d=RA({inputs:{x:r},backend:n,attrs:{perm:u}}),l=am.getInnerMostAxes(l.length,r.shape.length)),am.assertAxesAreInnerMostDims("all",l,d.shape.length);let[p,h]=am.computeOutAndReduceShapes(d.shape,l),c=$r.sizeFromShape(h),f=$r.makeZerosTypedArray($r.sizeFromShape(p),d.dtype),m=n.data.get(d.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,n=m[t];for(let e=0;e<c;++e){let a=m[t+e];n=n&&a}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(d);let g=n.makeTensorInfo(p,d.dtype,f);if(i){let e=Lb({inputs:{x:g},backend:n,attrs:{shape:am.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},Yb={kernelName:st,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;Jy(r,"any");let o=$r.parseAxisParam(s,r.shape),l=o,u=am.getAxesPermutation(l,r.shape.length),d=r;null!=u&&(d=RA({inputs:{x:r},backend:n,attrs:{perm:u}}),l=am.getInnerMostAxes(l.length,r.shape.length)),am.assertAxesAreInnerMostDims("any",l,d.shape.length);let[p,h]=am.computeOutAndReduceShapes(d.shape,l),c=$r.sizeFromShape(h),f=$r.makeZerosTypedArray($r.sizeFromShape(p),d.dtype),m=n.data.get(d.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,n=m[t];for(let e=0;e<c;++e){let a=m[t+e];n=n||a}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(d);let g=n.makeTensorInfo(p,d.dtype,f);if(i){let e=Lb({inputs:{x:g},backend:n,attrs:{shape:am.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},Zb={kernelName:it,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;Jy(r,"argMax");let i=$r.parseAxisParam(s,r.shape),o=am.getAxesPermutation(i,r.shape.length),l=r,u=[];null!=o&&(l=RA({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=am.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],am.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[d,p]=am.computeOutAndReduceShapes(l.shape,i),h=$r.sizeFromShape(d),c=$r.makeZerosTypedArray(h,"int32"),f=$r.sizeFromShape(p),m=n.data.get(l.dataId).values;for(let e=0;e<c.length;++e){let t=e*f,n=m[t],a=0;for(let e=0;e<f;++e){let r=m[t+e];r>n&&(n=r,a=e)}c[e]=a}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(d,"int32",c)}},Jb={kernelName:ot,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;Jy(r,"argMin");let i=$r.parseAxisParam(s,r.shape),o=am.getAxesPermutation(i,r.shape.length),l=r,u=[];null!=o&&(l=RA({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=am.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],am.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[d,p]=am.computeOutAndReduceShapes(l.shape,i),h=$r.sizeFromShape(d),c=$r.makeZerosTypedArray(h,"int32"),f=$r.sizeFromShape(p),m=n.data.get(l.dataId).values;for(let e=0;e<c.length;++e){let t=e*f,n=m[t],a=0;for(let e=0;e<f;++e){let r=m[t+e];r<n&&(n=r,a=e)}c[e]=a}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(d,"int32",c)}},Qb=Nx(lt,(e=>Math.asin(e))),ew={kernelName:lt,backendName:"cpu",kernelFunc:Qb},tw=Nx(ut,(e=>Math.asinh(e))),nw={kernelName:ut,backendName:"cpu",kernelFunc:tw},aw=Nx(dt,(e=>Math.atan(e))),rw={kernelName:dt,backendName:"cpu",kernelFunc:aw},sw=rx(((e,t)=>Math.atan2(e,t))),iw=mx(ht,sw),ow={kernelName:ht,backendName:"cpu",kernelFunc:iw},lw=Nx(pt,(e=>Math.atanh(e))),uw={kernelName:pt,backendName:"cpu",kernelFunc:lw};function dw(e,t,n,a,r,s){let i=r.strideHeight,o=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,d=r.effectiveFilterHeight,p=r.effectiveFilterWidth,h=r.padInfo.top,c=r.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Io(r.outShape,n),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],x=r.outShape[2]*r.outShape[3],A=r.outShape[3];for(let t=0;t<r.batchSize;++t){let n=t*y,m=t*a[0];for(let t=0;t<r.inChannels;++t)for(let y=0;y<r.outHeight;++y){let b=y*i-h,w=Math.max(0,b),v=Math.min(r.inHeight,d+b),k=n+y*x;for(let n=0;n<r.outWidth;++n){let i=n*o-c,d=Math.max(0,i),h=Math.min(r.inWidth,p+i),y=f,x=0,b=0;for(let n=w;n<v;n+=l){let r=m+n*a[1];for(let n=d;n<h;n+=u){let i=e[r+n*a[2]+t];"max"===s&&i>y?y=i:"avg"===s&&(x+=i,b++)}if(isNaN(y))break}g[k+n*A+t]="avg"===s?x/b:y}}}return m}function pw(e,t,n,a,r=!1,s=!1){let i=Io(a.outShape,"int32"),o=a.strideHeight,l=a.strideWidth,u=a.dilationHeight,d=a.dilationWidth,p=a.effectiveFilterHeight,h=a.effectiveFilterWidth,c=a.padInfo.top,f=a.padInfo.left,m=Io(t,n,e);for(let e=0;e<a.batchSize;++e)for(let t=0;t<a.inChannels;++t)for(let n=0;n<a.outHeight;++n){let g=n*o-c,y=g;for(;y<0;)y+=u;let x=Math.min(a.inHeight,p+g);for(let o=0;o<a.outWidth;++o){let p=o*l-f,c=p;for(;c<0;)c+=d;let A=Math.min(a.inWidth,h+p),b=Number.NEGATIVE_INFINITY,w=-1;for(let n=y;n<x;n+=u){let i=n-g;for(let o=c;o<A;o+=d){let l=o-p,u=m.get(e,n,o,t);u>b&&(b=u,w=r?s?((e*a.inHeight+n)*a.inWidth+o)*a.inChannels+t:(n*a.inWidth+o)*a.inChannels+t:i*h+l)}}i.set(w,e,n,o,t)}}return i}function hw(e,t,n,a,r,s){let i=r.strideDepth,o=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,d=r.dilationHeight,p=r.dilationWidth,h=r.effectiveFilterDepth,c=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,x="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,A=Io(r.outShape,n),b=A.values,w=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],v=r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[3]*r.outShape[4],I=r.outShape[4];for(let t=0;t<r.batchSize;++t){let n=t*w,A=t*a[0];for(let t=0;t<r.inChannels;++t)for(let w=0;w<r.outDepth;++w){let S=w*i-m,C=S;for(;C<0;)C+=u;let N=Math.min(r.inDepth,h+S),T=n+w*v;for(let n=0;n<r.outHeight;++n){let i=n*o-g,h=i;for(;h<0;)h+=d;let m=Math.min(r.inHeight,c+i),w=T+n*k;for(let n=0;n<r.outWidth;++n){let i=n*l-y,o=i;for(;o<0;)o+=p;let c=Math.min(r.inWidth,f+i),g=w+n*I,v=x,k=0,S=0;for(let n=C;n<N;n+=u){let r=A+n*a[1];for(let n=h;n<m;n+=d){let i=r+n*a[2];for(let n=o;n<c;n+=p){let r=e[i+n*a[3]+t];if("max"===s&&r>v?v=r:"avg"===s&&(k+=r,S++),isNaN(v))break}if(isNaN(v))break}if(isNaN(v))break}b[g+t]="avg"===s?k/Math.max(S,1):v}}}}return A}var cw={kernelName:ct,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t;Jy(r,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=a;$r.assert(am.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u,d=am.computePool2DInfo(r.shape,s,i,1,o,l);if(1===d.filterWidth&&1===d.filterHeight&&$r.arraysEqual(d.inShape,d.outShape))u=lx({inputs:{x:r},backend:n});else{let e=n.data.get(r.dataId).values,t=$r.computeStrides(r.shape),a=dw(e,r.shape,r.dtype,t,d,"avg");u=n.makeTensorInfo(d.outShape,r.dtype,a.values)}return u}},fw={kernelName:mt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=a;Jy(r,"avgPool3d");let d=am.computePool3DInfo(r.shape,s,i,1,o,l,u),p=hw(n.data.get(r.dataId).values,r.shape,r.dtype,$r.computeStrides(r.shape),d,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}},mw={kernelName:gt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=a;Jy([r,s],"avgPool3DGrad");let d=am.computePool3DInfo(s.shape,i,o,1,l,u),p=d.strideDepth,h=d.strideHeight,c=d.strideWidth,f=d.filterDepth,m=d.filterHeight,g=d.filterWidth,y=d.dilationDepth,x=d.dilationHeight,A=d.dilationWidth,b=d.effectiveFilterDepth,w=d.effectiveFilterHeight,v=d.effectiveFilterWidth,k=b-1-d.padInfo.front,I=v-1-d.padInfo.left,S=w-1-d.padInfo.top,C=Io(s.shape,"float32"),N=1/(f*m*g),T=n.bufferSync(r);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inDepth;++n)for(let a=0;a<d.inHeight;++a)for(let r=0;r<d.inWidth;++r){let s=n-k,i=a-S,o=r-I,l=0;for(let n=0;n<b;n+=y){let a=(s+n)/p;if(!(a<0||a>=d.outDepth||Math.floor(a)!==a))for(let n=0;n<w;n+=x){let r=(i+n)/h;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let n=0;n<v;n+=A){let s=(o+n)/c;s<0||s>=d.outWidth||Math.floor(s)!==s||(l+=T.get(e,a,r,s,t))}}}C.set(l*N,e,n,a,r,t)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}},gw={kernelName:ft,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s;Jy([r,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=a,d=am.computePool2DInfo(i.shape,o,l,1,u),p=d.strideHeight,h=d.strideWidth,c=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.effectiveFilterHeight,x=d.effectiveFilterWidth,A=x-1-d.padInfo.left,b=y-1-d.padInfo.top,w=Io(i.shape,"float32"),v=1/(c*f),k=n.data.get(r.dataId).values,I=Io(r.shape,"float32",k);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let a=0;a<d.inWidth;++a){let r=n-b,s=a-A,i=0;for(let n=0;n<y;n+=m){let a=(r+n)/p;if(!(a<0||a>=d.outHeight||Math.floor(a)!==a))for(let n=0;n<x;n+=g){let r=(s+n)/h;r<0||r>=d.outWidth||Math.floor(r)!==r||(i+=I.get(e,a,r,t))}}w.set(i*v,e,n,a,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},yw={kernelName:pn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,scale:s,offset:i,mean:o,variance:l}=t;$r.assert(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),$r.assert(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),$r.assert(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Jy([r,o,l,s,i],"batchNorm");let{varianceEpsilon:u}=a;null==u&&(u=.001);let d=n.data.get(r.dataId).values,p=n.data.get(o.dataId).values,h=n.data.get(l.dataId).values,c=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(d.length),g=f.length,y=c.length,x=h.length,A=p.length,b=0,w=0,v=0,k=0;for(let e=0;e<d.length;++e)m[e]=f[b++]+(d[e]-p[w++])*c[v++]/Math.sqrt(h[k++]+u),b>=g&&(b=0),w>=A&&(w=0),v>=y&&(v=0),k>=x&&(k=0);return n.makeTensorInfo(r.shape,r.dtype,m)}},xw={kernelName:xt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:i}=a;Jy([r],"batchToSpaceND");let o=s.reduce(((e,t)=>e*t)),l=am.getReshaped(r.shape,s,o),u=am.getPermuted(l.length,s.length),d=am.getReshapedPermuted(r.shape,s,o),p=am.getSliceBeginCoords(i,s.length),h=am.getSliceSize(d,i,s.length),c=Lb({inputs:{x:r},backend:n,attrs:{shape:l}}),f=RA({inputs:{x:c},backend:n,attrs:{perm:u}}),m=Lb({inputs:{x:f},backend:n,attrs:{shape:d}}),g=ZA({inputs:{x:m},backend:n,attrs:{begin:p,size:h}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}},Aw={kernelName:At,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i}=a,o=wx(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}},bw={kernelName:vt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:a,s1:r}=t,s=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,o=am.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},ww=Nx(St,((e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),vw={kernelName:St,backendName:"cpu",kernelFunc:ww},kw={kernelName:Nt,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,n=e.backend,a=new Float32Array($r.sizeFromShape(t.shape)),r=n.data.get(t.dataId),s=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){let t=o[e],n=l[e];a[e]=Math.hypot(t,n)}return n.makeOutput(a,t.shape,"float32")}};function Iw(e){let{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.imag,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}var Sw={kernelName:xn,backendName:"cpu",kernelFunc:Iw};function Cw(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=$r.parseAxisParam(r,t[0].shape)[0],i=t.map((e=>e.shape));am.assertParamsConsistent(i,s);let o=am.computeOutShape(t.map((e=>e.shape)),s);if(0===$r.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter((e=>$r.sizeFromShape(e.shape)>0));if(1===l.length)return lx({inputs:{x:l[0]},backend:n});if("complex64"===l[0].dtype){let e=l.map((e=>dx({inputs:{input:e},backend:n}))),t=l.map((e=>Iw({inputs:{input:e},backend:n}))),a=Cw({inputs:e,backend:n,attrs:{axis:s}}),r=Cw({inputs:t,backend:n,attrs:{axis:s}}),i=sx({inputs:{real:a,imag:r},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),i}let u=l.map((e=>{let t=[-1,$r.sizeFromShape(e.shape.slice(s))];return Lb({inputs:{x:e},backend:n,attrs:{shape:t}})})),d=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));o=am.computeOutShape(u.map((e=>e.shape)),1);let p=1===u[0].shape[0],h=Mx(d,o,t[0].dtype,p),c=am.computeOutShape(l.map((e=>e.shape)),s),f=n.makeTensorInfo(c,t[0].dtype,h);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}var Nw={kernelName:Tt,backendName:"cpu",kernelFunc:Cw};function Tw(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:d}=a;Jy([r,s],"conv2d");let p=am.convertConv2DDataFormat(l),h=am.computeConv2DInfo(r.shape,s.shape,i,u,o,d,!1,p),c=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,g=h.dilationWidth,y=h.padInfo.left,x=h.padInfo.top,A="channelsLast"===h.dataFormat,b=new hs(h.outShape,r.dtype),w=$r.computeStrides(r.shape),v=$r.computeStrides(s.shape),k=w[0],I=A?w[1]:w[2],S=A?w[2]:1,C=A?1:w[1],N=b.strides[0],T=A?b.strides[1]:b.strides[2],R=A?b.strides[2]:1,E=A?1:b.strides[1],$=n.data.get(r.dataId).values,M=n.data.get(s.dataId).values,F=b.values;for(let e=0;e<h.batchSize;++e){let t=e*k,n=e*N;for(let e=0;e<h.outHeight;++e){let a=n+e*T,r=e*h.strideHeight-x;for(let e=0;e<c;++e){let n=r+e*m;if(n<0||n>=h.inHeight)continue;let s=e*v[0],i=t+n*I;for(let e=0;e<h.outWidth;++e){let t=a+e*R,n=e*h.strideWidth-y;for(let e=0;e<f;++e){let a=n+e*g;if(a<0||a>=h.inWidth)continue;let r=i+a*S,o=s+e*v[1];for(let e=0;e<h.inChannels;++e){let n=$[r+e*C];for(let e=0;e<h.outChannels;++e)F[t+e*E]+=n*M[o+e];o+=h.outChannels}}}}}}return n.makeTensorInfo(b.shape,b.dtype,F)}var Rw={kernelName:Rt,backendName:"cpu",kernelFunc:Tw},Ew={kernelName:Et,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:d}=a;Jy([r,s],"conv2dBackpropFilter");let p=am.convertConv2DDataFormat(l),h=am.computeConv2DInfo(r.shape,d,i,1,o,u,!1,p),{strideHeight:c,strideWidth:f,filterHeight:m,filterWidth:g}=h,y="channelsLast"===h.dataFormat,x=new hs(h.filterShape,"float32"),A=h.padInfo.left,b=h.padInfo.top,w=n.data.get(r.dataId).values,v=n.data.get(s.dataId).values,k=new hs(r.shape,r.dtype,w),I=new hs(s.shape,s.dtype,v);for(let e=0;e<m;++e){let t=Math.max(0,Math.ceil((b-e)/c)),n=Math.min(h.outHeight,(h.inHeight+b-e)/c);for(let a=0;a<g;++a){let r=Math.max(0,Math.ceil((A-a)/f)),s=Math.min(h.outWidth,(h.inWidth+A-a)/f);for(let i=0;i<h.inChannels;++i)for(let o=0;o<h.outChannels;++o){let l=0;for(let u=0;u<h.batchSize;++u)for(let d=t;d<n;++d){let t=e+d*c-b;for(let e=r;e<s;++e){let n=a+e*f-A;l+=y?k.get(u,t,n,i)*I.get(u,d,e,o):k.get(u,i,t,n)*I.get(u,o,d,e)}}x.set(l,e,a,i,o)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},$w={kernelName:$t,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:d}=a;Jy([r,s],"conv2dBackpropInput");let p=$r.computeStrides(s.shape),h=$r.computeStrides(r.shape),c=am.convertConv2DDataFormat(u),f=am.computeConv2DInfo(i,s.shape,o,1,l,d,!1,c),m=new hs(f.inShape,"float32"),g=m.values,y=n.data.get(r.dataId).values,x=n.data.get(s.dataId).values,[A,b,w]=p,{batchSize:v,filterHeight:k,filterWidth:I,inChannels:S,inHeight:C,inWidth:N,outChannels:T,outHeight:R,outWidth:E,strideHeight:$,strideWidth:M}=f;c=f.dataFormat;let F=k-1-f.padInfo.top,_=I-1-f.padInfo.left,P="channelsLast"===c,O=m.strides[0],D=P?m.strides[1]:m.strides[2],z=P?m.strides[2]:1,L=P?1:m.strides[1],W=h[0],B=P?h[1]:h[2],V=P?h[2]:1,U=P?1:h[1];for(let e=0;e<v;++e)for(let t=0;t<S;++t)for(let n=0;n<C;++n){let a=n-F,r=Math.max(0,Math.ceil(a/$)),s=Math.min(R,(k+a)/$);for(let i=0;i<N;++i){let o=i-_,l=Math.max(0,Math.ceil(o/M)),u=Math.min(E,(I+o)/M),d=0;for(let n=r;n<s;++n){let r=n*$-a;for(let a=l;a<u;++a){let s=W*e+B*n+V*a,i=A*(k-1-r)+b*(I-1-(a*M-o))+w*t;for(let e=0;e<T;++e)d+=y[s+U*e]*x[i+e]}}g[O*e+D*n+z*i+L*t]=d}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},Mw={kernelName:Mt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l}=a;Jy([r,s],"conv3d");let u=am.computeConv3DInfo(r.shape,s.shape,i,l,o),{filterDepth:d,filterHeight:p,filterWidth:h,dilationDepth:c,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,x=g.left,A=g.top,b=new hs(u.outShape,r.dtype),w=n.data.get(r.dataId).values,v=n.data.get(s.dataId).values,k=b.values,I=$r.computeStrides(r.shape),S=$r.computeStrides(s.shape);for(let e=0;e<u.batchSize;++e){let t=e*I[0],n=e*b.strides[0];for(let e=0;e<u.outDepth;++e){let a=n+e*b.strides[1],r=e*u.strideDepth-y;for(let e=0;e<d;++e){let n=r+e*c;if(n<0||n>=u.inDepth)continue;let s=e*S[0],i=t+n*I[1];for(let e=0;e<u.outHeight;++e){let t=a+e*b.strides[2],n=e*u.strideHeight-A;for(let e=0;e<p;++e){let a=n+e*f;if(a<0||a>=u.inHeight)continue;let r=s+e*S[1],o=i+a*I[2];for(let e=0;e<u.outWidth;++e){let n=t+e*u.outChannels,a=e*u.strideWidth-x;for(let e=0;e<h;++e){let t=a+e*m;if(t<0||t>=u.inWidth)continue;let s=r+e*S[2],i=o+t*u.inChannels,l=s;for(let e=0;e<u.inChannels;++e){let t=w[i+e];for(let e=0;e<u.outChannels;++e)k[n+e]+=t*v[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},Fw={kernelName:Ft,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,filterShape:l}=a;Jy([r,s],"conv3dBackpropFilterV2");let u=$r.computeStrides(r.shape),d=$r.computeStrides(s.shape),p=am.computeConv3DInfo(r.shape,l,i,1,o),h=p.strideDepth,c=p.strideHeight,f=p.strideWidth,m=p.filterDepth,g=p.filterHeight,y=p.filterWidth,x=new hs(p.filterShape,"float32"),A=x.values,[b,w,v,k]=x.strides,I=n.data.get(s.dataId).values,[S,C,N,T]=d,R=n.data.get(r.dataId).values,[E,$,M,F]=u,_=p.padInfo.front,P=p.padInfo.left,O=p.padInfo.top;for(let e=0;e<m;++e){let t=Math.max(0,Math.ceil((_-e)/h)),n=Math.min(p.outDepth,(p.inDepth+_-e)/h),a=e*b;for(let r=0;r<g;++r){let s=Math.max(0,Math.ceil((O-r)/c)),i=Math.min(p.outHeight,(p.inHeight+O-r)/c),o=r*w+a;for(let a=0;a<y;++a){let l=Math.max(0,Math.ceil((P-a)/f)),u=Math.min(p.outWidth,(p.inWidth+P-a)/f),d=a*v+o;for(let o=0;o<p.inChannels;++o){let m=o*k+d;for(let d=0;d<p.outChannels;++d){let g=0;for(let m=0;m<p.batchSize;++m){let p=m*E,y=m*S;for(let m=t;m<n;++m){let t=(e+m*h-_)*$+p,n=m*C+y;for(let e=s;e<i;++e){let s=(r+e*c-O)*M+t,i=e*N+n;for(let e=l;e<u;++e){let t=e*T+i;g+=R[(a+e*f-P)*F+s+o]*I[t+d]}}}}A[m+d]=g}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},_w={kernelName:_t,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:i,strides:o,inputShape:l}=a;Jy([r],"conv3dBackpropInputV2");let u=$r.computeStrides(r.shape),d=$r.computeStrides(s.shape),p=am.computeConv3DInfo(l,s.shape,o,1,i),h=new hs(p.inShape,"float32"),c=h.values,[f,m,g,y]=h.strides,x=n.data.get(r.dataId).values,[A,b,w,v]=u,k=n.data.get(s.dataId).values,[I,S,C,N]=d,{batchSize:T,filterDepth:R,filterHeight:E,filterWidth:$,inChannels:M,inDepth:F,inHeight:_,inWidth:P,outChannels:O,outDepth:D,outHeight:z,outWidth:L,strideDepth:W,strideHeight:B,strideWidth:V}=p,U=R-1-p.padInfo.front,G=E-1-p.padInfo.top,H=$-1-p.padInfo.left;for(let e=0;e<T;++e)for(let t=0;t<M;++t)for(let n=0;n<F;++n){let a=n-U,r=Math.max(0,Math.ceil(a/W)),s=Math.min(D,(R+a)/W);for(let i=0;i<_;++i){let o=i-G,l=Math.max(0,Math.ceil(o/B)),u=Math.min(z,(E+o)/B);for(let d=0;d<P;++d){let p=d-H,h=Math.max(0,Math.ceil(p/V)),T=Math.min(L,($+p)/V),M=0;for(let n=r;n<s;++n){let r=n*W-a;for(let a=l;a<u;++a){let s=a*B-o;for(let i=h;i<T;++i){let o=A*e+b*n+w*a+v*i,l=I*(R-1-r)+S*(E-1-s)+C*($-1-(i*V-p))+N*t;for(let e=0;e<O;++e)M+=x[o+e]*k[l+e]}}}c[f*e+m*n+g*i+y*d+t]=M}}}return n.makeTensorInfo(h.shape,h.dtype,h.values)}},Pw=Nx(Pt,(e=>Math.cos(e))),Ow={kernelName:Pt,backendName:"cpu",kernelFunc:Pw},Dw=Nx(Ot,(e=>Math.cosh(e))),zw={kernelName:Ot,backendName:"cpu",kernelFunc:Dw},Lw={kernelName:Lt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=a,[d,p,h,c]=r.shape,f=s.shape[0],[m,g]=o,y=Io([f,m,g,c],"float32"),x=n.data.get(s.dataId).values,A=n.data.get(i.dataId).values,b=n.data.get(r.dataId).values,w=$r.computeStrides(r.shape),v=$r.computeStrides(y.shape);for(let e=0;e<f;e++){let t=4*e,n=x[t],a=x[t+1],r=x[t+2],s=x[t+3],i=A[e];if(i>=d)continue;let o=m>1?(r-n)*(p-1)/(m-1):0,f=g>1?(s-a)*(h-1)/(g-1):0;for(let t=0;t<m;t++){let d=m>1?n*(p-1)+t*o:.5*(n+r)*(p-1);if(d<0||d>p-1)for(let n=0;n<g;n++)for(let a=0;a<c;a++){let r=a+n*v[2]+t*v[1]+e*v[0];y.values[r]=u}else if("bilinear"===l){let n=Math.floor(d),r=Math.ceil(d),o=d-n;for(let l=0;l<g;l++){let d=g>1?a*(h-1)+l*f:.5*(a+s)*(h-1);if(d<0||d>h-1){for(let n=0;n<c;n++){let a=n+l*v[2]+t*v[1]+e*v[0];y.values[a]=u}continue}let p=Math.floor(d),m=Math.ceil(d),x=d-p;for(let a=0;a<c;a++){let s=a+p*w[2]+n*w[1]+i*w[0],u=b[s];s=a+m*w[2]+n*w[1]+i*w[0];let d=b[s];s=a+p*w[2]+r*w[1]+i*w[0];let h=b[s];s=a+m*w[2]+r*w[1]+i*w[0];let c=u+(d-u)*x,f=h+(b[s]-h)*x;s=a+l*v[2]+t*v[1]+e*v[0],y.values[s]=c+(f-c)*o}}}else for(let n=0;n<g;++n){let r=g>1?a*(h-1)+n*f:.5*(a+s)*(h-1);if(r<0||r>h-1){for(let a=0;a<c;a++){let r=a+n*v[2]+t*v[1]+e*v[0];y.values[r]=u}continue}let o=Math.round(r),l=Math.round(d);for(let a=0;a<c;a++){let r=a+o*w[2]+l*w[1]+i*w[0],s=a+n*v[2]+t*v[1]+e*v[0];y.values[s]=b[r]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},Ww={kernelName:Dt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a;Jy(r,"cumprod");let l=am.getAxesPermutation([s],r.shape.length),u=r;null!=l&&(u=RA({inputs:{x:r},backend:n,attrs:{perm:l}}));let d=am.getInnerMostAxes(1,r.shape.length)[0];if(d!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${d}`);let p=Cs(u.dtype,"int32"),h=$r.makeOnesTypedArray($r.sizeFromShape(u.shape),p),c=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<c.length;e+=f)for(let t=0;t<f;t++){let n=m(e,t);if(0===t)h[n]=i?1:c[n];else{let a=m(e,t-1);h[n]=i?c[a]*h[a]:c[n]*h[a]}}let g=n.makeTensorInfo(u.shape,p,h);if(null!=l){let e=RA({inputs:{x:g},backend:n,attrs:{perm:am.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},Bw={kernelName:zt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a;Jy(r,"cumsum");let l=am.getAxesPermutation([s],r.shape.length),u=r;null!=l&&(u=RA({inputs:{x:r},backend:n,attrs:{perm:l}}));let d=am.getInnerMostAxes(1,r.shape.length)[0];if(d!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${d}`);let p=Cs(u.dtype,"int32"),h=$r.makeZerosTypedArray($r.sizeFromShape(u.shape),p),c=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<c.length;e+=f)for(let t=0;t<f;t++){let n=m(e,t);if(0===t)h[n]=i?0:c[n];else{let a=m(e,t-1);h[n]=i?c[a]+h[a]:c[n]+h[a]}}let g=n.makeTensorInfo(u.shape,p,h);if(null!=l){let e=RA({inputs:{x:g},backend:n,attrs:{perm:am.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},Vw={kernelName:Wt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i,binaryOutput:o}=a;if(1===r.shape.length){let e=wx(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===r.shape.length){let e=vx(n.bufferSync(r),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}},Uw={kernelName:Bt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:i}=a;$r.assert("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));let o=r.shape[0],l=r.shape[1],u=r.shape[2],d=r.shape[3],p=l*s,h=u*s,c=d/(s*s),f=n.data.get(r.dataId).values,m=new Float32Array(o*p*h*c),g=0;for(let e=0;e<o;++e)for(let t=0;t<p;++t){let n=Math.floor(t/s),a=t%s;for(let t=0;t<h;++t){let r=Math.floor(t/s),i=(a*s+t%s)*c;for(let t=0;t<c;++t){let a=t+i+d*(r+u*(n+l*e));m[g++]=f[a]}}}return n.makeTensorInfo([o,p,h,c],r.dtype,m)}};function Gw(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=a;Jy([r,s],"depthwiseConv2DNative");let d=$r.computeStrides(r.shape),p=$r.computeStrides(s.shape),h=l;null==h&&(h=[1,1]),$r.assert(am.eitherStridesOrDilationsAreOne(i,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`));let c=am.computeConv2DInfo(r.shape,s.shape,i,h,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:x}=c,A=x.left,b=x.top,w=c.outChannels/c.inChannels,v=new hs(c.outShape,r.dtype),k=n.data.get(r.dataId).values,I=n.data.get(s.dataId).values,S=v.values;for(let e=0;e<c.batchSize;++e){let t=e*d[0],n=e*v.strides[0];for(let e=0;e<c.outHeight;++e){let a=n+e*v.strides[1],r=e*c.strideHeight-b;for(let e=0;e<f;++e){let n=r+e*g;if(n<0||n>=c.inHeight)continue;let s=e*p[0],i=t+n*d[1];for(let e=0;e<c.outWidth;++e){let t=a+e*v.strides[2],n=e*c.strideWidth-A;for(let e=0;e<m;++e){let a=n+e*y;if(a<0||a>=c.inWidth)continue;let r=s+e*p[1],o=i+a*c.inChannels,l=t,u=r;for(let e=0;e<c.inChannels;++e){let t=k[o+e];for(let e=0;e<w;++e)S[l+e]+=t*I[u+e];l+=w,u+=w}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}var Hw={kernelName:Vt,backendName:"cpu",kernelFunc:Gw},jw={kernelName:Ut,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:d}=a;Jy([r,s],"depthwiseConv2dNativeBackpropFilter");let p=am.computeConv2DInfo(r.shape,d,i,o,l,u,!0),{strideHeight:h,strideWidth:c,filterHeight:f,filterWidth:m}=p,g=new hs(p.filterShape,"float32"),y=p.padInfo.left,x=p.padInfo.top,A=p.outChannels/p.inChannels,b=n.data.get(r.dataId).values,w=new hs(r.shape,r.dtype,b),v=n.data.get(s.dataId).values,k=new hs(s.shape,s.dtype,v);for(let e=0;e<f;++e){let t=Math.max(0,Math.ceil((x-e)/h)),n=Math.min(p.outHeight,(p.inHeight+x-e)/h);for(let a=0;a<m;++a){let r=Math.max(0,Math.ceil((y-a)/c)),s=Math.min(p.outWidth,(p.inWidth+y-a)/c);for(let i=0;i<p.outChannels;++i){let o=Math.trunc(i/A),l=i%A,u=0;for(let l=0;l<p.batchSize;++l)for(let d=t;d<n;++d){let t=e+d*h-x;for(let e=r;e<s;++e){let n=a+e*c-y;u+=w.get(l,t,n,o)*k.get(l,d,e,i)}}g.set(u,e,a,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},qw={kernelName:Gt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:d}=a;Jy([r,s],"depthwiseConv2DNativeBackpropInput");let p=$r.computeStrides(r.shape),h=$r.computeStrides(s.shape),c=am.computeConv2DInfo(d,s.shape,i,o,l,u,!0),f=new hs(c.inShape,"float32"),m=f.values,[g,y,x]=f.strides,A=n.data.get(r.dataId).values,[b,w,v]=p,k=n.data.get(s.dataId).values,[I,S,C]=h,{batchSize:N,filterHeight:T,filterWidth:R,inChannels:E,inHeight:$,inWidth:M,outChannels:F,outHeight:_,outWidth:P,strideHeight:O,strideWidth:D}=c,z=T-1-c.padInfo.top,L=R-1-c.padInfo.left,W=F/E;for(let e=0;e<N;++e)for(let t=0;t<E;++t)for(let n=0;n<$;++n){let a=n-z,r=Math.max(0,Math.ceil(a/O)),s=Math.min(_,(T+a)/O);for(let i=0;i<M;++i){let o=i-L,l=Math.max(0,Math.ceil(o/D)),u=Math.min(P,(R+o)/D),d=0;for(let n=r;n<s;++n){let r=n*O-a;for(let a=l;a<u;++a){let s=b*e+w*n+v*a,i=I*(T-1-r)+S*(R-1-(a*D-o))+C*t;for(let e=0;e<W;++e)d+=A[s+(t*W+e)]*k[i+e]}}m[g*e+y*n+x*i+t]=d}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},Xw={kernelName:Ht,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a}=t,r=$r.sizeFromShape(a.shape),s=n.data.get(a.dataId).values,i=Io([r,r],a.dtype),o=i.values;for(let e=0;e<s.length;e++)o[e*r+e]=s[e];let l=[...a.shape,...a.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},Kw={kernelName:jt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:a,filter:r}=e,{strides:s,pad:i,dilations:o}=n,l=t,u=l.data.get(a.dataId).values,d=a.shape.length,p=l.data.get(r.dataId).values,h=r.shape.length,{batchSize:c,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:x,padInfo:A,strideHeight:b,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:C}=am.computeDilation2DInfo(a.shape,r.shape,s,i,"NHWC",o),N=$r.sizeFromShape(C),T=C.length,R=$r.getArrayFromDType(a.dtype,N);for(let e=0;e<c;++e)for(let t=0;t<y;++t){let n=t*b-A.top;for(let s=0;s<x;++s){let i=s*w-A.left;for(let o=0;o<g;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<v;++t){let s=n+t*I;if(s>=0&&s<f)for(let n=0;n<k;++n){let c=i+n*S;if(c>=0&&c<m){let i=$r.locToIndex([e,s,c,o],d,$r.computeStrides(a.shape)),f=$r.locToIndex([t,n,o],h,$r.computeStrides(r.shape)),m=u[i]+p[f];m>l&&(l=m)}}}R[$r.locToIndex([e,t,s,o],T,$r.computeStrides(C))]=l}}}return{dataId:l.write($r.toTypedArray(R,a.dtype),C,a.dtype),shape:C,dtype:a.dtype}}},Yw={kernelName:Xt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:a,filter:r,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,d=$r.toNestedArray(a.shape,u.data.get(a.dataId).values),p=$r.toNestedArray(r.shape,u.data.get(r.dataId).values),{batchSize:h,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:x,strideHeight:A,strideWidth:b,filterHeight:w,filterWidth:v,dilationHeight:k,dilationWidth:I,outShape:S}=am.computeDilation2DInfo(a.shape,r.shape,i,o,"NHWC",l);$r.assert(s.rank===S.length,(()=>`Error in ${Xt}, dy must have the same rank as output ${S.length}, but got ${s.rank}`));let C=$r.toNestedArray(S,u.data.get(s.dataId).values),N=$r.makeZerosNestedTypedArray(r.shape,r.dtype);for(let e=0;e<h;++e)for(let t=0;t<g;++t){let n=t*A-x.top;for(let a=0;a<y;++a){let r=a*b-x.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<w;++t){let a=n+t*k;if(a>=0&&a<c)for(let n=0;n<v;++n){let u=r+n*I;if(u>=0&&u<f){let r=d[e][a][u][s]+p[t][n][s];r>i&&(i=r,o=t,l=n)}}}N[o][l][s]+=C[e][t][a][s]}}}return{dataId:u.write($r.toTypedArray(N,a.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Zw={kernelName:qt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:a,filter:r,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,d=$r.toNestedArray(a.shape,u.data.get(a.dataId).values),p=$r.toNestedArray(r.shape,u.data.get(r.dataId).values),{batchSize:h,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:x,strideHeight:A,strideWidth:b,filterHeight:w,filterWidth:v,dilationHeight:k,dilationWidth:I,outShape:S}=am.computeDilation2DInfo(a.shape,r.shape,i,o,"NHWC",l);$r.assert(s.rank===S.length,(()=>`Error in ${qt}, dy must have the same rank as output ${S.length}, but got ${s.rank}`));let C=$r.toNestedArray(S,u.data.get(s.dataId).values),N=$r.makeZerosNestedTypedArray(a.shape,a.dtype);for(let e=0;e<h;++e)for(let t=0;t<g;++t){let n=t*A-x.top;for(let a=0;a<y;++a){let r=a*b-x.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=r<0?0:r;for(let t=0;t<w;++t){let a=n+t*k;if(a>=0&&a<c)for(let n=0;n<v;++n){let u=r+n*I;if(u>=0&&u<f){let r=d[e][a][u][s]+p[t][n][s];r>i&&(i=r,o=a,l=u)}}}N[e][o][l][s]+=C[e][t][a][s]}}}return{dataId:u.write($r.toTypedArray(N,a.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},Jw={kernelName:Kt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{image:r}=t,{canvas:s,options:i}=a,{contextOptions:o,imageOptions:l}=i||{},u=(null==l?void 0:l.alpha)||1,d=(null==o?void 0:o.contextType)||"2d";if("2d"!==d)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);let p=s.getContext(d,(null==o?void 0:o.contextAttributes)||{});if(null==p)throw new Error(`Could not get the context with ${d} type.`);let[h,c]=r.shape.slice(0,2),f=2===r.shape.length?1:r.shape[2],m=n.data.get(r.dataId).values,g="float32"===r.dtype?255:1,y=new Uint8ClampedArray(c*h*4);for(let e=0;e<h*c;++e){let t=[0,0,0,255*u];for(let n=0;n<f;n++){let a=m[e*f+n];if("float32"===r.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===r.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===f?(t[0]=a*g,t[1]=a*g,t[2]=a*g):t[n]=a*g}let n=4*e;y[n+0]=Math.round(t[0]),y[n+1]=Math.round(t[1]),y[n+2]=Math.round(t[2]),y[n+3]=Math.round(t[3])}s.width=c,s.height=h;let x=new ImageData(y,c,h);return p.putImageData(x,0,0),r}};function Qw(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:s}=n,{axis:i,keepDims:o}=r;Jy(s,"sum"),t="bool"===s.dtype?cx({inputs:{x:s},backend:a,attrs:{dtype:"int32"}}):lx({inputs:{x:s},backend:a});let l=t.shape.length,u=$r.parseAxisParam(i,t.shape),d=am.getAxesPermutation(u,l),p=u,h=t;null!=d&&(h=RA({inputs:{x:t},backend:a,attrs:{perm:d}}),p=am.getInnerMostAxes(p.length,l)),am.assertAxesAreInnerMostDims("sum",p,h.shape.length);let[c,f]=am.computeOutAndReduceShapes(h.shape,p),m=ox(a,c,am.upcastType(h.dtype,"int32")),g=$r.sizeFromShape(f),y=a.data.get(m.dataId).values,x=a.data.get(h.dataId).values;for(let e=0;e<y.length;++e){let t=e*g,n=0;for(let e=0;e<g;++e)n+=x[t+e];y[e]=n}if(o){let e=m;m=Lb({inputs:{x:m},backend:a,attrs:{shape:am.expandShapeToKeepDim(m.shape,u)}}),a.disposeIntermediateTensorInfo(e)}return a.disposeIntermediateTensorInfo(t),null!=d&&a.disposeIntermediateTensorInfo(h),m}var ev={kernelName:za,backendName:"cpu",kernelFunc:Qw},tv={kernelName:Zt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,s=t,{allDims:i,summedDims:o,idDims:l}=am.decodeEinsumEquation(r,s.length);am.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:d}=am.getEinsumComputePath(o,l),p=d.length,h=null,c=i.length,f=[];for(let e=0;e<p;++e){for(let t of d[e]){let e,{permutationIndices:a,expandDims:r}=am.getEinsumPermutation(c,l[t]);am.isIdentityPermutation(a)?e=s[t]:(e=RA({inputs:{x:s[t]},backend:n,attrs:{perm:a}}),f.push(e));let i=e.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);$r.arraysEqual(e.shape,i)||(e=Lb({inputs:{x:e},backend:n,attrs:{shape:i}}),f.push(e)),null===h?h=e:(h=wA({inputs:{a:e,b:h},backend:n}),f.push(h))}e<p-1&&(u[e]>=0&&(h=Qw({inputs:{x:h},backend:n,attrs:{axis:u[e]-(i.length-c),keepDims:!1}}),f.push(h)),c--)}for(let e of f)e!==h&&n.disposeIntermediateTensorInfo(e);return h}},nv={kernelName:Qt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{dy:a,y:r}=t;Jy([a,r],"eluGrad");let s=new Float32Array($r.sizeFromShape(r.shape)),i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values;for(let e=0;e<i.length;++e){let t=i[e];s[e]=t>=0?o[e]:o[e]*(t+1)}return n.makeTensorInfo(r.shape,"float32",s)}},av=am.ERF_P,rv=am.ERF_A1,sv=am.ERF_A2,iv=am.ERF_A3,ov=am.ERF_A4,lv=am.ERF_A5,uv=Nx(en,(e=>{let t=Math.sign(e),n=Math.abs(e),a=1/(1+av*n);return t*(1-((((lv*a+ov)*a+iv)*a+sv)*a+rv)*a*Math.exp(-n*n))})),dv={kernelName:en,backendName:"cpu",kernelFunc:uv};function pv(e){let{inputs:t,backend:n,attrs:a}=e,{input:r}=t,{dim:s}=a,i=r.shape.length,o=r.shape.slice(),l=s;return s<0&&($r.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),Lb({inputs:{x:r},backend:n,attrs:{shape:o}})}var hv={kernelName:an,backendName:"cpu",kernelFunc:pv},cv=rx(((e,t)=>e/t)),fv=mx(Yt,cv),mv={kernelName:Yt,backendName:"cpu",kernelFunc:fv};function gv(e,t,n){let a=e.shape,r=a[0],s=a[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[r,s],d=$r.sizeFromShape(u),p=$r.getTypedArrayFromDType("float32",d),h=$r.getTypedArrayFromDType("float32",d);for(let e=0;e<r;e++){let a=ZA({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,s]}}),r=ZA({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,s]}}),i=sx({inputs:{real:a,imag:r},backend:n}),{real:u,imag:d}=yv(i,t,n),c=am.mergeRealAndImagArrays(u,d);for(let t=0;t<s;t++){let n=am.getComplexWithIndex(c,t);p[e*s+t]=n.real,h[e*s+t]=n.imag}n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i)}let c=n.makeTensorInfo(u,"float32",p),f=n.makeTensorInfo(u,"float32",h),m=sx({inputs:{real:c,imag:f},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}function yv(e,t,n){let a=$r.sizeFromShape(e.shape),r=n.data.get(e.dataId),s=n.data.get(r.complexTensorInfos.real.dataId).values,i=n.data.get(r.complexTensorInfos.imag.dataId).values;if(function(e){return 0==(e&e-1)}(a)){let r=xv(s,i,a,t,n),o=[e.shape[0],e.shape[1]];if(t){let e=n.makeTensorInfo(o,"float32",r.real),t=n.makeTensorInfo(o,"float32",r.imag),s=n.makeTensorInfo([],"float32",$r.createScalarValue(a,"float32")),i=lx({inputs:{x:s},backend:n}),l=mv.kernelFunc({inputs:{a:e,b:s},backend:n}),u=mv.kernelFunc({inputs:{a:t,b:i},backend:n}),d=n.data.get(l.dataId).values,p=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:d,imag:p}}return r}{let e=function(e,t,n){let a=new Float32Array(2*t);for(let r=0;r<t;r++){let s=0,i=0;for(let a=0;a<t;a++){let o=am.exponent(r*a,t,n),l=am.getComplexWithIndex(e,a);s+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(s/=t,i/=t),am.assignToTypedArray(a,s,i,r)}return a}(am.mergeRealAndImagArrays(s,i),a,t);return am.splitRealAndImagArrays(e)}}function xv(e,t,n,a,r){if(1===n)return{real:e,imag:t};let s=am.mergeRealAndImagArrays(e,t),i=n/2,o=am.complexWithEvenIndex(s),l=o.real,u=o.imag,d=[l.length],p=r.makeTensorInfo(d,"float32",l),h=r.makeTensorInfo(d,"float32",u),c=sx({inputs:{real:p,imag:h},backend:r}),f=am.complexWithOddIndex(s),m=f.real,g=f.imag,y=[m.length],x=r.makeTensorInfo(y,"float32",m),A=r.makeTensorInfo(y,"float32",g),b=sx({inputs:{real:x,imag:A},backend:r}),w=xv(l,u,i,a,r),v=w.real,k=w.imag,I=[v.length],S=r.makeTensorInfo(I,"float32",v),C=r.makeTensorInfo(I,"float32",k),N=sx({inputs:{real:S,imag:C},backend:r}),T=xv(m,g,i,a,r),R=T.real,E=T.imag,$=[R.length],M=r.makeTensorInfo($,"float32",R),F=r.makeTensorInfo($,"float32",E),_=sx({inputs:{real:M,imag:F},backend:r}),P=am.exponents(n,a),O=[P.real.length],D=r.makeTensorInfo(O,"float32",P.real),z=r.makeTensorInfo(O,"float32",P.imag),L=sx({inputs:{real:D,imag:z},backend:r}),W=wA({inputs:{a:L,b:_},backend:r}),B=Ax({inputs:{a:N,b:W},backend:r}),V=Ab({inputs:{a:N,b:W},backend:r}),U=dx({inputs:{input:B},backend:r}),G=dx({inputs:{input:V},backend:r}),H=Iw({inputs:{input:B},backend:r}),j=Iw({inputs:{input:V},backend:r}),q=Cw({inputs:[U,G],backend:r,attrs:{axis:0}}),X=Cw({inputs:[H,j],backend:r,attrs:{axis:0}}),K=r.data.get(q.dataId).values,Y=r.data.get(X.dataId).values;return r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(A),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(S),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo(M),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(L),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(X),{real:K,imag:Y}}var Av={kernelName:sn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:a}=t,r=$r.sizeFromShape(a.shape),s=a.shape[a.shape.length-1],i=Lb({inputs:{x:a},backend:n,attrs:{shape:[r/s,s]}}),o=gv(i,!1,n),l=Lb({inputs:{x:o},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function bv(e){let{backend:t,attrs:n}=e,{shape:a,value:r,dtype:s}=n,i=s||$r.inferDtype(r),o=$r.getArrayFromDType(i,$r.sizeFromShape(a));return function(e,t,n){e.fill(t)}(o,r),t.makeTensorInfo(a,i,o)}var wv={kernelName:on,backendName:"cpu",kernelFunc:bv},vv={kernelName:ln,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:a}=e,r=n,s=$r.getTypedArrayFromDType(a.dtype,$r.sizeFromShape(a.shape)),[i,o,l,u]=a.shape,d=r.data.get(a.dataId).values;for(let e=0;e<i;e++){let t=e*l*o*u;for(let e=0;e<o;e++){let n=e*(l*u);for(let e=0;e<l;e++){let a=e*u;for(let r=0;r<u;r++){let i=Math.round(l-e-1),o=t+n+a+r,p=d[o];i>=0&&i<l&&(p=d[t+n+i*u+r]),s[o]=p}}}}return{dataId:r.write(s,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},kv={kernelName:gr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:d,dilations:p,dimRoundingMode:h,activation:c,leakyreluAlpha:f}=a,m=Tw({inputs:{x:r,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:d,dilations:p,dimRoundingMode:h}});if(i){let e=m;if("NCHW"===d&&1===i.shape.length&&1!==i.shape[0]){let e=Lb({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=Ax({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=Ax({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(c){let e=m;if("NCHW"===d&&"prelu"===c&&1===o.shape.length&&1!==o.shape[0]){let e=Lb({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=zb(n,m,c,e,f),n.disposeIntermediateTensorInfo(e)}else m=zb(n,m,c,o,f);n.disposeIntermediateTensorInfo(e)}return m}},Iv={kernelName:yr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:d,dilations:p,dimRoundingMode:h,activation:c,leakyreluAlpha:f}=a,m=Gw({inputs:{x:r,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:d,dilations:p,dimRoundingMode:h}});if(i){let e=m;m=Ax({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(c){let e=m;m=zb(n,m,c,o,f),n.disposeIntermediateTensorInfo(e)}return m}},Sv={kernelName:cn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=$r.sizeFromShape(a.shape),i=r.shape,o=i[i.length-1],[l,u,d,p]=am.prepareAndValidate(a,r);if(0===u)return n.makeTensorInfo(l,a.dtype,[]);let h=Xx(n.data.get(r.dataId).values,n.bufferSync(a),a.dtype,u,o,d,p,a.shape,s);return n.makeTensorInfo(l,a.dtype,h.values)}},Cv={kernelName:hn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:i,batchDims:o}=a;Jy([r,s],"gatherV2");let l=$r.parseAxisParam(i,r.shape)[0],u=n.data.get(s.dataId).values,d=r.shape[l];for(let e=0;e<u.length;++e){let t=u[e];$r.assert(t<=d-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${d-1}]`))}let p=o;null==o&&(p=0);let h=$r.sizeFromShape(s.shape),c=am.segment_util.collectGatherOpShapeInfo(r,s,l,p),f=Lb({inputs:{x:r},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),m=Lb({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,h/c.batchSize]}}),g=[c.batchSize,c.outerSize,h/c.batchSize,c.sliceSize],y=n.bufferSync(m),x=Kx(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(c.outputShape,x.dtype,x.values)}},Nv={kernelName:yn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:a}=t,r=$r.sizeFromShape(a.shape),s=a.shape[a.shape.length-1],i=Lb({inputs:{x:a},backend:n,attrs:{shape:[r/s,s]}}),o=gv(i,!0,n),l=Lb({inputs:{x:o},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},Tv=Nx(An,(e=>Number.isFinite(e)?1:0),"bool"),Rv={kernelName:An,backendName:"cpu",kernelFunc:Tv},Ev=Nx(bn,(e=>Math.abs(e)===1/0?1:0),"bool"),$v={kernelName:bn,backendName:"cpu",kernelFunc:Ev},Mv=Nx(wn,(e=>Number.isNaN(e)?1:0),"bool"),Fv={kernelName:wn,backendName:"cpu",kernelFunc:Mv},_v={kernelName:Sn,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,i=lA(a,r,s);return t.makeTensorInfo([i.length],"float32",i)}},Pv=Nx(Nn,(e=>Math.log1p(e))),Ov={kernelName:Nn,backendName:"cpu",kernelFunc:Pv},Dv=rx(((e,t)=>e&&t)),zv=mx(Tn,Dv,null,"bool"),Lv={kernelName:Tn,backendName:"cpu",kernelFunc:zv},Wv=Nx(Rn,(e=>e?0:1),"bool"),Bv={kernelName:Rn,backendName:"cpu",kernelFunc:Wv},Vv=rx(((e,t)=>e||t)),Uv=mx(En,Vv,null,"bool"),Gv={kernelName:En,backendName:"cpu",kernelFunc:Uv},Hv={kernelName:_n,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=a;Jy(r,"LRN");let u=r.shape[3],d=u-1,p=n.data.get(r.dataId).values,h=$r.sizeFromShape(r.shape),c=new Float32Array(h);function f(e){let t=e%u,n=e-t+Math.max(0,t-s),a=e-t+Math.min(t+s,d),r=0;for(;n<=a;n++){let e=p[n];r+=e*e}return r}for(let e=0;e<h;e++){let t=f(e),n=p[e]*Math.pow(i+o*t,-l);c[e]=n}return n.makeTensorInfo(r.shape,r.dtype,c)}},jv={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:d}=a;Jy(i,"LRNGrad");let p=$r.sizeFromShape(i.shape),h=i.shape[3],c=n.data.get(i.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(p),y=p;for(let e=0;e<y;e++){let t=e%h,n=e-t+Math.max(0,t-o),a=e-t+Math.min(h,t+o+1),r=0;for(let e=n;e<a;e++)r+=Math.pow(f[e],2);r=u*r+l;for(let t=n;t<a;t++){let n=-2*u*d*f[t]*m[e]/r;e===t&&(n+=Math.pow(r,-d)),n*=c[e],g[t]+=n}}return n.makeTensorInfo(i.shape,r.dtype,g)}};function qv(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:i}=a,o=n,l=r.shape,u=l.length,d=$r.parseAxisParam(s,l),p=d,h=am.getAxesPermutation(p,u),c=o.data.get(r.dataId).values;if(null!=h){let e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[h[t]];c=TA(c,l,r.dtype,h,e),p=am.getInnerMostAxes(p.length,u),l=e}Jy(r,"max"),am.assertAxesAreInnerMostDims("max",p,u);let[f,m]=am.computeOutAndReduceShapes(l,p),g=hA(c,$r.sizeFromShape(m),f,r.dtype),y=o.write(g,f,r.dtype),x=f;return i&&(x=am.expandShapeToKeepDim(f,d)),{dataId:y,shape:x,dtype:r.dtype}}var Xv={kernelName:Dn,backendName:"cpu",kernelFunc:qv},Kv={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t;Jy(r,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=a;$r.assert(am.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u,d=am.computePool2DInfo(r.shape,s,i,1,o,l);if(1===d.filterWidth&&1===d.filterHeight&&$r.arraysEqual(d.inShape,d.outShape))u=lx({inputs:{x:r},backend:n});else{let e=n.data.get(r.dataId).values,t=$r.computeStrides(r.shape),a=dw(e,r.shape,r.dtype,t,d,"max");u=n.makeTensorInfo(d.outShape,r.dtype,a.values)}return u}},Yv={kernelName:Bn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=a;Jy(r,"maxPool3d");let d=am.computePool3DInfo(r.shape,s,i,1,o,l,u),p=hw(n.data.get(r.dataId).values,r.shape,r.dtype,$r.computeStrides(r.shape),d,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}},Zv={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=a;Jy([r,s],"maxPool3DGrad");let d=am.computePool3DInfo(s.shape,i,o,1,l,u),p=function(e,t){let n=Io(t.outShape,"int32"),a=t.strideDepth,r=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,d=t.effectiveFilterHeight,p=t.effectiveFilterWidth,h=t.padInfo.front,c=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let x=y*a-h,A=x;for(;A<0;)A+=i;let b=Math.min(t.inDepth,u+x);for(let a=0;a<t.outHeight;++a){let u=a*r-c,h=u;for(;h<0;)h+=o;let w=Math.min(t.inHeight,d+u);for(let r=0;r<t.outWidth;++r){let c=r*s-f,v=c;for(;v<0;)v+=l;let k=Math.min(t.inWidth,p+c),I=Number.NEGATIVE_INFINITY,S=-1;for(let t=A;t<b;t+=i){let n=t-x;for(let a=h;a<w;a+=o){let r=a-u;for(let s=v;s<k;s+=l){let i=s-c,o=e.get(m,t,a,s,g);o>=I&&(I=o,S=n*d*p+r*d+i)}}}n.set(S,m,y,a,r,g)}}}return n}(n.bufferSync(s),d),h=d.strideDepth,c=d.strideHeight,f=d.strideWidth,m=d.dilationDepth,g=d.dilationHeight,y=d.dilationWidth,x=d.effectiveFilterDepth,A=d.effectiveFilterHeight,b=d.effectiveFilterWidth,w=x-1-d.padInfo.front,v=b-1-d.padInfo.left,k=A-1-d.padInfo.top,I=Io(s.shape,"float32"),S=n.bufferSync(r);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inDepth;++n)for(let a=0;a<d.inHeight;++a)for(let r=0;r<d.inWidth;++r){let s=n-w,i=a-k,o=r-v,l=0;for(let n=0;n<x;n+=m){let a=(s+n)/h;if(!(a<0||a>=d.outDepth||Math.floor(a)!==a))for(let r=0;r<A;r+=g){let s=(i+r)/c;if(!(s<0||s>=d.outHeight||Math.floor(s)!==s))for(let i=0;i<b;i+=y){let u=(o+i)/f;if(u<0||u>=d.outWidth||Math.floor(u)!==u)continue;let h=x*A*b-1-p.get(e,a,s,u,t)===n*A*b+r*b+i?1:0;0!==h&&(l+=S.get(e,a,s,u,t)*h)}}}I.set(l,e,n,a,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},Jv={kernelName:Wn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:i}=t,o=s;Jy([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:d,dimRoundingMode:p}=a,h=am.computePool2DInfo(o.shape,l,u,1,d,p),c=n.data.get(o.dataId).values,f=Io(h.outShape,o.dtype,pw(c,o.shape,o.dtype,h).values),m=h.strideHeight,g=h.strideWidth,y=h.dilationHeight,x=h.dilationWidth,A=h.effectiveFilterHeight,b=h.effectiveFilterWidth,w=b-1-h.padInfo.left,v=A-1-h.padInfo.top,k=Io(o.shape,"float32"),I=n.data.get(r.dataId).values,S=Io(r.shape,"float32",I);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inHeight;++n)for(let a=0;a<h.inWidth;++a){let r=n-v,s=a-w,i=0;for(let n=0;n<A;n+=y){let a=(r+n)/m;if(!(a<0||a>=h.outHeight||Math.floor(a)!==a))for(let r=0;r<b;r+=x){let o=(s+r)/g;if(o<0||o>=h.outWidth||Math.floor(o)!==o)continue;let l=A*b-1-f.get(e,a,o,t)===n*b+r?1:0;0!==l&&(i+=S.get(e,a,o,t)*l)}}k.set(i,e,n,a,t)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},Qv={kernelName:Un,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:a}=e,{filterSize:r,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;Jy(a,"MaxPoolWithArgmax");let u=l.data.get(a.dataId).values,d=am.computePool2DInfo(a.shape,r,s,[1,1],i),[p,h]=function(e,t,n,a,r){let s=dw(e,0,n,$r.computeStrides(t),r,"max"),i=pw(e,t,n,r,!0,a);return[s.values,i.values]}(u,a.shape,a.dtype,o,d),c=l.write(p,d.outShape,a.dtype),f=l.write(h,d.outShape,a.dtype);return[{dataId:c,shape:d.outShape,dtype:a.dtype},{dataId:f,shape:d.outShape,dtype:"int32"}]}},ek={kernelName:Gn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=$r.parseAxisParam(s,r.shape),l=am.computeOutAndReduceShapes(r.shape,o)[1],u=$r.sizeFromShape(l),d=[],p=n.makeTensorInfo([],"float32",new Float32Array([u]));d.push(p);let h=cx({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});d.push(h);let c=fv({inputs:{a:h,b:p},backend:n});d.push(c);let f=Qw({inputs:{x:c},backend:n,attrs:{axis:s,keepDims:i}});return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}},tk={kernelName:Hn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;Jy(r,"min");let o=$r.parseAxisParam(s,r.shape),l=o,u=am.getAxesPermutation(l,r.shape.length),d=r;null!=u&&(d=RA({inputs:{x:r},backend:n,attrs:{perm:u}}),l=am.getInnerMostAxes(l.length,r.shape.length)),am.assertAxesAreInnerMostDims("min",l,d.shape.length);let[p,h]=am.computeOutAndReduceShapes(d.shape,l),c=$r.sizeFromShape(h),f=$r.makeZerosTypedArray($r.sizeFromShape(p),d.dtype),m=n.data.get(d.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,n=m[t];for(let e=0;e<c;++e){let a=m[t+e];(Number.isNaN(a)||a<n)&&(n=a)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(d);let g=n.makeTensorInfo(p,d.dtype,f);if(i){let e=Lb({inputs:{x:g},backend:n,attrs:{shape:am.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},nk={kernelName:qn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,mode:i}=a;Jy(r,"mirrorPad");let o=s.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=s.map((e=>e[0])),u=s.map(((e,t)=>e[0]+r.shape[t])),d="reflect"===i?0:1,p=n.data.get(r.dataId).values,h=r.shape.length,c=$r.computeStrides(r.shape),f=$r.sizeFromShape(o),m=o.length,g=$r.computeStrides(o),y=$r.getTypedArrayFromDType(r.dtype,f);for(let e=0;e<f;e++){let t=$r.indexToLoc(e,m,g);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-d:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+d);t=t.map(((e,t)=>e-l[t]));let n=$r.locToIndex(t,h,c);y[e]=p[n]}return{dataId:n.write(y,o,r.dtype),shape:o,dtype:r.dtype}}},ak=rx(((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),rk=mx(Xn,ak),sk={kernelName:Xn,backendName:"cpu",kernelFunc:rk},ik=N(L());function ok(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,i=r.shape.length,o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let l=$r.parseAxisParam([o],r.shape),u=qv({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),d=am.expandShapeToKeepDim(u.shape,l),p=Lb({inputs:{x:u},backend:n,attrs:{shape:d}}),h=Ab({inputs:{a:r,b:p},backend:n}),c=Dx({inputs:{x:h},backend:n}),f=Qw({inputs:{x:c},backend:n,attrs:{axis:l,keepDims:!1}}),m=Lb({inputs:{x:f},backend:n,attrs:{shape:d}}),g=fv({inputs:{a:c,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var lk={kernelName:Ba,backendName:"cpu",kernelFunc:ok},uk={kernelName:Kn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:i,normalized:o}=a;Jy(r,"multinomial");let l=o?r:ok({inputs:{logits:r},backend:n,attrs:{dim:-1}}),u=l.shape[0],d=l.shape[1],p=n.data.get(l.dataId).values,h=[u,s],c=$r.makeZerosTypedArray($r.sizeFromShape(h),"int32");for(let e=0;e<u;++e){let t=e*d,n=new Float32Array(d-1);n[0]=p[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+p[t+e];let a=ik.alea(i.toString()),r=e*s;for(let e=0;e<s;++e){let t=a();c[r+e]=n.length;for(let a=0;a<n.length;a++)if(t<n[a]){c[r+e]=a;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(h,"int32",c)}},dk=pg.nonMaxSuppressionV3Impl,pk={kernelName:Qn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=a;Jy(r,"NonMaxSuppression");let u=n.data.get(r.dataId).values,d=n.data.get(s.dataId).values,{selectedIndices:p}=dk(u,d,i,o,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},hk=pg.nonMaxSuppressionV4Impl,ck={kernelName:ea,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=a;Jy(r,"NonMaxSuppressionPadded");let d=n.data.get(r.dataId).values,p=n.data.get(s.dataId).values,{selectedIndices:h,validOutputs:c}=hk(d,p,i,o,l,u);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}},fk=pg.nonMaxSuppressionV5Impl,mk={kernelName:ta,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=a;Jy(r,"NonMaxSuppressionWithScore");let d=n.data.get(r.dataId).values,p=n.data.get(s.dataId).values,h=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=fk(d,p,h,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},gk={kernelName:aa,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:s,depth:i,onValue:o,offValue:l}=a;Jy(r,"oneHot");let u=$r.sizeFromShape(r.shape),d=new Float32Array(u*i);d.fill(l);let p=n.data.get(r.dataId).values;for(let e=0;e<u;++e)p[e]>=0&&p[e]<i&&(d[e*i+p[e]]=o);return n.makeTensorInfo([...r.shape,i],s,d)}};function yk(e){let{inputs:t,backend:n}=e,{x:a}=t;if("string"===a.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===a.dtype){let e=dx({inputs:{input:a},backend:n}),t=yk({inputs:{x:e},backend:n}),r=Iw({inputs:{input:a},backend:n}),s=yk({inputs:{x:r},backend:n}),i=sx({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}return bv({backend:n,attrs:{shape:a.shape,value:0,dtype:a.dtype}})}var xk={kernelName:pr,backendName:"cpu",kernelFunc:yk},Ak={kernelName:na,backendName:"cpu",kernelFunc:function e(t){let{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){let t=dx({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),s=Iw({inputs:{input:r},backend:a}),i=yk({inputs:{x:s},backend:a}),o=sx({inputs:{real:n,imag:i},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),o}return bv({backend:a,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function bk(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return pv({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{$r.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),$r.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=Cw({inputs:t.map((e=>{let t=pv({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}var wk={kernelName:ra,backendName:"cpu",kernelFunc:bk},vk={kernelName:sa,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:i}=a;Jy(r,"pad");let o=s.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=s.map((e=>e[0])),u=n.data.get(r.dataId).values,d=$r.sizeFromShape(r.shape),p=r.shape.length,h=$r.computeStrides(r.shape),c=$r.sizeFromShape(o),f=o.length,m=$r.computeStrides(o),g=$r.getTypedArrayFromDType(r.dtype,c);0!==i&&g.fill(i);for(let e=0;e<d;e++){let t=$r.indexToLoc(e,p,h).map(((e,t)=>e+l[t]));g[$r.locToIndex(t,f,m)]=u[e]}return{dataId:n.write(g,o,r.dtype),shape:o,dtype:r.dtype}}},kk=rx(((e,t)=>Math.pow(e,t))),Ik=mx(oa,kk),Sk={kernelName:oa,backendName:"cpu",kernelFunc:Ik},Ck={kernelName:da,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=a,l=r.map((e=>n.data.get(e.dataId).values)),u=r.map((e=>e.shape)),d=n.data.get(s.dataId).values,p=n.data.get(i.dataId).values,[h,c,f]=_A(l,u,d,s.shape,s.dtype,p,i.shape),m=h.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,c);return m.concat([g])}},Nk={kernelName:pa,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:s}=t,i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,[u,d]=OA(i,a.shape,a.dtype,o,r.shape,l,s.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([d.length],a.dtype,d)]}},Tk={kernelName:ha,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{shape:r,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=a,u=n.data.get(r.dataId).values,d=n.data.get(s.dataId).values,p=n.data.get(i.dataId).values,h=o.map((e=>n.data.get(e.dataId).values)),c=o.map((e=>e.shape)),[f,m]=BA(u,r.shape,d,s.shape,s.dtype,p,i.shape,h,c,l);return n.makeTensorInfo(f,s.dtype,m)}},Rk={kernelName:ca,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:a,stop:r,dtype:s,step:i}=n,o=VA(a,r,i,s);return t.makeTensorInfo([o.length],s,o)}},Ek=Nx(ma,(e=>1/e)),$k={kernelName:ma,backendName:"cpu",kernelFunc:Ek},Mk={kernelName:ba,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a;Jy(r,"resizeBilinear");let l=$r.computeStrides(r.shape),[u,d]=o,[p,h,c,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array($r.sizeFromShape([p,u,d,f])),y=[s&&u>1?h-1:h,s&&d>1?c-1:c],x=[s&&u>1?u-1:u,s&&d>1?d-1:d],A=0,b=y[0]/x[0],w=y[1]/x[1];for(let e=0;e<p;e++)for(let t=0;t<u;t++){let n;n=i?b*(t+.5)-.5:b*t;let a=Math.max(0,Math.floor(n)),r=n-a,s=Math.min(h-1,Math.ceil(n)),o=e*l[0]+a*l[1],u=e*l[0]+s*l[1];for(let e=0;e<d;e++){let t;t=i?w*(e+.5)-.5:w*e;let n=Math.max(0,Math.floor(t)),a=t-n,s=Math.min(c-1,Math.ceil(t)),d=o+n*l[2],p=u+n*l[2],h=o+s*l[2],y=u+s*l[2];for(let e=0;e<f;e++){let t=m[d+e],n=m[p+e],s=t+(m[h+e]-t)*a,i=s+(n+(m[y+e]-n)*a-s)*r;g[A++]=i}}}return n.makeTensorInfo([p,u,d,f],"float32",g)}},Fk={kernelName:wa,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a;Jy([s,r],"resizeBilinearGrad");let o=$r.computeStrides(r.shape),[l,u,d,p]=r.shape,[,h,c]=s.shape,f=new Float32Array(l*u*d*p),m=[i&&h>1?u-1:u,i&&c>1?d-1:d],g=[i&&h>1?h-1:h,i&&c>1?c-1:c],y=m[0]/g[0],x=m[1]/g[1],A=n.data.get(s.dataId).values,b=0;for(let e=0;e<l;e++){let t=e*o[0];for(let e=0;e<h;e++){let n=e*y,a=Math.floor(n),r=Math.min(Math.ceil(n),u-1),s=t+a*o[1],i=t+r*o[1],l=n-a,h=1-l;for(let e=0;e<c;e++){let t=e*x,n=Math.floor(t),a=Math.min(Math.ceil(t),d-1),r=t-n,u=1-r,c=s+n*o[2],m=s+a*o[2],g=i+n*o[2],y=i+a*o[2],w=h*u,v=h*r,k=l*u,I=l*r;for(let e=0;e<p;e++){let t=A[b++];f[c+e]+=t*w,f[m+e]+=t*v,f[g+e]+=t*k,f[y+e]+=t*I}}}}return n.makeTensorInfo([l,d,u,p],"float32",f)}},_k={kernelName:xa,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a;Jy(r,"resizeNearestNeighbor");let l=$r.computeStrides(r.shape),[u,d]=o,[p,h,c,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(p*u*d*f),y=[s&&u>1?h-1:h,s&&d>1?c-1:c],x=[s&&u>1?u-1:u,s&&d>1?d-1:d],A=y[0]/x[0],b=y[1]/x[1],w=0;for(let e=0;e<p;e++){let t=e*l[0];for(let e=0;e<u;e++){let n=i?A*(e+.5):A*e,a=Math.min(h-1,s?Math.round(n):Math.floor(n));i&&(a=Math.max(0,a));let r=t+a*l[1];for(let e=0;e<d;e++){let t=i?b*(e+.5):b*e,n=Math.min(c-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));let a=r+n*l[2];for(let e=0;e<f;e++){let t=m[a+e];g[w++]=t}}}}return n.makeTensorInfo([p,u,d,f],r.dtype,g)}},Pk={kernelName:Aa,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a;Jy([s,r],"resizeNearestNeighborGrad");let o=$r.computeStrides(r.shape),l=$r.computeStrides(s.shape),[u,d,p,h]=r.shape,[,c,f]=s.shape,m=new Float32Array(u*d*p*h),g=n.data.get(s.dataId).values,y=[i&&c>1?d-1:d,i&&f>1?p-1:p],x=[i&&c>1?c-1:c,i&&f>1?f-1:f],A=y[0]/x[0],b=y[1]/x[1],w=1/A,v=1/b,k=2*Math.ceil(w)+2,I=2*Math.ceil(v)+2;for(let e=0;e<u;e++){let t=e*o[0];for(let e=0;e<d;e++){let n=t+e*o[1],a=Math.floor(e*w),r=Math.floor(a-k/2);for(let a=0;a<p;a++){let s=n+a*o[2],u=Math.floor(a*v),y=Math.floor(u-I/2);for(let n=0;n<h;n++){let o=0;for(let s=0;s<k;s++){let u=s+r;if(u<0||u>=c)continue;let h=t+u*l[1],m=u*A;if(e===Math.min(d-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<I;e++){let t=e+y;if(t<0||t>=f)continue;let r=h+t*l[2],s=t*b;a===Math.min(p-1,i?Math.round(s):Math.floor(s))&&(o+=g[r+n])}}m[s+n]=o}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}},Ok={kernelName:ka,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a;Jy(r,"reverse");let i=r.shape.length,o=$r.parseAxisParam(s,r.shape);if(0===i)return lx({inputs:{x:r},backend:n});let l=new hs(r.shape,r.dtype),u=n.bufferSync(r);for(let e=0;e<l.size;e++){let t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=r.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},Dk={kernelName:fr,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:a}=e,{radians:r,fillValue:s,center:i}=t,o=n,l=$r.getTypedArrayFromDType(a.dtype,$r.sizeFromShape(a.shape)),[u,d,p,h]=a.shape,[c,f]=am.getImageCenter(i,d,p),m=Math.sin(r),g=Math.cos(r),y=o.data.get(a.dataId).values;for(let e=0;e<u;e++){let t=e*p*d*h;for(let e=0;e<d;e++){let n=e*(p*h);for(let a=0;a<p;a++){let r=a*h;for(let i=0;i<h;i++){let o=[u,e,a,i],x=o[2],A=o[1],b=(x-c)*g-(A-f)*m,w=(x-c)*m+(A-f)*g;b=Math.round(b+c),w=Math.round(w+f);let v=s;"number"!=typeof s&&(v=3===i?255:s[i]),b>=0&&b<p&&w>=0&&w<d&&(v=y[t+w*(p*h)+b*h+i]),l[t+n+r+i]=v}}}}return{dataId:o.write(l,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},zk=Nx(Ia,(e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),Lk={kernelName:Ia,backendName:"cpu",kernelFunc:zk},Wk={kernelName:Ca,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:i}=a,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:p}=am.calculateShapes(s,r,i),h=jA(n.bufferSync(r),n.bufferSync(s),i,p,u,l,o,d,0,!0);return n.makeTensorInfo(i,h.dtype,h.values)}};function Bk(e,t){let n=0,a=e.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),e[r]<t?n=r+1:a=r;return a}function Vk(e,t){let n=0,a=e.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),e[r]<=t?n=r+1:a=r;return a}var Uk={kernelName:Ta,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:s}=t,{side:i}=a,o=function(e,t,n,a,r,s){let i=$r.getArrayFromDType("int32",n*r);for(let o=0;o<n;++o){let n=e.slice(o*a,(o+1)*a),l=o*r;for(let e=0;e<r;++e)i[l+e]="left"===s?Bk(n,t[e+l]):Vk(n,t[e+l])}return i}(n.data.get(r.dataId).values,n.data.get(s.dataId).values,r.shape[0],r.shape[1],s.shape[1],i);return n.makeTensorInfo(s.shape,"int32",o)}},Gk={kernelName:Ra,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t;Jy([a,r,s],"select");let i=a.shape.length,o=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,d=Cs(r.dtype,s.dtype),p=$r.makeZerosTypedArray($r.sizeFromShape(r.shape),d),h=0,c=0===i||i>1||1===r.shape.length?1:$r.sizeFromShape(r.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<c;t++)1===o[e]?p[h++]=l[e]:p[h++]=u[e];return n.makeTensorInfo(r.shape,d,p)}},Hk=am.SELU_SCALEALPHA,jk=am.SELU_SCALE,qk=Nx(Ea,(e=>e>=0?jk*e:Hk*(Math.exp(e)-1))),Xk={kernelName:Ea,backendName:"cpu",kernelFunc:qk},Kk=Nx(_a,(e=>e<0?-1:e>0?1:0)),Yk={kernelName:_a,backendName:"cpu",kernelFunc:Kk},Zk=Nx(Ma,(e=>Math.sin(e))),Jk={kernelName:Ma,backendName:"cpu",kernelFunc:Zk},Qk=Nx(Fa,(e=>Math.sinh(e))),eI={kernelName:Fa,backendName:"cpu",kernelFunc:Qk},tI=Math.log(1.1920928955078125e-7)+2,nI=Nx(Oa,(e=>{let t,n=e>-tI,a=e<tI,r=Math.exp(e);return t=a?r:n?e:Math.log(1+r),t})),aI={kernelName:Oa,backendName:"cpu",kernelFunc:nI},rI={kernelName:La,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:i}=a;Jy([r],"spaceToBatchND");let o=$r.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<r.shape.length;++e)l.push([0,0]);let u=vk.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),d=am.getReshaped(u.shape,s,o,!1),p=am.getPermuted(d.length,s.length,!1),h=am.getReshapedPermuted(u.shape,s,o,!1),c=Lb({inputs:{x:u},backend:n,attrs:{shape:d}}),f=RA({inputs:{x:c},backend:n,attrs:{perm:p}}),m=Lb({inputs:{x:f},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}},sI={kernelName:Va,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==a.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${a.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n        ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);let o=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,d=n.data.get(i.dataId).values[0],[p,h,c,f,m]=QA(o,a.shape,a.dtype,l,r.dtype,u,d);return[n.makeTensorInfo(h,a.dtype,p),n.makeTensorInfo([h[0]],r.dtype,c),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}},iI={kernelName:Ua,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:s}=t;if(2!==a.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${a.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.data.get(r.dataId).values),o=n.data.get(a.dataId).values,l=Array.from(n.data.get(s.dataId).values),[u,d,p]=eb(o,a.shape,a.dtype,i,l);return[n.makeTensorInfo(d,a.dtype,u),n.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}},oI={kernelName:Ga,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${r.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);if(r.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,[u,d]=tb(i,a.shape,a.dtype,o,l,!0);return n.makeTensorInfo(d,a.dtype,u)}},lI={kernelName:Ha,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);if(r.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,[u,d]=tb(i,a.shape,a.dtype,o,l);return n.makeTensorInfo(d,a.dtype,u)}},uI={kernelName:ja,backendName:"cpu",kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{sparseIndices:s,sparseValues:i,defaultValue:o}=n,{outputShape:l}=r,{sliceRank:u,numUpdates:d,sliceSize:p,strides:h,outputSize:c}=am.calculateShapes(i,s,l),f=!1,m=a.bufferSync(s);switch(i.dtype){case"bool":t=jA(m,a.bufferSync(i),l,c,p,d,u,h,!!a.data.get(o.dataId).values[0],f);break;case"float32":case"int32":t=jA(m,a.bufferSync(i),l,c,p,d,u,h,a.data.get(o.dataId).values[0],f);break;case"string":t=jA(m,a.bufferSync(i),l,c,p,d,u,h,$r.decodeString(a.data.get(o.dataId).values[0]),f);break;default:throw new Error(`Unsupported type ${i.dtype}`)}return a.makeTensorInfo(l,t.dtype,t.values)}},dI={kernelName:Wa,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=a,o=$r.parseAxisParam(i,r.shape)[0],l=am.prepareSplitSize(r,s,o),u=new Array(r.shape.length).fill(0),d=r.shape.slice();return l.map((e=>{let t=[...d];t[o]=e;let a=ZA({inputs:{x:r},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,a}))}},pI={kernelName:Xa,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,a=t;Jy(n,"square");let r=a.data.get(n.dataId).values,s=new Float32Array(r.length);for(let e=0;e<r.length;++e){let t=r[e];s[e]=t*t}return{dataId:a.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},hI=Nx(hr,((e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),cI={kernelName:hr,backendName:"cpu",kernelFunc:hI},fI={kernelName:Ya,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:h}=a;Jy(r,"stridedSlice");let c,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:x,begin:A,end:b,strides:w}=$f.sliceInfo(r.shape,s,i,o,l,u,d,p,h);if(g)c=Lb({inputs:{x:r},backend:n,attrs:{shape:m}});else if(y||x){$r.assert(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));let e=$f.computeOutShape(A,b,w),t=ZA({inputs:{x:r},backend:n,attrs:{begin:A,size:e}});c=Lb({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{let e=pb(f,n.bufferSync(r),w,A);c=n.makeTensorInfo(m,e.dtype,e.values)}return c}},mI={kernelName:Za,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=a,{data:d,dataSplits:p}=t,h=n.data.get(d.dataId).values,c=n.data.get(p.dataId).values,[f,m]=cb(h,c,r,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}},gI={kernelName:Ja,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values[0],[u,d,p]=mb(o,l,r),h=d.length;return[n.makeTensorInfo([h,2],"int32",u),n.makeTensorInfo([h],"string",d),n.makeTensorInfo([2],"int32",new Int32Array(p))]}},yI={kernelName:Qa,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let i=gb(n.data.get(s.dataId).values,r);return n.makeTensorInfo(s.shape,"int32",i)}},xI=Nx(tr,(e=>Math.tan(e))),AI={kernelName:tr,backendName:"cpu",kernelFunc:xI},bI=Nx(nr,(e=>Math.tanh(e))),wI={kernelName:Na,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{tensor:a,indices:r,updates:s}=t,{sliceRank:i,numUpdates:o,sliceSize:l,strides:u,outputSize:d}=am.calculateShapes(s,r,a.shape),p=n.bufferSync(r),h=n.bufferSync(s),c=n.bufferSync(a),f=jA(p,h,a.shape,d,l,o,i,u,c,!1);return n.makeTensorInfo(a.shape,f.dtype,f.values)}},vI={kernelName:ar,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;Jy(r,"tile");let i=wb(n.bufferSync(r),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},kI={kernelName:rr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:i}=a;Jy(r,"topk");let o=n.data.get(r.dataId).values,[l,u]=Ib(o,r.shape,r.dtype,s,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},II={kernelName:sr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,{image:r,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[d,p,h,c]=r.shape,[f,m]=null!=u?u:[p,h],g=[d,f,m,c],y=$r.computeStrides(r.shape),x=y[0],A=y[1],b=y[2],w=$r.computeStrides(g),v=w[0],k=w[1],I=w[2],S=$r.getTypedArrayFromDType(r.dtype,$r.sizeFromShape(g));S.fill(l);let C=a.data.get(r.dataId).values,N=a.data.get(s.dataId).values;for(let e=0;e<d;++e){let t=1===s.shape[0]?N:N.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let a=0;a<m;++a)for(let r=0;r<c;++r){let s,u=t[6]*a+t[7]*n+1;if(0===u)continue;let d=(t[0]*a+t[1]*n+t[2])/u,c=(t[3]*a+t[4]*n+t[5])/u,f=SI(d,h,o),m=SI(c,p,o);switch(i){case"nearest":s=NI(C,p,h,x,A,b,e,m,f,r,l);break;case"bilinear":s=TI(C,p,h,x,A,b,e,m,f,r,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}S[e*v+n*k+a*I+r]=s}return a.makeTensorInfo(g,r.dtype,S)}return{dataId:a.write(S,g,r.dtype),shape:r.shape,dtype:r.dtype}}};function SI(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{let e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return $r.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{let e=t-1;n-=t*Math.trunc(n/e)}return $r.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return $r.clamp(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function CI(e,t,n,a,r,s,i,o,l,u,d){return 0<=o&&o<t&&0<=l&&l<n?e[i*a+o*r+l*s+u]:d}function NI(e,t,n,a,r,s,i,o,l,u,d){return CI(e,t,n,a,r,s,i,Math.round(o),Math.round(l),u,d)}function TI(e,t,n,a,r,s,i,o,l,u,d){let p=Math.floor(o),h=Math.floor(l),c=p+1,f=h+1;return(c-o)*((f-l)*CI(e,t,n,a,r,s,i,p,h,u,d)+(l-h)*CI(e,t,n,a,r,s,i,p,f,u,d))+(o-p)*((f-l)*CI(e,t,n,a,r,s,i,c,h,u,d)+(l-h)*CI(e,t,n,a,r,s,i,c,f,u,d))}var RI={kernelName:or,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;Jy(s,"unique");let i=a.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:u}=Sb(i,r,s.shape,s.dtype);return[a.makeTensorInfo(l,s.dtype,o),a.makeTensorInfo([u.length],"int32",u)]}},EI={kernelName:lr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{value:r}=t,{axis:s}=a;s<0&&(s+=r.shape.length);let i=r.shape.length,o=r.shape[s],l=new Array(i-1),u=0;for(let e=0;e<i;e++)e!==s&&(l[u++]=r.shape[e]);let d=new Array(i).fill(0),p=r.shape.slice();p[s]=1;let h=new Array(o);for(let e=0;e<h.length;e++){d[s]=e;let t=ZA({inputs:{x:r},backend:n,attrs:{begin:d,size:p}});h[e]=Lb({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return h}},$I={kernelName:ur,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:i}=a;Jy(r,"unsortedSegmentSum");let o=[],l=[],u=r.shape.length-s.shape.length,d=s;for(let e=0;e<u;++e){let t=pv({inputs:{input:d},backend:n,attrs:{dim:e+1}});d=t,l.push(t)}for(let e=0;e<i;++e){let t=$r.createScalarValue(e,"int32"),a=n.makeTensorInfo([],"int32",t),s=_x({inputs:{a,b:d},backend:n}),i=cx({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),u=wA({inputs:{a:i,b:r},backend:n}),p=Qw({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(p),l.push(a),l.push(s),l.push(i),l.push(u),l.push(p)}let p=bk({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},MI=[Ub,ax,Hb,qb,bx,Xb,Kb,Yb,Zb,Jb,ew,nw,rw,ow,uw,cw,fw,mw,gw,Vb,yw,xw,Aw,Sx,bw,fx,$x,vw,ix,kw,Nw,Rw,Ew,$w,Mw,Fw,_w,Ow,zw,Lw,Ww,Bw,Vw,Uw,Hw,jw,qw,Xw,Kw,Yw,Zw,Jw,tv,Tb,nv,Px,dv,zx,hv,Bx,Av,wv,vv,Gx,qx,kv,Iv,Sv,Cv,Jx,tA,ux,Nv,Sw,Rv,$v,Fv,Eb,rA,oA,_v,pA,Ov,Lv,Bv,Gv,Hv,jv,Xv,mA,Kv,Yv,Zv,Jv,Qv,ek,tk,xA,nk,sk,uk,vA,IA,pk,ck,mk,NA,gk,Ak,wk,vk,Sk,Fb,MA,Ck,Nk,Tk,Rk,px,mv,$k,Pb,Db,Wb,Mk,Fk,_k,Pk,Ok,Dk,Lk,HA,Wk,Uk,Gk,Xk,KA,Yk,Jk,eI,JA,lk,aI,rI,sI,iI,oI,lI,uI,dI,rb,pI,ob,db,cI,fI,mI,gI,yI,bb,ev,AI,{kernelName:nr,backendName:"cpu",kernelFunc:bI},wI,vI,kI,II,EA,RI,EI,$I,xk];for(let e of MI)Sr(e);var FI={};C(FI,{assertNotComplex:()=>VS,bindCanvasToFramebuffer:()=>xS,bindColorTextureToFramebuffer:()=>AS,bindTextureToProgramUniformSampler:()=>yS,bindTextureUnit:()=>cS,bindVertexBufferToProgramAttribute:()=>hS,callAndCheck:()=>HI,canBeRepresented:()=>XI,createFragmentShader:()=>JI,createFramebuffer:()=>pS,createProgram:()=>aS,createStaticIndexBuffer:()=>oS,createStaticVertexBuffer:()=>iS,createTexture:()=>uS,createVertexShader:()=>ZI,getBatchDim:()=>SS,getExtensionOrThrow:()=>YI,getFramebufferErrorMessage:()=>vS,getMaxTexturesInShader:()=>_S,getNumChannels:()=>lS,getProgramUniformLocation:()=>gS,getProgramUniformLocationOrThrow:()=>mS,getRowsCols:()=>CS,getShapeAs3D:()=>NS,getTextureShapeFromLogicalShape:()=>TS,getWebGLDisjointQueryTimerVersion:()=>PS,getWebGLErrorMessage:()=>KI,getWebGLMaxTextureSize:()=>$S,hasExtension:()=>OS,isCapableOfRenderingToFloatTexture:()=>zS,isDownloadFloatTextureEnabled:()=>LS,isReshapeFree:()=>ES,isWebGLFenceEnabled:()=>BS,isWebGLVersionEnabled:()=>DS,linkProgram:()=>rS,logShaderSourceAndInfoLog:()=>nS,resetMaxTextureSize:()=>MS,resetMaxTexturesInShader:()=>FS,unbindColorTextureFromFramebuffer:()=>bS,unbindTextureUnit:()=>fS,validateFramebuffer:()=>wS,validateProgram:()=>sS,validateTextureSize:()=>dS});var _I,PI,OI,DI={},zI={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function LI(e,t){DI[e]=t}function WI(e,t){if(!(e in DI)||null!=t){let n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let n=null==t?function(e){if(!Xe().getBool("IS_SAFARI")&&"undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete DI[e]}),!1),Xe().getBool("SOFTWARE_WEBGL_ENABLED")&&(zI.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",zI)||n.getContext("experimental-webgl",zI):n.getContext("webgl2",zI)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;DI[e]=n}let n=DI[e];return null==n||n.isContextLost()?(delete DI[e],WI(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),DI[e])}function BI(e,t){return[t,e]}function VI(e){let t=$r.sizeFromShape(e),n=Math.ceil(t/4);return $r.sizeToSquarishShape(n)}function UI(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function GI(e,t){let n,a,r,s,i,o,l,u,d,p,h=e;return 2===Xe().getNumber("WEBGL_VERSION")?(n=h.R32F,a=h.R16F,r=h.RGBA16F,s=h.RGBA32F,i=h.RED,l=4,u=1,d=h.HALF_FLOAT,p=h.FLOAT,o=h.RGBA8):(n=e.RGBA,a=e.RGBA,r=e.RGBA,s=h.RGBA,i=e.RGBA,l=4,u=4,d=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,o=e.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:r,internalFormatPackedFloat:s,textureFormatFloat:i,downloadTextureFormat:o,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:d,textureTypeFloat:p}}function HI(e,t){let n=t();return Xe().getBool("DEBUG")&&function(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+KI(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(_I||(_I={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(PI||(PI={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(OI||(OI={}));var jI=5.96e-8,qI=65504;function XI(e){return!!(Xe().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||jI<Math.abs(e)&&Math.abs(e)<qI)}function KI(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function YI(e,t){return kS(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function ZI(e,t){let n=kS(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(HI(e,(()=>e.shaderSource(n,t))),HI(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function JI(e,t){let n=kS(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(HI(e,(()=>e.shaderSource(n,t))),HI(e,(()=>e.compileShader(n))),Xe().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw nS(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var QI,eS,tS=/ERROR: [0-9]+:([0-9]+):/g;function nS(e,t){let n=tS.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);let a=+n[1],r=e.split("\n"),s=r.length.toString().length+2,i=r.map(((e,t)=>$r.rightPad((t+1).toString(),s)+e)),o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);let l=i.slice(0,a-1),u=i.slice(a-1,a),d=i.slice(a);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${$r.rightPad(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}function aS(e){return kS(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function rS(e,t){if(HI(e,(()=>e.linkProgram(t))),!Xe().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function sS(e,t){if(HI(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function iS(e,t){let n=kS(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return HI(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),HI(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function oS(e,t){let n=kS(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return HI(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),HI(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function lS(){return 2===Xe().getNumber("WEBGL_VERSION")?1:4}function uS(e){return kS(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function dS(e,t){let n=Xe().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}function pS(e){return kS(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function hS(e,t,n,a,r,s,i){let o=e.getAttribLocation(t,n);return-1!==o&&(HI(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,a))),HI(e,(()=>e.vertexAttribPointer(o,r,e.FLOAT,!1,s,i))),HI(e,(()=>e.enableVertexAttribArray(o))),!0)}function cS(e,t,n){IS(e,n),HI(e,(()=>e.activeTexture(e.TEXTURE0+n))),HI(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function fS(e,t){IS(e,t),HI(e,(()=>e.activeTexture(e.TEXTURE0+t))),HI(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function mS(e,t,n){return kS(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function gS(e,t,n){return e.getUniformLocation(t,n)}function yS(e,t,n,a){HI(e,(()=>cS(e,t,a))),HI(e,(()=>e.uniform1i(n,a)))}function xS(e){HI(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),HI(e,(()=>e.viewport(0,0,e.canvas.width,e.canvas.height))),HI(e,(()=>e.scissor(0,0,e.canvas.width,e.canvas.height)))}function AS(e,t,n){HI(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),HI(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function bS(e,t){HI(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),HI(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function wS(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+vS(e,t))}function vS(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function kS(e,t,n){let a=HI(e,(()=>t()));if(null==a)throw new Error(n);return a}function IS(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=t+e.TEXTURE0;if(a<e.TEXTURE0||a>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)}function SS(e,t=2){return $r.sizeFromShape(e.slice(0,e.length-t))}function CS(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function NS(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[SS(e),...CS(e)]),t}function TS(e,t=!1){let n=Xe().getNumber("WEBGL_MAX_TEXTURE_SIZE"),a=Xe().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");a===1/0&&Xe().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(a=n/2),t&&(n*=2,a*=2,1===(e=e.map(((t,n)=>n>=e.length-2?$r.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length&&(e=$r.squeezeShape(e).newShape);let r=$r.sizeFromShape(e),s=null;e.length<=1&&r<=n?s=[1,r]:2===e.length&&e[0]<=n&&e[1]<=n?s=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?s=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?s=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?s=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(s=[e[0],e[1]*e[2]*e[3]]);let i=null!=s&&Math.max(...s)>a&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(null==s||i)if(t){let t=SS(e),n=2,a=2;e.length&&([n,a]=CS(e)),r=t*(n/2)*(a/2),s=$r.sizeToSquarishShape(r).map((e=>2*e))}else s=$r.sizeToSquarishShape(r);return s}function RS(e){return e%2==0}function ES(e,t){if(e=e.slice(-2),t=t.slice(-2),$r.arraysEqual(e,t)||!e.length||!t.length||0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){let n=e[e.length-1],a=t[t.length-1];if(n===a||RS(n)&&RS(a)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&RS(e[0])&&RS(t[0])}function $S(e){if(null==QI){let t=WI(e);QI=t.getParameter(t.MAX_TEXTURE_SIZE)}return QI}function MS(){QI=null}function FS(){eS=null}function _S(e){if(null==eS){let t=WI(e);eS=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,eS)}function PS(e){if(0===e)return 0;let t,n=WI(e);return t=OS(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:OS(n,"EXT_disjoint_timer_query")?1:0,t}function OS(e,t){return null!=e.getExtension(t)}function DS(e){try{if(null!=WI(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function zS(e){if(0===e)return!1;let t=WI(e);if(1===e){if(!OS(t,"OES_texture_float"))return!1}else if(!OS(t,"EXT_color_buffer_float"))return!1;return WS(t)}function LS(e){if(0===e)return!1;let t=WI(e);if(1!==e){if(OS(t,"EXT_color_buffer_float"))return WS(t);let e="EXT_color_buffer_half_float";if(OS(t,e)){let n=t.getExtension(e);return function(e,t){let n=GI(e,t),a=e.createTexture();e.bindTexture(e.TEXTURE_2D,a),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0);let s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(a),e.deleteFramebuffer(r),s}(t,n)}return!1}return!(!OS(t,"OES_texture_float")||!OS(t,"WEBGL_color_buffer_float"))&&WS(t)}function WS(e){let t=GI(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),r}function BS(e){return 2===e&&null!=WI(e).fenceSync}function VS(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&$r.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}var US=Xe();function GS(){let e,t,n,a,r,s,i,o,l,u;return 2===Xe().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",a="in",r="texture",s="outputColor",i="out vec4 outputColor;",o=Xe().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",a="varying",r="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:a,texture2D:r,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function HS(e,t,n="index"){let a=$r.computeStrides(t);return a.map(((t,r)=>`int ${e[r]} = ${n} / ${t}; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`)).join("")}function jS(e,t,n="index"){let a=$r.computeStrides(t);return a.map(((t,r)=>`int ${e[r]} = ${n} / outShapeStrides[${r}]; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * outShapeStrides[${r}]`:`index -= ${e[r]} * outShapeStrides[${r}]`};`)).join("")}function qS(e){let t=$r.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}US.registerFlag("HAS_WEBGL",(()=>US.getNumber("WEBGL_VERSION")>0)),US.registerFlag("WEBGL_VERSION",(()=>DS(2)?2:DS(1)?1:0)),US.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),US.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===US.get("WEBGL_VERSION"))),US.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),US.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),US.registerFlag("WEBGL_PACK",(()=>US.getBool("HAS_WEBGL"))),US.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>US.getBool("WEBGL_PACK"))),US.registerFlag("WEBGL_PACK_CLIP",(()=>US.getBool("WEBGL_PACK"))),US.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>US.getBool("WEBGL_PACK"))),US.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>US.getBool("WEBGL_PACK"))),US.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>US.getBool("WEBGL_PACK"))),US.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>US.getBool("WEBGL_PACK"))),US.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>US.getBool("WEBGL_PACK"))),US.registerFlag("WEBGL_PACK_REDUCE",(()=>US.getBool("WEBGL_PACK"))),US.registerFlag("WEBGL_LAZILY_UNPACK",(()=>US.getBool("WEBGL_PACK"))),US.registerFlag("WEBGL_CONV_IM2COL",(()=>US.getBool("WEBGL_PACK"))),US.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>US.getBool("WEBGL_PACK"))),US.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>$S(US.getNumber("WEBGL_VERSION")))),US.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>_S(US.getNumber("WEBGL_VERSION")))),US.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{let e=US.getNumber("WEBGL_VERSION");return 0===e?0:PS(e)})),US.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>US.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Vs.isMobile())),US.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>zS(US.getNumber("WEBGL_VERSION")))),US.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!US.getBool("WEBGL_FORCE_F16_TEXTURES")&&US.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),US.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>LS(US.getNumber("WEBGL_VERSION")))),US.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>BS(US.getNumber("WEBGL_VERSION")))),US.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>US.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),US.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),US.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Vs.isMobile()?1:-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),US.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),US.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),US.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),US.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),US.registerFlag("WEBGL_EXP_CONV",(()=>!1)),US.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>US.getBool("IS_TEST"))),US.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),US.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),US.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),US.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));var XS="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:KS}=am;function YS(e,t,n){let a=[];if(e.forEach((e=>{let t=$r.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?a.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(a.push(`uniform sampler2D ${e.name};`),a.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){let{uniformShape:t}=iC(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:a.push(`uniform int ${e.name}Shape;`);break;case 2:a.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:a.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:a.push(`uniform ivec4 ${e.name}Shape;`)}a.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:a.push("uniform int outShape;");break;case 2:a.push("uniform ivec2 outShape;"),a.push("uniform int outShapeStrides;");break;case 3:a.push("uniform ivec3 outShape;"),a.push("uniform ivec2 outShapeStrides;");break;case 4:a.push("uniform ivec4 outShape;"),a.push("uniform ivec3 outShapeStrides;")}a.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{a.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));let r,s,i=a.join("\n"),o=e.map((e=>function(e,t,n=!1,a){let r="";r+=n?JS(e,a):ZS(e,a);let s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(r+=n?function(e,t){let n,a=e.name,r=a.charAt(0).toUpperCase()+a.slice(1),s="get"+r+"AtOutCoords",i=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,l=KS(e.shapeInfo.logicalShape,t.logicalShape),u=sC(o),d=o-i,p=["x","y","z","w","u","v"];n=0===i?"":o<2&&l.length>=1?"coords = 0;":l.map((e=>`coords.${p[e+d]} = 0;`)).join("\n");let h="";h=o<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+d]}`)).join(", ");let c="return outputValue;",f=1===$r.sizeFromShape(e.shapeInfo.logicalShape),m=1===$r.sizeFromShape(t.logicalShape);if(1!==i||f||m){if(f&&!m)c=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(l.length){let e=i-2,t=i-1;l.indexOf(e)>-1&&l.indexOf(t)>-1?c="return vec4(outputValue.x);":l.indexOf(e)>-1?c="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf(t)>-1&&(c="return vec4(outputValue.xx, outputValue.zz);")}}else c="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${n}\n      vec4 outputValue = get${r}(${h});\n      ${c}\n    }\n  `}(e,t):function(e,t){let n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&$r.arraysEqual(i,s))return`\n      float ${r}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;let u,d=sC(l),p=KS(e.shapeInfo.logicalShape,t.logicalShape),h=l-o,c=["x","y","z","w","u","v"];u=0===o?"":l<2&&p.length>=1?"coords = 0;":p.map((e=>`coords.${c[e+h]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${c[t+h]}`)).join(", "),`\n    float ${r}() {\n      ${d} coords = getOutputCoords();\n      ${u}\n      return get${a}(${f});\n    }\n  `}(e,t)),r}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),l=t.texShape,u=GS(),d=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(u),p=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${QS}\n    ${eC}\n    ${tC}\n  `}(u);return t.isPacked?(r=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){let a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===a[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${a[1]}.0);\n      }\n    `:1===a[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${a[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      return 2 * (resTexRC.x * ${a[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){let a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if($r.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${a[0]}, ${a[1]}));\n      }\n    `;let r=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";let a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),s=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";let a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),s=r*Math.ceil(e[e.length-2]/2),i=s,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,l=`b${t}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,l,n.enableShapeUniforms),s=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(u)):(r=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return $r.arraysEqual(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${jS(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;let a=HS(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${a}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${jS(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;let a=HS(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${a}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){let n=HS(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){let n=HS(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,l,n.enableShapeUniforms),s=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),n.packedInputs&&(p+=nC),[p,d,s,i,r,o,n.userCode].join("\n")}function ZS(e,t=!1){let n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){let n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${a}() {return ${n};}`;let[r,s]=e.shapeInfo.texShape;if(1===r&&1===s)return`\n      float ${a}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;let i=aC(n);if(t)return`\n    float ${a}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;let[o,l]=e.shapeInfo.texShape;return`\n    float ${a}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){let n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${a}(int index) {\n        ${rC(e)}\n      }\n    `;let r=e.shapeInfo.texShape,s=r[0],i=r[1];if(1===i&&1===s)return`\n      float ${a}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;let o=aC(n);return 1===i?t?`\n      float ${a}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${a}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?t?`\n      float ${a}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${a}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${a}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${a}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){let n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape;if(null!=s&&$r.arraysEqual(n,s)){if(t)return`\n      float ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `;let e=s[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `}let{newShape:i,keptDims:o}=$r.squeezeShape(n),l=i;if(l.length<n.length){let n=["row","col"];return`\n      ${ZS(oC(e,l),t)}\n      float ${r}(int row, int col) {\n        return ${r}(${lC(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${rC(e)}\n      }\n    `;let u=s[0],d=s[1],p=aC(a);return 1===d?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${a}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${a}TexShape[0]));\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `:1===u?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${a}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${a}TexShape[1]), 0.5);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${d}.0, 0.5);\n      return sampleTexture(${a}, uv);\n    }\n  `:t?`\n      float ${r}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a}Shape[1] + col + ${p};\n        vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${p};\n    vec2 uv = uvFromFlat(${u}, ${d}, index);\n    return sampleTexture(${a}, uv);\n  }\n`}(e,t);case 3:return function(e,t){let n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=$r.squeezeShape(n),u=o;if(u.length<n.length){let n=["row","col","depth"];return`\n        ${ZS(oC(e,u),t)}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${lC(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${rC(e)}\n      }\n    `;let d=e.shapeInfo.texShape,p=d[0],h=d[1],c=e.shapeInfo.flatOffset;if(h===s&&null==c)return t?`\n      float ${r}(int row, int col, int depth) {\n        int stride1 = ${a}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${p}.0);\n          return sampleTexture(${a}, uv);\n        }\n      `;if(h===i&&null==c)return t?`\n      float ${r}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${a}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${p}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `;let f=aC(a);return t?`\n    float ${r}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${a}Shape[1] * ${a}Shape[2];\n      int stride1 = ${a}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);\n      return sampleTexture(${a}, uv);\n    }\n    `:`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${p}, ${h}, index);\n        return sampleTexture(${a}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){let n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=n[3],i=n[2]*s,o=n[1]*i,{newShape:l,keptDims:u}=$r.squeezeShape(n);if(l.length<n.length){let n=["row","col","depth","depth2"];return`\n      ${ZS(oC(e,l),t)}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${lC(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${s}, 1)));\n        ${rC(e)}\n      }\n    `;let d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],c=p[1],f=`int stride2 = ${a}Shape[3];`,m=`int stride1 = ${a}Shape[2] * stride2;`,g=`int stride0 = ${a}Shape[1] * stride1;`;if(c===o&&null==d)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${c}.0, ${h}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `;if(c===s&&null==d)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${a}Shape[1] * ${a}Shape[2], ${a}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${c}.0, ${h}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `;let y=aC(a);return t?`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index + ${y});\n      return sampleTexture(${a}, uv);\n    }\n  `:`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${c}, index + ${y});\n      return sampleTexture(${a}, uv);\n    }\n  `}(e,t);case 5:return function(e){let t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],s=t[3]*r,i=t[2]*s,o=t[1]*i,{newShape:l,keptDims:u}=$r.squeezeShape(t);if(l.length<t.length){let t=["row","col","depth","depth2","depth3"];return`\n      ${ZS(oC(e,l))}\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        return ${a}(${lC(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${r})) +\n          depth3;\n        ${rC(e)}\n      }\n    `;let d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],c=p[1];return c===o&&null==d?`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${c}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:c===r&&null==d?`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${c}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${r} + depth3 + ${aC(n)};\n      vec2 uv = uvFromFlat(${h}, ${c}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){let t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:s}=$r.squeezeShape(t);if(r.length<t.length){let t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${ZS(oC(e,r))}\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${a}(${lC(t,s)});\n      }\n    `}let i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,d=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${d}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${rC(e)}\n      }\n    `;let p=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,c=h[0],f=h[1];return f===d&&null==p?`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:f===i&&null==p?`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${d} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${aC(n)};\n      vec2 uv = uvFromFlat(${c}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function JS(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){let t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${GS().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){let n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,s=GS();if(t)return`\n    vec4 ${a}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;let i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${a}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){let n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],l=GS();if(null!=s&&$r.arraysEqual(n,s))return t?`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n\n        return ${l.texture2D}(${a}, uv);\n      }\n    `:`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${a}, uv);\n      }\n    `;if(t)return`\n    vec4 ${r}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${a}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${a}, uv);\n    }\n  `;let u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${a}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){let n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){let a=[1,2],s=["b","row","col"];return`\n        ${JS(oC(e,n.slice(1)),t)}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${lC(s,a)});\n        }\n      `}let o=GS();if(t)return`\n    vec4 ${r}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${a}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${a}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${a}, uv);\n    }\n  `;let l=i[0],u=i[1],d=Math.ceil(n[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${d*Math.ceil(n[1]/2)}, ${d}, b, row, col);\n      return ${o.texture2D}(${a}, uv);\n    }\n  `}(e,t);default:return function(e,t){let n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=GS();if(t)return`\n    vec4 ${a}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);\n    }\n  `;let s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],d=l[1],p=Math.ceil(s[i-1]/2),h=p*Math.ceil(s[i-2]/2),c="int b, int row, int col",f=`b * ${h} + (row / 2) * ${p} + (col / 2)`;for(let e=2;e<i-1;e++)c=`int b${e}, `+c,h*=s[i-e-1],f=`b${e} * ${h} + `+f;return`\n    vec4 ${a}(${c}) {\n      int index = ${f};\n      int texR = index / ${d};\n      int texC = index - texR * ${d};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}, ${u});\n      return ${r.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}var QS="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",eC="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",tC="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",nC="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function aC(e){return`offset${e}`}function rC(e){let t=e.name,n=$r.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function sC(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function iC(e,t,n){let{newShape:a,keptDims:r}=$r.squeezeShape(t),s=t.length,i=e&&3===s&&1===t[0],o=i?t.slice(1):a,l=!e&&s>1&&!$r.arraysEqual(t,n)&&a.length<s||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:r}}function oC(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function lC(e,t){return t.map((t=>e[t])).join(", ")}function uC(e,t,n){let a,r,s,i=[],o=[],l=null,u=null;u=e.getUniformLocation(n,"NAN",!1),1===Xe().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(n,"INFINITY",!1));let d=!1;for(let a of t.variableNames){let r={name:a,uniform:e.getUniformLocation(n,a,d),offset:e.getUniformLocation(n,`offset${a}`,d)};t.enableShapeUniforms&&(r.shape=e.getUniformLocation(n,`${a}Shape`,d),r.texShape=e.getUniformLocation(n,`${a}TexShape`,d)),i.push(r)}if(t.enableShapeUniforms&&(a=e.getUniformLocation(n,"outShape",d),s=e.getUniformLocation(n,"outShapeStrides",d),r=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms)for(let a of t.customUniforms)o.push(e.getUniformLocation(n,a.name,d));return{variablesLocations:i,customUniformLocations:o,infLoc:l,nanLoc:u,outShapeLocation:a,outShapeStridesLocation:s,outTexShapeLocation:r}}function dC(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{let a=e.logicalShape,r=t[n],s=r.shape;if(!$r.arraysEqual(a,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${s} must match`);if(e.isUniform&&r.isUniform)return;let i=e.texShape,o=r.isUniform?null:r.texData.texShape;if(!$r.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function pC(e){return Xe().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var hC=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=_I.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=GS();this.outputShape=e,this.enableShapeUniforms=pC(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?jS(["r","c","d"],e):HS(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}},cC=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=_I.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=GS();this.outputShape=e,this.enableShapeUniforms=pC(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?jS(["r","c","d"],e):HS(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}},fC=class{constructor(e){this.variableNames=["A"],this.outTexUsage=PI.DOWNLOAD;let t=GS();this.outputShape=e,this.userCode=`\n      ${XS}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}},mC=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=PI.DOWNLOAD;let t=GS();this.outputShape=e,this.userCode=`\n      ${XS}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}},gC={R:0,G:1,B:2,A:3},yC=class{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let a=GS();this.outputShape=e,this.enableShapeUniforms=pC(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let s="";for(let e=0;e<n.length;e++){let t=n[e];s+=`\n          if(offset == ${e}) {\n            result = values[${gC[t]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":qS(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${a.texture2D}(A, uv);\n          ${s}\n        }\n        ${a.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}},xC=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=GS();this.outputShape=e,this.enableShapeUniforms=pC(this.outputShape.length);let a="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let r=0;r<=1;r++){let s=2*t+r;a+=`\n          localCoords = coords;\n          if(localCoords[2] + ${r} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${r};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":qS(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${a}\n\n          ${n.output} = ${r};\n        }\n    `}},AC={};function bC(e){let t=GS();return ZI(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function wC(e){return iS(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function vC(e){return oS(e,new Uint16Array([0,1,2,2,1,3]))}function kC(e,t,n,a,r,s){dS(t,n);let i=uS(e),o=e.TEXTURE_2D;return HI(e,(()=>e.bindTexture(o,i))),HI(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),HI(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),HI(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),HI(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===Xe().getNumber("WEBGL_VERSION")?HI(e,(()=>e.texImage2D(o,0,a,t,n,0,r,s,null))):HI(e,(()=>e.texStorage2D(o,1,a,t,n))),HI(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function IC(e){return e.internalFormatFloat}function SC(e,t,n,a){let[r,s]=BI(t,n);return kC(e,r,s,IC(a),a.textureFormatFloat,e.FLOAT)}function CC(e){return e.internalFormatHalfFloat}function NC(e,t,n,a){let[r,s]=BI(t,n);return kC(e,r,s,CC(a),a.textureFormatFloat,a.textureTypeHalfFloat)}function TC(e){return e.downloadTextureFormat}function RC(e,t,n,a){let[r,s]=BI(t,n);return kC(e,r,s,TC(a),e.RGBA,e.UNSIGNED_BYTE)}function EC(e){return e.internalFormatPackedFloat}function $C(e,t,n,a){let[r,s]=UI(t,n);return kC(e,r,s,EC(a),e.RGBA,e.FLOAT)}function MC(e){return e.internalFormatPackedHalfFloat}function FC(e,t,n,a){let[r,s]=UI(t,n);return kC(e,r,s,MC(a),e.RGBA,a.textureTypeHalfFloat)}function _C(e,t,n){return HI(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),hS(e,t,"clipSpacePos",n,3,20,0)&&hS(e,t,"uv",n,2,20,12)}function PC(e,t,n,a,r,s){let i,o,l;HI(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(i=new Uint8Array(n*a*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*a*4),o=e.FLOAT,l=s.internalFormatPackedFloat),i.set(r),2===Xe().getNumber("WEBGL_VERSION")?HI(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,a,e.RGBA,o,i))):HI(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,a,0,e.RGBA,o,i))),HI(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function OC(e,t,n){HI(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===Xe().getNumber("WEBGL_VERSION")?HI(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):HI(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===Xe().getNumber("WEBGL_VERSION")?HI(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):HI(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),HI(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function DC(e,t,n,a){let r=e.createBuffer();HI(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));let s=16*t*n;return HI(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),HI(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),HI(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}function zC(e,t,n){let a=e,r=new Float32Array(n);return a.bindBuffer(a.PIXEL_PACK_BUFFER,t),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,r),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),r}function LC(e,t,n,a){let[r,s]=BI(t,n),i=new Uint8Array(function(e,t){return 4*e}(t*n));return HI(e,(()=>e.readPixels(0,0,r,s,a.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}function WC(e,t,n,a,r,s,i,o){let l=e,u=new Float32Array(function(e,t){let[n,a]=UI(e,t);return n*a*4}(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function BC(e,t,n){let a=new Float32Array(t*n*4);return HI(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,a))),a}C(AC,{bindVertexProgramAttributeStreams:()=>_C,createBufferFromOutputTexture:()=>DC,createFloat16MatrixTexture:()=>NC,createFloat16PackedMatrixTexture:()=>FC,createFloat32MatrixTexture:()=>SC,createIndexBuffer:()=>vC,createPackedMatrixTexture:()=>$C,createUnsignedBytesMatrixTexture:()=>RC,createVertexBuffer:()=>wC,createVertexShader:()=>bC,downloadByteEncodedFloatMatrixFromOutputTexture:()=>LC,downloadFloat32MatrixFromBuffer:()=>zC,downloadMatrixFromPackedOutputTexture:()=>BC,downloadPackedMatrixFromBuffer:()=>WC,getInternalFormatForFloat16MatrixTexture:()=>CC,getInternalFormatForFloat16PackedMatrixTexture:()=>MC,getInternalFormatForFloat32MatrixTexture:()=>IC,getInternalFormatForPackedMatrixTexture:()=>EC,getInternalFormatForUnsignedBytesMatrixTexture:()=>TC,uploadDenseMatrixToTexture:()=>PC,uploadPixelDataToTexture:()=>OC});var VC=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];let t=Xe().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,LI(t,e)):this.gl=WI(t),e=this.gl,2===Xe().getNumber("WEBGL_VERSION")){let t=e;this.createVertexArray=()=>HI(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>HI(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>HI(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>HI(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){let t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>HI(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>HI(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>HI(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>HI(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float",a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===Xe().getNumber("WEBGL_VERSION")){let e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=YI(this.gl,e),OS(this.gl,t))this.textureHalfFloatExtension=YI(this.gl,t);else if(Xe().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),OS(this.gl,a))this.colorBufferHalfFloatExtension=YI(this.gl,a);else if(Xe().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",OS(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!OS(this.gl,a))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(a)}this.vertexBuffer=wC(this.gl),this.indexBuffer=vC(this.gl),this.framebuffer=pS(this.gl),this.textureConfig=GI(this.gl,this.textureHalfFloatExtension)}get debug(){return Xe().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;HI(e,(()=>e.finish())),HI(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),HI(e,(()=>e.deleteFramebuffer(this.framebuffer))),HI(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),HI(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),HI(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),SC(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),NC(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),RC(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),OC(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,a){this.throwIfDisposed(),PC(this.gl,e,t,n,a,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),FC(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),$C(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(bS(this.gl,this.framebuffer),this.outputTexture=null),HI(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>LC(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,a,r,s){return WC(this.gl,e,0,0,0,r,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return zC(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let a=DC(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Xe().getBool("WEBGL_FENCE_API_ENABLED")){let a=e,r=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let e=a.clientWaitSync(r,0,0);return e===a.ALREADY_SIGNALED||e===a.CONDITION_SATISFIED},t=r}else Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>BC(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();let t=this.gl;null==this.vertexShader&&(this.vertexShader=bC(t));let n=aS(t);HI(t,(()=>t.attachShader(n,this.vertexShader))),HI(t,(()=>t.attachShader(n,e))),rS(t,n);let a=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&sS(t,a),a}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);let t=this.gl;HI(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),_C(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(HI(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&sS(this.gl,this.program),HI(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?mS(this.gl,e,t):gS(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),HI(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),yS(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[a,r]=UI(t,n);this.setOutputMatrixTextureDriver(e,a,r)}setOutputMatrixWriteRegion(e,t,n,a){this.setOutputMatrixWriteRegionDriver(n,e,a,t)}setOutputPackedMatrixWriteRegion(e,t,n,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&sS(this.gl,this.program),wS(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;if(this.debug){let e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}HI(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),HI(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=YI(this.gl,2===Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await $r.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){let t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{let t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){let t=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}{let t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){let e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){let{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in Xe().platform&&(n=Xe().platform.setTimeoutCustom.bind(Xe().platform)),$r.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),AS(this.gl,e,this.framebuffer),this.debug&&wS(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(AS(this.gl,this.outputTexture,this.framebuffer),this.debug&&wS(this.gl)):bS(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let a=this.gl;AS(a,e,this.framebuffer),this.debug&&wS(a),this.outputTexture=e,HI(a,(()=>a.viewport(0,0,t,n))),HI(a,(()=>a.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,a){this.throwIfDisposed(),HI(this.gl,(()=>this.gl.scissor(e,t,n,a)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}},{addImpl:UC,bincountImpl:GC,bincountReduceImpl:HC,bitwiseAndImpl:jC,castImpl:qC,ceilImpl:XC,concatImpl:KC,equalImpl:YC,expImpl:ZC,expm1Impl:JC,floorImpl:QC,gatherNdImpl:eN,gatherV2Impl:tN,greaterImpl:nN,greaterEqualImpl:aN,lessImpl:rN,lessEqualImpl:sN,linSpaceImpl:iN,logImpl:oN,maxImpl:lN,maximumImpl:uN,minimumImpl:dN,multiplyImpl:pN,negImpl:hN,notEqualImpl:cN,prodImpl:fN,raggedGatherImpl:mN,raggedRangeImpl:gN,raggedTensorToTensorImpl:yN,rangeImpl:xN,rsqrtImpl:AN,scatterImpl:bN,sigmoidImpl:wN,simpleAbsImpl:vN,sliceImpl:kN,sparseFillEmptyRowsImpl:IN,sparseReshapeImpl:SN,sparseSegmentReductionImpl:CN,sqrtImpl:NN,staticRegexReplaceImpl:TN,stridedSliceImpl:RN,stringNGramsImpl:EN,stringSplitImpl:$N,stringToHashBucketFastImpl:MN,subImpl:FN,tileImpl:_N,topKImpl:PN,transposeImpl:ON,uniqueImpl:DN}=tx;function zN(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function LN(e,t){return 1===t?[e]:zN(e,t)}var WN=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=pC(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{let e=LN("rc",this.rank),t=sC(this.rank),n=this.getOutOfBoundsCondition(e),a=this.getSetup(e),r=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${r}));\n          }\n        }\n      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let a=0;a<=1;a++){let r=`${0===n?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let t=2;t<this.rank;t++)r=`${e[e.length-1-t]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],a=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${a};\n    `}getOutput(e){let t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}},BN=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=pC(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}this.userCode=`\n      ${function(e,t){return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${t?function(e,t,n="index"){let a=function(e,t){let n=e.length,a=e.map((e=>`${t}[${e}]`)),r=new Array(n-1);r[n-2]=a[n-1];for(let e=n-3;e>=0;--e)r[e]=`(${r[e+1]} * ${a[e+1]})`;return r}(e.map(((e,t)=>t)),t);return a.map(((t,r)=>`int ${e[r]} = ${n} / ${a[r]}; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${a[r]}`:`index -= ${e[r]} * ${a[r]}`};`)).join("")}(["r","c","d"],"inputShape"):HS(["r","c","d"],e)}\n      return ivec3(r, c, d);\n    }\n  `}(t,this.enableShapeUniforms)}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":qS(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}},VN=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){let a=GN(t,n),r=HN(e,a,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);let s,i=UN(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();let e=this.freeTextures[r].pop();return this.usedTextures[r].push(e),e}return a===OI.PACKED_2X2_FLOAT32?s=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===OI.PACKED_2X2_FLOAT16?s=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===OI.UNPACKED_FLOAT32?s=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===OI.UNPACKED_FLOAT16?s=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===OI.PACKED_4X1_UNSIGNED_BYTE&&(s=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(s),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),s}releaseTexture(e,t,n,a){if(null==this.freeTextures)return;let r=GN(n,a),s=HN(t,r,a);s in this.freeTextures||(this.freeTextures[s]=[]);let i=UN(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,a),o=Xe().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[s],u=l&&l.indexOf(e);if(null==u||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(let e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(let e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function UN(e,t,n,a,r){let s,i=function(e,t){switch(e){case OI.PACKED_2X2_FLOAT32:return EC(t);case OI.PACKED_2X2_FLOAT16:return MC(t);case OI.UNPACKED_FLOAT32:return IC(t);case OI.UNPACKED_FLOAT16:return CC(t);case OI.PACKED_4X1_UNSIGNED_BYTE:return TC(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,a);if(r){let[t,n]=UI(e[0],e[1]);s=t*n}else{let[t,n]=BI(e[0],e[1]);s=t*n}let o=function(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,i);return s*o}function GN(e,t){if(e===PI.UPLOAD)return OI.PACKED_2X2_FLOAT32;if(e===PI.RENDER||null==e)return function(e){return Xe().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?OI.PACKED_2X2_FLOAT32:OI.UNPACKED_FLOAT32:e?OI.PACKED_2X2_FLOAT16:OI.UNPACKED_FLOAT16}(t);if(e===PI.DOWNLOAD||e===PI.PIXELS)return OI.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function HN(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var jN=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=pC(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},qN="if (isnan(x)) return x;",XN="return x;",KN="return abs(x);",YN="return (x >= 0.0) ? x : (exp(x) - 1.0);",ZN=qN+"\n  return (x < 0.0) ? 0.0 : x;\n",JN=qN+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",QN="return x;",eT="return 1.0 / (1.0 + exp(-1.0 * x));",tT="return x;",nT="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",aT="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",rT="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",sT="return 1.0 / (1.0 + exp(-1.0 * x));",iT=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=pC(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},oT=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=pC(this.outputShape.length);let t=e.length,n=LN("rc",t),a=sC(t),r=function(e,t){if(1===e)return"rc";let n="";for(let a=0;a<e;a++)n+=t[a],a<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${a} rc = getOutputCoords();\n        vec4 packedInput = getA(${r});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}},lT=pg.whereImpl,uT={},dT=Xe().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),pT=class e extends K{nextDataId(){return e.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Xe().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof VC)t=e;else{let n=WI(Xe().getNumber("WEBGL_VERSION"),e);t=new VC(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let e=WI(Xe().getNumber("WEBGL_VERSION"));t=new VC(e),this.binaryCache=function(e){return e in uT||(uT[e]={}),uT[e]}(Xe().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new VN(this.gpgpu),this.numMBBeforeWarning=null==Xe().global.screen?1024:Xe().global.screen.height*Xe().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new X(this,di())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,a,r,s){let i=this.makeTensorInfo(t,n),o=this.texData.get(i.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[a,r]},o.texShape=[a,r];let l=NS(t),u=new yC(l,!1,s),d=this.runWebGLProgram(u,[i],n,[[a,r]]);return d.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(i),d.dataId}write(e,t,n){if((Xe().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Xe().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let a={id:this.nextDataId()};return this.texData.set(a,{shape:t,dtype:n,values:e,usage:PI.UPLOAD,refCount:1}),a}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,a,r){if(Xe().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:a,values:t,usage:PI.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:a,complexTensorInfos:r,slice:s,shape:i,isPacked:o}=t;if(null!=s){let t;t=o?new iT(i,QN):new jN(i,QN);let n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:a}],a),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===a)return n;let l,u,d=null!=this.activeTimers;if(d&&(l=$r.now()),"complex64"===a){let e=this.readSync(r.real.dataId),t=this.readSync(r.imag.dataId);u=am.mergeRealAndImagArrays(e,t)}else u=this.getValuesFromTexture(e);return d&&(this.downloadWaitMs+=$r.now()-l),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){let t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}let t=this.texData.get(e),{values:n,shape:a,slice:r,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(null!=r){let t;t=o?new iT(a,QN):new jN(a,QN);let n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:s}],s),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(Xe().getBool("DEBUG")&&!Xe().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Xe().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,d=null;if("complex64"!==s&&Xe().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);let t=this.texData.get(l.dataId);d=this.gpgpu.createBufferFromTexture(t.texture.texture,...VI(a))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){let e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];u=am.mergeRealAndImagArrays(t,n)}else if(null==d)u=this.getValuesFromTexture(e);else{let e=$r.sizeFromShape(a);u=this.gpgpu.downloadFloat32MatrixFromBuffer(d,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=d){let e=this.gpgpu.gl;HI(e,(()=>e.deleteBuffer(d)))}let p=this.convertAndCacheOnCPU(e,u),h=this.pendingRead.get(e);return this.pendingRead.delete(e),h.forEach((e=>e(p))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&di().removeDataId(e,this),this.pendingDeletes--),p}readToGPU(e,t={}){let n=this.texData.get(e),{values:a,shape:r,slice:s,dtype:i,isPacked:o,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let n;n=o?new iT(r,QN):new jN(r,QN);let a=this.runWebGLProgram(n,[{dataId:e,shape:r,dtype:i}],i),s=this.readToGPU(a,t);return this.disposeIntermediateTensorInfo(a),s}if(null==l)throw null!=a?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let u=this.decode(e,t.customTexShape),d=di().makeTensorFromTensorInfo(u),p=this.texData.get(u.dataId);return Object.assign({tensorRef:d},p.texture)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let n=t.map((e=>$r.decodeString(e)));return Io(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Io(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){let n=e[t];if(!XI(n))throw Xe().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:a}=this.texData.get(e),r=$r.sizeFromShape(t);if(Xe().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let n=this.decode(e),a=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(a.texture.texture,...VI(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),s}let s=Xe().getBool("WEBGL_PACK")&&!0===a,i=s?NS(t):t,o=s?new mC(i):new fC(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),d}timerAvailable(){return Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=$r.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=$r.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,a&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let e=await Promise.all(r);i.kernelMs=$r.sum(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:$r.now(),endMs:null}}endTimer(e){return Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=$r.now(),e)}async getQueryTime(e){if(Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:a,usage:r,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(a,n),this.textureManager.releaseTexture(t,a,r,s)));let u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=dT){return Xe().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&$r.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){am.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return lT(e.shape,t)}packedUnaryOp(e,t,n){let a=new iT(e.shape,t),r=this.compileAndRun(a,[e],n);return di().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){let t=vN(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Xe().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,KN,e.dtype);let t=new jN(e.shape,KN),n=this.compileAndRun(t,[e]);return di().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&$r.isString(n[0])){let r=n.map((e=>$r.encodeString(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,n){return di().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){let t=new oT(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new WN(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){let n=[SS(e.shape),...CS(e.shape)],a={dtype:e.dtype,shape:n,dataId:e.dataId},r=[SS(t),...CS(t)],s=new BN(r,n),i=[n],o=this.runWebGLProgram(s,[a],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){let n=this.texData.get(e),{isPacked:a,shape:r,dtype:s}=n;if(null!=t){let e=$r.sizeFromShape(r),n=t[0]*t[1]*4;$r.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}let i,o=NS(r);i=a?new cC(o):new hC(o);let l=[null!=t?t:VI(o)];return{dtype:s,shape:r,dataId:this.runWebGLProgram(i,[{shape:o,dtype:s,dataId:e}],s,l,!0,t).dataId}}runWebGLProgram(e,t,n,a,r=!1,s){let i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===_I.DENSE){let t=null!=s?s:VI(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===$r.sizeFromShape(i.shape))return o.values=$r.getTypedArrayFromDType(i.dtype,0),i;let l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&$r.sizeFromShape(t.shape)<=Xe().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!ES(n.shape,t.shape)){let e=t,a=t.shape;t.shape=n.shape,t=this.packedReshape(t,a),l.push(t),n=this.texData.get(t.dataId),e.shape=a}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);let d,p={shape:i.shape,texData:o,isUniform:!1},h=function(e,t,n){let a="";t.concat(n).forEach((t=>{let r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){let s=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=iC(e.packedInputs,t.shape,s),u="",d="",p="";if(1===o.length&&e.packedInputs){let e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){let e=$r.computeStrides(o);p=`${e[0]===s[1]}_${e[e.length-1]===s[1]}`}}else d=`${o[0]>1}_${o[1]>1}`;let h=t.shape.length,c=2===o.length&&$r.arraysEqual(t.shape,s),f=1===$r.sizeFromShape(t.shape),m=am.getBroadcastDims(t.shape,n.shape),g=!e.packedInputs&&h===n.shape.length&&$r.arraysEqual(s,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${s[0]>1}_${s[1]>1}`;a+=`${h}_${g}_${i?l:""}_${o.length}_${f}_${m}_${c}_${u}_${d}_${p}_${y}_${r}`}else{let e=t.isUniform?"uniform":t.texData.texShape;a+=`${t.shape}_${e}_${r}`}}));let r=e.userCode,s=e.constructor.name;return s+="_"+a+"_"+r+`${Xe().getNumber("WEBGL_VERSION")}`,s}(e,u,p),c=this.getAndSaveBinary(h,(()=>function(e,t,n,a){let r=n.map(((e,n)=>{let a={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(a.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:a}})),s=r.map((e=>e.shapeInfo)),i={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},o=YS(r,i,t),l=JI(e.gl,o),u=e.createProgram(l);return Xe().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(u),Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i},uC(e,t,u)))}(this.gpgpu,e,u,p))),f=null!=this.activeTimers;f&&(d=this.startTimer()),Xe().get("ENGINE_COMPILE_ONLY")||function(e,t,n,a,r){t.program.enableShapeUniforms||(dC(t.inShapeInfos,n),dC([t.outShapeInfo],[a]));let s=a.texData.texture,i=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===Xe().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let a=0;a<n.length;++a){let r=n[a],{uniform:s,offset:i,shape:o,texShape:l}=t.variablesLocations[a];if(o){let{uniformShape:n}=iC(t.program.packedInputs,r.shape,r.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(o,new Int32Array(n));break;case 2:e.gl.uniform2iv(o,new Int32Array(n));break;case 3:e.gl.uniform3iv(o,new Int32Array(n));break;case 4:e.gl.uniform4iv(o,new Int32Array(n))}}if(l&&e.gl.uniform2i(l,r.texData.texShape[0],r.texData.texShape[1]),null!=s){if(r.isUniform){if($r.sizeFromShape(r.shape)<2)e.gl.uniform1f(s,r.uniformValues[0]);else{let t=r.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}continue}null!=r.texData.slice&&null!=i&&e.gl.uniform1i(i,r.texData.slice.flatOffset),e.setInputMatrixTexture(r.texData.texture.texture,s,a)}}let o=t.outShapeLocation;if(o)switch(a.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(a.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(a.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(a.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(a.shape))}if(t.outShapeStridesLocation){let n=$r.computeStrides(a.shape);switch(a.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),t.program.customUniforms&&r)for(let n=0;n<t.program.customUniforms.length;++n){let a=t.program.customUniforms[n],s=t.customUniformLocations[n],i=r[n];if("float"===a.type)e.gl.uniform1fv(s,i);else if("vec2"===a.type)e.gl.uniform2fv(s,i);else if("vec3"===a.type)e.gl.uniform3fv(s,i);else if("vec4"===a.type)e.gl.uniform4fv(s,i);else if("int"===a.type)e.gl.uniform1iv(s,i);else if("ivec2"===a.type)e.gl.uniform2iv(s,i);else if("ivec3"===a.type)e.gl.uniform3iv(s,i);else{if("ivec4"!==a.type)throw Error(`uniform type ${a.type} is not supported yet.`);e.gl.uniform4iv(s,i)}}e.executeProgram()}(this.gpgpu,c,u,p,a),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),f&&(d=this.endTimer(d),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(d)}));let m=Xe().getNumber("WEBGL_FLUSH_THRESHOLD");if(m>0){let e=$r.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Xe().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===r){let e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,a,r=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,a,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Xe().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=ci((()=>{if(!Xe().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=Xe().getBool("DEBUG");Xe().set("DEBUG",!1);let t=this.abs(xu(1e-8)).dataSync()[0];if(Xe().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:a,values:r,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;let l,u=null!=this.activeTimers;u&&(l=$r.now());let d=t.texShape;if(null==d&&(d=TS(n,o),t.texShape=d),null!=r){let e,s=NS(n),i=d[1],p=d[0],h=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(o||!h)&&([i,p]=UI(d[0],d[1])),e=o?new xC(s,h):new yC(s,h);let c=h?[p,i]:d,f=this.makeTensorInfo(c,a),m=this.texData.get(f.dataId);m.usage=h?PI.PIXELS:PI.UPLOAD,m.texShape=c,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,p,r);let g=[[p,i]],y=this.runWebGLProgram(e,[f],a,g,!0),x=this.texData.get(y.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,Xe().get("ENGINE_COMPILE_ONLY")?this.disposeData(y.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(y.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=$r.now()-l)}else{let e=this.acquireTexture(d,i,a,o);t.texture=e}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:a}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){let n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,a)),n.values}acquireTexture(e,t,n,a){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){let e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,a)}computeBytes(e,t){return e[0]*e[1]*$r.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(let[,t]of Object.entries(this.binaryCache)){let n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await tm(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS))throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)?(nS(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);let{variablesLocations:t,customUniformLocations:n,infLoc:a,nanLoc:r,outShapeLocation:s,outShapeStridesLocation:i,outTexShapeLocation:o}=uC(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=a,e.nanLoc=r,e.outShapeLocation=s,e.outShapeStridesLocation=i,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";let{texture:a,height:r,width:s,channels:i}=e,o=di().backend;if(!o.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let l=o.writeTexture(a,t,n,r,s,i);return di().makeTensorFromDataId(l,t,n,o)}};pT.nextDataId=0;var hT="4.21.0";function cT(){Xe().set("WEBGL_FORCE_F16_TEXTURES",!0)}Vs.isBrowser()&&ki("webgl",(()=>new pT),2);var fT={forceHalfFloat:cT},mT="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n",gT=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=am.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=pC(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}},yT="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n",xT=class{constructor(e,t,n,a=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=am.assertAndGetBroadcastShape(t,n);let r=this.outputShape.length;this.enableShapeUniforms=pC(r);let s="";if(a)if(0===r||1===$r.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${sC(r)} coords = getOutputCoords();\n        `,1===r)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{let e=LN("coords",r);this.enableShapeUniforms?s+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= outShape[${r} - 2];\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= outShape[${r} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:s+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= ${this.outputShape[r-2]};\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= ${this.outputShape[r-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}};function AT(e){let{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}var bT={kernelName:gn,backendName:"webgl",kernelFunc:AT};function wT(e){let{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.makeTensorInfo(a.shape,"complex64"),i=n.texData.get(s.dataId),o=AT({inputs:{x:a},backend:n}),l=AT({inputs:{x:r},backend:n});return i.complexTensorInfos={real:o,imag:l},s}var vT={kernelName:Ct,backendName:"webgl",kernelFunc:wT},kT="return (a < 0.) ? b * a : a;",IT="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",ST={kernelName:vn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a,i=n.makeTensorInfo([],"float32",$r.createScalarValue(s,"float32")),o=Xe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new xT(IT,r.shape,i.shape):new gT(kT,r.shape,i.shape),l=n.runWebGLProgram(o,[r,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},CT="return (a < 0.) ? b * a : a;",NT="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",TT={kernelName:la,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a,alpha:r}=t,s=Xe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new xT(NT,a.shape,r.shape):new gT(CT,a.shape,r.shape);return n.runWebGLProgram(s,[a,r],"float32")}},RT="if (isnan(x)) return x;";function ET({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:a}){return({inputs:r,backend:s})=>{let i,{x:o}=r,l=s,u=a||o.dtype;if(l.shouldExecuteOnCPU([o])&&null!=n){let e=l.texData.get(o.dataId),t=n(e.values,u);return l.makeTensorInfo(o.shape,u,t)}return i=Xe().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new iT(o.shape,t):new jN(o.shape,e),l.runWebGLProgram(i,[o],u)}}function $T({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:a=!1,cpuKernelImpl:r,dtype:s}){return({inputs:i,backend:o})=>{let{a:l,b:u}=i,d=o;if(a&&"complex64"===l.dtype){let t=d.texData.get(l.dataId),n=d.texData.get(u.dataId),[a,r]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{let[n,a]=t,r={dataId:n.dataId,dtype:n.dtype,shape:l.shape},s={dataId:a.dataId,dtype:a.dtype,shape:u.shape},i=new gT(e,l.shape,u.shape);return d.runWebGLProgram(i,[r,s],Cs(n.dtype,a.dtype))})),s=wT({inputs:{real:a,imag:r},backend:d});return d.disposeIntermediateTensorInfo(a),d.disposeIntermediateTensorInfo(r),s}let p,h=s||Cs(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||d.shouldExecuteOnCPU([l,u]))&&null!=r){let e=d.texData.get(l.dataId).values,t=d.texData.get(u.dataId).values,n="string"===l.dtype?am.fromUint8ToStringArray(e):e,a="string"===l.dtype?am.fromUint8ToStringArray(t):t,[s,i]=r(l.shape,u.shape,n,a,h),o=d.makeTensorInfo(i,h);return d.texData.get(o.dataId).values=s,o}return p=Xe().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new xT(t,l.shape,u.shape,n):new gT(e,l.shape,u.shape),d.runWebGLProgram(p,[l,u],h)}}function MT(e,t=!1){if("linear"===e)return t?tT:XN;if("relu"===e)return t?aT:ZN;if("elu"===e)return t?nT:YN;if("relu6"===e)return t?rT:JN;if("prelu"===e)return t?NT:CT;if("leakyrelu"===e)return t?IT:kT;if("sigmoid"===e)return t?sT:eT;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var FT=class{constructor(e,t,n,a=!1,r=!1,s=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=pC(this.outputShape.length);let u=a?e[1]:e[2],d=Math.ceil(u/2),p=a?"i * 2, rc.y":"rc.y, i * 2",h=r?"rc.z, i * 2":"i * 2, rc.z",c=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");let y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let x="rc.x",A="rc.x";e[0]<t[0]?x=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(A=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${d}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${x};\n        int batchB = ${A};\n        for (int i = 0; i < ${d}; i++) {\n          vec4 a = getMatrixA(batchA, ${p});\n          vec4 b = getMatrixB(batchB, ${h});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${c[0]} * ${f[0]});\n          result += (${c[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}},_T={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},PT=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=am.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}},OT="return a * b;";function DT(e){let t,{inputs:n,backend:a}=e,{a:r,b:s}=n,i=am.upcastType(r.dtype,s.dtype);if("complex64"===r.dtype){let e=a.texData.get(r.dataId),t=a.texData.get(s.dataId),n=new PT(_T.REAL,r.shape,s.shape),i=new PT(_T.IMAG,r.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=a.runWebGLProgram(n,o,"float32"),u=a.runWebGLProgram(i,o,"float32"),d=wT({inputs:{real:l,imag:u},backend:a});return a.disposeIntermediateTensorInfo(l),a.disposeIntermediateTensorInfo(u),d}if(a.shouldExecuteOnCPU([r,s])){let e=a.texData.get(r.dataId),t=a.texData.get(s.dataId),[n,o]=pN(r.shape,s.shape,e.values,t.values,i),l=a.makeTensorInfo(o,i);return a.texData.get(l.dataId).values=n,l}return t=Xe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new xT(OT,r.shape,s.shape):new gT(OT,r.shape,s.shape),a.runWebGLProgram(t,[r,s],i)}var zT={kernelName:Yn,backendName:"webgl",kernelFunc:DT};function LT(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:s}=a,i=n,o=$r.sizeFromShape(r.shape),l=$r.inferFromImplicitShape(s,o),u=$r.sizeFromShape(l);$r.assert(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));let d=i.texData.get(r.dataId);return!d.isPacked||ES(r.shape,l)||null!==d.texture&&ES(d.shape,l)?(i.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype}):function(e,t,n){let a=[SS(e.shape),...CS(e.shape)],r={dtype:e.dtype,shape:a,dataId:e.dataId},s=[SS(t),...CS(t)],i=new BN(s,a),o=[a],l=n.runWebGLProgram(i,[r],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(r,l,i)}var WT={kernelName:ya,backendName:"webgl",kernelFunc:LT},BT=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];let i=4*Math.floor(n/4),o=n%4,l="sumValue += dot(values, ones);";if(null!=t){let e=1/t;l=`sumValue += dot(values * ${$r.isInt(e)?e.toPrecision(2):e}, ones);`}let u="";r%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}},VT=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");let u=4*Math.floor(n/4),d=n%4,p=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,h="vec4";"all"===t?(i="1.0",p="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===t&&(i="0.0",p="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");let c="";r%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${p}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===d}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${2===d}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${3===d}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${p}\n        }\n        setOutput(${l});\n      }\n    `}};function UT(e,t,n,a){let r=function(e){let t=[];for(;0===t.length||1!==t[t.length-1].outSize;){let n=t.length?t[t.length-1].outSize:e[1],a=am.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return t}(e.shape),s=e;for(let i=0;i<r.length;i++){let o,l,{inSize:u,windowSize:d,outSize:p}=r[i];o="mean"===n?0===i?new BT({windowSize:d,inSize:u,batchSize:e.shape[0],outSize:p},u):new BT({windowSize:d,inSize:u,batchSize:e.shape[0],outSize:p}):new VT({windowSize:d,inSize:u,batchSize:e.shape[0],outSize:p},n),l=s,s=a.runWebGLProgram(o,[s],t),l.dataId!==e.dataId&&a.disposeIntermediateTensorInfo(l)}return s}var GT=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;let a=sC(this.rank),r=function(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(t);for(let t=0;t<e.length;t++)a[e[t]]=n[t];return a.join()}(t);this.userCode=`\n    void main() {\n      ${a} resRC = getOutputCoords();\n      setOutput(getA(${r}));\n    }\n    `}},HT=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let a=sC(this.rank),r=zN("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=r[e];let i=`vec2(${s.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${a} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${r[this.rank-1]};\n      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}};function jT(e,t,n){let a=Xe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new HT(e.shape,t):new GT(e.shape,t);return n.runWebGLProgram(a,[e],e.dtype)}function qT(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;return function(e,t,n,a){let r=t,s=e.shape.length,i=$r.parseAxisParam(r,e.shape),o=i,l=am.getAxesPermutation(o,s),u=null!=l,d=e;u&&(d=jT(e,l,a),o=am.getInnerMostAxes(o.length,s)),am.assertAxesAreInnerMostDims("sum",o,s);let[p,h]=am.computeOutAndReduceShapes(d.shape,o),c=p;n&&(c=am.expandShapeToKeepDim(p,i));let f=$r.sizeFromShape(h),m=LT({inputs:{x:d},attrs:{shape:[$r.sizeFromShape(e.shape)/f,f]},backend:a}),g=UT(m,Ns(e.dtype),"sum",a),y=LT({inputs:{x:g},attrs:{shape:c},backend:a});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(g),u&&a.disposeIntermediateTensorInfo(d),y}(r,s,i,n)}var XT={kernelName:za,backendName:"webgl",kernelFunc:qT};function KT(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:s}=n,{perm:i}=r,o=a,l=s.shape.length,u=new Array(l);for(let e=0;e<u.length;e++)u[e]=s.shape[i[e]];if(o.shouldExecuteOnCPU([s])){let e=o.texData.get(s.dataId).values,n=ON(e,s.shape,s.dtype,i,u);t=o.makeTensorInfo(u,s.dtype),o.texData.get(t.dataId).values=n}else t=jT(s,i,o);return t}var YT={kernelName:ir,backendName:"webgl",kernelFunc:KT},ZT=1e3;function JT({a:e,b:t,transposeA:n,transposeB:a,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let u=e.shape.length,d=t.shape.length,p=n?e.shape[u-2]:e.shape[u-1],h=a?t.shape[d-1]:t.shape[d-2],c=n?e.shape[u-1]:e.shape[u-2],f=a?t.shape[d-2]:t.shape[d-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=$r.sizeFromShape(m),x=$r.sizeFromShape(g),A=Xl.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([c,f]);$r.assert(p===h,(()=>`Error in matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${a} must match.`));let b,w=n?[y,p,c]:[y,c,p],v=a?[x,f,h]:[x,h,f],k=LT({inputs:{x:e},backend:r,attrs:{shape:w}}),I=LT({inputs:{x:t},backend:r,attrs:{shape:v}}),S=[k,I],C=Math.max(y,x),N=n?k.shape[1]:k.shape[2],T=null!=s,R=null!=i,E="leakyrelu"===l,$=null!=l?MT(l,!0):null;if((1===c||1===f)&&N>ZT&&!1===(T||R||E||null!=$)){let e=k,t=I;n&&(e=KT({inputs:{x:k},backend:r,attrs:{perm:[0,2,1]}}),S.push(e)),a&&(t=KT({inputs:{x:I},backend:r,attrs:{perm:[0,2,1]}}),S.push(t));let s=1===f,i=e;1!==f&&(i=LT({inputs:{x:e},backend:r,attrs:{shape:[C,N,1]}}),S.push(i));let o=1===f?2:1,l=t;s&&(l=LT({inputs:{x:t},backend:r,attrs:{shape:[C,1,N]}}),S.push(l));let u=DT({inputs:{a:i,b:l},backend:r});b=qT({inputs:{x:u},backend:r,attrs:{axis:o,keepDims:!0}}),S.push(u)}else{let l=Cs(e.dtype,t.dtype),u=new FT(w,v,[C,c,f],n,a,T,$,R,E),d=[k,I];if(null!=s&&d.push(s),R&&d.push(i),E){let e=r.makeTensorInfo([],"float32",$r.createScalarValue(o,"float32"));d.push(e),S.push(e)}b=r.runWebGLProgram(u,d,l)}let M=LT({inputs:{x:b},backend:r,attrs:{shape:A}});S.push(b);for(let e of S)r.disposeIntermediateTensorInfo(e);return M}var QT={kernelName:mr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:p}=a;return JT({a:r,b:s,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:p,activation:d})}},eR="return abs(x);",tR={kernelName:Qe,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:a}=e,{x:r}=n;if(a.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){let e=a.texData.get(r.dataId),t=vN(e.values);return a.makeTensorInfo(r.shape,r.dtype,t)}return t=Xe().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new iT(r.shape,eR):new jN(r.shape,eR),a.runWebGLProgram(t,[r],r.dtype)}},nR=ET({opSnippet:qN+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),aR={kernelName:et,backendName:"webgl",kernelFunc:nR},rR=ET({opSnippet:qN+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),sR={kernelName:tt,backendName:"webgl",kernelFunc:rR},iR="return a + b;",oR=$T({opSnippet:iR,packedOpSnippet:iR,supportsComplex:!0,cpuKernelImpl:UC}),lR={kernelName:nt,backendName:"webgl",kernelFunc:oR},uR=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));let n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));let a=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${a};\n        setOutput(result);\n      }\n    `}},dR=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));let n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));let a=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${a};\n        setOutput(result);\n      }\n    `}},pR={kernelName:at,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:a}=t,r=n;if(1===r.length)return AT({inputs:{x:r[0]},backend:a});if(r.length>Xe().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let t=Math.floor(r.length/2),n=e({inputs:r.slice(0,t),backend:a}),s=e({inputs:r.slice(t),backend:a});return e({inputs:[n,s],backend:a})}let s=r.map((e=>e.dtype)).reduce(((e,t)=>Cs(e,t))),i=r.map((e=>e.shape)),o=Xe().getBool("WEBGL_PACK")?new dR(r[0].shape,i):new uR(r[0].shape,i);return a.runWebGLProgram(o,r,s)}},hR={kernelName:rt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=r.shape.length,l=$r.parseAxisParam(s,r.shape),u=l,d=am.getAxesPermutation(u,o),p=r;null!=d&&(p=KT({inputs:{x:r},backend:n,attrs:{perm:d}}),u=am.getInnerMostAxes(u.length,o)),am.assertAxesAreInnerMostDims("all",u,o);let h,[c,f]=am.computeOutAndReduceShapes(p.shape,u),m=LT({inputs:{x:p},backend:n,attrs:{shape:[-1,$r.sizeFromShape(f)]}}),g=UT(m,m.dtype,"all",n);return h=LT(i?{inputs:{x:g},backend:n,attrs:{shape:am.expandShapeToKeepDim(c,l)}}:{inputs:{x:g},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(p),h}},cR={kernelName:st,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=r.shape.length,l=$r.parseAxisParam(s,r.shape),u=l,d=am.getAxesPermutation(u,o),p=r;null!=d&&(p=KT({inputs:{x:r},backend:n,attrs:{perm:d}}),u=am.getInnerMostAxes(u.length,o)),am.assertAxesAreInnerMostDims("any",u,o);let h,[c,f]=am.computeOutAndReduceShapes(p.shape,u),m=LT({inputs:{x:p},backend:n,attrs:{shape:[-1,$r.sizeFromShape(f)]}}),g=UT(m,m.dtype,"any",n);return h=LT(i?{inputs:{x:g},backend:n,attrs:{shape:am.expandShapeToKeepDim(c,l)}}:{inputs:{x:g},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(p),h}},fR=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:a,batchSize:r,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,s];let i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${a};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${a}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}},mR=class{constructor(e,t,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,$r.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));let r=e[e.length-1],s=Math.ceil(r/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),a||this.variableNames.push("bestIndicesA");let i,o,l=this.outputShape,u=l.length,d=sC(u),p=LN("coords",u);if(1===s){o=u+1;let e=sC(o);i=`\n        ${e} sourceLocR = ${e}(${p.join()}, 0);\n        ++${p[u-1]};\n        ${e} sourceLocG = ${e}(${p.join()}, 0);\n        ++${p[u-2]};\n        ${e} sourceLocA = ${e}(${p.join()}, 0);\n        --${p[u-1]};\n        ${e} sourceLocB = ${e}(${p.join()}, 0);\n        --${p[u-2]};`}else o=u,i=`\n        ${d} sourceLocR = coords;\n        ++${p[u-1]};\n        ${d} sourceLocG = coords;\n        ++${p[u-2]};\n        ${d} sourceLocA = coords;\n        --${p[u-1]};\n        ${d} sourceLocB = coords;\n        --${p[u-2]};`;let h=["x","y","z","w","u","v"].slice(0,o),c="."+h[o-1],f=h.map((e=>"int "+e)),m=LN("sourceLocR",o-1).concat("inIdx.r"),g=LN("sourceLocG",o-1).concat("inIdx.g"),y=LN("sourceLocB",o-1).concat("inIdx.b"),x=LN("sourceLocA",o-1).concat("inIdx.a"),A="max"===n?"greaterThan":"lessThan",b=a?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,v=a?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${h.join()}),\n                                          vec2(${h.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${h.join()}),\n                               vec2(${h.slice(-2).join()}));\n      }\n      ${v}\n      void main() {\n        ${d} coords = getOutputCoords();\n        bool hasNextCol = ${p[u-1]} < ${l[u-1]-1};\n        bool hasNextRow = ${p[u-2]} < ${l[u-2]-1};\n        ${i}\n        ivec4 srcIdx = ivec4(sourceLocR${c}, sourceLocG${c},\n          sourceLocB${c}, sourceLocA${c}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${b}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${A}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}};function gR(e,t,n,a=null){let r=t.shape[0],s=t.shape[1];null!=a&&(r=a.shape[0],s=a.shape[1]);let i=am.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:r,outSize:Math.ceil(s/i)},l=new fR(o,n,null==a),u=[t];null!=a&&u.push(a);let d=e.runWebGLProgram(l,u,"int32");if(1===d.shape[1])return d;let p=gR(e,t,n,d);return e.disposeIntermediateTensorInfo(d),p}function yR(e,t,n,a=null){let r=null!=a?a.shape:t.shape,s=r[r.length-1],i=am.computeOptimalWindowSize(s),o=new mR(r,i,n,null==a),l=null==a?[t]:[t,a],u=e.runWebGLProgram(o,l,"int32");if(u.shape.length===t.shape.length){let a=yR(e,t,n,u);return e.disposeIntermediateTensorInfo(u),a}return u}function xR(e,t,n,a){let r=[n];if(am.assertAxesAreInnerMostDims("arg"+a.charAt(0).toUpperCase()+a.slice(1),r,t.shape.length),!Xe().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let n=[],s=e.texData.get(t.dataId),i=t;null!==s&&s.isPacked&&(i=e.unpackTensor(t),n.push(i));let[o,l]=am.computeOutAndReduceShapes(i.shape,r),u=$r.sizeFromShape(l),d=LT({inputs:{x:i},backend:e,attrs:{shape:[-1,u]}});n.push(d);let p=gR(e,d,a);n.push(p);let h=LT({inputs:{x:p},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),h}return yR(e,t,a)}var AR={kernelName:it,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a,i=$r.parseAxisParam(s,r.shape),o=am.getAxesPermutation(i,r.shape.length),l=r,u=[];null!=o&&(l=KT({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=am.getInnerMostAxes(i.length,l.shape.length)),am.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let d=xR(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},bR={kernelName:ot,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a,i=$r.parseAxisParam(s,r.shape),o=am.getAxesPermutation(i,r.shape.length),l=r,u=[];null!=o&&(l=KT({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=am.getInnerMostAxes(i.length,l.shape.length)),am.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let d=xR(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},wR=ET({opSnippet:qN+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),vR={kernelName:lt,backendName:"webgl",kernelFunc:wR},kR=ET({opSnippet:qN+"return log(x + sqrt(x * x + 1.0));"}),IR={kernelName:ut,backendName:"webgl",kernelFunc:kR},SR=ET({opSnippet:qN+"\n  return atan(x);\n"}),CR={kernelName:dt,backendName:"webgl",kernelFunc:SR},NR=$T({opSnippet:mT+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+yT+"\n  return result;\n"}),TR={kernelName:ht,backendName:"webgl",kernelFunc:NR},RR=ET({opSnippet:qN+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),ER={kernelName:pt,backendName:"webgl",kernelFunc:RR},$R=class{constructor(e,t,n,a=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,h=e.padInfo.top,c=e.padInfo.left;this.outputShape=e.outShape;let f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(f||(y="-1.0 / 1e-20"),n){let t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${h}, ${c});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${d};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${a?r?m:g:`wR * ${p} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / max(count, 1.0)");let A=4*Math.floor(s/4),b=s%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${h}, ${c});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${d};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${A}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${A};\n          if (${1===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${x});\n      }\n    `}},MR=class{constructor(e,t,n,a=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,d=e.dilationHeight,p=e.dilationWidth,h=e.effectiveFilterDepth,c=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let x="avg"===t,A="0.0";if(x||(A="-1.0 / 1e-20"),n){let t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${h};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${c};\n                wR += ${d}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${p}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${a?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${c} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / max(count, 1.0)");let w=4*Math.floor(s/4),v=s%4,k=`\n      if (${x}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${A};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${A});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${c};\n            wR += ${d}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${p};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${p}, ch)\n              );\n\n              ${k}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===v}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${2===v}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${3===v}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                initializationValue\n              );\n\n              ${k}\n            }\n          }\n        }\n        setOutput(${b});\n      }\n    `}},FR={kernelName:ct,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t;VS(r,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=a;$r.assert(am.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u=am.computePool2DInfo(r.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&$r.arraysEqual(u.inShape,u.outShape))return AT({inputs:{x:r},backend:n});let d=new $R(u,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}},_R={kernelName:mt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=a,d=am.computePool3DInfo(r.shape,s,i,[1,1,1],o,l,u),p=new MR(d,"avg",!1);return n.runWebGLProgram(p,[r],"float32")}},PR=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,d=l-1-e.padInfo.left,p=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${d});\n      const float avgMultiplier = float(${p});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${a}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},OR=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,h=e.effectiveFilterWidth,c=d-1-e.padInfo.front,f=p-1-e.padInfo.top,m=h-1-e.padInfo.left,g=1/(t*n*a);this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${r}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${p};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},DR={kernelName:gt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:d}=a,p=am.computePool3DInfo(i.shape,o,l,[1,1,1],u,d),h=new OR(p);return n.runWebGLProgram(h,[r],i.dtype)}},zR={kernelName:ft,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s;VS([r,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=a,d=am.computePool2DInfo(i.shape,o,l,1,u),p=new PR(d);return n.runWebGLProgram(p,[r],i.dtype)}},LR={kernelName:yt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:i,transposeB:o}=a;return JT({a:r,b:s,transposeA:i,transposeB:o,backend:n})}},WR=class{constructor(e,t,n,a,r,s){this.outputShape=[],this.variableNames=["x","mean","variance"],am.assertAndGetBroadcastShape(e,t),am.assertAndGetBroadcastShape(e,n);let i="0.0";null!=a&&(am.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=r&&(am.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}},BR=class{constructor(e,t,n,a,r,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],am.assertAndGetBroadcastShape(e,t),am.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=a&&(am.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=r&&(am.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}},VR={kernelName:pn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:a,mean:r,variance:s,offset:i,scale:o}=e;$r.assert(r.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),$r.assert(null==i||r.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),$r.assert(null==o||r.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);let u=[a,r,s],d=null;null!=i&&(d=i.shape,u.push(i));let p=null;null!=o&&(p=o.shape,u.push(o));let h=Xe().getBool("WEBGL_PACK_NORMALIZATION")?new BR(a.shape,r.shape,s.shape,d,p,l):new WR(a.shape,r.shape,s.shape,d,p,l);return t.runWebGLProgram(h,u,u[0].dtype)}},UR=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=sC(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n,a=function(e){if(1===e)return"sourceLoc";if(e<=6)return GR.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);n=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${GR[t]} = start[${t}] + coords.${GR[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${n}\n        setOutput(getSource(${a}));\n      }\n    `}},GR=["x","y","z","w","u","v"],HR=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=sC(this.rank),n=LN("coords",this.rank),a=LN("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":`vec2(${a.slice(-2).join()})`,s=`getChannel(getSource(${a.join()}), ${r})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${a[this.rank-1]};\n        result.y = ${s};\n        --${a[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${a[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${a[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${a[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}};function jR(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:i}=a,[o,l]=$f.parseSliceParams(r,s,i);if($f.assertParamsValid(r,o,l),0===$r.sizeFromShape(l))return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){let e=n.texData.get(r.dataId),t=kN(e.values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,t)}let{isPacked:u}=n.texData.get(r.dataId),d=$f.isSliceContinous(r.shape,o,l);if(u||!d){let e=Xe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new HR(l):new UR(l),t=[o];return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),function(e,t,n,a){let r=a.texData.get(e.dataId),s=a.makeTensorInfo(n,e.dtype),i=a.texData.get(s.dataId);Object.assign(i,r),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=$f.computeFlatOffset(t,$r.computeStrides(e.shape));r.slice&&(o+=r.slice.flatOffset),i.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||e.dataId};let l=a.dataRefCount.get(i.slice.origDataId)||1;return a.dataRefCount.set(i.slice.origDataId,l+1),s}(r,o,l,n)}var qR={kernelName:$a,backendName:"webgl",kernelFunc:jR},XR={kernelName:xt,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:i}=a;$r.assert(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));let o=s.reduce(((e,t)=>e*t)),l=am.getReshaped(r.shape,s,o),u=am.getPermuted(l.length,s.length),d=am.getReshapedPermuted(r.shape,s,o),p=am.getSliceBeginCoords(i,s.length),h=am.getSliceSize(d,i,s.length),c=[],f=LT({inputs:{x:r},backend:n,attrs:{shape:l}}),m=KT({inputs:{x:f},backend:n,attrs:{perm:u}}),g=LT({inputs:{x:m},backend:n,attrs:{shape:d}}),y=jR({inputs:{x:g},backend:n,attrs:{begin:p,size:h}});return c.push(f),c.push(m),c.push(g),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},KR={kernelName:At,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i}=a,o=n.readSync(r.dataId),l=n.readSync(s.dataId),u=GC(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}},YR={kernelName:bt,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:a}=e,{a:r,b:s}=n,i=Xe().getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=Xe().getNumber("WEBGL_VERSION");if(a.shouldExecuteOnCPU([r,s])||1===o){let e=a.texData.get(r.dataId).values,t=a.texData.get(s.dataId).values,[n,i]=jC(r.shape,s.shape,e,t,r.dtype),o=a.makeTensorInfo(i,r.dtype);return a.texData.get(o.dataId).values=n,o}return t=i?new xT("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",r.shape,s.shape,!1):new gT("\n  return float(int(a.r) & int(b.r));\n",r.shape,s.shape),a.runWebGLProgram(t,[r,s],r.dtype)}},ZR={kernelName:vt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:a,s1:r}=t,s=n.readSync(a.dataId),i=n.readSync(r.dataId),o=am.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},JR=$T({opSnippet:"return float(a != b);",cpuKernelImpl:cN,dtype:"bool"}),QR={kernelName:Jn,backendName:"webgl",kernelFunc:JR};function eE(e){let{inputs:t,backend:n}=e,{input:a}=t;return AT({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.real},backend:n})}var tE={kernelName:fa,backendName:"webgl",kernelFunc:eE},nE={kernelName:kt,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:a,attrs:r}=t,{x:s}=n,{dtype:i}=r;if("complex64"===i){if("complex64"===s.dtype)return AT({inputs:{x:s},backend:a});let t=gd(s.shape),n=e({inputs:{x:s},backend:a,attrs:{dtype:"float32"}}),r=wT({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeIntermediateTensorInfo(n),r}if("complex64"===s.dtype){let t=eE({inputs:{input:s},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:i}});return a.disposeIntermediateTensorInfo(t),n}if(!$r.hasEncodingLoss(s.dtype,i)){let e=AT({inputs:{x:s},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(a.shouldExecuteOnCPU([s])){let e=a.texData.get(s.dataId).values,[t,n,r]=qC(e,s.shape,s.dtype,i);return a.makeTensorInfo(t,n,r)}if("int32"===i)return function(e,t){let n=new jN(e.shape,"return float(int(x));"),a=t.runWebGLProgram(n,[e],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(s,a);if("bool"===i){let e=a.makeTensorInfo([],"bool",$r.getTypedArrayFromDType("bool",1)),t=JR({inputs:{a:s,b:e},backend:a});return a.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},aE="return ceil(x);",rE=ET({opSnippet:aE,packedOpSnippet:aE,cpuKernelImpl:XC}),sE={kernelName:It,backendName:"webgl",kernelFunc:rE},iE=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}},oE=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}},lE={kernelName:St,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:s}=n,{clipValueMin:i,clipValueMax:o}=r;t=Xe().getBool("WEBGL_PACK_CLIP")?new oE(s.shape):new iE(s.shape);let l=[[i],[o]];return a.runWebGLProgram(t,[s],s.dtype,l)}},uE=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}};function dE(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}var pE={kernelName:Nt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a}=t,r=n.texData.get(a.dataId),s=new uE(a.shape),i=[dE(a,r.complexTensorInfos.real),dE(a,r.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}},hE=class{constructor(e){this.outputShape=[],this.outputShape=am.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));let t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){let a=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${a}));`)}let a=t.length,r=t[t.length-1];n.push(`else setOutput(getT${a}(yR, yC-${r}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}},cE=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=am.computeOutShape(e,t);let n=this.outputShape,a=n.length,r=sC(a),s=LN("coords",a),i=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map(((e,t)=>`T${t}`));let o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];let l=i[t],u=i.slice(-2),d=i.join(),p=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${d}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){let t=o[e-1];p+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${fE(i,l,t)}),\n            vec2(${fE(u,l,t)}));\n        }`}let h=o.length,c=o[o.length-1];p+=`\n        return getChannel(\n          getT${h}(${fE(i,l,c)}),\n          vec2(${fE(u,l,c)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${p}\n      }\n\n      void main() {\n        ${r} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[a-1]} = ${s[a-1]} + 1;\n        if (${s[a-1]} < ${n[a-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[a-2]} = ${s[a-2]} + 1;\n        if (${s[a-2]} < ${n[a-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[a-1]} = ${s[a-1]} - 1;\n        if (${s[a-2]} < ${n[a-2]} &&\n            ${s[a-1]} < ${n[a-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}};function fE(e,t,n){let a=e.indexOf(t);return e.map(((e,t)=>t===a?`${e} - ${n}`:e)).join()}function mE(e){let{inputs:t,backend:n}=e,{input:a}=t;return AT({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.imag},backend:n})}var gE={kernelName:xn,backendName:"webgl",kernelFunc:mE};function yE(e,t,n){let a=e[0].dtype;if("complex64"===a){let a=e.map((e=>eE({inputs:{input:e},backend:n}))),r=e.map((e=>mE({inputs:{input:e},backend:n}))),s=yE(a,t,n),i=yE(r,t,n),o=wT({inputs:{real:s,imag:i},backend:n});return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),r.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let r=n.shouldExecuteOnCPU(e);if("string"===a&&(r=!0),r){let r=e.map((e=>{let a=[-1,$r.sizeFromShape(e.shape.slice(t))];return LT({inputs:{x:e},backend:n,attrs:{shape:a}})})),s=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=am.computeOutShape(r.map((e=>e.shape)),1),o=1===r[0].shape[0],l=KC(s,i,a,o),u=am.computeOutShape(e.map((e=>e.shape)),t),d=n.makeTensorInfo(u,a,l);return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}let s=e.filter((e=>$r.sizeFromShape(e.shape)>0)),i=Xe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(1===s.length){let t=i?new jN(e[0].shape,QN):new iT(e[0].shape,QN);return n.runWebGLProgram(t,e,a)}let o=Xe().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>o){let e=[];for(let a=0;a<s.length;a+=o){let r=s.slice(a,a+o);e.push(yE(r,t,n))}let a=yE(e,t,n);for(let t of e)n.disposeIntermediateTensorInfo(t);return a}if(i){let e=new cE(s.map((e=>e.shape)),t);return n.runWebGLProgram(e,s,a)}let{tensors2D:l,outShape:u}=function(e,t,n){let a=am.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>LT({inputs:{x:e},attrs:{shape:[-1,$r.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:a}}(s,t,n),d=new hE(l.map((e=>e.shape))),p=n.runWebGLProgram(d,l,a);l.forEach((e=>n.disposeIntermediateTensorInfo(e)));let h=LT({inputs:{x:p},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(p),h}function xE(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=$r.parseAxisParam(r,t[0].shape)[0],i=t.map((e=>e.shape));am.assertParamsConsistent(i,s);let o=am.computeOutShape(t.map((e=>e.shape)),s);if(0===$r.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter((e=>$r.sizeFromShape(e.shape)>0));return 1===l.length?AT({inputs:{x:l[0]},backend:n}):yE(l,s,n)}var AE={kernelName:Tt,backendName:"webgl",kernelFunc:xE},bE=class{constructor(e,t=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,d=e.dilationWidth,p=e.filterHeight,h=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,x=m?3:1,A="",b="";n&&(A=a?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,b="result = activation(result);");let w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${A}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${x}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${d};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${c}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${c}) *\n                    getW(wR, wC, ${c}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${c}, xR, xC) *\n                    getW(wR, wC, ${c}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${c}, d2),\n                getW(wR, wC, ${c} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${c}),\n                  getX(batch, xR, xC, ${c} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${c}, xR, xC),\n                  getX(batch, ${c} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${c}, d2),\n                getW(wR, wC, ${c} + 1, d2),\n                getW(wR, wC, ${c} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${c}),\n                  getX(batch, xR, xC, ${c} + 1),\n                  getX(batch, xR, xC, ${c} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${c}, xR, xC),\n                  getX(batch, ${c} + 1, xR, xC),\n                  getX(batch, ${c} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${b}\n        setOutput(result);\n      }\n    `}},wE=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,a=e.padInfo.left,r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,d=e.filterDepth,p=e.filterHeight,h=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${r}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${a});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${d}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${c}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${c}) *\n                  getW(wF, wR, wC, ${c}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${c}),\n                  getX(batch, xF, xR, xC, ${c} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${c}, d2),\n                  getW(wF, wR, wC, ${c} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${c}),\n                  getX(batch, xF, xR, xC, ${c} + 1),\n                  getX(batch, xF, xR, xC, ${c} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${c}, d2),\n                  getW(wF, wR, wC, ${c} + 1, d2),\n                  getW(wF, wR, wC, ${c} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},vE=class{constructor(e,t=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=pC(this.outputShape.length);let s=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,d=u,p="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<u;e++)p+=`\n           vec4 xTexelC${2*e};\n           int xTexelC${2*e}Ready;\n           vec4 xTexelC${2*e+1};\n           int xTexelC${2*e+1}Ready;\n           vec4 xC${e};`;p+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let e=0;e<u;e++)p+=`\n           xTexelC${2*e} = vec4(0.0);\n           xTexelC${2*e}Ready = 0;\n           xTexelC${2*e+1} = vec4(0.0);\n           xTexelC${2*e+1}Ready = 0;\n           xC${e} = vec4(0.0);`;p+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let t=0;t<(d+1)/2;t++){let n=2*t;if(p+=`\n           xC = xCCorner + ${n*o};\n           `,1===i){if(n<u&&(s%2==1?(p+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n               `,p+=1===o&&n>0?`\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                   } else {\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                   }\n                   `):p+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xC${n} = xTexelC${n};\n                 `,n+1<u)){let e=s%2==0?$r.nearestLargerEven(o):o;o%2==0&&s%2==1||o%2!=0&&s%2!=1?(p+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${n+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${n+1}Ready = 1;\n                   }\n                   `,p+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\n                     } else {\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\n                     }\n                     `:`\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                     `):p+=1===e?`\n                     xC${n+1} = xTexelC${n};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${n+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${n+1}Ready = 1;\n                     }\n\n                     xC${n+1} = xTexelC${n+1};\n                     `}}else n<u&&(s%2==1?(p+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n               `,n+1<u&&(p+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                 `)):(p+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\n               `,n+1<u&&(p+=`\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                 `)));n<u&&(p+=`\n             wTexel = getW(r, ${n}, d1, d2);\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,n+1<u&&(p+=`\n               wTexel = getW(r, ${n+1}, d1, d2);\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}p+="\n     }\n   ",p+="\n     }\n   ",p+="\n     }\n   ";let h="",c="";n&&(h=a?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:r?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,c="result = activation(result);");let f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${h}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${p}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${c}\n         setOutput(result);\n       }\n     `}},kE=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=pC(this.outputShape.length);let{dataFormat:n}=t,a=GS(),r="channelsLast"===n,s=r?1:2,i=r?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${r}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${a.output} = result;\n      }\n    `}};function IE(e,t){let n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function SE({x:e,filter:t,convInfo:n,backend:a,bias:r=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l,u=e.shape,d=a.texData.get(e.dataId),p=n.inChannels,h=u[0]*u[1]*u[2],c=n.outChannels,f="channelsLast"===n.dataFormat,m=[];if(null!=s){let e=IE(s.shape,f);null!=e&&(s=LT({inputs:{x:s},backend:a,attrs:{shape:e}}),m.push(s))}if(null!=r){let e=IE(r.shape,f);null!=e&&(r=LT({inputs:{x:r},backend:a,attrs:{shape:e}}),m.push(r))}if((1!==h&&1!==c||!(p>ZT))&&d.isPacked&&f&&null!=d.texture&&u[2]%2!=0&&$r.arraysEqual(d.shape.slice(-3),u.slice(-3))){let p=u[0]*u[1]*(u[2]+1),h={dataId:e.dataId,shape:[1,p,n.inChannels],dtype:e.dtype},c=d.shape;d.shape=d.shape.slice(),d.shape[d.shape.length-2]++,$r.assert(ES(d.shape,h.shape),(()=>`packed reshape ${d.shape} to ${h.shape} isn't free`));let f=LT({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(f);let g=JT({a:h,b:f,backend:a,transposeA:!1,transposeB:!1,bias:r,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),y=a.texData.get(g.dataId);$r.assert(y.isPacked,(()=>"batchMatMul result is expected to be packed")),d.shape=c,y.shape=n.outShape,l=AT({inputs:{x:g},backend:a}),l.shape=n.outShape,m.push(g)}else{let u=n.outHeight*n.outWidth,d=LT({inputs:{x:e},backend:a,attrs:{shape:f?[n.batchSize,u,n.inChannels]:[n.batchSize,n.inChannels,u]}}),p=LT({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=JT({a:f?d:p,b:f?p:d,transposeA:!f,transposeB:!1,backend:a,bias:r,activation:o,preluActivationWeights:s,leakyreluAlpha:i});l=LT({inputs:{x:h},backend:a,attrs:{shape:n.outShape}}),m.push(d),m.push(p),m.push(h)}for(let e of m)a.disposeIntermediateTensorInfo(e);return l}function CE({x:e,filter:t,convInfo:n,backend:a,bias:r=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:l,filterHeight:u,inChannels:d,outWidth:p,outHeight:h,dataFormat:c}=n,f="channelsLast"===c,m=l*u*d,g=h*p,y=[n.batchSize,m,g],x=[];if(null!=s){let e=IE(s.shape,f);null!=e&&(s=LT({inputs:{x:s},backend:a,attrs:{shape:e}}),x.push(s))}if(null!=r){let e=IE(r.shape,f);null!=e&&(r=LT({inputs:{x:r},backend:a,attrs:{shape:e}}),x.push(r))}let A=LT({inputs:{x:t},backend:a,attrs:{shape:[1,m,$r.sizeFromShape(t.shape)/m]}});x.push(A);let b=new kE(y,n),w=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],v=a.runWebGLProgram(b,[e],"float32",w),k=LT({inputs:{x:v},backend:a,attrs:{shape:y}});x.push(v),x.push(k);let I=null!=r,S=null!=s,C="leakyrelu"===o,N=o?MT(o,!0):null,T=new FT(f?k.shape:A.shape,f?A.shape:k.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],!0,!1,I,N,S,C),R=f?[k,A]:[A,k];if(r&&R.push(r),S&&R.push(s),C){let e=a.makeTensorInfo([],"float32",$r.createScalarValue(i,"float32"));R.push(e),x.push(e)}let E=a.runWebGLProgram(T,R,"float32"),$=LT({inputs:{x:E},backend:a,attrs:{shape:n.outShape}});x.push(E);for(let e of x)a.disposeIntermediateTensorInfo(e);return $}var NE,TE={kernelName:Rt,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:s,filter:i}=n,{strides:o,pad:l,dataFormat:u,dilations:d,dimRoundingMode:p}=r,h=am.convertConv2DDataFormat(u),c=am.computeConv2DInfo(s.shape,i.shape,o,d,l,p,!1,h);if(1!==c.filterHeight||1!==c.filterWidth||1!==c.dilationHeight||1!==c.dilationWidth||1!==c.strideHeight||1!==c.strideWidth||"SAME"!==c.padInfo.type&&"VALID"!==c.padInfo.type)if(c.strideWidth<=2&&"channelsLast"===h&&Xe().getBool("WEBGL_EXP_CONV")){let e=new vE(c),n=[[c.padInfo.top,c.padInfo.left],[c.strideHeight,c.strideWidth],[c.dilationHeight,c.dilationWidth],[c.inHeight,c.inWidth]];t=a.runWebGLProgram(e,[s,i],"float32",n)}else if(Xe().getBool("WEBGL_CONV_IM2COL"))t=CE({x:s,filter:i,convInfo:c,backend:a});else{let e=new bE(c);t=a.runWebGLProgram(e,[s,i],"float32")}else t=SE({x:s,filter:i,convInfo:c,backend:a});let f=LT({inputs:{x:t},backend:a,attrs:{shape:c.outShape}});return a.disposeIntermediateTensorInfo(t),f}},RE=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${a};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${s?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},EE=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=s?1:2,u=s?2:3,d=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${d}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${a}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},$E=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${r};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${a} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},ME=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=a-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${r}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${a}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${a} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},FE={kernelName:Et,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:d}=a,p=am.convertConv2DDataFormat(l),h=am.computeConv2DInfo(r.shape,d,i,1,o,u,!1,p),c=new RE(h);return n.runWebGLProgram(c,[r,s],"float32")}},_E=class{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=pC(this.outputShape.length);let t=e.filterHeight,n=e.filterWidth,a=t-1-e.padInfo.top,r=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${r});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}},PE={kernelName:$t,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:d}=a,p=am.convertConv2DDataFormat(u),h=am.computeConv2DInfo(i,s.shape,o,1,l,d,!1,p);if(Xe().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===p){let e=[[h.strideHeight,h.strideWidth]],t=new _E(h);return n.runWebGLProgram(t,[r,s],"float32",e)}{let e=new EE(h);return n.runWebGLProgram(e,[r,s],"float32")}}},OE={kernelName:Mt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l}=a,u=am.computeConv3DInfo(r.shape,s.shape,i,l,o),d=new wE(u);return n.runWebGLProgram(d,[r,s],"float32")}},DE={kernelName:Ft,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,filterShape:l}=a,u=am.computeConv3DInfo(r.shape,l,i,1,o),d=new $E(u);return n.runWebGLProgram(d,[r,s],"float32")}},zE={kernelName:_t,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:i,strides:o,inputShape:l}=a,u=am.computeConv3DInfo(l,s.shape,o,1,i),d=new ME(u);return n.runWebGLProgram(d,[r,s],"float32")}},LE=ET({opSnippet:RT+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${yT}\n  return result;\n`}),WE={kernelName:Pt,backendName:"webgl",kernelFunc:LE},BE=ET({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),VE={kernelName:Ot,backendName:"webgl",kernelFunc:BE},UE=class{constructor(e,t,n,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,i,o,l]=e,[u]=t,[d,p]=n;this.outputShape=[u,d,p,l];let h="bilinear"===a?1:0,[c,f]=[i-1+".0",o-1+".0"],[m,g,y]=d>1?[""+(i-1)/(d-1),"(y2-y1) * height_ratio",`y1*${c} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${c}`],[x,A,b]=p>1?[""+(o-1)/(p-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${x});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${A};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${c} ) {\n          setOutput(float(${r}));\n          return;\n        }\n        float in_x = ${b};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${r}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${h} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}},GE={kernelName:Lt,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=a,d=new UE(r.shape,s.shape,o,l,u);return n.runWebGLProgram(d,[r,s,i],"float32")}};!function(e){e.Prod="*",e.Sum="+"}(NE||(NE={}));var HE=class{constructor(e,t,n,a){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let r=this.outputShape.length,s=this.op===NE.Prod?"1.0":"0.0",i=n?s:`getX(${jE(r,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],l="",u="";n?(l=a?"end != "+(o-1):"end != 0",u=a?"end + 1":"end - 1"):(l=a?`end + pow2 < ${o}`:"end >= pow2",u=a?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${sC(r)} coords = getOutputCoords();\n        int end = ${qE(r,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${qE(r,"coords",this.op)} = idx;\n          val ${this.op}= getX(${jE(r,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}};function jE(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function qE(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function XE(e,t,n,a,r,s){let i=t.shape.length,o=am.getAxesPermutation([a],i),l=t;null!=o&&(l=KT({inputs:{x:t},backend:n,attrs:{perm:o}}));let u=am.getInnerMostAxes(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${a}`);let d=l.shape[u],p=AT({inputs:{x:l},backend:n});for(let t=0;t<=Math.ceil(Math.log2(d))-1;t++){let a=new HE(e,l.shape,!1,s),r=[[t]],i=p;p=n.runWebGLProgram(a,[p],p.dtype,r),n.disposeIntermediateTensorInfo(i)}if(r){let t=new HE(e,l.shape,r,s),a=p;p=n.runWebGLProgram(t,[p],p.dtype),n.disposeIntermediateTensorInfo(a)}if(null!=o){let e=KT({inputs:{x:p},backend:n,attrs:{perm:am.getUndoAxesPermutation(o)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(l),e}return p}var KE={kernelName:Dt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a;return XE(NE.Prod,r,n,s,i,o)}},YE={kernelName:zt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a;return XE(NE.Sum,r,n,s,i,o)}},ZE={kernelName:Wt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i,binaryOutput:o}=a;if(1===r.shape.length){let e=n.readSync(r.dataId),t=n.readSync(s.dataId),a=GC(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,a)}if(2===r.shape.length){let e=n.bufferSync(r),t=n.bufferSync(s),a=HC(e,t,i,o);return n.makeTensorInfo(a.shape,s.dtype,a.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}},JE=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}},QE={kernelName:Bt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:i}=a,o=r.shape[0],l=("NHWC"===i?r.shape[1]:r.shape[2])*s,u=("NHWC"===i?r.shape[2]:r.shape[3])*s,d=("NHWC"===i?r.shape[3]:r.shape[1])/(s*s),p=new JE("NHWC"===i?[o,l,u,d]:[o,d,l,u],s,i);return n.runWebGLProgram(p,[r],r.dtype)}},e$=class{constructor(e,t=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=pC(this.outputShape.length);let s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels,l="",u="";n&&(l=a?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");let d=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${d}\n        ${u}\n        setOutput(result);\n      }\n    `}},t$=class{constructor(e,t=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=pC(this.outputShape.length);let s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,d=e.filterWidth,p=d,h="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<d;e++)h+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;h+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let e=0;e<d;e++)h+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;h+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(p+1)/2;e++){let t=2*e;if(h+=`\n          xC = xCCorner + ${t*l};\n          `,1===o){if(t<d&&(i%2==1?(h+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,h+=1===l&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):h+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<d)){let e=i%2==0?$r.nearestLargerEven(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(h+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,h+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                    } else {\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                    }\n                    `:`\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                    `):h+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<d&&(i%2==1?(h+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<d&&(h+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(h+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<d&&(h+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<d&&(h+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<d&&(h+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}h+="\n    }\n  ",h+="\n      }\n    ";let c="",f="";n&&(c=a?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${c}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${h}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}},n$={kernelName:Vt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=a,d=l;null==d&&(d=[1,1]),$r.assert(am.eitherStridesOrDilationsAreOne(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));let p,h=am.computeConv2DInfo(r.shape,s.shape,i,d,o,u,!0);p=Xe().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new t$(h):new e$(h);let c=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(p,[r,s],"float32",c)}},a$=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${a};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},r$=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${a}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},s$={kernelName:Ut,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:d}=a,p=am.computeConv2DInfo(r.shape,d,i,o,l,u,!0),h=new a$(p);return n.runWebGLProgram(h,[r,s],"float32")}},i$={kernelName:Gt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:d}=a,p=am.computeConv2DInfo(d,s.shape,i,o,l,u,!0),h=new r$(p);return n.runWebGLProgram(h,[r,s],"float32")}},o$=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}},l$={kernelName:Ht,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a}=t,r=[...a.shape,...a.shape],s=$r.sizeFromShape(a.shape),i=LT({inputs:{x:a},backend:n,attrs:{shape:[s]}}),o=new o$(s),l=n.runWebGLProgram(o,[i],i.dtype),u=LT({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}},u$=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:a,strideHeight:r,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:d,left:p}=a;this.userCode=`\n      const ivec2 strides = ivec2(${r}, ${s});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}},d$={kernelName:jt,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:s,filter:i}=n,{strides:o,pad:l,dilations:u}=r,d=am.computeDilation2DInfo(s.shape,i.shape,o,l,"NHWC",u),p=new u$(d);t=a.runWebGLProgram(p,[s,i],"float32");let h=LT({inputs:{x:t},backend:a,attrs:{shape:d.outShape}});return a.disposeIntermediateTensorInfo(t),h}},p$={kernelName:Zt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,s=t,{allDims:i,summedDims:o,idDims:l}=am.decodeEinsumEquation(r,s.length);am.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:d}=am.getEinsumComputePath(o,l),p=d.length,h=null,c=i.length,f=[];for(let e=0;e<p;++e){for(let t of d[e]){let e,{permutationIndices:a,expandDims:r}=am.getEinsumPermutation(c,l[t]);am.isIdentityPermutation(a)?e=s[t]:(e=KT({inputs:{x:s[t]},backend:n,attrs:{perm:a}}),f.push(e));let i=e.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);$r.arraysEqual(e.shape,i)||(e=LT({inputs:{x:e},backend:n,attrs:{shape:i}}),f.push(e)),null===h?h=e:(h=DT({inputs:{a:e,b:h},backend:n}),f.push(h))}e<p-1&&(u[e]>=0&&(h=qT({inputs:{x:h},backend:n,attrs:{axis:u[e]-(i.length-c),keepDims:!1}}),f.push(h)),c--)}for(let e of f)e!==h&&n.disposeIntermediateTensorInfo(e);return h}},h$=ET({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),c$={kernelName:Jt,backendName:"webgl",kernelFunc:h$},f$={kernelName:Qt,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e,{dy:a,y:r}=t,s=Xe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new xT("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,r.shape):new gT("return (b >= 0.0) ? a : a * (b + 1.0);",a.shape,r.shape);return n.runWebGLProgram(s,[a,r],a.dtype)}},m$=$T({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:YC}),g$={kernelName:tn,backendName:"webgl",kernelFunc:m$},y$=ET({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${am.ERF_P};\n  float a1 = ${am.ERF_A1};\n  float a2 = ${am.ERF_A2};\n  float a3 = ${am.ERF_A3};\n  float a4 = ${am.ERF_A4};\n  float a5 = ${am.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),x$={kernelName:en,backendName:"webgl",kernelFunc:y$},A$=ET({opSnippet:RT+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:ZC,dtype:"float32"}),b$={kernelName:nn,backendName:"webgl",kernelFunc:A$};function w$(e){let{inputs:t,attrs:n,backend:a}=e,{dim:r}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=r;return r<0&&($r.assert(-(i+1)<=r,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+r+1),o.splice(l,0,1),LT({inputs:{x:s},backend:a,attrs:{shape:o}})}var v$={kernelName:an,backendName:"webgl",kernelFunc:w$},k$="return exp(x) - 1.0;",I$=ET({opSnippet:k$,packedOpSnippet:k$,cpuKernelImpl:JC}),S$={kernelName:rn,backendName:"webgl",kernelFunc:I$},C$=class{constructor(e,t,n){this.variableNames=["real","imag"];let a=t[1];this.outputShape=t;let r,s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${a}.0`:"1.0";if("real"===e)r="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);r="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${r}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${a});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${a}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}};function N$(e,t,n){let a=n.texData.get(e.dataId),r=$r.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=LT({inputs:{x:e},backend:n,attrs:{shape:[r/s,s]}}),o=i.shape,l=new C$("real",o,t),u=new C$("imag",o,t),d=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:o},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:o}],p=n.runWebGLProgram(l,d,"float32"),h=n.runWebGLProgram(u,d,"float32"),c=wT({inputs:{real:p,imag:h},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h);let f=LT({inputs:{x:c},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),f}var T$={kernelName:sn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:a}=t;return N$(a,!1,n)}},R$=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}};function E$(e){let{backend:t,attrs:n}=e,{shape:a,value:r}=n,{dtype:s}=n;if(s=s||$r.inferDtype(r),"string"===s){let e=$r.getArrayFromDType(s,$r.sizeFromShape(a));return e.fill(r),t.makeTensorInfo(a,s,e)}{let e=new R$(a,r),n=[[r]];return t.runWebGLProgram(e,[],s,n)}}var $$,M$={kernelName:on,backendName:"webgl",kernelFunc:E$},F$=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}},_$={kernelName:ln,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,a=t,r=new F$(n.shape);return a.runWebGLProgram(r,[n],n.dtype)}},P$="return floor(x);",O$=ET({opSnippet:P$,packedOpSnippet:P$,cpuKernelImpl:QC}),D$={kernelName:un,backendName:"webgl",kernelFunc:O$},z$=$T({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),L$={kernelName:dn,backendName:"webgl",kernelFunc:z$},W$=class{constructor(e){this.variableNames=["A"];let t=GS(),[n,a]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}},B$=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=GS(),[n,a]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${a}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}},V$={kernelName:cr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{pixels:r}=t,{numChannels:s}=a,i="undefined"!=typeof HTMLVideoElement&&r instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&r instanceof HTMLImageElement,[l,u]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],d=[u,l],p=[u,l,s];if(o||i){let e=Xe().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(null==$$||e!==U$)&&(U$=e,$$=document.createElement("canvas").getContext("2d",{willReadFrequently:U$})),$$.canvas.width=l,$$.canvas.height=u,$$.drawImage(r,0,0,l,u),r=$$.canvas}let h=n.makeTensorInfo(d,"int32");n.texData.get(h.dataId).usage=PI.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(h.dataId),r);let c=Xe().getBool("WEBGL_PACK")?new B$(p):new W$(p),f=n.runWebGLProgram(c,[h],"int32");return n.disposeData(h.dataId),f}},U$=Xe().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU"),G$={kernelName:gr,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:s,filter:i,bias:o,preluActivationWeights:l}=n,{strides:u,pad:d,dataFormat:p,dilations:h,dimRoundingMode:c,activation:f,leakyreluAlpha:m}=r,g=am.convertConv2DDataFormat(p),y=am.computeConv2DInfo(s.shape,i.shape,u,h,d,c,!1,g),x=[],A=null!=o,b=null!=l,w="leakyrelu"===f,v=()=>{let e=[s,i],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){let t=LT({inputs:{x:e},backend:a,attrs:{shape:[e.shape[0],1,1]}});return x.push(t),t}return e};if(A&&e.push(t(o,p)),b&&e.push(t(l,p)),w){let t=a.makeTensorInfo([],"float32",$r.createScalarValue(m,"float32"));e.push(t),x.push(t)}return e};if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if(y.strideWidth<=2&&"channelsLast"===g&&Xe().getBool("WEBGL_EXP_CONV")){let e=f?MT(f,!0):null,n=new vE(y,A,e,b,w),r=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],s=v();t=a.runWebGLProgram(n,s,"float32",r)}else if(Xe().getBool("WEBGL_CONV_IM2COL"))t=CE({x:s,filter:i,convInfo:y,backend:a,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});else{let e=f?MT(f,!1):null,n=new bE(y,A,e,b,w),r=v();t=a.runWebGLProgram(n,r,"float32")}else t=SE({x:s,filter:i,convInfo:y,backend:a,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});let k=LT({inputs:{x:t},backend:a,attrs:{shape:y.outShape}});return x.push(t),x.forEach((e=>a.disposeIntermediateTensorInfo(e))),k}},H$={kernelName:yr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:c}=a,f=[],m=d;null==m&&(m=[1,1]),$r.assert(am.eitherStridesOrDilationsAreOne(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));let g,y=am.computeConv2DInfo(r.shape,s.shape,l,m,u,p,!0),x=Xe().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels==1,A=h?MT(h,x):null,b=[r,s],w=null!=i,v=null!=o,k="leakyrelu"===h;if(w&&b.push(i),v&&b.push(o),k){let e=n.makeTensorInfo([],"float32",$r.createScalarValue(c,"float32"));b.push(e),f.push(e)}g=x?new t$(y,w,A,v,k):new e$(y,w,A,v,k);let I=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],S=n.runWebGLProgram(g,b,"float32",I);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}},j$=class{constructor(e,t,n,a){this.sliceDim=e,this.strides=t,this.paramsShape=a,this.variableNames=["x","indices"],this.outputShape=n;let r=sC(n.length),s="\n    int index;";for(let e=0;e<this.sliceDim;e++)s+=`\n          index = round(getIndices(coords[0], ${e}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};\n          flattenIndex += index * ${this.strides[e]};`;this.userCode=`\n         void main() {\n          ${r} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${s}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}},q$={kernelName:cn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=r.shape,i=s[s.length-1],o=$r.sizeFromShape(a.shape),[l,u,d,p]=am.prepareAndValidate(a,r),h=LT({inputs:{x:r},backend:n,attrs:{shape:[u,i]}}),c=LT({inputs:{x:a},backend:n,attrs:{shape:[$r.sizeFromShape(a.shape)/d,d]}});if(n.shouldExecuteOnCPU([a,r])||"string"===a.dtype){let e=n.readSync(r.dataId),t=n.bufferSync(a),s=eN(e,t,a.dtype,u,i,d,p,a.shape,o);return n.makeTensorInfo(l,a.dtype,s.values)}let f=new j$(i,p,[u,d],a.shape),m=n.runWebGLProgram(f,[c,h],c.dtype),g=LT({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),g}},X$=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=sC(this.rank),a=function(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let t=0;t<e.length;t++)2===t?a.push("index"):a.push(`${n[t]}`);return a.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${a}));\n      }\n    `}};function K$(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:i,batchDims:o}=a,l=$r.parseAxisParam(i,r.shape)[0];if(Xe().get("DEBUG")){let e=n.readSync(s.dataId),t=r.shape[l];for(let n=0;n<e.length;++n){let a=e[n];$r.assert(a<=t-1&&a>=0,(()=>`GatherV2: the index value ${a} is not in [0, ${t-1}]`))}}let u=am.segment_util.collectGatherOpShapeInfo(r,s,l,o),d=$r.sizeFromShape(s.shape),p=[],h=LT({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),c=LT({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,d/u.batchSize]}});p.push(h),p.push(c);let f=[u.batchSize,u.outerSize,d/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){let e=n.bufferSync(c),t=n.bufferSync(h),a=tN(t,e,f);return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,a.dtype,a.values)}let m=new X$(h.shape,f),g=n.runWebGLProgram(m,[h,c],h.dtype);p.push(g);let y=LT({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}var Y$={kernelName:hn,backendName:"webgl",kernelFunc:K$},Z$=$T({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:nN,dtype:"bool"}),J$={kernelName:fn,backendName:"webgl",kernelFunc:Z$},Q$=$T({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:aN}),eM={kernelName:mn,backendName:"webgl",kernelFunc:Q$},tM={kernelName:yn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:a}=t;return N$(a,!0,n)}},nM=ET({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),aM={kernelName:An,backendName:"webgl",kernelFunc:nM},rM=ET({opSnippet:"return float(isinf(x));",dtype:"bool"}),sM={kernelName:bn,backendName:"webgl",kernelFunc:rM},iM=ET({opSnippet:"return float(isnan(x));",dtype:"bool"}),oM={kernelName:wn,backendName:"webgl",kernelFunc:iM},lM=$T({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:rN,dtype:"bool"}),uM={kernelName:kn,backendName:"webgl",kernelFunc:lM},dM=$T({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:sN,dtype:"bool"}),pM={kernelName:In,backendName:"webgl",kernelFunc:dM},hM={kernelName:Sn,backendName:"webgl",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,i=iN(a,r,s);return t.makeTensorInfo([i.length],"float32",i)}},cM=ET({opSnippet:RT+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:oN}),fM={kernelName:Cn,backendName:"webgl",kernelFunc:cM},mM=ET({opSnippet:RT+"\n  return log(1.0 + x);\n"}),gM={kernelName:Nn,backendName:"webgl",kernelFunc:mM},yM=$T({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),xM={kernelName:Tn,backendName:"webgl",kernelFunc:yM},AM=ET({opSnippet:"return float(!(x >= 1.0));"}),bM={kernelName:Rn,backendName:"webgl",kernelFunc:AM},wM=$T({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),vM={kernelName:En,backendName:"webgl",kernelFunc:wM},kM=class{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[];let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${a}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}},IM=class{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${a}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}},SM={kernelName:_n,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=a,u=Xe().getBool("WEBGL_PACK_NORMALIZATION")?new IM(r.shape,s,i,o,l):new kM(r.shape,s,i,o,l);return n.runWebGLProgram(u,[r],r.dtype)}},CM=class{constructor(e,t,n,a,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=a,this.beta=r,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${a}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${a})\n                * float(${r})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${r});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}},NM={kernelName:Pn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:d}=a,p=new CM(r.shape,o,l,u,d);return n.runWebGLProgram(p,[r,s,i],r.dtype)}};function TM(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:i}=a,o=r.shape.length,l=$r.parseAxisParam(s,r.shape),u=l,d=am.getAxesPermutation(u,o),p=null!=d,h=n.shouldExecuteOnCPU([r]),c=r;if(p){if(h){let e=n.texData.get(c.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[d[e]];let a=ON(e,r.shape,r.dtype,d,t);c=n.makeTensorInfo(t,r.dtype),n.texData.get(c.dataId).values=a}else c=jT(r,d,n);u=am.getInnerMostAxes(u.length,o)}am.assertAxesAreInnerMostDims("max",u,o);let f,[m,g]=am.computeOutAndReduceShapes(c.shape,u),y=m;if(i&&(y=am.expandShapeToKeepDim(m,l)),h){let e=n.texData.get(c.dataId).values,t=lN(e,$r.sizeFromShape(g),y,r.dtype);f=n.makeTensorInfo(y,r.dtype),n.texData.get(f.dataId).values=t}else f=function(e,t,n,a){let r=$r.sizeFromShape(t),s=LT({inputs:{x:e},attrs:{shape:[$r.sizeFromShape(e.shape)/r,r]},backend:a}),i=UT(s,e.dtype,"max",a),o=LT({inputs:{x:i},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),o}(c,g,y,n);return p&&n.disposeIntermediateTensorInfo(c),f}var RM={kernelName:Dn,backendName:"webgl",kernelFunc:TM},EM=$T({opSnippet:mT+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+yT+"\n  return result;\n",cpuKernelImpl:uN}),$M={kernelName:zn,backendName:"webgl",kernelFunc:EM},MM={kernelName:Ln,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t;VS(r,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=a;$r.assert(am.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u=am.computePool2DInfo(r.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&$r.arraysEqual(u.inShape,u.outShape))return AT({inputs:{x:r},backend:n});let d=new $R(u,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}},FM={kernelName:Bn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=a,d=am.computePool3DInfo(r.shape,s,i,[1,1,1],o,u,l),p=new MR(d,"max",!1);return n.runWebGLProgram(p,[r],r.dtype)}},_M=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,a=e.dilationHeight,r=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=r-1-e.padInfo.top,o=s-1-e.padInfo.left,l=r*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${r};\n          wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},PM=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,d=o-1-e.padInfo.front,p=l-1-e.padInfo.top,h=u-1-e.padInfo.left,c=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${p}, ${h});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${r}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${c} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},OM={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:d}=a,p=am.computePool3DInfo(i.shape,o,l,[1,1,1],u,d),h=new MR(p,"max",!0),c=n.runWebGLProgram(h,[i],i.dtype),f=new PM(p),m=n.runWebGLProgram(f,[r,c],i.dtype);return n.disposeIntermediateTensorInfo(c),m}},DM={kernelName:Wn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:i}=t,o=s;VS([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:d,dimRoundingMode:p}=a,h=am.computePool2DInfo(o.shape,l,u,1,d,p),c=new $R(h,"max",!0),f=n.runWebGLProgram(c,[o],o.dtype),m=new _M(h),g=n.runWebGLProgram(m,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},zM={kernelName:Un,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:a}=e,{filterSize:r,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;$r.assert(4===a.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`));let u=[1,1];$r.assert(am.eitherStridesOrDilationsAreOne(s,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`));let d=am.computePool2DInfo(a.shape,r,s,u,i),[p,h]=function(e,t,n,a){let r=new $R(n,"max",!1),s=a.runWebGLProgram(r,[e],"float32");return r=new $R(n,"max",!0,!0,t),[s,a.runWebGLProgram(r,[e],"float32")]}(a,o,d,l);return[p,h]}},LM={kernelName:Gn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:a}=e,{keepDims:r,axis:s}=t,i=n,o=a.shape.length,l=$r.parseAxisParam(s,a.shape),u=l,d=am.getAxesPermutation(u,o),p=null!=d,h=i.shouldExecuteOnCPU([a]),c=[],f=a;if(p){if(h){let e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=a.shape[d[e]];let n=ON(e,a.shape,a.dtype,d,t);f=i.makeTensorInfo(t,a.dtype),i.texData.get(f.dataId).values=n}else f=jT(a,d,i);c.push(f),u=am.getInnerMostAxes(u.length,o)}am.assertAxesAreInnerMostDims("sum",u,o);let[m,g]=am.computeOutAndReduceShapes(f.shape,u),y=m;r&&(y=am.expandShapeToKeepDim(m,l));let x=function(e,t,n,a){let r=$r.sizeFromShape(t),s=LT({inputs:{x:e},attrs:{shape:[$r.sizeFromShape(e.shape)/r,r]},backend:a}),i=UT(s,"float32","mean",a),o=LT({inputs:{x:i},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(let e of c)i.disposeIntermediateTensorInfo(e);return x}},WM={kernelName:Hn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=r.shape.length,l=$r.parseAxisParam(s,r.shape),u=l,d=am.getAxesPermutation(u,o),p=r;null!=d&&(p=KT({inputs:{x:r},backend:n,attrs:{perm:d}}),u=am.getInnerMostAxes(u.length,r.shape.length)),am.assertAxesAreInnerMostDims("min",u,o);let h,[c,f]=am.computeOutAndReduceShapes(p.shape,u),m=LT({inputs:{x:p},backend:n,attrs:{shape:[-1,$r.sizeFromShape(f)]}}),g=UT(m,m.dtype,"min",n);return h=LT(i?{inputs:{x:g},backend:n,attrs:{shape:am.expandShapeToKeepDim(c,l)}}:{inputs:{x:g},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(p),h}},BM=$T({opSnippet:mT+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+yT+"\n  return result;\n",cpuKernelImpl:dN}),VM={kernelName:jn,backendName:"webgl",kernelFunc:BM},UM=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let a=e.length,r=sC(a),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),l="reflect"===n?0:1;this.userCode=1!==a?`\n      ${r} start = ${r}(${s});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        for (int i = 0; i < ${a}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${r} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}},GM=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let a=e.length,r=sC(a),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=LN("rc",a),l=LN("source",a),u=`${o[a-1]} < ${this.outputShape[a-1]}`,d=1===a?"source":`vec2(${l.slice(-2).join()})`,p="reflect"===n?0:1,h="";if(1===a){let e=`\n        ${r} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${p};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${p};\n        }\n        source -= start;\n      `;h=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${d});\n        ${o[a-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${d});\n        }\n      `}else{let e=`\n        ${r} source = rc;\n        ${r} lt = ${r}(lessThan(source, start));\n        ${r} gte = ${r}(greaterThanEqual(source, end));\n        ${r} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${p}) +\n                gte * ((end - 1) * 2 - source + ${p});\n        source -= start;\n      `;h=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${d});\n        ${o[a-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${d});\n        }\n        rc = outputLoc;\n        ${o[a-2]} += 1;\n        if(${o[a-2]} < ${this.outputShape[a-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${d});\n          ${o[a-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${d});\n          }\n        }\n      `}this.userCode=`\n      const ${r} start = ${r}(${s});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}},HM={kernelName:qn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:a}=e,{paddings:r,mode:s}=n,i=Xe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new GM(a.shape,r,s):new UM(a.shape,r,s);return t.runWebGLProgram(i,[a],a.dtype)}},jM=$T({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+yT+"\n  return result;\n"}),qM={kernelName:Xn,backendName:"webgl",kernelFunc:jM},XM=class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}},KM=$T({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),YM={kernelName:Yt,backendName:"webgl",kernelFunc:KM},ZM="return a - b;",JM=$T({opSnippet:ZM,packedOpSnippet:ZM,supportsComplex:!0,cpuKernelImpl:FN}),QM={kernelName:er,backendName:"webgl",kernelFunc:JM};function eF(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,i=$r.parseAxisParam([s],r.shape),o=TM({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=am.expandShapeToKeepDim(o.shape,i),u=LT({inputs:{x:o},backend:n,attrs:{shape:l}}),d=JM({inputs:{a:r,b:u},backend:n}),p=A$({inputs:{x:d},backend:n}),h=qT({inputs:{x:p},backend:n,attrs:{axis:i,keepDims:!1}}),c=LT({inputs:{x:h},backend:n,attrs:{shape:l}}),f=KM({inputs:{a:p,b:c},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),f}var tF={kernelName:Ba,backendName:"webgl",kernelFunc:eF},nF={kernelName:Kn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:i,normalized:o}=a,l=o?r:eF({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=l.shape[0],d=l.shape[1],p=new XM(u,d,s),h=[[i]],c=n.runWebGLProgram(p,[l],"int32",h);return o||n.disposeIntermediateTensorInfo(l),c}},aF=qN+"\n  return -x;\n",rF={kernelName:Zn,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:a}=e,{x:r}=n;if(a.shouldExecuteOnCPU([r])){let e=a.texData.get(r.dataId),[t,n]=hN(e.values,r.shape,r.dtype);return a.makeTensorInfo(n,r.dtype,t)}return t=Xe().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new iT(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new jN(r.shape,aF),a.runWebGLProgram(t,[r],r.dtype)}},sF=pg.nonMaxSuppressionV3Impl,iF={kernelName:Qn,backendName:"webgl",kernelFunc:function(e){am.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=a,u=n.readSync(r.dataId),d=n.readSync(s.dataId),{selectedIndices:p}=sF(u,d,i,o,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},oF=pg.nonMaxSuppressionV4Impl,lF={kernelName:ea,backendName:"webgl",kernelFunc:function(e){am.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=a,d=n.readSync(r.dataId),p=n.readSync(s.dataId),{selectedIndices:h,validOutputs:c}=oF(d,p,i,o,l,u);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}},uF=pg.nonMaxSuppressionV5Impl,dF={kernelName:ta,backendName:"webgl",kernelFunc:function(e){am.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=a,d=n.readSync(r.dataId),p=n.readSync(s.dataId),h=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=uF(d,p,h,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},pF=class{constructor(e,t,n,a){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${a}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}},hF={kernelName:aa,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:s,depth:i,onValue:o,offValue:l}=a,u=$r.sizeFromShape(r.shape),d=new pF(u,i,o,l),p=LT({inputs:{x:r},backend:n,attrs:{shape:[u]}}),h=n.runWebGLProgram(d,[p],s);n.disposeIntermediateTensorInfo(p);let c=LT({inputs:{x:h},backend:n,attrs:{shape:[...r.shape,i]}});return n.disposeIntermediateTensorInfo(h),c}};function cF(e){let{inputs:t,backend:n}=e,{x:a}=t;if("complex64"===a.dtype){let e=eE({inputs:{input:a},backend:n}),t=cF({inputs:{x:e},backend:n}),r=mE({inputs:{input:a},backend:n}),s=cF({inputs:{x:r},backend:n}),i=wT({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}return E$({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}var fF={kernelName:pr,backendName:"webgl",kernelFunc:cF},mF={kernelName:na,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){let t=eE({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),s=mE({inputs:{input:r},backend:a}),i=cF({inputs:{x:s},backend:a}),o=wT({inputs:{real:n,imag:i},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),o}return E$({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:a})}},gF={kernelName:ra,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return w$({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{$r.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),$r.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=xE({inputs:t.map((e=>{let t=w$({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}},yF=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let a=e.length,r=sC(a),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);this.userCode=1!==a?`\n      ${r} start = ${r}(${s});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${r} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}},xF=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let a=e.length,r=sC(a),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=LN("rc",a),l=LN("source",a),u=`${o[a-1]} < ${this.outputShape[a-1]}`,d=1===a?"source":`vec2(${l.slice(-2).join()})`,p=[`${r} rc = outputLoc;`,`${o[a-1]} += 1;\n       if(${u}) {\n      `,1===a?"":`}\n       rc = outputLoc;\n       ${o[a-2]} += 1;\n       if(${o[a-2]} < ${this.outputShape[a-2]}) {`,1===a?"":`  ${o[a-1]} += 1;\n         if(${u}) {`],h=1===a?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",c="";for(let e=0,t=1===a?2:4;e<t;e++)c+=`\n        ${p[e]}\n        if (${h}) {\n          result[${e}] = float(value);\n        } else {\n          ${r} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${d});\n        }\n      `;c+=1===a?"} ":"}}",this.userCode=`\n      const ${r} start = ${r}(${s});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${c}\n        setOutput(result);\n      }\n    `}},AF=e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:i}=a;if(0===$r.sizeFromShape(r.shape))return E$({backend:n,attrs:{shape:s.map(((e,t)=>e[0]+r.shape[t]+e[1])),value:i,dtype:r.dtype}});let o=Xe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xF(r.shape,s,i):new yF(r.shape,s,i),l=[[i]];return n.runWebGLProgram(o,[r],r.dtype,l)},bF={kernelName:sa,backendName:"webgl",kernelFunc:AF},wF=$T({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+yT+"\n  return result;\n"}),vF={kernelName:oa,backendName:"webgl",kernelFunc:wF},kF={kernelName:ua,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:s}=n,{axis:i,keepDims:o}=r,l=s.shape.length,u=[],d=$r.parseAxisParam(i,s.shape),p=d,h=am.getAxesPermutation(p,l),c=s;if(null!=h&&(c=KT({inputs:{x:s},backend:a,attrs:{perm:h}}),p=am.getInnerMostAxes(p.length,l),u.push(c)),am.assertAxesAreInnerMostDims("prod",p,l),a.shouldExecuteOnCPU([c])){let e=a.texData.get(c.dataId).values,{outVals:n,outShape:r,outDtype:s}=fN(c.shape,c.dtype,e,p);t=a.makeTensorInfo(r,s,n)}else{let[e,n]=am.computeOutAndReduceShapes(c.shape,p),r=$r.sizeFromShape(n),i=LT({inputs:{x:c},backend:a,attrs:{shape:[-1,r]}}),o=UT(i,Ns(s.dtype),"prod",a);t=LT({inputs:{x:o},backend:a,attrs:{shape:e}}),u.push(i),u.push(o)}if(o){u.push(t);let e=am.expandShapeToKeepDim(t.shape,d);t=LT({inputs:{x:t},backend:a,attrs:{shape:e}})}return u.forEach((e=>a.disposeIntermediateTensorInfo(e))),t}},IF={kernelName:da,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=a,l=r.map((e=>n.readSync(e.dataId))),u=r.map((e=>e.shape)),d=n.readSync(s.dataId),p=n.readSync(i.dataId),[h,c,f]=mN(l,u,d,s.shape,s.dtype,p,i.shape,o),m=h.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,c);return m.concat([g])}},SF={kernelName:pa,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:s}=t,i=n.readSync(a.dataId),o=n.readSync(r.dataId),l=n.readSync(s.dataId),[u,d]=gN(i,a.shape,a.dtype,o,r.shape,l,s.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([d.length],a.dtype,d)]}},CF={kernelName:ha,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{shape:r,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=a,u=n.readSync(r.dataId),d=n.readSync(s.dataId),p=n.readSync(i.dataId),h=o.map((e=>n.readSync(e.dataId))),c=o.map((e=>e.shape)),[f,m]=yN(u,r.shape,d,s.shape,s.dtype,p,i.shape,h,c,l);return n.makeTensorInfo(f,s.dtype,m)}},NF=e=>{let{backend:t,attrs:n}=e,{start:a,stop:r,step:s,dtype:i}=n,o=xN(a,r,s,i);return t.makeTensorInfo([o.length],i,o)},TF={kernelName:ca,backendName:"webgl",kernelFunc:NF},RF=ET({opSnippet:"return 1.0 / x;"}),EF={kernelName:ma,backendName:"webgl",kernelFunc:RF},$F=ET({opSnippet:qN+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),MF={kernelName:ga,backendName:"webgl",kernelFunc:$F},FF=ET({opSnippet:qN+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),_F={kernelName:va,backendName:"webgl",kernelFunc:FF},PF=class{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,d=[a&&t>1?i-1:i,a&&n>1?o-1:o],p=[a&&t>1?t-1:t,a&&n>1?n-1:n];u=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${d[0]/p[0]},\n          ${d[1]/p[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}},OF=class{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,d=[a&&t>1?i-1:i,a&&n>1?o-1:o],p=[a&&t>1?t-1:t,a&&n>1?n-1:n];u=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${d[0]/p[0]},\n          ${d[1]/p[1]},\n          ${d[1]/p[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}},DF={kernelName:ba,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a,[l,u]=o,d=Xe().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new OF(r.shape,l,u,s,i):new PF(r.shape,l,u,s,i);return n.runWebGLProgram(d,[r],"float32")}},zF=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,a,r]=t,[,s,i]=e,o=[n&&s>1?a-1:a,n&&i>1?r-1:r],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],d=o[1]/l[1],p=1/u,h=1/d,c=2*Math.ceil(p)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${d});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${c});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${a-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}},LF={kernelName:wa,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a,o=new zF(s.shape,r.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}},WF=class{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,d=[a&&t>1?i-1:i,a&&n>1?o-1:o],p=[a&&t>1?t-1:t,a&&n>1?n-1:n],h=a?"0.5":"0.0";u=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${d[0]/p[0]},\n          ${d[1]/p[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}},BF=class{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,d=[a&&t>1?i-1:i,a&&n>1?o-1:o],p=[a&&t>1?t-1:t,a&&n>1?n-1:n],h=a?"0.5":"0.0";u=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${d[0]/p[0]},\n          ${d[1]/p[1]},\n          ${d[1]/p[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${u};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}},VF={kernelName:xa,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a,[l,u]=o,d=Xe().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new BF(r.shape,l,u,s,i):new WF(r.shape,l,u,s,i);return n.runWebGLProgram(d,[r],r.dtype)}},UF=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,a,r]=t,[,s,i]=e,o=[n&&s>1?a-1:a,n&&i>1?r-1:r],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],d=o[1]/l[1],p=1/u,h=1/d,c=2*Math.ceil(p)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${d});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${c});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}},GF={kernelName:Aa,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a,o=new UF(s.shape,r.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}},HF=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);let a=e.map(((n,a)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(a))).join(","),r=sC(n);this.userCode=`\n      void main() {\n        ${r} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}},jF=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let a=LN("rc",n),r=`${a[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${a[n-2]} + 1 < ${this.outputShape[n-2]}`,i=sC(n);var o;function l(n){let a=e.map(((a,r)=>function(n,a){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${a[n]} - 1`:`${a[n]}`}(r,n)));return`getChannel(getX(${a.join(",")}), vec2(${a.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${r}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${o=a.slice(),l(o)};\n          if(${r}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",l(e)}(a.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",l(e)}(a.slice())};\n            if(${r}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",l(e)}(a.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}},qF={kernelName:ka,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a,i=r.shape.length,o=$r.parseAxisParam(s,r.shape);if(0===i)return AT({inputs:{x:r},backend:n});let l=Xe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new jF(r.shape,o):new HF(r.shape,o);return n.runWebGLProgram(l,[r],r.dtype)}},XF=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],a=e[2];this.outputShape=e;let r="";r="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${r}\n          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}},KF={kernelName:fr,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:a}=e,{radians:r,fillValue:s,center:i}=t,o=n,l=new XF(a.shape,s),[u,d]=am.getImageCenter(i,a.shape[1],a.shape[2]),p=[[u,d,Math.sin(r),Math.cos(r)]];return o.runWebGLProgram(l,[a],a.dtype,p)}},YF=ET({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),ZF={kernelName:Ia,backendName:"webgl",kernelFunc:YF},JF=ET({opSnippet:"return inversesqrt(x);",cpuKernelImpl:AN}),QF={kernelName:Sa,backendName:"webgl",kernelFunc:JF},e_=class{constructor(e,t,n,a,r,s,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let l=sC(r.length),u=sC(s.length),d="";1===n?d="i":2===n&&(d="i, j");let p=`getIndices(${d})`,h="";1===a?h="i":2===a&&(h="i, coords[1]");let c=`getUpdates(${h})`,f="";o&&(f="coords[0], coords[1]");let m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides";this.userCode=`\n        ${l} strides = ${l}(${r});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${p});\n              flattenedIndex += index * ${g};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${c};\n              found = true;\n            }\n          }\n          setOutput(mix(${m}, sum, float(found)));\n        }\n      `}},t_=class{constructor(e,t,n,a,r,s,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;let l=sC(r.length),u=sC(s.length),d="";1===n?d="i":2===n&&(d="i, j");let p=`getIndices(${d})`,h="";1===a?h="i":2===a&&(h="i, coords[1]");let c=`getUpdates(${h})`,f="";o&&(f="coords[0], coords[1]");let m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides",y=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${l} strides = ${l}(${r});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${p});\n              flattenedIndex += index.xz * ${g};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${y};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${c};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${m}, sum, found));\n        }\n      `}},n_={kernelName:Ca,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:i}=a,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:p}=am.calculateShapes(s,r,i),h=[p/u,u];if(0===p)return n.makeTensorInfo(i,r.dtype);let c,f=LT({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),m=LT({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0]));c=Xe().getBool("WEBGL_PACK")?new t_(l,o,f.shape.length,m.shape.length,d,h):new e_(l,o,f.shape.length,m.shape.length,d,h);let y=n.runWebGLProgram(c,[m,f,g],m.dtype),x=LT({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(g),x}},a_=class{constructor(e,t,n,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];let r=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,s=2===Xe().getNumber("WEBGL_VERSION")?"while (left < right) {":r,i="left"===a?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${s}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${i} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}},r_={kernelName:Ta,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:s}=t,{side:i}=a,o=new a_(r.shape[0],r.shape[1],s.shape[1],i),l=[[r.shape[1]]];return n.runWebGLProgram(o,[r,s],"int32",l)}},s_=class{constructor(e,t,n){let a,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)r="resRC",a="resRC";else{let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let a=0;a<t.length;a++)i.push(`${n[a]}`),a<e&&s.push(`${n[a]}`);a=s.join(),r=i.join()}let s=sC(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${a});\n        if (cVal >= 1.0) {\n          setOutput(getA(${r}));\n        } else {\n          setOutput(getB(${r}));\n        }\n      }\n    `}},i_={kernelName:Ra,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t,i=new s_(a.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(i,[a,r,s],Cs(r.dtype,s.dtype))}},o_=ET({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${am.SELU_SCALEALPHA};\n  float scale = ${am.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),l_={kernelName:Ea,backendName:"webgl",kernelFunc:o_},u_=ET({opSnippet:RT+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:wN}),d_={kernelName:Pa,backendName:"webgl",kernelFunc:u_},p_=ET({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),h_={kernelName:_a,backendName:"webgl",kernelFunc:p_},c_=ET({opSnippet:RT+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${yT}\n  return result;\n`}),f_={kernelName:Ma,backendName:"webgl",kernelFunc:c_},m_=ET({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),g_={kernelName:Fa,backendName:"webgl",kernelFunc:m_},y_=ET({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),x_={kernelName:Oa,backendName:"webgl",kernelFunc:y_},A_={kernelName:La,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:i}=a;$r.assert(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));let o=s.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<r.shape.length;++e)l.push([0,0]);let u=[],d=AF({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),p=am.getReshaped(d.shape,s,o,!1),h=am.getPermuted(p.length,s.length,!1),c=am.getReshapedPermuted(d.shape,s,o,!1),f=LT({inputs:{x:d},backend:n,attrs:{shape:p}}),m=KT({inputs:{x:f},backend:n,attrs:{perm:h}}),g=LT({inputs:{x:m},backend:n,attrs:{shape:c}});return u.push(d),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},b_={kernelName:Va,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==a.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${a.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n         ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);let o=n.readSync(a.dataId),l=n.readSync(r.dataId),u=n.readSync(s.dataId),d=n.readSync(i.dataId)[0],[p,h,c,f,m]=IN(o,a.shape,a.dtype,l,r.dtype,u,d);return[n.makeTensorInfo(h,a.dtype,p),n.makeTensorInfo([h[0]],r.dtype,c),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}},w_={kernelName:Ua,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:s}=t;if(2!==a.shape.length)throw new Error(`Input indices should be a matrix but received shape ${a.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.readSync(r.dataId)),o=n.readSync(a.dataId),l=Array.from(n.readSync(s.dataId)),[u,d,p]=SN(o,a.shape,a.dtype,i,l);return[n.makeTensorInfo(d,a.dtype,u),n.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}},v_={kernelName:Ga,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${r.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);let i=n.readSync(a.dataId),o=n.readSync(r.dataId),l=n.readSync(s.dataId),[u,d]=CN(i,a.shape,a.dtype,o,l,!0);return n.makeTensorInfo(d,a.dtype,u)}},k_={kernelName:Ha,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${r.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);let i=n.readSync(a.dataId),o=n.readSync(r.dataId),l=n.readSync(s.dataId),[u,d]=CN(i,a.shape,a.dtype,o,l);return n.makeTensorInfo(d,a.dtype,u)}},I_={kernelName:ja,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:i}=t,{outputShape:o}=a,{sliceRank:l,numUpdates:u,sliceSize:d,strides:p,outputSize:h}=am.calculateShapes(s,r,o);if("string"===s.dtype){let e=n.bufferSync(r),t=n.bufferSync(s),a=$r.decodeString(n.readSync(i.dataId)[0]),c=bN(e,t,o,h,d,u,l,p,a,!1);return n.makeTensorInfo(o,c.dtype,c.values)}let c=new e_(u,l,r.shape.length,s.shape.length,p,[h,1],!1),f=n.runWebGLProgram(c,[s,r,i],s.dtype),m=LT({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),m}},S_={kernelName:Wa,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=a,o=$r.parseAxisParam(i,r.shape)[0],l=am.prepareSplitSize(r,s,o),u=r.shape.length,d=new Array(u).fill(0),p=r.shape.slice();return l.map((e=>{let t=[...p];t[o]=e;let a=jR({inputs:{x:r},backend:n,attrs:{begin:d,size:t}});return d[o]+=e,a}))}},C_="return sqrt(x);",N_=ET({opSnippet:C_,packedOpSnippet:C_,cpuKernelImpl:NN}),T_={kernelName:Da,backendName:"webgl",kernelFunc:N_},R_=ET({opSnippet:"return x * x;"}),E_={kernelName:Xa,backendName:"webgl",kernelFunc:R_},$_="return (a - b) * (a - b);",M_=$T({opSnippet:$_,packedOpSnippet:$_}),F_={kernelName:qa,backendName:"webgl",kernelFunc:M_},__={kernelName:Ka,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");let s=n.readSync(r.dataId),i=am.fromUint8ToStringArray(s),o=TN(i,"string",a);return n.makeTensorInfo(r.shape,"string",o)}},P_={kernelName:hr,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){let{x:a}=e,r=qN+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new jN(a.shape,r);return n.runWebGLProgram(s,[a],a.dtype)}},O_=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let a=n.length,r=sC(n.length),s=sC(n.length),i="";if(1===a)i="coords * strides + begin";else{let e=0;i=n.map(((t,a)=>(e++,1===n.length?`coords * strides[${a}] + begin[${a}]`:`coords[${e-1}] * strides[${a}] + begin[${a}]`))).join(",")}this.userCode=`\n      ${r} begin = ${r}(${e});\n      ${r} strides = ${r}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}},D_={kernelName:Ya,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:s}=n,{begin:i,end:o,strides:l,beginMask:u,endMask:d,ellipsisMask:p,newAxisMask:h,shrinkAxisMask:c}=r,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:x,begin:A,end:b,strides:w}=$f.sliceInfo(s.shape,i,o,l,u,d,p,h,c);if(g)t=LT({inputs:{x:s},backend:a,attrs:{shape:m}});else if(y||x){$r.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));let e=$f.computeOutShape(A,b,w),n=jR({inputs:{x:s},backend:a,attrs:{begin:A,size:e}});t=LT({inputs:{x:n},backend:a,attrs:{shape:m}}),a.disposeIntermediateTensorInfo(n)}else if(a.shouldExecuteOnCPU([s])){let e=a.readSync(s.dataId),n=Io(s.shape,s.dtype,e),r=RN(f,n,w,A);t=a.makeTensorInfo(m,s.dtype,r.values)}else{let e=new O_(A,w,f);t=a.runWebGLProgram(e,[s],s.dtype)}let v=LT({inputs:{x:t},backend:a,attrs:{shape:m}});return a.disposeIntermediateTensorInfo(t),v}},z_={kernelName:Za,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=a,{data:d,dataSplits:p}=t,h=n.readSync(d.dataId),c=n.readSync(p.dataId),[f,m]=EN(h,c,r,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}},L_={kernelName:Ja,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.readSync(s.dataId),l=n.readSync(i.dataId)[0],[u,d,p]=$N(o,l,r),h=d.length;return[n.makeTensorInfo([h,2],"int32",u),n.makeTensorInfo([h],"string",d),n.makeTensorInfo([2],"int32",new Int32Array(p))]}},W_={kernelName:Qa,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let i=n.readSync(s.dataId),o=MN(i,r);return n.makeTensorInfo(s.shape,"int32",o)}},B_=ET({opSnippet:"return tan(x);"}),V_={kernelName:tr,backendName:"webgl",kernelFunc:B_},U_=ET({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),G_={kernelName:nr,backendName:"webgl",kernelFunc:U_},H_={kernelName:Na,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{tensor:r,indices:s,updates:i}=t,{}=a,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:p}=am.calculateShapes(i,s,r.shape),h=[p/u,u];if(0===p)return n.makeTensorInfo(r.shape,s.dtype);let c=LT({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),f=LT({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),m=LT({inputs:{x:r},backend:n,attrs:{shape:h}}),g=new e_(l,o,c.shape.length,f.shape.length,d,h,!1,!0),y=n.runWebGLProgram(g,[f,c,m],m.dtype),x=LT({inputs:{x:y},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),x}},j_=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;let a=sC(this.rank),r=function(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let t=0;t<e.length;t++)a.push(`imod(${n[t]}, ${e[t]})`);return a.join()}(e);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}};function q_(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;if("string"===r.dtype||r.shape.length>5){let e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>$r.decodeString(e))):e,a=Io(r.shape,r.dtype,t),i=_N(a,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}let i=new j_(r.shape,s);return n.runWebGLProgram(i,[r],r.dtype)}var X_={kernelName:ar,backendName:"webgl",kernelFunc:q_},K_=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}},Y_=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}};function Z_(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function J_(e){let t=1;for(;t<e;)t*=2;return t}var Q_,eP,tP,nP={kernelName:rr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:i}=a,o=Xe().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=Xe().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,d=u[u.length-1];if(n.shouldExecuteOnCPU([r])||d<o||s>l){let e=n.readSync(r.dataId),[t,a]=PN(e,u,r.dtype,s,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===s)return u[u.length-1]=0,[n.makeTensorInfo(u,r.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===d)return[r,E$({attrs:{shape:u,dtype:"int32",value:0},backend:n})];let p=n.texData.get(r.dataId),h=null!==p&&p.isPacked,c=h?n.unpackTensor(r):r,f=$r.sizeFromShape(u)/d,m=LT({inputs:{x:c},attrs:{shape:[f,d]},backend:n});h&&Z_(n,c);let g=J_(s),y=J_(d),x=null,A=()=>null===x?[m,m]:[m,x],b=(e,t,a)=>{let r=A(),s=new K_(a),i=[[d],[null===x?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=x;x=n.runWebGLProgram(s,r,"int32",i),Z_(n,o)};for(let e=1;e<g;e*=2){let t=2*e;for(let n=e;n>=1;n/=2)b(t,n,[f,y])}for(let e=y;e>g;e/=2){let t=A(),a=new Y_([f,e/2]),r=[[d],[null===x?1:0],[g]],s=x;x=n.runWebGLProgram(a,t,"int32",r),Z_(n,s);let i=g/2,o=2*i;for(let e=i;e>=1;e/=2)b(o,e,x.shape)}let w=x;x=jR({inputs:{x},backend:n,attrs:{begin:0,size:[f,s]}}),Z_(n,w);let v=K$({inputs:{x:m,indices:x},backend:n,attrs:{axis:1,batchDims:1}});Z_(n,m);let k=u.slice(0,-1);k.push(s),w=x,x=LT({inputs:{x},attrs:{shape:k},backend:n}),Z_(n,w);let I=v;return v=LT({inputs:{x:v},attrs:{shape:k},backend:n}),Z_(n,I),[v,x]}},aP=class{constructor(e,t,n,a,r,s){this.variableNames=["Image","Transforms"],this.outputShape=s;let i,o="nearest"===n?1:2;switch(a){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${i} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${r});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${r});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${o} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}},rP={kernelName:sr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{image:r,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=a,[d,p,h,c]=r.shape,[f,m]=null!=u?u:[p,h],g=new aP(p,h,i,o,l,[d,f,m,c]);return n.runWebGLProgram(g,[r,s],"float32")}},sP={kernelName:or,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;VS(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=a.readSync(s.dataId),{outputValues:o,outputShape:l,indices:u}=DN(i,r,s.shape,s.dtype);return[a.makeTensorInfo(l,s.dtype,o),a.makeTensorInfo([u.length],"int32",u)]}},iP={kernelName:lr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{value:r}=t,{axis:s}=a;s<0&&(s+=r.shape.length);let i=r,o=i.shape.length,l=r.shape[s],u=new Array(o-1),d=0;for(let e=0;e<o;e++)e!==s&&(u[d++]=i.shape[e]);let p=[],h=new Array(o).fill(0),c=i.shape.slice();c[s]=1;let f=new Array(l);for(let e=0;e<f.length;e++){h[s]=e;let t=jR({inputs:{x:i},backend:n,attrs:{begin:h,size:c}}),a=LT({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=a,p.push(t)}return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}},oP=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,a=e.batchSize,r=e.inSize,s=e.numSegments,i=s*Math.ceil(r/n);this.outputShape=[a,i];let o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ",d="";r%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `);let p="";r%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${p}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}},lP={kernelName:ur,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:i}=a,o=r.shape.length,l=[],u=0,d=am.getAxesPermutation([u],o),p=r;null!=d&&(p=KT({inputs:{x:r},backend:n,attrs:{perm:d}}),l.push(p),u=am.getInnerMostAxes(1,o)[0]);let h=am.segment_util.computeOutShape(p.shape,u,i),c=$r.sizeFromShape([p.shape[u]]),f=LT({inputs:{x:p},backend:n,attrs:{shape:[-1,c]}});l.push(f);let m=Ns(r.dtype),g=(e,t,a,r,s)=>{let i=e.shape[0],o=e.shape[1],u=am.segment_util.segOpComputeOptimalWindowSize(o,s),d=new oP({windowSize:u,inSize:o,batchSize:i,numSegments:s},t),p=n.compileAndRun(d,[e,a],r);if(l.push(p),p.shape[1]===s)return p;let h=NF({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),c=q_({inputs:{x:h},backend:n,attrs:{reps:[o/u]}});return l.push(h),l.push(c),g(p,t,c,r,s)},y=LT({inputs:{x:g(f,"unsortedSegmentSum",s,m,i)},backend:n,attrs:{shape:h}}),x=y;if(null!=d){l.push(y);let e=am.getUndoAxesPermutation(d);x=KT({inputs:{x},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},uP=[QT,tR,aR,sR,lR,pR,hR,cR,AR,bR,vR,IR,CR,TR,ER,FR,_R,DR,zR,LR,VR,XR,KR,YR,ZR,nE,sE,lE,vT,pE,AE,TE,FE,PE,OE,DE,zE,WE,VE,GE,KE,YE,ZE,QE,n$,s$,i$,l$,d$,p$,c$,f$,g$,x$,b$,v$,S$,T$,M$,_$,D$,L$,V$,G$,H$,q$,Y$,J$,eM,bT,tM,gE,aM,sM,oM,ST,uM,pM,hM,fM,gM,xM,bM,vM,SM,NM,RM,$M,MM,FM,OM,DM,zM,LM,WM,VM,HM,qM,nF,zT,rF,iF,lF,dF,QR,hF,mF,gF,bF,vF,TT,kF,IF,SF,CF,TF,tE,YM,EF,MF,_F,WT,DF,LF,VF,GF,qF,KF,ZF,QF,n_,r_,i_,l_,d_,h_,f_,g_,qR,tF,x_,A_,b_,w_,v_,k_,I_,S_,T_,E_,F_,__,P_,D_,z_,L_,W_,QM,XT,V_,G_,H_,X_,nP,rP,YT,sP,iP,lP,fF];for(let e of uP)Sr(e);!function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"}(Q_||(Q_={})),function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"}(eP||(eP={}));var dP={kernelName:mr,backendName:"wasm",setupFunc:function(e){tP=e.wasm.cwrap(mr,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:i,preluActivationWeights:o}=t;if("float32"!==r.dtype||"float32"!==s.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:p}=a,h=n.dataIdMap.get(r.dataId).id,c=n.dataIdMap.get(s.dataId).id,f=0;if(null!=i){let e=n.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);f=e.id}let m=null==o?0:n.dataIdMap.get(o.dataId).id,g=eP[d];if(null==g)throw new Error(`${d} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?r.shape[2]:r.shape[1],x=u?s.shape[1]:s.shape[2],A=Xl.assertAndGetBroadcastShape(r.shape.slice(0,-2),s.shape.slice(0,-2)),b=n.makeOutput([...A,y,x],r.dtype),w=n.dataIdMap.get(b.dataId).id,v=new Uint8Array(new Int32Array(r.shape).buffer),k=new Uint8Array(new Int32Array(s.shape).buffer);return tP(h,v,r.shape.length,c,k,s.shape.length,l,u,g,f,m,p||0,w),b}};function pP(e,t){let n;return{kernelName:e,backendName:"wasm",setupFunc:function(t){n=t.wasm.cwrap(e,null,["number","number","number"])},kernelFunc:function(e){let{backend:a,inputs:{x:r}}=e,s=a.dataIdMap.get(r.dataId).id,i=a.makeOutput(r.shape,t||r.dtype),o=a.dataIdMap.get(i.dataId).id;return 0===$r.sizeFromShape(i.shape)||n(s,Q_[r.dtype],o),i}}}var hP=pP(Qe),cP=pP(et),fP=pP(tt);function mP(e,t,n){let a;return{kernelName:e,backendName:"wasm",setupFunc:function(t){a=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:r}=e,{a:s,b:i}=r,o=t.dataIdMap.get(s.dataId).id,l=t.dataIdMap.get(i.dataId).id,u=null!=n?n:s.dtype,d=am.assertAndGetBroadcastShape(s.shape,i.shape),p=t.makeOutput(d,u);if(0===$r.sizeFromShape(d))return p;let h=new Uint8Array(new Int32Array(s.shape).buffer),c=new Uint8Array(new Int32Array(i.shape).buffer),f=t.dataIdMap.get(p.dataId).id;return a(o,h,s.shape.length,l,c,i.shape.length,Q_[s.dtype],f),p}}}var gP,yP=mP(nt),xP={kernelName:at,backendName:"wasm",setupFunc:function(e){gP=e.wasm.cwrap(at,null,["array","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,a=n.makeOutput(t[0].shape,t[0].dtype);if(0===$r.sizeFromShape(a.shape))return a;let r=t.map((e=>n.dataIdMap.get(e.dataId).id)),s=new Uint8Array(new Int32Array(r).buffer),i=n.dataIdMap.get(a.dataId).id;return gP(s,r.length,Q_[a.dtype],i),a}};function AP(e){let{inputs:{x:t},backend:n}=e;if("string"===t.dtype)return ni(n.readSync(t.dataId),t.shape,t.dtype);let a=n.makeOutput(t.shape,t.dtype),r=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(a).set(r),a}var bP,wP={kernelName:gn,backendName:"wasm",kernelFunc:AP};function vP(e){let{inputs:t,backend:n,attrs:a}=e,[r,s]=function(e,t){let n=[],a=[];for(let r=0;r<e.length;++r)1!==e[r]&&n.push(e[r]),1!==e[t[r]]&&a.push(t[r]);for(let e=0;e<a.length;++e){let t=-1;for(let n=0;n<a.length;++n)a[n]>=e&&(-1===t||a[t]>a[n])&&(t=n);a[t]=e}return[n,a]}(t.x.shape,a.perm),i=!0;for(let e=0;e<s.length;e++)s[e]!==e&&(i=!1);let o=function(e,t){let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];return n}(t.x.shape,a.perm),l={dataId:t.x.dataId,shape:r,dtype:t.x.dtype};if(i){let e=AP({inputs:t,backend:n});return e.shape=o,e}let u=n.makeOutput(o,l.dtype),d=n.dataIdMap.get(l.dataId).id,p=n.dataIdMap.get(u.dataId).id,h=new Uint8Array(new Int32Array(s).buffer),c=new Uint8Array(new Int32Array(l.shape).buffer);return bP(d,c,l.shape.length,Q_[l.dtype],p,h,s.length),u}var kP,IP={kernelName:ir,backendName:"wasm",kernelFunc:vP,setupFunc:function(e){bP=e.wasm.cwrap(ir,null,["number","array","number","number","number","array","number"])}};function SP(e,t,n){let a=e.shape,r=e.shape.length,s=$r.parseAxisParam(t,a),i=s,o=am.getAxesPermutation(i,r),l=null,u=!1;if(null!=o){let t=new Array(r);for(let e=0;e<t.length;e++)t[e]=a[o[e]];i=am.getInnerMostAxes(i.length,r),l=vP({inputs:{x:e},attrs:{perm:o},backend:n});let s=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==s&&(u=!0)}return{transposed:l,originalAxes:s,axes:i,inputWasTransposed:u}}var CP,NP={kernelName:rt,backendName:"wasm",setupFunc:function(e){kP=e.wasm.cwrap(rt,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=SP(i,r,t);h&&(l=u,o=t.dataIdMap.get(u.dataId).id);let c=l.shape.length;am.assertAxesAreInnerMostDims("all",d,c);let[f,m]=am.computeOutAndReduceShapes(l.shape,d),g=$r.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==$r.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;kP(o,g,e)}if(h&&t.disposeData(u.dataId),s){let e=am.expandShapeToKeepDim(y.shape,p);y.shape=e}return y}},TP={kernelName:st,backendName:"wasm",setupFunc:function(e){CP=e.wasm.cwrap(st,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=SP(i,r,t);h&&(l=u,o=t.dataIdMap.get(u.dataId).id);let c=l.shape.length;am.assertAxesAreInnerMostDims("any",d,c);let[f,m]=am.computeOutAndReduceShapes(l.shape,d),g=$r.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==$r.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;CP(o,g,e)}if(h&&t.disposeData(u.dataId),s){let e=am.expandShapeToKeepDim(y.shape,p);y.shape=e}return y}};function RP(e){let t;return{kernelName:e,backendName:"wasm",setupFunc:function(n){t=n.wasm.cwrap(e,null,["number","number","number","number","number"])},kernelFunc:function(e){let{backend:n,inputs:a,attrs:r}=e,{axis:s}=r,{x:i}=a,o=n.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:p,inputWasTransposed:h}=SP(i,s,n);if(h){let e=n.dataIdMap.get(d.dataId).id;e!==o&&(u=d,l=e)}let c=u.shape.slice(0,-1),f=n.makeOutput(c,"int32"),m=n.dataIdMap.get(f.dataId).id,g=$r.sizeFromShape(f.shape),y=u.shape[p[0]];return t(l,Q_[u.dtype],g,y,m),h&&n.disposeData(d.dataId),f}}}var EP,$P,MP,FP,_P=RP(it),PP=RP(ot),OP=pP(lt),DP=pP(ut),zP=pP(dt),LP=mP(ht),WP=pP(pt),BP={kernelName:ct,backendName:"wasm",setupFunc:function(e){EP=e.wasm.cwrap(ct,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,r=t.x,s=a.dataIdMap.get(r.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,d=am.computePool2DInfo(r.shape,i,o,1,l,u),p=d.filterHeight,h=d.filterWidth,c=d.padInfo.top,f=d.padInfo.right,m=d.padInfo.bottom,g=d.padInfo.left,y=d.strideHeight,x=d.strideWidth,A=d.inChannels;if("channelsLast"!==d.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);if(1!==d.dilationWidth||1!==d.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${d.dilationHeight}, ${d.dilationWidth}].`);let b=a.makeOutput(d.outShape,"float32"),w=a.dataIdMap.get(b.dataId).id;return EP(s,r.shape[0],r.shape[1],r.shape[2],p,h,c,f,m,g,y,x,A,w),b}},VP={kernelName:mt,backendName:"wasm",setupFunc:function(e){$P=e.wasm.cwrap("AvgPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=a,d=am.computePool3DInfo(r.shape,s,i,1,o,l,u),p=n.makeOutput(d.outShape,r.dtype);return $P(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(p.dataId).id,d.batchSize,d.inChannels,d.inDepth,d.inHeight,d.inWidth,d.outDepth,d.outHeight,d.outWidth,d.strideDepth,d.strideHeight,d.strideWidth,d.dilationDepth,d.dilationHeight,d.dilationWidth,d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.front,d.padInfo.top,d.padInfo.left),p}},UP={kernelName:gt,backendName:"wasm",setupFunc:function(e){MP=e.wasm.cwrap("AvgPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=a,d=am.computePool3DInfo(s.shape,i,o,1,l,u),p=n.makeOutput(s.shape,s.dtype);return MP(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(p.dataId).id,d.batchSize,d.inChannels,d.inDepth,d.inHeight,d.inWidth,d.outDepth,d.outHeight,d.outWidth,d.strideDepth,d.strideHeight,d.strideWidth,d.dilationDepth,d.dilationHeight,d.dilationWidth,d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.front,d.padInfo.top,d.padInfo.left,d.filterDepth,d.filterHeight,d.filterWidth),p}},GP={kernelName:ft,backendName:"wasm",setupFunc:function(e){FP=e.wasm.cwrap("AvgPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:i,strides:o,pad:l}=a,u=am.computePool2DInfo(s.shape,i,o,1,l),d=n.makeOutput(s.shape,s.dtype);return FP(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(d.dataId).id,u.batchSize,u.inChannels,u.inHeight,u.inWidth,u.outHeight,u.outWidth,u.strideHeight,u.strideWidth,u.dilationHeight,u.dilationWidth,u.effectiveFilterHeight,u.effectiveFilterWidth,u.padInfo.top,u.padInfo.left,u.filterHeight,u.filterWidth),d}};function HP(e){let{inputs:t,attrs:n}=e,{x:a}=t,{shape:r}=n,s=$r.sizeFromShape(a.shape),i=$r.inferFromImplicitShape(r,s);return $r.assert(s===$r.sizeFromShape(i),(()=>`new shape: ${i}, old shape: ${a.shape}. New shape and old shape must have the same number of elements.`)),e.backend.incRef(a.dataId),{dataId:a.dataId,shape:i,dtype:a.dtype}}var jP,qP={kernelName:ya,backendName:"wasm",kernelFunc:HP},XP={kernelName:yt,backendName:"wasm",setupFunc:function(e){jP=e.wasm.cwrap(yt,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:i,transposeB:o}=a;if("float32"!==r.dtype||"float32"!==s.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=r.shape.length,u=s.shape.length,d=i?r.shape[l-2]:r.shape[l-1],p=o?s.shape[u-1]:s.shape[u-2],h=i?r.shape[l-1]:r.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=r.shape.slice(0,-2),m=s.shape.slice(0,-2),g=$r.sizeFromShape(f),y=$r.sizeFromShape(m),x=Xl.assertAndGetBroadcastShape(r.shape.slice(0,-2),s.shape.slice(0,-2)).concat([h,c]);$r.assert(d===p,(()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${r.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));let A=o?[y,c,p]:[y,p,c],b=HP({inputs:{x:r},backend:n,attrs:{shape:i?[g,d,h]:[g,h,d]}}),w=HP({inputs:{x:s},backend:n,attrs:{shape:A}}),v=n.dataIdMap.get(b.dataId).id,k=n.dataIdMap.get(w.dataId).id,I=i?b.shape[2]:b.shape[1],S=o?w.shape[1]:w.shape[2],C=Math.max(g,y),N=n.makeOutput([C,I,S],b.dtype),T=n.dataIdMap.get(N.dataId).id,R=new Uint8Array(new Int32Array(b.shape).buffer),E=new Uint8Array(new Int32Array(w.shape).buffer);return jP(v,R,b.shape.length,k,E,w.shape.length,i,o,T),n.disposeData(b.dataId),n.disposeData(w.dataId),N.shape=x,N}};function KP(e){let{inputs:{x:t},attrs:{begin:n,size:a},backend:r}=e,[s,i]=$f.parseSliceParams(t,n,a),o=$f.isSliceContinous(t.shape,s,i),l=r.readSync(t.dataId),u=r.makeOutput(i,t.dtype),d=$r.computeStrides(t.shape),p=r.dataIdMap.get(u.dataId);if(o){let e=$f.computeFlatOffset(s,d);return"string"===t.dtype?p.stringBytes=l.slice(e,e+$r.sizeFromShape(i)):r.typedArrayFromHeap(u).set(l.subarray(e,e+$r.sizeFromShape(i))),u}if("string"===t.dtype){let e=YA(l,s,i,t.shape,t.dtype);return p.stringBytes=e,u}let h=r.typedArrayFromHeap(u),c=t.shape.length;if(2===c)!function(e,t,n,a,r){let s=0,i=a[0],o=a[1],l=i+r[0];for(let a=i;a<l;a++){let i=a*t+o;n.set(e.subarray(i,i+r[1]),s),s+=r[1]}}(l,d[0],h,s,i);else if(3===c)!function(e,t,n,a,r,s){let i=0,o=r[0],l=r[1],u=r[2],d=o+s[0],p=l+s[1];for(let r=o;r<d;r++)for(let o=l;o<p;o++){let l=r*t+o*n+u;a.set(e.subarray(l,l+s[2]),i),i+=s[2]}}(l,d[0],d[1],h,s,i);else if(4===c)!function(e,t,n,a,r,s,i){let o=0,l=s[0],u=s[1],d=s[2],p=l+i[0],h=u+i[1],c=d+i[2],f=s[3];for(let s=l;s<p;s++)for(let l=u;l<h;l++)for(let u=d;u<c;u++){let d=s*t+l*n+u*a+f;r.set(e.subarray(d,d+i[3]),o),o+=i[3]}}(l,d[0],d[1],d[2],h,s,i);else{let e=YA(l,s,i,t.shape,t.dtype);h.set(e)}return u}var YP,ZP={kernelName:$a,backendName:"wasm",kernelFunc:KP},JP={kernelName:xt,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:i}=a,o=s.reduce(((e,t)=>e*t)),l=am.getReshaped(r.shape,s,o),u=am.getPermuted(l.length,s.length),d=am.getReshapedPermuted(r.shape,s,o),p=am.getSliceBeginCoords(i,s.length),h=am.getSliceSize(d,i,s.length),c=HP({inputs:{x:r},backend:n,attrs:{shape:l}}),f=vP({inputs:{x:c},backend:n,attrs:{perm:u}}),m=HP({inputs:{x:f},backend:n,attrs:{shape:d}}),g=KP({inputs:{x:m},backend:n,attrs:{begin:p,size:h}});return n.disposeData(c.dataId),n.disposeData(f.dataId),n.disposeData(m.dataId),g}},QP={kernelName:At,backendName:"wasm",setupFunc:function(e){YP=e.wasm.cwrap(At,null,["number","number","boolean","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{x:r,weights:s}=n,{size:i}=a,o=0!==s.shape.reduce(((e,t)=>e*t),1),l=1===r.shape.length?[i]:[r.shape[0],i],u=t.makeOutput(l,s.dtype);function d(e){return t.dataIdMap.get(e.dataId).id}return YP(d(r),i,o,d(s),Q_[s.dtype],d(u)),u}},eO=mP(bt),tO={kernelName:vt,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:a,s1:r}=t,s=n.typedArrayFromHeap(a),i=n.typedArrayFromHeap(r),o=am.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeOutput([o.length],"int32",void 0,new Int32Array(o))}};function nO(e){let{inputs:{x:t},attrs:{dtype:n},backend:a}=e,r=a.makeOutput(t.shape,n),s=a.typedArrayFromHeap(t);return a.typedArrayFromHeap(r).set(s),r}var aO,rO={kernelName:kt,backendName:"wasm",kernelFunc:nO},sO=pP(It),iO={kernelName:St,backendName:"wasm",setupFunc:function(e){aO=e.wasm.cwrap(St,null,["number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{clipValueMin:s,clipValueMax:i}=a,o=n.dataIdMap.get(r.dataId).id,l=n.makeOutput(r.shape,r.dtype),u=n.dataIdMap.get(l.dataId).id;return aO(o,s,i,u),l}};function oO(e){let{inputs:t,backend:n}=e,a=$r.parseAxisParam(e.attrs.axis,t[0].shape)[0],r=t.map((e=>e.shape));am.assertParamsConsistent(r,a);let s=am.computeOutShape(t.map((e=>e.shape)),a),i=t.filter((e=>$r.sizeFromShape(e.shape)>0));if(1===i.length)return AP({inputs:{x:i[0]},backend:n});let o=n.makeOutput(s,t[0].dtype);if(0===$r.sizeFromShape(s))return o;if("string"===i[0].dtype){let e=i.map((e=>{let t=[-1,$r.sizeFromShape(e.shape.slice(a))];return HP({inputs:{x:e},backend:n,attrs:{shape:t}})})),r=e.map((e=>({vals:n.readSync(e.dataId),shape:e.shape})));s=am.computeOutShape(e.map((e=>e.shape)),1);let l=1===e[0].shape[0],u=Mx(r,s,t[0].dtype,l),d=am.computeOutShape(i.map((e=>e.shape)),a);return o.shape=d,n.dataIdMap.get(o.dataId).stringBytes=am.fromStringArrayToUint8(u),e.forEach((e=>n.disposeData(e.dataId))),o}let l=$r.sizeFromShape(i[0].shape.slice(0,a)),u=0,d=i.map((e=>{let t=$r.sizeFromShape(e.shape.slice(a));return u+=t,t})),p=i.map((e=>n.typedArrayFromHeap(e))),h=n.typedArrayFromHeap(o);for(let e=0;e<l;e++){let t=e*u;for(let n=0;n<p.length;n++){let a=d[n],r=e*a,s=p[n].subarray(r,r+a);h.set(s,t),t+=a}}return o}var lO,uO,dO,pO,hO,cO,fO,mO={kernelName:Tt,backendName:"wasm",kernelFunc:oO},gO={kernelName:Rt,backendName:"wasm",setupFunc:function(e){lO=e.wasm.cwrap(Rt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,{x:r,filter:s}=t,i=a.dataIdMap.get(r.dataId).id,o=a.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:d,dimRoundingMode:p,dataFormat:h}=n,c=am.convertConv2DDataFormat(h),f=am.computeConv2DInfo(r.shape,s.shape,l,u,d,p,!1,c),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,x=f.padInfo.right,A=f.padInfo.bottom,b=f.padInfo.left,w=f.dilationHeight,v=f.dilationWidth,k=f.strideHeight,I=f.strideWidth,S=f.inChannels,C=f.outChannels,N="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let T=a.makeOutput(f.outShape,"float32"),R=a.dataIdMap.get(T.dataId).id;return lO(i,r.shape[0],r.shape[1],r.shape[2],o,m,g,y,x,A,b,N,w,v,k,I,S,C,R),T}},yO={kernelName:$t,backendName:"wasm",setupFunc:function(e){uO=e.wasm.cwrap($t,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{dy:r,filter:s}=n,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,inputShape:d}=a,p=am.convertConv2DDataFormat(l),h=am.computeConv2DInfo(d,s.shape,i,1,o,u,!1,p),{batchSize:c,filterHeight:f,filterWidth:m,inChannels:g,inHeight:y,inWidth:x,outChannels:A,outHeight:b,outWidth:w,strideHeight:v,strideWidth:k}=h,I=f-1-h.padInfo.top,S=m-1-h.padInfo.left,C="channelsLast"===h.dataFormat,N=$r.computeStrides(h.inShape),T=$r.computeStrides(r.shape),[R,E,$]=$r.computeStrides(s.shape),M=N[0],F=C?N[1]:N[2],_=C?N[2]:1,P=C?1:N[1],O=T[0],D=C?T[1]:T[2],z=C?T[2]:1,L=C?1:T[1],W=t.makeOutput(h.inShape,"float32"),B=t.dataIdMap.get(W.dataId).id,V=t.dataIdMap.get(r.dataId).id,U=t.dataIdMap.get(s.dataId).id;return uO(V,U,c,f,m,y,x,g,b,w,A,v,k,I,S,R,E,$,M,F,_,P,O,D,z,L,B),W}},xO={kernelName:Mt,backendName:"wasm",setupFunc:function(e){dO=e.wasm.cwrap(Mt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l}=a;if("float32"!==r.dtype)throw new Error(`Tensor x must have dtype float32, got ${r.dtype}`);if("float32"!==s.dtype)throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let u=am.computeConv3DInfo(r.shape,s.shape,i,l,o),d=n.makeOutput(u.outShape,r.dtype);return dO(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(d.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),d}},AO={kernelName:Ft,backendName:"wasm",setupFunc:function(e){pO=e.wasm.cwrap(Ft,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,filterShape:l}=a;if("float32"!==r.dtype)throw new Error(`Tensor dy must have dtype float32, got ${r.dtype}`);if("float32"!==s.dtype)throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let u=am.computeConv3DInfo(r.shape,l,i,1,o),d=n.makeOutput(u.filterShape,s.dtype);return pO(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(d.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),d}},bO={kernelName:_t,backendName:"wasm",setupFunc:function(e){hO=e.wasm.cwrap(_t,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:i,strides:o,inputShape:l}=a;if("float32"!==r.dtype)throw new Error(`Tensor dy must have dtype float32, got ${r.dtype}`);if("float32"!==s.dtype)throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let u=am.computeConv3DInfo(l,s.shape,o,1,i),d=n.makeOutput(u.inShape,r.dtype);return hO(n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(d.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),d}},wO=pP(Pt),vO=pP(Ot);!function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"}(cO||(cO={}));var kO,IO,SO,CO,NO,TO,RO,EO,$O,MO,FO={kernelName:Lt,backendName:"wasm",setupFunc:function(e){fO=e.wasm.cwrap(Lt,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:a,attrs:r}=e,{method:s,extrapolationValue:i,cropSize:o}=r,{image:l,boxes:u,boxInd:d}=a,p=u.shape[0],[h,c]=o,f=[p,h,c,l.shape[3]],m=n.dataIdMap.get(l.dataId);"float32"!==l.dtype&&(t=nO({backend:n,inputs:{x:l},attrs:{dtype:"float32"}}),m=n.dataIdMap.get(t.dataId));let g=m.id,y=n.dataIdMap.get(u.dataId).id,x=n.dataIdMap.get(d.dataId).id,A=n.makeOutput(f,"float32"),b=n.dataIdMap.get(A.dataId).id,w=new Uint8Array(new Int32Array(l.shape).buffer);return fO(g,y,x,p,w,h,c,cO[s],i,b),null!=t&&n.disposeData(t.dataId),A}},_O={kernelName:Dt,backendName:"wasm",setupFunc:function(e){kO=e.wasm.cwrap(Dt,null,["number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a,l=r.shape.length;$r.assert("float32"===r.dtype||"int32"===r.dtype,(()=>`cumprod does not support ${r.dtype} tensors in the WASM backend`));let u=am.getAxesPermutation([s],l),d=r;null!==u&&(d=vP({inputs:{x:r},attrs:{perm:u},backend:n}));let p=am.getInnerMostAxes(1,l)[0];am.assertAxesAreInnerMostDims("cumprod",[p],l);let h=n.makeOutput(d.shape,d.dtype),c=d.shape[p],f=n.dataIdMap.get(d.dataId).id,m=n.dataIdMap.get(h.dataId).id;kO(f,i?1:0,o?1:0,c,m,Q_[r.dtype]);let g=h;return null!==u&&(g=vP({inputs:{x:h},attrs:{perm:am.getUndoAxesPermutation(u)},backend:n}),n.disposeData(d.dataId),n.disposeData(h.dataId)),g}},PO={kernelName:zt,backendName:"wasm",setupFunc:function(e){IO=e.wasm.cwrap(zt,null,["number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a,l=r.shape.length;$r.assert("float32"===r.dtype||"int32"===r.dtype,(()=>`cumsum does not support ${r.dtype} tensors in the WASM backend`));let u=am.getAxesPermutation([s],l),d=r;null!==u&&(d=vP({inputs:{x:r},attrs:{perm:u},backend:n}));let p=am.getInnerMostAxes(1,l)[0];am.assertAxesAreInnerMostDims("cumsum",[p],l);let h=n.makeOutput(d.shape,d.dtype),c=d.shape[p],f=n.dataIdMap.get(d.dataId).id,m=n.dataIdMap.get(h.dataId).id;IO(f,i?1:0,o?1:0,c,m,Q_[r.dtype]);let g=h;return null!==u&&(g=vP({inputs:{x:h},attrs:{perm:am.getUndoAxesPermutation(u)},backend:n}),n.disposeData(d.dataId),n.disposeData(h.dataId)),g}},OO={kernelName:Wt,backendName:"wasm",setupFunc:function(e){SO=e.wasm.cwrap("DenseBincount",null,["number","array","number","number","boolean","number","number","boolean","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{x:r,weights:s}=n,{size:i,binaryOutput:o}=a,l=0!==s.shape.reduce(((e,t)=>e*t),1),u=1===r.shape.length?[i]:[r.shape[0],i],d=t.makeOutput(u,s.dtype);function p(e){return t.dataIdMap.get(e.dataId).id}return SO(p(r),new Uint8Array(new Int32Array(r.shape).buffer),r.shape.length,i,l,p(s),Q_[s.dtype],o,p(d)),d}},DO={kernelName:Bt,backendName:"wasm",setupFunc:function(e){CO=e.wasm.cwrap(Bt,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{x:r}=n,{blockSize:s,dataFormat:i}=a,o=r.shape[0],l=("NHWC"===i?r.shape[1]:r.shape[2])*s,u=("NHWC"===i?r.shape[2]:r.shape[3])*s,d=("NHWC"===i?r.shape[3]:r.shape[1])/(s*s),p="NHWC"===i?[o,l,u,d]:[o,d,l,u],h=t.makeOutput(p,"float32"),c=t.dataIdMap.get(r.dataId).id,f=new Uint8Array(new Int32Array($r.computeStrides(r.shape)).buffer),m=new Uint8Array(new Int32Array(p).buffer),g=new Uint8Array(new Int32Array($r.computeStrides(p)).buffer),y=t.dataIdMap.get(h.dataId).id;return CO(c,s,"NHWC"===i?1:0,f,r.shape.length-1,m,g,p.length,y),h}},zO={kernelName:Vt,backendName:"wasm",setupFunc:function(e){NO=e.wasm.cwrap(Vt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,{x:r,filter:s}=t,i=a.dataIdMap.get(r.dataId).id,o=a.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:d,dimRoundingMode:p}=n,h=null==u?[1,1]:u,c=am.computeConv2DInfo(r.shape,s.shape,l,h,d,p,!0),f=c.filterHeight,m=c.filterWidth,g=c.padInfo.top,y=c.padInfo.right,x=c.padInfo.bottom,A=c.padInfo.left,b=c.dilationHeight,w=c.dilationWidth,v=c.strideHeight,k=c.strideWidth,I=c.inChannels,S=c.outChannels,C="SAME"===c.padInfo.type?1:0;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let N=a.makeOutput(c.outShape,"float32"),T=a.dataIdMap.get(N.dataId).id;return NO(i,r.shape[0],r.shape[1],r.shape[2],o,f,m,g,y,x,A,C,b,w,v,k,I,S,T),N}},LO={kernelName:Ht,backendName:"wasm",setupFunc:function(e){TO=e.wasm.cwrap("Diag",null,["number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a}=t,r=$r.sizeFromShape(a.shape),s=n.makeOutput([...a.shape,...a.shape],a.dtype);return TO(n.dataIdMap.get(a.dataId).id,Q_[a.dtype],r,n.dataIdMap.get(s.dataId).id),s}},WO={kernelName:jt,backendName:"wasm",setupFunc:function(e){RO=e.wasm.cwrap(jt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l}=a;if(r.dtype!==s.dtype)throw new Error(`Dilation2D error: x must have the same dtype as filter. Got ${r.dtype} and ${s.dtype}`);let u=am.computeDilation2DInfo(r.shape,s.shape,i,o,"NHWC",l),d=n.makeOutput(u.outShape,r.dtype);return RO(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(d.dataId).id,Q_[r.dtype],u.batchSize,u.inChannels,u.inHeight,u.inWidth,u.outHeight,u.outWidth,u.strideHeight,u.strideWidth,u.dilationHeight,u.dilationWidth,u.filterHeight,u.filterWidth,u.padInfo.top,u.padInfo.left),d}},BO={kernelName:Xt,backendName:"wasm",setupFunc:function(e){EO=e.wasm.cwrap(Xt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,dy:i}=t,{strides:o,pad:l,dilations:u}=a;if(r.dtype!==s.dtype||r.dtype!==i.dtype)throw new Error(`Dilation2DBackpropFilter error: x must have the same dtype as filter and dy. Got ${r.dtype}, ${s.dtype}, and ${i.dtype}`);let d=am.computeDilation2DInfo(r.shape,s.shape,o,l,"NHWC",u),p=n.makeOutput(s.shape,s.dtype);return EO(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(p.dataId).id,Q_[r.dtype],d.batchSize,d.inChannels,d.inHeight,d.inWidth,d.outHeight,d.outWidth,d.strideHeight,d.strideWidth,d.dilationHeight,d.dilationWidth,d.filterHeight,d.filterWidth,d.padInfo.top,d.padInfo.left),p}},VO={kernelName:qt,backendName:"wasm",setupFunc:function(e){$O=e.wasm.cwrap(qt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,dy:i}=t,{strides:o,pad:l,dilations:u}=a;if(r.dtype!==s.dtype||r.dtype!==i.dtype)throw new Error(`Dilation2DBackpropInput error: x must have the same dtype as filter and dy. Got ${r.dtype}, ${s.dtype}, and ${i.dtype}`);let d=am.computeDilation2DInfo(r.shape,s.shape,o,l,"NHWC",u),p=n.makeOutput(r.shape,r.dtype);return $O(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(p.dataId).id,Q_[r.dtype],d.batchSize,d.inChannels,d.inHeight,d.inWidth,d.outHeight,d.outWidth,d.strideHeight,d.strideWidth,d.dilationHeight,d.dilationWidth,d.filterHeight,d.filterWidth,d.padInfo.top,d.padInfo.left),p}},UO=pP(Jt),GO={kernelName:Qt,backendName:"wasm",setupFunc:function(e){MO=e.wasm.cwrap(Qt,null,["number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,{dy:a,y:r}=t,s=n.makeOutput(r.shape,"float32"),i=e=>n.dataIdMap.get(e.dataId).id;return MO(i(r),i(a),i(s)),s}},HO=mP(tn,0,"bool"),jO=pP(en),qO=pP(nn,"float32");function XO(e){let{inputs:t,attrs:n,backend:a}=e,{input:r}=t,{dim:s}=n,i=r.shape.length,o=r.shape.slice(),l=s;return s<0&&($r.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),HP({inputs:{x:r},backend:a,attrs:{shape:o}})}var KO={kernelName:an,backendName:"wasm",kernelFunc:XO},YO=pP(rn,"float32");function ZO(e){let{attrs:{shape:t,value:n},backend:a}=e,{attrs:{dtype:r}}=e;r=r||$r.inferDtype(n);let s=a.makeOutput(t,r);return a.typedArrayFromHeap(s).fill(n),s}var JO,QO,eD,tD,nD,aD,rD,sD,iD,oD,lD,uD,dD,pD,hD,cD,fD,mD,gD,yD,xD={kernelName:on,backendName:"wasm",kernelFunc:ZO},AD={kernelName:ln,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n}=e,{image:a}=t,r=n.makeOutput(a.shape,a.dtype),s=n.dataIdMap.get(a.dataId).id,i=n.dataIdMap.get(r.dataId).id,[o,l,u,d]=a.shape;return JO(s,o,l,u,d,i),r},setupFunc:function(e){JO=e.wasm.cwrap(ln,null,["number","number","number","number","number","number"])}},bD=pP(un),wD=mP(dn),vD={kernelName:pn,backendName:"wasm",setupFunc:function(e){QO=e.wasm.cwrap(pn,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{varianceEpsilon:r}=a,{x:s,mean:i,variance:o,offset:l,scale:u}=n,d=t.dataIdMap.get(s.dataId).id,p=t.dataIdMap.get(i.dataId).id,h=t.dataIdMap.get(o.dataId).id,c=null!=l?t.dataIdMap.get(l.dataId).id:0,f=null!=u?t.dataIdMap.get(u.dataId).id:0,m=t.makeOutput(s.shape,s.dtype);if(0===$r.sizeFromShape(s.shape))return m;let g=t.dataIdMap.get(m.dataId).id;return QO(d,p,h,c,f,r,g),m}},kD={kernelName:gr,backendName:"wasm",setupFunc:function(e){eD=e.wasm.cwrap(gr,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dataFormat:p,dimRoundingMode:h,activation:c,leakyreluAlpha:f}=n,m=am.computeConv2DInfo(r.shape,s.shape,l,d,u,h),g=eP[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let y=a.dataIdMap.get(r.dataId).id,x=a.dataIdMap.get(s.dataId).id,A=m.outChannels,b=0;if(null!=i){let e=a.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==A)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${A})`);b=e.id}let w=m.filterHeight,v=m.filterWidth,k=m.padInfo.top,I=m.padInfo.right,S=m.padInfo.bottom,C=m.padInfo.left,N=m.dilationHeight,T=m.dilationWidth,R=m.strideHeight,E=m.strideWidth,$=m.inChannels,M="SAME"===m.padInfo.type?1:0,F=m.batchSize,_=m.inHeight,P=m.inWidth;if("NHWC"!==p)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let O=a.makeOutput(m.outShape,"float32"),D=a.dataIdMap.get(O.dataId).id,z=null==o?0:a.dataIdMap.get(o.dataId).id;return eD(y,F,_,P,x,w,v,b,k,I,S,C,M,N,T,R,E,$,A,g,z,f||0,D),O}},ID={kernelName:yr,backendName:"wasm",setupFunc:function(e){tD=e.wasm.cwrap(yr,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dataFormat:p,dimRoundingMode:h,activation:c,leakyreluAlpha:f}=n,m=am.computeConv2DInfo(r.shape,s.shape,l,d,u,h,!0),g=eP[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=a.dataIdMap.get(r.dataId).id,x=a.dataIdMap.get(s.dataId).id,A=m.outChannels,b=0;if(null!=i){let e=a.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==A)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${A})`);b=e.id}let w=m.filterHeight,v=m.filterWidth,k=m.padInfo.top,I=m.padInfo.right,S=m.padInfo.bottom,C=m.padInfo.left,N=m.dilationHeight,T=m.dilationWidth,R=m.strideHeight,E=m.strideWidth,$=m.inChannels,M="SAME"===m.padInfo.type?1:0,F=m.batchSize,_=m.inHeight,P=m.inWidth;if("NHWC"!==p)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let O=a.makeOutput(m.outShape,"float32"),D=a.dataIdMap.get(O.dataId).id,z=null==o?0:a.dataIdMap.get(o.dataId).id;return tD(y,F,_,P,x,w,v,b,k,I,S,C,M,N,T,R,E,$,A,g,z,f||0,D),O}},SD={kernelName:cn,backendName:"wasm",setupFunc:function(e){nD=e.wasm.cwrap(cn,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){let{backend:t,inputs:n}=e,{params:a,indices:r}=n,[s,i,o,l]=Rf.prepareAndValidate(a,r),u=t.makeOutput(s,a.dtype);if(0===i)return u;let d=r.shape,p=d[d.length-1],h=t.dataIdMap.get(a.dataId).id,c=t.dataIdMap.get(r.dataId).id,f=new Uint8Array(new Int32Array(l).buffer),m=t.dataIdMap.get(u.dataId).id;return nD(h,Q_[a.dtype],c,i,p,o,f,m),u}},CD={kernelName:hn,backendName:"wasm",setupFunc:function(e){aD=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{x:r,indices:s}=n,{axis:i,batchDims:o}=a,l=$r.parseAxisParam(i,r.shape)[0],u=t.readSync(s.dataId),d=r.shape[l];for(let e=0;e<u.length;++e){let t=u[e];$r.assert(t<=d-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${d-1}]`))}let p=am.segment_util.collectGatherOpShapeInfo(r,s,l,o),h=HP({inputs:{x:r},attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]},backend:t}),c=$r.sizeFromShape(s.shape),f=HP({inputs:{x:s},attrs:{shape:[p.batchSize,c/p.batchSize]},backend:t}),m=[p.batchSize,p.outerSize,c/p.batchSize,p.sliceSize],g=t.makeOutput(m,r.dtype);if(0===$r.sizeFromShape(r.shape))return g;let y=h.shape.length-1,x=t.dataIdMap.get(h.dataId).id,A=t.dataIdMap.get(f.dataId).id,b=t.dataIdMap.get(g.dataId).id,w=new Uint8Array(new Int32Array($r.computeStrides(h.shape)).buffer),v=new Uint8Array(new Int32Array($r.computeStrides(m)).buffer);return aD(x,Q_[r.dtype],w,y,A,p.batchSize,v,b),t.disposeData(h.dataId),t.disposeData(f.dataId),g.shape=p.outputShape,g}},ND=mP(fn,0,"bool"),TD=mP(mn,0,"bool"),RD=pP(An,"bool"),ED=pP(bn,"bool"),$D=pP(wn,"bool"),MD={kernelName:vn,backendName:"wasm",setupFunc:function(e){rD=e.wasm.cwrap(vn,null,["number","number","number","number"])},kernelFunc:function(e){let{inputs:{x:t},attrs:{alpha:n},backend:a}=e,r=a.dataIdMap.get(t.dataId).id,s=a.makeOutput(t.shape,"float32");if(0!==$r.sizeFromShape(t.shape)){let e=a.dataIdMap.get(s.dataId).id;rD(r,Q_[t.dtype],n,e)}return s}},FD=mP(kn,0,"bool"),_D=mP(In,0,"bool"),PD={kernelName:Sn,backendName:"wasm",setupFunc:function(e){sD=e.wasm.cwrap(Sn,null,["number","number","number","number"])},kernelFunc:function(e){let{attrs:t,backend:n}=e,{start:a,stop:r,num:s}=t,i=Math.floor(s),o=n.makeOutput([i],"float32");return sD(n.dataIdMap.get(o.dataId).id,a,r,i),o}},OD=pP(Cn),DD=pP(Nn),zD=mP(Tn,0,"bool"),LD=pP(Rn),WD=mP(En,0,"bool"),BD=mP($n,0,"bool"),VD={kernelName:_n,backendName:"wasm",setupFunc:function(e){iD=e.wasm.cwrap(_n,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=a;if("float32"!==r.dtype)throw new Error("LRN error: x must have dtype float32");let u=n.makeOutput(r.shape,r.dtype);return iD(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(u.dataId).id,r.shape[3],s,i,o,l),u}},UD={kernelName:Pn,backendName:"wasm",setupFunc:function(e){oD=e.wasm.cwrap(Pn,null,["number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:d}=a;if("float32"!==r.dtype||"float32"!==s.dtype||"float32"!==i.dtype)throw new Error("LRNGrad error: x, y, and dy must have dtype float32");let p=n.makeOutput(r.shape,r.dtype);return oD(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(p.dataId).id,i.shape[3],o,l,u,d),p}},GD={kernelName:Dn,backendName:"wasm",setupFunc:function(e){lD=e.wasm.cwrap(Dn,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{reductionIndices:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=SP(i,r,t);h&&(l=u,o=t.dataIdMap.get(u.dataId).id);let c=l.shape.length;am.assertAxesAreInnerMostDims("max",d,c);let[f,m]=am.computeOutAndReduceShapes(l.shape,d),g=$r.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==$r.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;lD(o,Q_[i.dtype],g,e)}if(h&&t.disposeData(u.dataId),s){let e=am.expandShapeToKeepDim(y.shape,p);y.shape=e}return y}},HD=mP(zn),jD={kernelName:Ln,backendName:"wasm",setupFunc:function(e){uD=e.wasm.cwrap(Ln,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,r=t.x,s=a.dataIdMap.get(r.dataId).id;$r.assert("float32"===r.dtype,(()=>`Error in MaxPool: only float32 input is supported. Got ${r.dtype}.`));let{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,d=am.computePool2DInfo(r.shape,i,o,1,l,u),p=d.filterHeight,h=d.filterWidth,c=d.padInfo.top,f=d.padInfo.right,m=d.padInfo.bottom,g=d.padInfo.left,y=d.dilationHeight,x=d.dilationWidth,A=d.strideHeight,b=d.strideWidth,w=d.inChannels,v=d.outChannels;if("channelsLast"!==d.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);let k=a.makeOutput(d.outShape,"float32"),I=a.dataIdMap.get(k.dataId).id;return uD(s,r.shape[0],r.shape[1],r.shape[2],p,h,c,f,m,g,y,x,A,b,w,v,I),k}},qD={kernelName:Bn,backendName:"wasm",setupFunc:function(e){dD=e.wasm.cwrap("MaxPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=a,d=am.computePool3DInfo(r.shape,s,i,1,o,l,u),p=n.makeOutput(d.outShape,r.dtype);return dD(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(p.dataId).id,d.batchSize,d.inChannels,d.inDepth,d.inHeight,d.inWidth,d.outDepth,d.outHeight,d.outWidth,d.strideDepth,d.strideHeight,d.strideWidth,d.dilationDepth,d.dilationHeight,d.dilationWidth,d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.front,d.padInfo.top,d.padInfo.left),p}},XD={kernelName:Vn,backendName:"wasm",setupFunc:function(e){pD=e.wasm.cwrap("MaxPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=a,d=am.computePool3DInfo(s.shape,i,o,1,l,u),p=n.makeOutput(s.shape,s.dtype);return pD(n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(p.dataId).id,d.batchSize,d.inChannels,d.inDepth,d.inHeight,d.inWidth,d.outDepth,d.outHeight,d.outWidth,d.strideDepth,d.strideHeight,d.strideWidth,d.dilationDepth,d.dilationHeight,d.dilationWidth,d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.front,d.padInfo.top,d.padInfo.left),p}},KD={kernelName:Wn,backendName:"wasm",setupFunc:function(e){hD=e.wasm.cwrap("MaxPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=a,d=am.computePool2DInfo(s.shape,i,o,1,l,u),p=n.makeOutput(s.shape,s.dtype);return hD(n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(p.dataId).id,d.batchSize,d.inChannels,d.inHeight,d.inWidth,d.outHeight,d.outWidth,d.strideHeight,d.strideWidth,d.dilationHeight,d.dilationWidth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.top,d.padInfo.left),p}},YD={kernelName:Un,backendName:"wasm",setupFunc:function(e){cD=e.wasm.cwrap("MaxPoolWithArgmax",null,["number","number","number","number","boolean","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,includeBatchInIndex:l}=a;$r.assert(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));let u=[1,1];$r.assert(am.eitherStridesOrDilationsAreOne(i,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`));let d=am.computePool2DInfo(r.shape,s,i,[1,1],o),p=n.makeOutput(d.outShape,r.dtype),h=n.makeOutput(d.outShape,"int32");return cD(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(p.dataId).id,n.dataIdMap.get(h.dataId).id,Q_[r.dtype],l,d.batchSize,d.inChannels,d.inHeight,d.inWidth,d.outHeight,d.outWidth,d.strideHeight,d.strideWidth,d.dilationHeight,d.dilationWidth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.top,d.padInfo.left),[p,h]}},ZD={kernelName:Gn,backendName:"wasm",setupFunc:function(e){fD=e.wasm.cwrap(Gn,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:p,originalAxes:h,inputWasTransposed:c}=SP(i,r,t),f=p;if(c){let e=t.dataIdMap.get(d.dataId).id;e!==o&&(u=d,l=e,f=am.getInnerMostAxes(f.length,u.shape.length))}am.assertAxesAreInnerMostDims("mean",f,u.shape.length);let[m,g]=am.computeOutAndReduceShapes(u.shape,f),y=$r.sizeFromShape(g),x=u;"float32"!==u.dtype&&(x=nO({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(x.dataId).id);let A=t.makeOutput(m,"float32");if(0!==$r.sizeFromShape(u.shape)){let e=t.dataIdMap.get(A.dataId).id;fD(l,y,e)}if(c&&t.disposeData(d.dataId),s){let e=am.expandShapeToKeepDim(A.shape,h);A.shape=e}return"float32"!==u.dtype&&t.disposeData(x.dataId),A}},JD={kernelName:Hn,backendName:"wasm",setupFunc:function(e){mD=e.wasm.cwrap(Hn,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:p,originalAxes:h,inputWasTransposed:c}=SP(i,r,t);if(c){let e=t.dataIdMap.get(d.dataId).id;e!==o&&(u=d,l=e)}let f=u.shape.length;am.assertAxesAreInnerMostDims("min",p,f);let[m,g]=am.computeOutAndReduceShapes(u.shape,p),y=$r.sizeFromShape(g),x=t.makeOutput(m,u.dtype);if(0!==$r.sizeFromShape(u.shape)){let e=t.dataIdMap.get(x.dataId).id;mD(l,Q_[i.dtype],y,e)}if(c&&t.disposeData(d.dataId),s){let e=am.expandShapeToKeepDim(x.shape,h);x.shape=e}return x}},QD=mP(jn);!function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"}(gD||(gD={}));var ez,tz={kernelName:qn,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n,attrs:{paddings:a,mode:r}}=e,s=a.map(((e,n)=>e[0]+t.shape[n]+e[1])),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),d=a.map((e=>e[0])),p=a.map((e=>e[1])),h=new Uint8Array(new Int32Array(d).buffer),c=new Uint8Array(new Int32Array(p).buffer);return yD(i,u,t.shape.length,Q_[t.dtype],h,c,gD[r],l),o},setupFunc:function(e){yD=e.wasm.cwrap(qn,null,["number","array","number","number","array","array","number","number"])}};function nz(e){let{backend:t,inputs:{logits:n},attrs:{dim:a}}=e,r=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[a],l=$r.sizeFromShape(n.shape)/o;return 0===$r.sizeFromShape(s.shape)||ez(r,i,o,l),s}var az,rz,sz={kernelName:Ba,backendName:"wasm",setupFunc:function(e){ez=e.wasm.cwrap(Ba,null,["number","number","number","number"])},kernelFunc:nz},iz={kernelName:Kn,backendName:"wasm",setupFunc:function(e){az=e.wasm.cwrap(Kn,null,["number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:i,normalized:o}=a;if("float32"!==r.dtype)throw new Error(`Tensor logits must have dtype float32, got ${r.dtype}`);let l=o?r:nz({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),[u,d]=l.shape,p=n.makeOutput([u,s],"int32");return az(n.dataIdMap.get(l.dataId).id,u,d,s,i,n.dataIdMap.get(p.dataId).id),o||n.disposeData(l.dataId),p}},oz=mP(Xn),lz=mP(Yn),uz=pP(Zn);function dz(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),a=n[0],r=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:a,selectedSize:r,pSelectedScores:s,pValidOutputs:i}}var pz,hz,cz,fz,mz,gz,yz,xz,Az,bz,wz,vz,kz,Iz,Sz,Cz,Nz,Tz,Rz,Ez={kernelName:Qn,backendName:"wasm",setupFunc:function(e){rz=e.wasm.cwrap(Qn,"number",["number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{iouThreshold:r,maxOutputSize:s,scoreThreshold:i}=a,{boxes:o,scores:l}=n,u=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(l.dataId).id,p=rz(u,d,s,r,i),{pSelectedIndices:h,selectedSize:c,pSelectedScores:f,pValidOutputs:m}=dz(t,p);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([c],"int32",h)}},$z={kernelName:ea,backendName:"wasm",setupFunc:function(e){pz=e.wasm.cwrap(ea,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{iouThreshold:r,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=a,{boxes:l,scores:u}=n,d=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(u.dataId).id,h=pz(d,p,s,r,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=dz(t,h);return t.wasm._free(m),[t.makeOutput([f],"int32",c),t.makeOutput([],"int32",g)]}},Mz={kernelName:ta,backendName:"wasm",setupFunc:function(e){hz=e.wasm.cwrap(ta,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{iouThreshold:r,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=a,{boxes:l,scores:u}=n,d=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(u.dataId).id,h=hz(d,p,s,r,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=dz(t,h);return t.wasm._free(g),[t.makeOutput([f],"int32",c),t.makeOutput([f],"float32",m)]}},Fz=mP(Jn,0,"bool"),_z={kernelName:aa,backendName:"wasm",setupFunc:function(e){cz=e.wasm.cwrap(aa,null,["number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:s,depth:i,onValue:o,offValue:l}=a,u=n.makeOutput([...r.shape,i],s),d=n.dataIdMap.get(u.dataId).id,p=n.dataIdMap.get(r.dataId).id;return cz(p,i,o,l,d),u}},Pz={kernelName:na,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n}=e,a=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(a).fill(1),a}},Oz={kernelName:ra,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return XO({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{$r.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),$r.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=oO({inputs:t.map((e=>{let t=XO({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeData(e.dataId))),l}},Dz={kernelName:sa,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n,attrs:{paddings:a,constantValue:r}}=e,s=a.map(((e,n)=>e[0]+t.shape[n]+e[1]));if(0===$r.sizeFromShape(t.shape))return ZO({backend:n,attrs:{shape:s,value:r,dtype:t.dtype}});let i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),d=a.map((e=>e[0])),p=a.map((e=>e[1])),h=new Uint8Array(new Int32Array(d).buffer),c=new Uint8Array(new Int32Array(p).buffer);return fz(i,u,t.shape.length,Q_[t.dtype],h,c,r,l),o},setupFunc:function(e){fz=e.wasm.cwrap(sa,null,["number","array","number","number","array","array","number","number"])}},zz=mP(oa),Lz={kernelName:la,backendName:"wasm",setupFunc:function(e){mz=e.wasm.cwrap(la,null,["number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a,alpha:r}=t,s=n.dataIdMap.get(a.dataId).id,i=n.dataIdMap.get(r.dataId).id,o=s,l=a,u=l;"float32"!==l.dtype&&(u=nO({backend:n,inputs:{x:a},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(u.dataId).id);let d=n.makeOutput(a.shape,"float32"),p=n.dataIdMap.get(d.dataId).id;return mz(o,i,p),"float32"!==l.dtype&&n.disposeData(u.dataId),d}},Wz={kernelName:ua,backendName:"wasm",setupFunc:function(e){gz=e.wasm.cwrap(ua,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:p,originalAxes:h,inputWasTransposed:c}=SP(i,r,t),f=p;if(c){let e=t.dataIdMap.get(d.dataId).id;e!==o&&(u=d,l=e,f=am.getInnerMostAxes(f.length,u.shape.length))}am.assertAxesAreInnerMostDims("prod",f,u.shape.length);let[m,g]=am.computeOutAndReduceShapes(u.shape,f),y=$r.sizeFromShape(g),x=t.makeOutput(m,u.dtype);if(0!==$r.sizeFromShape(u.shape)){let e=t.dataIdMap.get(x.dataId).id;gz(l,y,Q_[x.dtype],e)}if(c&&t.disposeData(d.dataId),s){let e=am.expandShapeToKeepDim(x.shape,h);x.shape=e}return x}},Bz={kernelName:ca,backendName:"wasm",kernelFunc:e=>{let{backend:t,attrs:n}=e,{start:a,stop:r,step:s,dtype:i}=n,o=VA(a,r,s,i),l=t.makeOutput([o.length],i);return t.typedArrayFromHeap(l).set(o),l}},Vz=mP(Yt),Uz=pP(ma),Gz=pP(ga),Hz=pP(va),jz={kernelName:ba,backendName:"wasm",setupFunc:function(e){yz=e.wasm.cwrap(ba,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:a,attrs:r}=e,{images:s}=a,{alignCorners:i,halfPixelCenters:o,size:l}=r,[u,d]=l,[p,h,c,f]=s.shape,m=[p,u,d,f],g=n.dataIdMap.get(s.dataId);"float32"!==g.dtype&&(t=nO({backend:n,inputs:{x:s},attrs:{dtype:"float32"}}),g=n.dataIdMap.get(t.dataId));let y=g.id,x=n.makeOutput(m,"float32");if(0===$r.sizeFromShape(s.shape))return x;let A=n.dataIdMap.get(x.dataId).id;return yz(y,p,h,c,f,u,d,i?1:0,o?1:0,A),null!=t&&n.disposeData(t.dataId),x}},qz={kernelName:wa,backendName:"wasm",setupFunc:function(e){xz=e.wasm.cwrap(wa,null,["number","number","number","array","array","boolean"])},kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{images:s,dy:i}=n,{alignCorners:o}=r,l=a.makeOutput(s.shape,"float32"),u=a.dataIdMap.get(s.dataId);return"float32"!==u.dtype&&(t=nO({backend:a,inputs:{x:s},attrs:{dtype:"float32"}}),u=a.dataIdMap.get(t.dataId)),xz(a.dataIdMap.get(s.dataId).id,a.dataIdMap.get(i.dataId).id,a.dataIdMap.get(l.dataId).id,new Uint8Array(new Int32Array(s.shape).buffer),new Uint8Array(new Int32Array(i.shape).buffer),o),null!=t&&a.disposeData(t.dataId),l}},Xz={kernelName:xa,backendName:"wasm",setupFunc:function(e){Az=e.wasm.cwrap(xa,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{images:r}=n,{alignCorners:s,halfPixelCenters:i,size:o}=a,[l,u]=o,[d,p,h,c]=r.shape,f=[d,l,u,c],m=t.makeOutput(f,"float32");if(0===$r.sizeFromShape(r.shape))return m;let g,y=t.dataIdMap.get(r.dataId);"float32"!==y.dtype&&(g=nO({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),y=t.dataIdMap.get(g.dataId));let x=y.id,A=t.dataIdMap.get(m.dataId).id;return Az(x,d,p,h,c,l,u,s?1:0,i?1:0,A),null!=g&&t.disposeData(g.dataId),m}},Kz={kernelName:Aa,backendName:"wasm",setupFunc:function(e){bz=e.wasm.cwrap(Aa,null,["number","number","number","array","array","boolean"])},kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{images:s,dy:i}=n,{alignCorners:o}=r,l=a.makeOutput(s.shape,"float32"),u=a.dataIdMap.get(s.dataId);return"float32"!==u.dtype&&(t=nO({backend:a,inputs:{x:s},attrs:{dtype:"float32"}}),u=a.dataIdMap.get(t.dataId)),bz(a.dataIdMap.get(s.dataId).id,a.dataIdMap.get(i.dataId).id,a.dataIdMap.get(l.dataId).id,new Uint8Array(new Int32Array(s.shape).buffer),new Uint8Array(new Int32Array(i.shape).buffer),o),null!=t&&a.disposeData(t.dataId),l}},Yz={kernelName:ka,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a,i=$r.parseAxisParam(s,r.shape);if(0===r.shape.length)return AP({inputs:{x:r},backend:n});let o=n.makeOutput(r.shape,r.dtype),l=n.dataIdMap.get(r.dataId).id,u=n.dataIdMap.get(o.dataId).id,d=new Uint8Array(new Int32Array(i).buffer),p=new Uint8Array(new Int32Array(r.shape).buffer);wz(l,d,i.length,p,r.shape.length,u);let h=HP({inputs:{x:o},attrs:{shape:r.shape},backend:n});return n.disposeData(o.dataId),h},setupFunc:function(e){wz=e.wasm.cwrap(ka,null,["number","array","number","array","number","number"])}},Zz={kernelName:fr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{image:r}=t,{radians:s,fillValue:i,center:o}=a,l=n.makeOutput(r.shape,r.dtype),u=n.dataIdMap.get(r.dataId).id,d=n.dataIdMap.get(l.dataId).id,[p,h,c,f]=r.shape,[m,g]=am.getImageCenter(o,h,c),y="number"==typeof i?[i,i,i,0===i?0:255]:[...i,255],x=new Uint8Array(new Int32Array(y).buffer);return vz(u,p,h,c,f,s,m,g,x,y.length,d),l},setupFunc:function(e){vz=e.wasm.cwrap(fr,null,["number","number","number","number","number","number","number","number","array","number","number"])}},Jz=pP(Ia),Qz=pP(Sa),eL={kernelName:Ca,backendName:"wasm",setupFunc:function(e){kz=e.wasm.cwrap(Ca,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{indices:r,updates:s}=n,{shape:i}=a,o=t.makeOutput(i,s.dtype);if(0===$r.sizeFromShape(i))return o;let{sliceRank:l,numUpdates:u,sliceSize:d,strides:p,outputSize:h}=Jp.calculateShapes(s,r,i),c=t.dataIdMap.get(r.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=new Uint8Array(new Int32Array(p).buffer),g=t.dataIdMap.get(o.dataId).id;return kz(c,f,Q_[s.dtype],l,u,d,m,h,g),o}},tL={kernelName:Ta,backendName:"wasm",setupFunc:function(e){Iz=e.wasm.cwrap(Ta,null,["number","number","number","number","number","number","bool","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:s}=t,{side:i}=a;if(r.dtype!==s.dtype)throw new Error(`SearchSorted error: sorted_sequence must have the same dtype as values. Got ${r.dtype} and ${s.dtype}`);let o=n.makeOutput(s.shape,"int32");function l(e){return n.dataIdMap.get(e.dataId).id}return Iz(l(r),l(s),r.shape[0],r.shape[1],s.shape[1],Q_[r.dtype],"left"===i,l(o)),o}},nL={kernelName:Ra,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t,i=n.dataIdMap.get(a.dataId).id,o=n.dataIdMap.get(r.dataId).id,l=n.dataIdMap.get(s.dataId).id,u=n.makeOutput(r.shape,r.dtype),d=n.dataIdMap.get(u.dataId).id,p=a.shape.length,h=r.shape.length,c=0===p||p>1||1===h?1:$r.sizeFromShape(r.shape.slice(1));return Sz(i,o,l,c,d),u},setupFunc:function(e){Sz=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}},aL=pP(Ea),rL={kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){Cz=e.wasm.cwrap(Pa,null,["number","number"])},kernelFunc:function(e){let{backend:t,inputs:{x:n}}=e,a=t.dataIdMap.get(n.dataId).id,r=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(r.dataId).id;return 0===$r.sizeFromShape(r.shape)||Cz(a,s),r}},sL=pP(_a),iL=pP(Ma),oL=pP(Fa),lL=pP(Oa),uL={kernelName:La,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:i}=a,o=$r.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<r.shape.length;++e)l.push([0,0]);let u=Dz.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),d=am.getReshaped(u.shape,s,o,!1),p=am.getPermuted(d.length,s.length,!1),h=am.getReshapedPermuted(u.shape,s,o,!1),c=HP({inputs:{x:u},backend:n,attrs:{shape:d}}),f=vP({inputs:{x:c},backend:n,attrs:{perm:p}}),m=HP({inputs:{x:f},backend:n,attrs:{shape:h}});return n.disposeData(u.dataId),n.disposeData(c.dataId),n.disposeData(f.dataId),m}},dL={kernelName:Va,backendName:"wasm",setupFunc:function(e){Nz=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:a}=e,{indices:r,values:s,denseShape:i,defaultValue:o}=a,l=r.shape[0],u=r.shape[1],d=n.readSync(i.dataId)[0],p=[l+d,u],h=n.dataIdMap.get(r.dataId).id,c=n.dataIdMap.get(s.dataId).id,f=n.dataIdMap.get(o.dataId).id,m=n.makeOutput(p,r.dtype),g=n.dataIdMap.get(m.dataId).id,y=n.makeOutput(p.slice(0,1),s.dtype),x=n.dataIdMap.get(y.dataId).id,A=n.makeOutput([d],"bool"),b=n.dataIdMap.get(A.dataId).id,w=n.makeOutput([l],r.dtype),v=n.dataIdMap.get(w.dataId).id,k=n.makeOutput([4],"int32"),I=n.dataIdMap.get(k.dataId).id,S=Nz(h,c,Q_[s.dtype],l,d,u,f,g,x,b,v,I),C=n.readSync(k.dataId);switch(C[0]){case 1:t=am.getSparseFillEmptyRowsIndicesDenseShapeMismatch(C[1]);break;case 2:t=am.getSparseFillEmptyRowsNegativeIndexErrorMessage(C[1],C[2]);break;case 3:t=am.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(C[1],C[2],C[3]);break;default:t=""}if(n.disposeData(k.dataId),t)throw n.disposeData(m.dataId),n.disposeData(y.dataId),n.disposeData(A.dataId),n.disposeData(w.dataId),new Error(t);let N=m,T=y;return S!==p[0]&&(N=KP({inputs:{x:m},attrs:{begin:0,size:[S,u]},backend:n}),T=KP({inputs:{x:y},attrs:{begin:0,size:S},backend:n}),n.disposeData(m.dataId),n.disposeData(y.dataId)),[N,T,A,w]}},pL={kernelName:Ua,backendName:"wasm",setupFunc:function(e){Tz=e.wasm.cwrap(Ua,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n}=e,{inputIndices:a,inputShape:r,newShape:s}=n;if(2!==a.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${a.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=t.dataIdMap.get(a.dataId).id,o=t.dataIdMap.get(r.dataId).id,l=t.dataIdMap.get(s.dataId).id,u=a.shape[0],d=$r.sizeFromShape(s.shape),p=t.makeOutput([u,d],a.dtype),h=t.dataIdMap.get(p.dataId).id,c=t.makeOutput([d],s.dtype),f=t.dataIdMap.get(c.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;Tz(i,o,l,u,h,f,g);let y,x=t.readSync(m.dataId);switch(x[0]){case 0:y=am.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(x[1],x[2]);break;case 1:y=am.getSparseReshapeNegativeOutputDimErrorMessage(x[1],x[2]);break;case 2:y=am.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let e=Array.from(t.readSync(r.dataId)),n=Array.from(t.readSync(c.dataId));y=am.getSparseReshapeInputOutputMultipleErrorMessage(e,n);break}case 4:{let e=Array.from(t.readSync(r.dataId)),n=Array.from(t.readSync(c.dataId));y=am.getSparseReshapeInputOutputMismatchErrorMessage(e,n);break}default:y=""}if(t.disposeData(m.dataId),y)throw t.disposeData(p.dataId),t.disposeData(c.dataId),new Error(y);return[p,c]}};function hL(e){Rz=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function cL(e,t){let{backend:n,inputs:a}=e,{data:r,indices:s,segmentIds:i}=a,o=s.shape[0],l=n.readSync(i.dataId,o-1,o)[0],u=o>0?l+1:0;if(u<0)throw new Error(am.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=r.shape.slice();d[0]=u;let p=n.dataIdMap.get(r.dataId).id,h=n.dataIdMap.get(s.dataId).id,c=n.dataIdMap.get(i.dataId).id,f=n.makeOutput(d,r.dtype),m=n.dataIdMap.get(f.dataId).id,g=n.makeOutput([4],"int32"),y=n.dataIdMap.get(g.dataId).id;Rz(p,Q_[r.dtype],r.shape[0],h,c,m,y,t,0);let x,A=n.readSync(g.dataId);switch(A[0]){case 0:x=am.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break;case 1:x=am.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break;case 2:x=am.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(A[1],A[2]);break;case 3:x=am.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(A[1],A[2],A[3]);break;default:x=""}if(n.disposeData(g.dataId),x)throw n.disposeData(f.dataId),new Error(x);return f}var fL,mL,gL,yL,xL,AL,bL,wL,vL={kernelName:Ga,backendName:"wasm",setupFunc:hL,kernelFunc:function(e){return cL(e,!0)}},kL={kernelName:Ha,backendName:"wasm",setupFunc:hL,kernelFunc:function(e){return cL(e,!1)}},IL={kernelName:ja,backendName:"wasm",setupFunc:function(e){fL=e.wasm.cwrap(ja,null,["number","number","number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:i}=n,{outputShape:o}=a,l=t.makeOutput(o,i.dtype);if(0===$r.sizeFromShape(o))return l;let{sliceRank:u,numUpdates:d,sliceSize:p,strides:h,outputSize:c}=am.calculateShapes(s,r,o),f=t.dataIdMap.get(r.dataId).id,m=t.dataIdMap.get(s.dataId).id,g=t.dataIdMap.get(i.dataId).id,y=new Uint8Array(new Int32Array(h).buffer),x=t.dataIdMap.get(l.dataId).id;return fL(f,m,s.shape.length,g,Q_[i.dtype],u,d,p,y,c,x),l}},SL={kernelName:Wa,backendName:"wasm",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=n,o=$r.parseAxisParam(i,r.shape)[0],l=am.prepareSplitSize(r,s,o),u=new Array(r.shape.length).fill(0),d=r.shape.slice();return l.map((e=>{let t=[...d];t[o]=e;let n=KP({inputs:{x:r},attrs:{begin:u,size:t},backend:a});return u[o]+=e,n}))}},CL=pP(Da),NL=pP(Xa),TL=mP(qa),RL={kernelName:hr,backendName:"wasm",setupFunc:function(e){mL=e.wasm.cwrap(hr,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{alpha:r}=a,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),l=t.dataIdMap.get(o.dataId).id;return mL(i,r,Q_[s.dtype],l),o}},EL={kernelName:Ya,backendName:"wasm",setupFunc:function(e){gL=e.wasm.cwrap(Ya,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:a,attrs:r}=e,{x:s}=a,{begin:i,end:o,strides:l,beginMask:u,endMask:d,ellipsisMask:p,newAxisMask:h,shrinkAxisMask:c}=r,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:x,begin:A,end:b,strides:w}=$f.sliceInfo(s.shape,i,o,l,u,d,p,h,c);if(g)t=HP({inputs:{x:s},backend:n,attrs:{shape:m}});else if(y||x){$r.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));let e=$f.computeOutShape(A,b,w),a=KP({inputs:{x:s},backend:n,attrs:{begin:A,size:e}});t=HP({inputs:{x:a},backend:n,attrs:{shape:m}}),n.disposeData(a.dataId)}else{let e=n.makeOutput(f,"float32"),a=n.dataIdMap.get(s.dataId).id,r=new Uint8Array(new Int32Array($r.computeStrides(s.shape)).buffer),i=new Uint8Array(new Int32Array(A).buffer),o=new Uint8Array(new Int32Array(b).buffer),l=new Uint8Array(new Int32Array(w).buffer),u=new Uint8Array(new Int32Array(f).buffer),d=new Uint8Array(new Int32Array($r.computeStrides(f)).buffer),p=n.dataIdMap.get(e.dataId).id;gL(a,r,s.shape.length,i,o,l,u,d,f.length,p),t=HP({inputs:{x:e},backend:n,attrs:{shape:m}}),n.disposeData(e.dataId)}return t}},$L={kernelName:Za,backendName:"wasm",kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{data:r,dataSplits:s}=n,{separator:i,nGramWidths:o,leftPad:l,rightPad:u,padWidth:d,preserveShortSequences:p}=a,h=t.readSync(r.dataId),c=t.readSync(s.dataId),[f,m]=cb(h,c,i,o,l,u,d,p),g=t.makeOutput([f.length],"string");t.dataIdMap.get(g.dataId).stringBytes=f;let y=t.makeOutput(s.shape,"int32");return t.typedArrayFromHeap(y).set(m),[g,y]}},ML={kernelName:Ja,backendName:"wasm",kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{input:r,delimiter:s}=n,{skipEmpty:i}=a,o=t.readSync(r.dataId),l=t.readSync(s.dataId),[u,d,p]=mb(o,l[0],i),h=d.length,c=t.makeOutput([h,2],"int32");t.typedArrayFromHeap(c).set(u);let f=t.makeOutput([h],"string");t.dataIdMap.get(f.dataId).stringBytes=d;let m=t.makeOutput([2],"int32");return t.typedArrayFromHeap(m).set(p),[c,f,m]}},FL={kernelName:Qa,backendName:"wasm",kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{input:r}=n,{numBuckets:s}=a,i=gb(t.readSync(r.dataId),s),o=t.makeOutput(r.shape,"int32");return t.typedArrayFromHeap(o).set(i),o}},_L=mP(er),PL={kernelName:za,backendName:"wasm",setupFunc:function(e){yL=e.wasm.cwrap(za,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:p,originalAxes:h,inputWasTransposed:c}=SP(i,r,t),f=p;if(c){let e=t.dataIdMap.get(d.dataId).id;e!==o&&(u=d,l=e,f=am.getInnerMostAxes(f.length,u.shape.length))}am.assertAxesAreInnerMostDims("sum",f,u.shape.length);let[m,g]=am.computeOutAndReduceShapes(u.shape,f),y=$r.sizeFromShape(g),x=t.makeOutput(m,u.dtype);if(0!==$r.sizeFromShape(u.shape)){let e=t.dataIdMap.get(x.dataId).id;yL(l,y,Q_[x.dtype],e)}if(c&&t.disposeData(d.dataId),s){let e=am.expandShapeToKeepDim(x.shape,h);x.shape=e}return x}},OL=pP(tr),DL=pP(nr),zL={kernelName:Na,backendName:"wasm",setupFunc:function(e){xL=e.wasm.cwrap(Na,null,["number","number","number","number","number","number","array","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{tensor:r,indices:s,updates:i}=n,{}=a,o=t.makeOutput(r.shape,r.dtype);if(0===$r.sizeFromShape(r.shape))return o;let{sliceRank:l,numUpdates:u,sliceSize:d,strides:p,outputSize:h}=Jp.calculateShapes(i,s,r.shape),c=t.dataIdMap.get(s.dataId).id,f=t.dataIdMap.get(i.dataId).id,m=t.dataIdMap.get(r.dataId).id,g=new Uint8Array(new Int32Array(p).buffer),y=t.dataIdMap.get(o.dataId).id;return xL(c,f,Q_[i.dtype],l,u,d,g,h,y,m),o}},LL={kernelName:ar,backendName:"wasm",setupFunc:function(e){AL=e.wasm.cwrap(ar,null,["number","array","number","array","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,s=n.dataIdMap.get(r.dataId).id,{reps:i}=a,o=new Array(r.shape.length);for(let e=0;e<o.length;e++)o[e]=r.shape[e]*i[e];let l=new Uint8Array(new Int32Array(r.shape).buffer),u=new Uint8Array(new Int32Array(o).buffer),d=n.makeOutput(o,r.dtype),p=n.dataIdMap.get(d.dataId).id;return AL(s,l,r.shape.length,u,o.length,Q_[d.dtype],p),d}},WL={kernelName:rr,backendName:"wasm",setupFunc:function(e){bL=e.wasm.cwrap(rr,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:a}=e,{k:r,sorted:s}=n,i=t.dataIdMap.get(a.dataId).id,o=new Uint8Array(new Int32Array(a.shape).buffer),l=a.shape.slice();l[l.length-1]=r;let u=t.makeOutput(l,a.dtype),d=t.dataIdMap.get(u.dataId).id,p=t.makeOutput(l,"int32"),h=t.dataIdMap.get(p.dataId).id;return bL(i,o,a.shape.length,Q_[a.dtype],r,s,d,h),[u,p]}},BL={kernelName:sr,backendName:"wasm",setupFunc:function(e){wL=e.wasm.cwrap(sr,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:a,attrs:r}=e,{image:s,transforms:i}=a,{interpolation:o,fillMode:l,fillValue:u,outputShape:d}=r,[p,h,c,f]=s.shape,[m,g]=null!=d?d:[h,c],y=[p,m,g,f],x=new Uint8Array(new Int32Array($r.computeStrides(s.shape)).buffer),A=new Uint8Array(new Int32Array($r.computeStrides(y)).buffer),b=n.makeOutput(y,s.dtype),w=n.dataIdMap.get(b.dataId).id,v=n.dataIdMap.get(s.dataId).id,k=n.dataIdMap.get(i.dataId).id,I="nearest"===o?1:2;switch(l){case"constant":default:t=1;break;case"reflect":t=2;break;case"wrap":t=3;break;case"nearest":t=4}return wL(v,k,i.shape[0]>1,p,m,g,f,c,h,x,s.shape.length-1,A,y.length-1,I,t,u,w),b}},VL={kernelName:or,backendName:"wasm",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t,{outputValues:i,outputShape:o,indices:l}=Sb(a.readSync(s.dataId),r,s.shape,s.dtype);return[a.makeOutput(o,s.dtype,void 0,i),a.makeOutput([l.length],"int32",void 0,l)]}},UL={kernelName:lr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{value:r}=t,{axis:s}=a;s<0&&(s+=r.shape.length);let i=r.shape[s],o=r.shape.length,l=new Array(o-1),u=0;for(let e=0;e<o;e++)e!==s&&(l[u++]=r.shape[e]);let d=new Array(i),p=new Array(o).fill(0),h=r.shape.slice();h[s]=1;for(let e=0;e<d.length;e++)p[s]=e,d[e]=KP({inputs:{x:r},attrs:{begin:p,size:h},backend:n});return d.map((({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:l})))}},GL={kernelName:pr,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n}=e,a=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(a).fill(0),a}},HL=[dP,hP,cP,fP,yP,xP,NP,TP,_P,PP,OP,DP,zP,LP,WP,BP,GP,VP,UP,XP,JP,QP,eO,tO,rO,sO,iO,mO,gO,yO,xO,AO,bO,wO,vO,FO,_O,PO,OO,DO,zO,LO,WO,BO,VO,UO,GO,HO,jO,qO,KO,YO,xD,AD,bD,wD,vD,kD,ID,SD,CD,ND,TD,wP,RD,ED,$D,MD,FD,_D,PD,DD,OD,zD,LD,WD,BD,VD,UD,GD,HD,jD,qD,XD,KD,YD,ZD,JD,QD,tz,iz,oz,lz,uz,Ez,$z,Mz,Fz,_z,Pz,Oz,Dz,zz,Lz,Wz,Bz,Vz,Uz,Gz,Hz,qP,jz,qz,Xz,Kz,Yz,Zz,Jz,Qz,eL,tL,nL,aL,rL,sL,iL,oL,ZP,sz,lL,uL,dL,pL,vL,kL,IL,SL,CL,NL,TL,RL,EL,$L,ML,FL,_L,PL,OL,DL,zL,LL,WL,BL,IP,VL,UL,GL];for(let e of HL)Sr(e);var jL=Xe();jL.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch(e){return!1}})),jL.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if(jL.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}}));var qL=N(H()),XL=N(j()),KL=N(q()),YL=qL.default||qL,ZL=KL.default||KL,JL=class extends K{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(lW),uW=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new X(this,di())}write(e,t,n){let a={id:this.dataIdNextNumber++};return this.move(a,e,t,n,1),a}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=$r.now();return e(),{kernelMs:$r.now()-t}}move(e,t,n,a,r){let s=this.dataIdNextNumber++;if("string"===a){let i=t;return void this.dataIdMap.set(e,{id:s,stringBytes:i,shape:n,dtype:a,memoryOffset:null,refCount:r})}let i=$r.sizeFromShape(n),o=i*$r.bytesPerElement(a),l=this.wasm._malloc(o)>>>0;this.dataIdMap.set(e,{id:s,memoryOffset:l,shape:n,dtype:a,refCount:r}),this.wasm.tfjs.registerTensor(s,i,l),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),l)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:a,dtype:r,shape:s,stringBytes:i}=this.dataIdMap.get(e);if("string"===r)return null!=t&&0!==t||!(null==n||n>=i.length)?i.slice(t,n):i;t=t||0,n=n||$r.sizeFromShape(s);let o=$r.bytesPerElement(r);return function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}(this.wasm.HEAPU8.slice(a+t*o,a+n*o).buffer,r)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n,a){let r;if(null==n)r=this.write(null!=a?a:null,e,t);else{let a=this.dataIdNextNumber++;r={id:a},this.dataIdMap.set(r,{id:a,memoryOffset:n,shape:e,dtype:t,refCount:1});let s=$r.sizeFromShape(e);this.wasm.tfjs.registerTensor(a,s,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let a=this.wasm.HEAPU8.buffer,{memoryOffset:r}=this.dataIdMap.get(n),s=$r.sizeFromShape(e);switch(t){case"float32":return new Float32Array(a,r,s);case"int32":return new Int32Array(a,r,s);case"bool":return new Uint8Array(a,r,s);default:throw new Error(`Unknown dtype ${t}`)}}};function QL(e,t,n){if(null!=tW)return tW;let a="tfjs-backend-wasm.wasm";return e&&t?a="tfjs-backend-wasm-threaded-simd.wasm":e&&(a="tfjs-backend-wasm-simd.wasm"),null!=aW&&null!=aW[a]?aW[a]:n+a}var eW=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],tW=null,nW=null,aW={},rW=!1,sW=!1;function iW(e,t=!1){if(li("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),rW)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");tW=e,sW=t}function oW(e,t=!1){if(rW)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)nW=e;else{aW=e;let t=eW.filter((e=>null==aW[e]));if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}sW=t}var lW=-1,uW=-1;function dW(e){lW=e}function pW(){if(-1===uW)throw new Error("WASM backend not initialized.");return uW}var hW="4.21.0";ki("wasm",(async()=>{let{wasm:e}=await async function(){let[e,t]=await Promise.all([Xe().getAsync("WASM_HAS_SIMD_SUPPORT"),Xe().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,a)=>{let r={locateFile:(n,a)=>{if(n.endsWith(".worker.js")){let e=XL.wasmWorkerContents.replace(/\n/g,"\\n"),t=new Blob([e],{type:"application/javascript"});return URL.createObjectURL(t)}return n.endsWith(".wasm")?QL(e,t,null!=nW?nW:a):a+n}};sW&&(r.instantiateWasm=function(e){return(t,n)=>($r.fetch(e,{credentials:"same-origin"}).then((a=>{a.ok||t.env.a(`failed to load wasm binary file at '${e}'`),a.arrayBuffer().then((e=>{WebAssembly.instantiate(e,t).then((e=>{n(e.instance,e.module)}))}))})),{})}(QL(e,t,null!=nW?nW:"")));let s,i=!1;r.onAbort=()=>{i||rW||(rW=!0,a({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))},t&&e&&null==tW?(r.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+YL.toString()],{type:"text/javascript"}),s=YL(r)):s=ZL(r),s.then((e=>{i=!0,rW=!1,e.tfjs={init:e.cwrap("init",null,[]),initWithThreadsCount:e.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:e.cwrap("get_threads_count","number",[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})})).catch(a)}))}();return new JL(e)}),2);var cW=Xe();cW.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",(()=>15)),cW.registerFlag("WEBGPU_CPU_FORWARD",(()=>!0)),cW.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",(()=>-1)),cW.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",(()=>!0)),cW.registerFlag("WEBGPU_USE_LOW_POWER_GPU",(()=>!1)),cW.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e3)),cW.registerFlag("WEBGPU_USE_PROFILE_TOOL",(()=>!1)),cW.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",(()=>!0)),cW.registerFlag("WEBGPU_USE_NAIVE_CONV2D_DEBUG",(()=>!1)),cW.registerFlag("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL",(()=>-1)),cW.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",(()=>!1)),cW.registerFlag("WEBGPU_PRINT_SHADER",(()=>"")),cW.registerFlag("WEBGPU_ENGINE_COMPILE_ONLY",(()=>!1));var fW=class{constructor(e){e&&(this.vendor=e.vendor,this.architecture=e.architecture,this.intelGPUGeneration=this.getIntelGPUGeneration())}getIntelGPUGeneration(){if(this.isIntel()){if(this.architecture.startsWith("gen"))return Number(this.architecture.match(/\d+/));if(this.architecture.startsWith("xe"))return 12}return 0}isIntel(){return"intel"===this.vendor}},mW=class{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireBuffer(e,t,n=!1,a=!0){let r,s=gW(e,t);return a?(this.freeBuffers.has(s)||this.freeBuffers.set(s,[]),this.freeBuffers.get(s).length>0?(r=this.freeBuffers.get(s).pop(),this.numFreeBuffers--):(r=this.device.createBuffer({size:e,usage:t,mappedAtCreation:n}),this.numBytesAllocated+=e)):(r=this.device.createBuffer({size:e,usage:t,mappedAtCreation:n}),this.numBytesAllocated+=e),this.usedBuffers.has(s)||this.usedBuffers.set(s,[]),this.usedBuffers.get(s).push(r),this.numUsedBuffers++,this.numBytesUsed+=e,r}releaseBuffer(e,t=!0){if(0===this.freeBuffers.size)return;let n=e.size,a=gW(n,e.usage),r=this.usedBuffers.get(a),s=r.indexOf(e);if(s<0)throw new Error("Cannot find the buffer in buffer manager");r[s]=r[r.length-1],r.pop(),this.numUsedBuffers--,this.numBytesUsed-=n,t?(this.freeBuffers.get(a).push(e),this.numFreeBuffers++):(e.destroy(),this.numBytesAllocated-=n)}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.usedBuffers.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function gW(e,t){return`${e}_${t}`}var yW=class{constructor(e){this.device=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(e,t,n,a){let r=e*t*AW(n),s=xW(e,t,n,a);if(this.freeTextures.has(s)||this.freeTextures.set(s,[]),this.usedTextures.has(s)||this.usedTextures.set(s,[]),this.numBytesUsed+=r,this.numUsedTextures++,this.freeTextures.get(s).length>0){this.numFreeTextures--;let e=this.freeTextures.get(s).shift();return this.usedTextures.get(s).push(e),e}this.numBytesAllocated+=r;let i=this.device.createTexture({size:[e,t],format:n,usage:a});return this.usedTextures.get(s).push(i),i}releaseTexture(e){if(0===this.freeTextures.size)return;let t=e.width,n=e.height,a=e.format,r=xW(t,n,a,e.usage);this.freeTextures.has(r)||this.freeTextures.set(r,[]),this.freeTextures.get(r).push(e),this.numFreeTextures++,this.numUsedTextures--;let s=this.usedTextures.get(r),i=s.indexOf(e);if(i<0)throw new Error("Cannot release a texture that was never provided by this texture manager");s.splice(i,1);let o=t*n*AW(a);this.numBytesUsed-=o}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.usedTextures.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function xW(e,t,n,a){return`${e}_${t}_${n}_${a}`}function AW(e){if("rgba8unorm"===e)return 16;throw new Error(`${e} is not supported!`)}function bW(e,t){if(Math.max(...e)>5)throw new Error("Cannot symbolically compute strides for rank > 6 tensor.");let n=e.length,a=e.map((e=>`${t}.${"xyzwuv"[e]}`)),r=new Array(n-1);r[n-2]=a[n-1];for(let e=n-3;e>=0;--e)r[e]=`(${r[e+1]} * ${a[e+1]})`;return r}var wW,vW=(e,t,n)=>"int32"===n?`atomicAdd(${e}, bitcast<i32>(${t}));`:`\n          {\n            var oldValue = 0;\n            loop {\n              let newValueF32 = bitcast<f32>(oldValue) + (${t});\n              let newValue = bitcast<i32>(newValueF32);\n              let res = atomicCompareExchangeWeak(${e}, oldValue, newValue);\n              if res.exchanged {\n                break;\n              }\n              oldValue = res.old_value;\n            }\n          }`;!function(e){e[e.FROM_PIXELS=0]="FROM_PIXELS",e[e.DRAW=1]="DRAW"}(wW||(wW={}));var kW=(e,t="f32")=>{switch(e){case 1:return`${t}`;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component ${t} is not supported.`)}};function IW(e){if(e<=1)return"i32";if(2===e)return"vec2<i32>";if(3===e)return"vec3<i32>";if(4===e)return"vec4<i32>";if(5===e)return"vec5";if(6===e)return"vec6";throw Error(`GPU for rank ${e} is not yet supported`)}function SW(e){if(0===e)return"x";if(1===e)return"y";if(2===e)return"z";if(3===e)return"w";if(4===e)return"u";if(5===e)return"v";throw Error(`Index ${e} is not yet supported`)}function CW(...e){let t;switch(e.length){case 0:t="\n        fn main()\n      ";break;case 1:t=`\n        fn main(${e[0]} : i32)\n      `;break;default:throw Error("Unreachable")}return t}function NW(e,t){let n;return n=`\n     ${function(e){return`\n  @compute @workgroup_size(${e.workgroupSize[0]}, ${e.workgroupSize[1]}, ${e.workgroupSize[2]})\n`}(t)}\n      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,\n                @builtin(global_invocation_id) GlobalId : vec3<u32>,\n                @builtin(local_invocation_index) LocalIndex: u32,\n                @builtin(workgroup_id) WorkgroupId : vec3<u32>,\n                @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {\n        localId = LocalId;\n        localIndex = LocalIndex;\n        globalId = GlobalId;\n        numWorkgroups = NumWorkgroups;\n        workgroupId = WorkgroupId;\n        ${e?"main(getGlobalIndex());":"main();"};\n      }\n    `,n}var TW="\n  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};\n  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};\n\n  // Checks whether coordinates lie within the bounds of the shape.\n  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {\n    return all(coord >= vec2<i32>(0)) && all(coord < shape);\n  }\n  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {\n    return all(coord >= vec3<i32>(0)) && all(coord < shape);\n  }\n  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {\n    return all(coord >= vec4<i32>(0)) && all(coord < shape);\n  }\n\n  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {\n    return coord;\n  }\n  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {\n    return dot(coords, vec2<i32>(shape.y, 1));\n  }\n  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {\n    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));\n  }\n  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n    return dot(coords, vec4<i32>(\n        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n  }\n  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {\n    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);\n    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;\n  }\n  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {\n    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);\n    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;\n  }\n\n  // NaN defination in IEEE 754-1985 is :\n  //   - sign = either 0 or 1.\n  //   - biased exponent = all 1 bits.\n  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).\n  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers\n  fn isnan(val: f32) -> bool {\n    let floatToUint: u32 = bitcast<u32>(val);\n    return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n  }\n  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {\n    let floatToUint: vec4<u32> = bitcast<vec4<u32>>(val);\n    return (floatToUint & vec4<u32>(0x7fffffffu)) > vec4<u32>(0x7f800000u);\n  }\n",RW="\n  fn isinf(val: f32) -> bool {\n    return abs(val) == uniforms.INFINITY;\n  }\n";function EW(e,t=""){let n=e.length,a=""!==t?`get${t.charAt(0).toUpperCase()+t.slice(1)}CoordsFromIndex`:"getCoordsFromIndex",r=""!==t?`${t.charAt(0).toLowerCase()+t.slice(1)}ShapeStrides`:"outShapeStrides";if(n<=1)return`fn ${a}(index : i32) -> i32 { return index; }`;let s,i=$r.computeStrides(e),o=IW(n),l=[];for(let e=0;e<n;e++)l.push(`d${e}`);return 1===i.length?`    fn ${a}(index : i32) -> vec2<i32> {\n      let d0 = index / uniforms.${r}; let d1 = index - d0 * uniforms.${r};\n      return vec2<i32>(d0, d1);\n    }`:(s="var index2 = index;"+i.map(((e,t)=>`let ${l[t]} = index2 / uniforms.${r}.${SW(t)}; ${t===i.length-1?`let ${l[t+1]} = index2 - ${l[t]} * uniforms.${r}.${SW(t)}`:`index2 = index2 - ${l[t]} * uniforms.${r}.${SW(t)}`};`)).join(""),`\n    fn ${a}(index : i32) -> ${o} {\n      ${s}\n      return ${o}(${l.join(",")});\n    }\n  `)}function $W(e){let t="";switch(e){case 0:case 1:t+="\n        fn getOutputIndexFromCoords(coords : i32) -> i32 {\n          return coords;\n        }\n        ";break;case 2:t+="\n        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {\n          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));\n        }\n        ";break;case 3:t+="\n        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {\n          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));\n        }\n        ";break;case 4:t+="\n        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n          return dot(coords, vec4<i32>(\n            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));\n        }\n        ";break;case 5:t+="\n        fn getOutputIndexFromCoords(coords : vec5) -> i32 {\n          return coords.x * uniforms.outShapeStrides.x +\n              coords.y * uniforms.outShapeStrides.y +\n              coords.z * uniforms.outShapeStrides.z +\n              coords.w * uniforms.outShapeStrides.w +\n              coords.u;\n        }\n        ";break;case 6:t+="\n        fn getOutputIndexFromCoords(coords : vec6) -> i32 {\n          return coords.x * uniforms.outShapeStrides.x +\n              coords.y * uniforms.outShapeStrides.y +\n              coords.z * uniforms.outShapeStrides.z +\n              coords.w * uniforms.outShapeStrides.w +\n              coords.u * uniforms.outShapeStrides.u +\n              coords.v;\n        }\n        ";break;default:$r.assert(!1,(()=>`Unsupported ${e}D shape`))}return t}function MW(e){return 1===e.dispatch[1]&&1===e.dispatch[2]}function FW(e,t=1){if("float32"===e)return kW(t,"f32");if("int32"===e||"bool"===e)return kW(t,"i32");throw new Error(`type ${e} is not supported.`)}function _W(e){return!(e.dispatchLayout.hasOwnProperty("y")&&0!==e.dispatchLayout.y.length||e.dispatchLayout.hasOwnProperty("z")&&0!==e.dispatchLayout.z.length)}var PW={};C(PW,{GPUBytesPerElement:()=>GW,MatMulProgramType:()=>OW,assertNotComplex:()=>jW,computeDispatch:()=>LW,computeWorkPerThreadForConv2d:()=>VW,computeWorkgroupInfoForMatMul:()=>WW,computeWorkgroupSizeForConv2d:()=>BW,flatDispatchLayout:()=>UW,isWebGPUSupported:()=>HW,tilesFitEvenlyIntoShape:()=>zW});var OW,DW=e=>{let t=1;for(let n=0;n<e.length;n++)t*=e[n];return t};function zW(e,t){if(e.length!==t.length)throw new Error(`Cannot compute whether rank ${e.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every(((t,n)=>t%e[n]==0))}function LW(e,t,n=[1,1,1],a=[1,1,1]){let[r,s,i]=[Math.ceil(DW(e.x.map((e=>t[e])))/(n[0]*a[0])),e.y?Math.ceil(DW(e.y.map((e=>t[e])))/(n[1]*a[1])):1,e.z?Math.ceil(DW(e.z.map((e=>t[e])))/(n[2]*a[2])):1];return[r,s,i]}function WW(e,t,n,a=!1){let r=[8,8,1],s=[4,4,1];return a||(e<=8&&(s[1]=1),t<=16&&n<=16&&(r[0]=4)),{workgroupSize:r,elementsPerThread:s}}function BW(e,t,n=!1){if(n)return[8,8,1];let a=DW(e.x.map((e=>t[e]))),r=DW(e.y.map((e=>t[e])));return a<=4?[4,16,1]:r<=4?[16,4,1]:[16,16,1]}function VW(e,t,n=!1){if(n)return[4,4,1];let a=DW(e.x.map((e=>t[e]))),r=DW(e.y.map((e=>t[e])));return a<=4?[1,2,1]:r<=4?[2,1,1]:[2,2,1]}function UW(e){return{x:e.map(((e,t)=>t))}}function GW(e){if("float32"===e||"int32"===e||"bool"===e||"string"===e)return 4;if("complex64"===e)return 8;throw new Error(`Unknown dtype ${e}`)}function HW(){return!("undefined"==typeof globalThis||!globalThis.navigator||!globalThis.navigator.gpu)}function jW(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&$r.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGPU backend.`))}))}!function(e){e[e.MatMulReduceProgram=0]="MatMulReduceProgram",e[e.MatMulSplitKProgram=1]="MatMulSplitKProgram",e[e.MatMulSmallOutputSizeProgram=2]="MatMulSmallOutputSizeProgram",e[e.MatMulPackedProgram=3]="MatMulPackedProgram",e[e.MatMulMax=4]="MatMulMax"}(OW||(OW={}));var qW,XW=Xe().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),KW=class e extends K{nextDataId(){return e.nextDataId++}constructor(e,t){if(super(),this.commandQueueOwnedIds=new WeakSet,this.dispatchCountInPass=0,this.disposed=!1,this.downloadWaitMs=0,this.tensorDataPendingDisposal=[],this.queryResolveBuffer=null,this.querySet=null,this.querySetCount=2,this.stagingPendingDisposal=[],this.uniformPendingDisposal=[],this.uploadWaitMs=0,this.hasReadSyncWarned=!1,this.hasTimestampQueryWarned=!1,!HW())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.commandEncoder=null,this.computePassEncoder=null,this.adapterInfo=new fW(t),this.supportTimestampQuery=this.device.features.has("timestamp-query"),this.thresholdToIncreaseWorkgroups=this.adapterInfo.intelGPUGeneration>=12?16:8,this.bufferManager=new mW(this.device),this.textureManager=new yW(this.device),this.tensorMap=new X(this,di()),Xe().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}floatPrecision(){return 32}disposeData(e,t=!1){if(!this.tensorMap.has(e))return!0;let n=this.tensorMap.get(e);return t?n.refCount=0:n.refCount--,!(n.refCount>0||(null!=n.complexTensorInfos&&(this.disposeData(n.complexTensorInfos.real.dataId),this.disposeData(n.complexTensorInfos.imag.dataId)),this.commandQueueOwnedIds.has(e)?(this.tensorDataPendingDisposal.push(e),0):(this.releaseResource(e),this.tensorMap.delete(e),0)))}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){let t=this.tensorMap.get(e);if(t&&t.resource){if(t.external)return void(t.resource=null);t.resource instanceof GPUBuffer?this.bufferManager.releaseBuffer(t.resource):t.resource instanceof GPUTexture&&this.textureManager.releaseTexture(t.resource),t.resource=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){this.tensorMap.get(e).refCount++}decRef(e){this.tensorMap.has(e)&&this.tensorMap.get(e).refCount--}write(e,t,n){if("complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let a={id:this.nextDataId()};return this.tensorMap.set(a,{dtype:n,shape:t,values:e,refCount:1}),a}move(e,t,n,a,r){if("complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:a,shape:n,values:t,refCount:r})}submitQueue(){this.queue.submit([this.commandEncoder.finish()]),this.commandEncoder=null,this.dispatchCountInPass=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach((e=>{this.releaseResource(e),this.tensorMap.delete(e)})),this.uniformPendingDisposal.forEach((e=>this.bufferManager.releaseBuffer(e))),this.stagingPendingDisposal.forEach((e=>this.bufferManager.releaseBuffer(e,!1))),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder())}endComputePassEncoder(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}async checkCompileCompletionAsync(){let e;try{e=await Promise.all(Object.values(this.pipelineCache))}catch(e){throw new Error(e.message)}Object.keys(this.pipelineCache).map(((t,n)=>{this.pipelineCache[t]=e[n]}))}async getBufferData(e){if(Xe().getBool("WEBGPU_ENGINE_COMPILE_ONLY"))return console.warn("The data may be invalid since WEBGPU_ENGINE_COMPILE_ONLY is true, this can only be called when WEBGPU_ENGINE_COMPILE_ONLY is false"),null;let t=e.size,n=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,n,0,t),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let a=n.getMappedRange().slice(0);return n.unmap(),null!=n&&this.bufferManager.releaseBuffer(n),Xe().getBool("WEBGPU_USE_PROFILE_TOOL")&&($r.assert(void 0!==this.dummyContext,(()=>"Fail to get context for profiling tool")),this.dummyContext.getCurrentTexture()),a}convertAndCacheOnCPU(e,t){let n=this.tensorMap.get(e);return n.values=t,n.values}readSync(e){let t=this.tensorMap.get(e),{values:n,complexTensorInfos:a}=t;if(null!=n||"string"===t.dtype)return n;if("complex64"===t.dtype){let t=this.readSync(a.real.dataId),n=this.readSync(a.imag.dataId),r=$r.convertBackendValuesAndArrayBuffer(am.mergeRealAndImagArrays(t,n).buffer,"float32");return this.convertAndCacheOnCPU(e,r),r}this.hasReadSyncWarned||(this.hasReadSyncWarned=!0,console.warn("The performance of synchronously reading data from GPU to CPU is poor on the webgpu backend, please use asynchronous APIs instead."));let r=["opaque","premultiplied"],s=t.resource,i=s.size;$r.assert(i%4==0,(()=>"Because there is 4 bytes for one pixel, buffer size must be multiple of 4."));let o=i/4,l=new ArrayBuffer(i),u=256,d=256,p=r.map((e=>new OffscreenCanvas(u,d))),h=new OffscreenCanvas(u,d);this.endComputePassEncoder(),p.map(((e,t)=>{let n=e.getContext("webgpu");return n.configure({device:this.device,format:"bgra8unorm",usage:GPUTextureUsage.COPY_DST,alphaMode:r[t]}),n.getCurrentTexture()})).map(((e,t)=>{let n=(n,a,i)=>{this.ensureCommandEncoderReady(),this.commandEncoder.copyBufferToTexture({buffer:s,bytesPerRow:1024,offset:i},{texture:e},{width:n,height:a}),this.submitQueue();let o=h.getContext("2d",{willReadFrequently:!0});o.clearRect(0,0,n,a),o.drawImage(p[t],0,0);let u=o.getImageData(0,0,n,a).data,d=r[t],c=new Uint8ClampedArray(l,i,n*a*4);for(let e=0;e<c.length;e+=4)if("premultiplied"===d)c[e+3]=u[e+3];else{let t=u[e];c[e]=u[e+2],c[e+1]=u[e+1],c[e+2]=t}},a=Math.floor(o/(u*d)),i=u,c=d,f=0;for(let e=0;e<a;e++)n(i,c,f),f+=u*d*4;let m=o%(u*d);c=Math.floor(m/u),c>0&&(n(i,c,f),f+=c*(4*u)),i=m%u,i>0&&n(i,1,f)}));let c=$r.convertBackendValuesAndArrayBuffer(l,t.dtype);return this.convertAndCacheOnCPU(e,c),c}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let t,n=this.tensorMap.get(e),{values:a}=n;if(null!=a)return a;if("complex64"===n.dtype){let e=await Promise.all([this.read(n.complexTensorInfos.real.dataId),this.read(n.complexTensorInfos.imag.dataId)]),a=e[0],r=e[1];t=am.mergeRealAndImagArrays(a,r)}else{let e=await this.getBufferData(n.resource);t=$r.convertBackendValuesAndArrayBuffer(e,n.dtype)}return this.convertAndCacheOnCPU(e,t),t}copyBuffer(e){let t=e.size,n=e.usage,a=this.bufferManager.acquireBuffer(t,n);return this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,a,0,t),this.submitQueue(),a}createTensorFromGPUData(e,t,n){let a=e.buffer;if("complex64"===n)throw new Error("Cannot write to a complex64 dtype. ");let r={id:this.nextDataId()};this.tensorMap.set(r,{dtype:n,shape:t,values:null,refCount:1,external:e.zeroCopy});let s=this.tensorMap.get(r),i=GW(s.dtype)*$r.sizeFromShape(s.shape);if(e.buffer.size<i)throw new Error(`GPUBuffer size(${e.buffer.size}) is smaller than tensor size(${i})!`);if((e.buffer.usage&(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))!=(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))throw new Error("GPUBuffer.usage should include GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC!");return!0!==e.zeroCopy&&(a=this.copyBuffer(a)),s.resource=a,di().makeTensorFromDataId(r,t,n,this)}readToGPU(e){let t=this.tensorMap.get(e),{values:n,dtype:a,shape:r,resource:s}=t;if("complex64"===a)throw new Error("Does not support reading buffer for complex64 dtype.");if(null==s)throw null!=n?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let i=s,o=i.size,l=i.usage,u=this.bufferManager.acquireBuffer(o,l);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(s,0,u,0,o),this.submitQueue();let d=this.makeTensorInfo(r,a),p=di().makeTensorFromTensorInfo(d);return this.tensorMap.get(d.dataId).resource=u,{tensorRef:p,buffer:u}}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let n=t.map((e=>$r.decodeString(e)));return Io(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Io(e.shape,e.dtype,t)}async time(e){!this.supportTimestampQuery&&!this.hasTimestampQueryWarned&&(console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --enable-dawn-features=allow_unsafe_apis to try it again. Otherwise, zero will be shown for the kernel time when profiling mode is enabled."),this.hasTimestampQueryWarned=!0);let t=this.activeTimers,n=[],a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=$r.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=$r.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,a&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},o=await Promise.all(r);return i.kernelMs=$r.sum(o),i.getExtraProfileInfo=()=>o.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,i}makeTensorInfo(e,t,n){return"string"===t&&null!=n&&n.length>0&&$r.isString(n[0])&&(n=n.map((e=>$r.encodeString(e)))),{dataId:this.write(n,e,t),shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId).resource;return t instanceof GPUBuffer?{buffer:t}:t instanceof GPUTexture?t.createView():t}uploadToGPU(e){let t=this.tensorMap.get(e);if(null!=t.resource)return;let n,a=GW(t.dtype)*$r.sizeFromShape(t.shape),r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST;if(t.values){if(n=this.bufferManager.acquireBuffer(a,r,!0),"unmapped"===n.mapState){let e=this.bufferManager.acquireBuffer(a,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,!0,!1),r=e.getMappedRange();"int32"===t.dtype||"bool"===t.dtype?new Int32Array(r).set(t.values):new Float32Array(r).set(t.values),e.unmap(),this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,n,0,a),this.stagingPendingDisposal.push(e)}else{let e=n.getMappedRange();"int32"===t.dtype||"bool"===t.dtype?new Int32Array(e).set(t.values):new Float32Array(e).set(t.values),n.unmap()}t.values=null}else n=this.bufferManager.acquireBuffer(a,r);t.resource=n}makeUniforms(e){let t=0,n=0,a=[],r=1;e.forEach((e=>{let s;switch(0===e.data.length&&(e.data=[1]),e.data.length){case 1:s=4;break;case 2:s=8;break;case 3:case 4:case 5:case 6:s=16;break;default:$r.assert(!1,(()=>`Unsupported ${e.data.length}D shape`))}(5===n||6===n)&&(s=16),s>r&&(r=s),t=Math.ceil(t/s)*s,n=e.data.length,a.push(t),t+=4*e.data.length})),t=Math.ceil(t/r)*r;let s=new ArrayBuffer(t);e.forEach(((e,t)=>{let n=a[t];"int32"===e.type?new Int32Array(s,n,e.data.length).set(e.data):"uint32"===e.type?new Uint32Array(s,n,e.data.length).set(e.data):new Float32Array(s,n,e.data.length).set(e.data)}));let i=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(i,0,s,0,t),this.uniformPendingDisposal.push(i),{offset:0,size:t,buffer:i}}runWebGPUProgram(e,t,n,a,r){if(r||(r=this.makeTensorInfo(e.outputShape,n)),0===$r.sizeFromShape(r.shape))return this.tensorMap.get(r.dataId).values=$r.getTypedArrayFromDType(r.dtype,0),r;this.uploadToGPU(r.dataId),e.dispatch=((e,t)=>{let n=e.limits.maxComputeWorkgroupsPerDimension,a=t.dispatchLayout,r=t.dispatch;if(r.every((e=>e<=n)))return r;$r.assert(r[0]>n&&void 0===a.y&&void 0===a.z,(()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension."));let s=Math.ceil(Math.sqrt(r[0]));return s>n?(s=Math.ceil(Math.cbrt(r[0])),$r.assert(s<=n,(()=>"Total dispatch size exceeds WebGPU maximum.")),[s,s,s]):[s,s,1]})(this.device,e);let s=t.map(((t,n)=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(t.dataId),{dtype:this.tensorMap.get(t.dataId).dtype,shape:t.shape,name:e.variableNames[n]}}));e.shaderKey=function(e,t,n){let a=e.shaderKey;if(null!=e.pixelsOpType)return a;let r=[],s=[];t.forEach((e=>{r.push(e.shape),s.push(e.dtype)})),r.push(n.shape),s.push(n.dtype);let i=t.map((e=>am.getBroadcastDims(e.shape,n.shape))),o=t.map((e=>$r.arraysEqual(e.shape,n.shape))).join("_"),l=i.map((e=>e.join("_"))).join(";"),u=MW(e)?"flatDispatch":"";return a+="_"+(e.workgroupSize?e.workgroupSize.join(","):"")+r.map((e=>e.length)).join(",")+s.join(",")+e.variableNames.join(",")+l+o+u,a}(e,s,r);let i=Xe().getBool("WEBGPU_ENGINE_COMPILE_ONLY");return e.shaderKey in this.pipelineCache||(this.pipelineCache[e.shaderKey]=((e,t,n,a,r)=>{let s=function(e,t,n){let a=[],r=n.workgroupSize[0]*n.workgroupSize[1]*n.workgroupSize[2];if(n.outputComponent=n.outputComponent?n.outputComponent:1,a.push(`\n\n      var<private> localId: vec3<u32>;\n      var<private> localIndex: u32;\n      var<private> globalId: vec3<u32>;\n      var<private> numWorkgroups: vec3<u32>;\n      var<private> workgroupId: vec3<u32>;\n\n      // Only used when the y/z dimension of workgroup size is 1.\n      fn getGlobalIndex() -> i32 {\n        ${MW(n)?"  return i32(globalId.x);":`  return i32((workgroupId.z * numWorkgroups.x * numWorkgroups.y +\n                workgroupId.y * numWorkgroups.x + workgroupId.x) * ${r}u +\n                localIndex);\n        `}\n      }\n    `),null!=n.pixelsOpType){let r=n.pixelsOpType===wW.FROM_PIXELS?`@group(0) @binding(0) var<storage, read_write> result: array<${FW(t.dtype,n.outputComponent)}>;`:`@group(0) @binding(1) var<storage, read> inBuf : array<${FW(e[0].dtype,n.outputComponent)}>;`,s=3===t.shape.length?"vec2<i32>":"i32";a.push(`\n        struct Uniform {\n          outShapeStrides : ${s},\n          size            : i32,\n          numChannels     : i32,\n          alpha           : f32,\n        };\n\n        ${r}\n        @group(0) @binding(2) var<uniform> uniforms: Uniform;\n      `);let i=_W(n);return[TW,a.join("\n"),EW(t.shape),n.getUserCode(),NW(i,n)].join("\n")}let s,i,o="struct Uniforms { NAN : f32, INFINITY : f32, ";n.variableNames.forEach(((t,n)=>{let a=IW(e[n].shape.length);o+=`${t.charAt(0).toLowerCase()+t.slice(1)}Shape : ${a}, `,s=e[n].shape.length-1,i=IW(s),o+=`${t.charAt(0).toLowerCase()+t.slice(1)}ShapeStrides: ${i}, `}));let l=IW(t.shape.length);o+=`outShape : ${l}, `,s=t.shape.length-1,i=IW(s),o+=`\n         outShapeStrides: ${i}, `,n.size&&(o+="size : i32, "),n.uniforms&&(o+=n.uniforms),o+="};",o=function(e){return e=e.replace(/(\w+)\s*:\s*vec(5|6)/g,(e=>"@align(16) "+e)),e=e.replace(/vec(5|6)\s*,\s*(\w+)/g,((e,t,n)=>`vec${t}, @align(16) ${n}`)),e}(o),a.push(o),n.atomic?a.push("\n      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;\n    "):a.push(`\n      @group(0) @binding(0) var<storage, read_write> result: array<${FW(t.dtype,n.outputComponent)}>;\n    `),n.variableNames.forEach(((t,r)=>{a.push(`\n      @group(0) @binding(${1+r}) var<storage, read> ${t}: array<${n.variableComponents?FW(e[r].dtype,n.variableComponents[r]):FW(e[r].dtype,n.outputComponent)}>;\n        `)})),""!==o&&a.push(`\n      @group(0) @binding(${1+n.variableNames.length}) var<uniform> uniforms: Uniforms;\n      `);let u=function(e,t){let{x:n,y:a=[],z:r=[]}=t,s=e.length,i=n.length+a.length+r.length;if(i!==s)return"";if(n.length===s)return`fn getOutputCoords() -> ${IW(s)}{\n    let globalIndex = getGlobalIndex();\n    return getCoordsFromIndex(globalIndex);\n  }\n  `;let o="",l=[n,a,r];for(let e=0;e<l.length;e++){let t=l[e];if(0!==t.length)if(1===t.length)o+=`let d${t[0]} = i32(globalId[${e}]);`;else{let n=bW(t,"uniforms.outShape");o+=`var index${e} = i32(globalId[${e}]);`;for(let a=0;a<n.length;a++)o+=`let d${t[a]} = index${e} / ${n[a]};`,a===n.length-1?o+=`let d${t[a+1]} = index${e} - d${t[a]} * ${n[a]};`:o+=`index${e} = index${e} - d${t[a]} * ${n[a]};`}}let u=[];for(let e=0;e<i;e++)u.push(`d${e}`);let d=IW(i),p=`fn getOutputCoords() -> ${d} {\n  ${o}\n`;return 0===u.length?p+=`return ${d}(0); }`:p+=`return ${d}(${u.join(",")}); }`,p}(t.shape,n.dispatchLayout),d=[TW,a.join("\n")+RW,EW(t.shape),u,$W(t.shape.length)];n.atomic||d.push(function(e,t,n){let a=e.length,r=FW(t,n),s=`fn setOutputAtIndex(flatIndex : i32, value : ${kW(n)}) {\n      result[flatIndex] = ${r}(value);\n    }\n\n    fn setOutputAtIndexI32(flatIndex : i32, value : ${kW(n,"i32")}) {\n      result[flatIndex] = ${r}(value);\n    }\n    `;if(a>=2){let e=["d0","d1","d2","d3","d4","d5"].slice(0,a),t=IW(a);s+=`\n      fn setOutputAtCoords(${e.map((e=>`${e} : i32`)).join(", ")}, value : ${kW(n)}) {\n        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));\n        setOutputAtIndex(flatIndex${1===n?"":` / ${n}`}, value);\n      }\n      fn setOutputAtCoordsI32(${e.map((e=>`${e} : i32`)).join(", ")}, value : ${kW(n,"i32")}) {\n        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));\n        setOutputAtIndexI32(flatIndex${1===n?"":` / ${n}`}, value);\n      }\n    `}return s}(t.shape,t.dtype,n.outputComponent)),n.variableNames.forEach(((t,n)=>{d.push(`${EW(e[n].shape,t)}`)}));let p=e.map(((e,a)=>function(e,t,n,a){let r=function(e,t){let n=e.name,a=e.shape.length,r=IW(a),s="get"+n.charAt(0).toUpperCase()+n.slice(1),i=["d0","d1","d2","d3","d4","d5"].slice(0,a),o=i.map((e=>`${e} : i32`)).join(", ");if(a<1)return`\n      fn ${s}() -> ${kW(t)} {\n        return ${kW(t)}(${n}[0]);\n      }\n    `;let l=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`,u=`${a}D`;return 0===a&&(u="1D"),`\n    fn ${s}(${o}) -> ${kW(t)} {\n      return ${kW(t)}(${n}[getIndexFromCoords${u}(${r}(${i.join(",")}),\n        ${l})${1===t?"":` / ${t}`}]);\n    }\n   `}(e,n);return e.shape.length<=t.length&&(r+=function(e,t,n,a){let r=e.name,s=r.charAt(0).toUpperCase()+r.slice(1),i="get"+s+"ByOutput",o=e.shape.length,l=t.length,u=IW(l);if($r.arraysEqual(e.shape,t)&&a)return`\n    fn ${i}Index(globalIndex : i32) -> ${kW(n)} {\n      return ${kW(n)}(${r}[globalIndex]);\n    }\n\n    fn ${i}Coords(coords : ${u}) -> ${kW(n)} {\n      return ${kW(n)}(${r}[${l>1?"getOutputIndexFromCoords(coords)":"coords"}${1===n?"":` / ${n}`}]);\n    }\n    `;let d=am.getBroadcastDims(e.shape,t),p=l-o,h="";if(0===o)return`\n    fn ${i}Index(globalIndex : i32) -> ${kW(n)}{\n      return get${s}();\n    }\n\n    fn ${i}Coords(coords : ${u}) -> ${kW(n)}{\n      return get${s}();\n    }\n  `;h=l<2&&d.length>=1?"coords = 0;":d.map((e=>`coords.${SW(e+p)} = 0;`)).join("\n");let c="";c=l<2&&o>0?"coords":l>1?`${IW(o)}(${e.shape.map(((e,t)=>`coords.${SW(t+p)}`)).join(", ")})`:"coords";let f=`uniforms.${r.charAt(0).toLowerCase()+r.slice(1)}Shape`,m=`${o}D`;return`\n  fn ${i}Index(globalIndex : i32) -> ${kW(n)} {\n    var coords = getCoordsFromIndex(globalIndex);\n    ${h}\n    return ${kW(n)}(${r}[getIndexFromCoords${m}(${c}, ${f})${1===n?"":` / ${n}`}]);\n  }\n\n  fn ${i}Coords(coordsIn : ${u}) -> ${kW(n)} {\n    var coords = coordsIn;\n    ${h}\n    return ${kW(n)}(${r}[getIndexFromCoords${m}(${c}, ${f})${1===n?"":` / ${n}`}]);\n  }\n`}(e,t,n,a)),r}(e,t.shape,n.variableComponents?n.variableComponents[a]:n.outputComponent,n.dispatchLayout.x.length===t.shape.length))).join("\n");d.push(p),d.push(n.getUserCode());let h=_W(n);return d.push(NW(h,n)),d.join("\n")}(n,{dtype:a.dtype,shape:a.shape},t),i=e.createShaderModule({code:s,label:t.constructor.name}),o=Xe().get("WEBGPU_PRINT_SHADER");if(""!==o){o=o.toLowerCase();let e=o.split(",");("all"===o||e.some((e=>t.shaderKey.toLowerCase().includes(e))))&&(console.group(t.shaderKey),console.debug(s),console.groupEnd())}return r?e.createComputePipelineAsync({compute:{module:i,entryPoint:"_start"},label:t.constructor.name,layout:"auto"}):e.createComputePipeline({compute:{module:i,entryPoint:"_start"},label:t.constructor.name,layout:"auto"})})(this.device,e,s,r,i)),e.pipeline=this.pipelineCache[e.shaderKey],i||this.recordAndSubmit(e,r,t,a),r}recordAndSubmit(e,t,n,a){if(e.pipeline instanceof Promise)throw new Error("Please call checkCompileCompletionAsync to ensure parallel compilation is done!");let r=[],s=[],i="int32";if(null==e.pixelsOpType){r.push({type:"float32",data:[NaN]},{type:"float32",data:[1/0]}),s=n.concat(t).map((e=>e.shape));let e="int32";s.map((t=>{r.push({type:e,data:t});let n=$r.computeStrides(t);r.push({type:e,data:n})}))}else{let e=$r.computeStrides(t.shape);r.push({type:i,data:e})}if(e.size){let t=$r.sizeFromShape(e.outputShape);r.push({type:i,data:[e.outputComponent?t/e.outputComponent:t]})}a&&(r=[...r,...a]);let o=[this.tensorToBinding(t),...n.map((e=>this.tensorToBinding(e))),this.makeUniforms(r)];n.forEach((e=>{this.commandQueueOwnedIds.add(e.dataId)})),this.commandQueueOwnedIds.add(t.dataId);let l=this.device.createBindGroup({layout:e.pipeline.getBindGroupLayout(0),entries:o.map(((e,t)=>({binding:t,resource:e})))}),u=null!=this.activeTimers;this.ensureCommandEncoderReady();let d={};u&&this.supportTimestampQuery?(this.endComputePassEncoder(),null==this.querySet&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),d.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1},this.computePassEncoder=this.commandEncoder.beginComputePass(d)):this.computePassEncoder||(this.computePassEncoder=this.commandEncoder.beginComputePass(d)),this.computePassEncoder.setPipeline(e.pipeline),this.computePassEncoder.setBindGroup(0,l),this.computePassEncoder.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),this.dispatchCountInPass++,(u||Xe().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchCountInPass||e.pixelsOpType===wW.DRAW)&&(this.endComputePassEncoder(),u?this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime()}):this.submitQueue())}async getQueryTime(){if(!this.supportTimestampQuery)return 0;null==this.queryResolveBuffer&&(this.queryResolveBuffer=this.bufferManager.acquireBuffer(8*this.querySetCount,GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST|GPUBufferUsage.QUERY_RESOLVE)),this.commandEncoder.resolveQuerySet(this.querySet,0,this.querySetCount,this.queryResolveBuffer,0);let e=this.bufferManager.acquireBuffer(8*this.querySetCount,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,8*this.querySetCount),this.submitQueue(),await e.mapAsync(GPUMapMode.READ);let t=new BigUint64Array(e.getMappedRange()),n=Number(t[1]-t[0])/1e6;return e.unmap(),this.bufferManager.releaseBuffer(e),n}shouldExecuteOnCPU(e,t=XW){return Xe().getBool("WEBGPU_CPU_FORWARD")&&e.every((e=>null==this.tensorMap.get(e.dataId).resource&&$r.sizeFromShape(e.shape)<t))}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(null!=this.querySet&&this.querySet.destroy(),this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}};KW.nextDataId=0,HW()&&ki("webgpu",(async()=>{let e={powerPreference:Xe().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),n={},a=[];t.features.has("timestamp-query")&&a.push("timestamp-query"),t.features.has("bgra8unorm-storage")&&a.push(["bgra8unorm-storage"]),n.requiredFeatures=a;let r=t.limits;n.requiredLimits={maxComputeWorkgroupStorageSize:r.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.maxStorageBufferBindingSize,maxBufferSize:r.maxBufferSize,maxComputeWorkgroupSizeX:r.maxComputeWorkgroupSizeX,maxComputeInvocationsPerWorkgroup:r.maxComputeInvocationsPerWorkgroup};let s=await t.requestDevice(n),i=await t.requestAdapterInfo();return new KW(s,i)}),3),function(e){e[e.ADD=0]="ADD",e[e.ATAN2=1]="ATAN2",e[e.COMPLEX_MULTIPLY_IMAG=2]="COMPLEX_MULTIPLY_IMAG",e[e.COMPLEX_MULTIPLY_REAL=3]="COMPLEX_MULTIPLY_REAL",e[e.DIV=4]="DIV",e[e.ELU_DER=5]="ELU_DER",e[e.EQUAL=6]="EQUAL",e[e.FLOOR_DIV=7]="FLOOR_DIV",e[e.GREATER=8]="GREATER",e[e.GREATER_EQUAL=9]="GREATER_EQUAL",e[e.LESS=10]="LESS",e[e.LESS_EQUAL=11]="LESS_EQUAL",e[e.LOGICAL_AND=12]="LOGICAL_AND",e[e.LOGICAL_OR=13]="LOGICAL_OR",e[e.MAX=14]="MAX",e[e.MIN=15]="MIN",e[e.MOD=16]="MOD",e[e.MUL=17]="MUL",e[e.NOT_EQUAL=18]="NOT_EQUAL",e[e.POW=19]="POW",e[e.PRELU=20]="PRELU",e[e.SQUARED_DIFFERENCE=21]="SQUARED_DIFFERENCE",e[e.SUB=22]="SUB"}(qW||(qW={}));var YW,ZW="let resultTemp = a + b;",JW="let resultTemp = atan2(a, b);",QW="let resultTemp = areal * breal - aimag * bimag;",eB="let resultTemp = areal * bimag + aimag * breal;",tB="let resultTemp = a / b;",nB="let resultTemp = select(a * (b + 1.0), a, b >= b - b);",aB="\n  let zero = sign(a) * 0 + 0;\n  let one = sign(b) * 0 + 1;\n  let resultTemp = select(zero, one, a == b);\n",rB="\n  let remainder =\n      select(a % b, round(a % b), (round(a) == a) & (round(b) == b));\n  let quotient = (a - remainder) / b;\n  let resultTemp =\n      round(select(quotient, quotient - 1, sign(remainder) == -sign(b)));\n",sB="\n  let zero = sign(a) * 0 + 0;\n  let one = sign(b) * 0 + 1;\n  let resultTemp = select(zero, one, a > b);\n",iB="\n  let zero = sign(a) * 0 + 0;\n  let one = sign(b) * 0 + 1;\n  let resultTemp = select(zero, one, a >= b);\n",oB="\n  let zero = sign(a) * 0 + 0;\n  let one = sign(b) * 0 + 1;\n  let resultTemp = select(zero, one, a < b);\n",lB="\n  let zero = sign(a) * 0 + 0;\n  let one = sign(b) * 0 + 1;\n  let resultTemp = select(zero, one, a <= b);\n",uB="return f32(a >= 1.0 && b >= 1.0);",dB="return (vec4<f32>(a >= vec4<f32>(1.0)) *\n  vec4<f32>(b >= vec4<f32>(1.0)));",pB="return f32(a >= 1.0 || b >= 1.0);",hB="return min(vec4<f32>(a >= vec4<f32>(1.0)) +\n  vec4<f32>(b >= vec4<f32>(1.0)), vec4<f32>(1.0));",cB="let resultTemp = max(a, b);",fB="let resultTemp = min(a, b);",mB="\n  let isNaN = b == 0.;\n  var resultTemp = a % b;\n  resultTemp = select((resultTemp + b) % b, resultTemp,\n      (a < 0. && b < 0.) || (a >= 0. && b > 0.));\n",gB="\n  let isNaN = !vec4<bool>(b);\n  var resultTemp = vec4<f32>(a % b);\n  if (!((a[0] < 0. && b[0] < 0.) || (a[0] >= 0. && b[0] > 0.))) {\n    resultTemp[0] = (resultTemp[0] + b[0]) % b[0];\n  }\n  if (!((a[1] < 0. && b[1] < 0.) || (a[1] >= 0. && b[1] > 0.))) {\n    resultTemp[1] = (resultTemp[1] + b[1]) % b[1];\n  }\n  if (!((a[2] < 0. && b[2] < 0.) || (a[2] >= 0. && b[2] > 0.))) {\n    resultTemp[2] = (resultTemp[2] + b[2]) % b[2];\n  }\n  if (!((a[3] < 0. && b[3] < 0.) || (a[3] >= 0. && b[3] > 0.))) {\n    resultTemp[3] = (resultTemp[3] + b[3]) % b[3];\n  }\n",yB="let resultTemp = a * b;",xB="\n  var resultTemp = f32(a != b);\n  let valueForNaN = 1.0;\n",AB="\n  var resultTemp = vec4<f32>(a != b);\n  let valueForNaN = 1.0;\n",bB="\n  let isNaN = a < 0.0 && floor(b) < b;\n  if (b == 0.0) {\n    return 1.0;\n  }\n  var resultTemp = select(sign(a) * pow(abs(a), b), pow(abs(a), b),\n      round(abs(b) % 2.0) != 1.0);\n",wB="\n  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);\n  let isModRound1 = vec4<f32>(isModRound1Bool);\n  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);\n  var resultTemp = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  let isExpZero = b == vec4<f32>(0.0);\n  if (isExpZero.r) {\n    resultTemp.r = 1.0;\n  }\n  if (isExpZero.g) {\n    resultTemp.g = 1.0;\n  }\n  if (isExpZero.b) {\n    resultTemp.b = 1.0;\n  }\n  if (isExpZero.a) {\n    resultTemp.a = 1.0;\n  }\n  let isNaN = (a < vec4<f32>(0.0)) & (floor(b) < b);\n",vB="if (a < 0.0) { return b * a; }  return a;",kB="\n  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));\n  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);\n",IB="let resultTemp = (a - b) * (a - b);",SB="let resultTemp = a - b;";function CB(e,t){let n;do{switch(e){case qW.ATAN2:n=JW;break;case qW.MAX:n=cB;break;case qW.MIN:n=fB;break;case qW.MOD:n=t?gB:mB;break;case qW.NOT_EQUAL:n=t?AB:xB;break;case qW.POW:n=t?wB:bB;break;default:continue}let a,r,s;return t?(a="isnanVec4",r="vec4<f32>",s="vec4<bool>"):(a="isnan",r="f32",s="bool"),`\n      let aIsNaN = ${a}(a);\n      let aPostLegalization = select(a, ${r}(42), aIsNaN);\n      let bIsNaN = ${a}(b);\n      let bPostLegalization = select(b, ${r}(42), bIsNaN);\n      let isNaN = false;\n      let valueForNaN = uniforms.NAN;\n      {\n        let a = aPostLegalization;\n        let b = bPostLegalization;\n        ${n}\n        return select(\n            resultTemp, ${r}(valueForNaN),\n            ${s}(isNaN) | aIsNaN | bIsNaN);\n      }\n    `}while(0);switch(e){case qW.ADD:n=ZW;break;case qW.COMPLEX_MULTIPLY_IMAG:n=eB;break;case qW.COMPLEX_MULTIPLY_REAL:n=QW;break;case qW.DIV:n=tB;break;case qW.ELU_DER:n=nB;break;case qW.EQUAL:n=aB;break;case qW.FLOOR_DIV:n=rB;break;case qW.GREATER:n=sB;break;case qW.GREATER_EQUAL:n=iB;break;case qW.LESS:n=oB;break;case qW.LESS_EQUAL:n=lB;break;case qW.LOGICAL_AND:return t?dB:uB;case qW.LOGICAL_OR:return t?hB:pB;case qW.MUL:n=yB;break;case qW.PRELU:return t?kB:vB;case qW.SQUARED_DIFFERENCE:n=IB;break;case qW.SUB:n=SB}return`\n    ${n}\n    return resultTemp;\n  `}!function(e){e[e.ABS=0]="ABS",e[e.ACOS=1]="ACOS",e[e.ACOSH=2]="ACOSH",e[e.ASIN=3]="ASIN",e[e.ASINH=4]="ASINH",e[e.ATAN=5]="ATAN",e[e.ATANH=6]="ATANH",e[e.CEIL=7]="CEIL",e[e.COS=8]="COS",e[e.COSH=9]="COSH",e[e.ELU=10]="ELU",e[e.ERF=11]="ERF",e[e.EXP=12]="EXP",e[e.EXPM1=13]="EXPM1",e[e.FLOOR=14]="FLOOR",e[e.IS_FINITE=15]="IS_FINITE",e[e.IS_INF=16]="IS_INF",e[e.IS_NAN=17]="IS_NAN",e[e.LINEAR=18]="LINEAR",e[e.LOG=19]="LOG",e[e.LOG1P=20]="LOG1P",e[e.LOGICAL_NOT=21]="LOGICAL_NOT",e[e.NEG=22]="NEG",e[e.RELU=23]="RELU",e[e.RELU6=24]="RELU6",e[e.LEAKYRELU=25]="LEAKYRELU",e[e.RECIPROCAL=26]="RECIPROCAL",e[e.ROUND=27]="ROUND",e[e.RSQRT=28]="RSQRT",e[e.SELU=29]="SELU",e[e.SIGMOID=30]="SIGMOID",e[e.SIGN=31]="SIGN",e[e.SIN=32]="SIN",e[e.SINH=33]="SINH",e[e.SOFTPLUS=34]="SOFTPLUS",e[e.SQRT=35]="SQRT",e[e.SQUARE=36]="SQUARE",e[e.STEP=37]="STEP",e[e.TAN=38]="TAN",e[e.TANH=39]="TANH",e[e.TO_INT=40]="TO_INT"}(YW||(YW={}));var NB="return abs(a);",TB="\n  if (abs(a) > 1.) {\n    return uniforms.NAN;\n  }\n  return acos(a);\n",RB="\n  if (a < 1.) {\n    return uniforms.NAN;\n  }\n  return acosh(a);\n",EB="\n  if (abs(a) > 1.) {\n    return uniforms.NAN;\n  }\n  return asin(a);\n",$B="return asinh(a);",MB="\n  if (isnan(a)) {\n    return uniforms.NAN;\n  }\n  return atan(a);\n",FB="\n  if (abs(a) > 1.) {\n    return uniforms.NAN;\n  }\n  if (a == 1.) {\n    return uniforms.INFINITY;\n  }\n  if (a == -1.) {\n    return -uniforms.INFINITY;\n  }\n  return atanh(a);\n",_B="return ceil(a);",PB="return cos(a);",OB="\n  let e2x = exp(-a);\n  return (e2x + 1.0 / e2x) / 2.0;\n",DB="return exp(a) - 1.0;",zB="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",LB="\n  var resFloat = exp(a) - vec4<f32>(1.0);\n  if (a.r >= 0.0) {\n    resFloat.r = a.r;\n  }\n  if (a.g >= 0.0) {\n    resFloat.g = a.g;\n  }\n  if (a.b >= 0.0) {\n    resFloat.b = a.b;\n  }\n  if (a.a >= 0.0) {\n    resFloat.a = a.a;\n  }\n  return resFloat;\n",WB=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  let p = ${am.ERF_P};\n  let a1 = ${am.ERF_A1};\n  let a2 = ${am.ERF_A2};\n  let a3 = ${am.ERF_A3};\n  let a4 = ${am.ERF_A4};\n  let a5 = ${am.ERF_A5};\n\n  let sign = sign(a);\n  let absA = abs(a);\n  let t = 1.0 / (1.0 + p * absA);\n  return sign * (1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * exp(-absA * absA));\n`,BB="return exp(a);",VB="return floor(a);",UB="return f32(!isnan(a) && !isinf(a));",GB="return f32(isinf(a));",HB="return f32(isnan(a));",jB="return a;",qB="if (a < 0.0) { return uniforms.NAN; }\n  return log(a);",XB="\n  if (isnan(a)) { return a; }\n  return log(1.0 + a);\n",KB="return f32(!(a >= 1.0));",YB="return -a;",ZB="if (a < 0.0) { return uniforms.alpha * a; } return a;",JB="\n  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));\n  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);\n",QB="return 1.0 / a;",eV="return select(a, 0.0, a < 0.0);",tV="return clamp(a, 0.0, 6.0);",nV="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",aV="\n  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));\n",rV="return round(a);",sV="return inverseSqrt(a);",iV=`\n  if (a >= 0.0) {\n    return ${am.SELU_SCALE} * a;\n  } else {\n    return ${am.SELU_SCALEALPHA} * (exp(a) - 1.0);\n  }\n`,oV="return 1.0 / (1.0 + exp(-1.0 * a));",lV="return sign(a);",uV="return sin(a);",dV="\n  let e2x = exp(a);\n  return (e2x - 1.0 / e2x) / 2.0;\n",pV="\n  let epsilon = 1.1920928955078125e-7;\n  let threshold = log(epsilon) + 2.0;\n\n  let too_large = a > -threshold;\n  let too_small = a < threshold;\n  let exp_a = exp(a);\n\n  if (too_large) {\n    return a;\n  } else if (too_small) {\n    return exp_a;\n  } else {\n    return log(exp_a + 1.0);\n  }\n",hV="return sqrt(a);",cV="return a * a;",fV="\n  if (isnan(a)) {\n    return a;\n  }\n\n  return select(uniforms.stepAlpha, 1.0, a > 0.0);\n",mV="return tan(a);",gV="\n  let e2x = exp(-2.0 * abs(a));\n  return sign(a) * (1.0 - e2x) / (1.0 + e2x);\n",yV="return f32(i32((a)));";function xV(e,t){switch(e){case YW.ABS:return NB;case YW.ACOS:return TB;case YW.ACOSH:return RB;case YW.ASIN:return EB;case YW.ASINH:return $B;case YW.ATAN:return MB;case YW.ATANH:return FB;case YW.COS:return PB;case YW.COSH:return OB;case YW.CEIL:return _B;case YW.ELU:return t?LB:zB;case YW.ERF:return WB;case YW.EXP:return BB;case YW.EXPM1:return DB;case YW.FLOOR:return VB;case YW.IS_FINITE:return UB;case YW.IS_INF:return GB;case YW.IS_NAN:return HB;case YW.LINEAR:return jB;case YW.LOG:return qB;case YW.LOG1P:return XB;case YW.LOGICAL_NOT:return KB;case YW.NEG:return YB;case YW.LEAKYRELU:return t?JB:ZB;case YW.RECIPROCAL:return QB;case YW.RELU:return t?aV:eV;case YW.RELU6:return t?nV:tV;case YW.ROUND:return rV;case YW.RSQRT:return sV;case YW.SELU:return iV;case YW.SIGMOID:return oV;case YW.SIGN:return lV;case YW.SIN:return uV;case YW.SINH:return dV;case YW.SOFTPLUS:return pV;case YW.SQRT:return hV;case YW.SQUARE:return cV;case YW.STEP:return fV;case YW.TAN:return mV;case YW.TANH:return gV;case YW.TO_INT:return yV;default:throw new Error(`BinaryType ${e} is not implemented!`)}}function AV(e,t=!1,n=!1,a=3){if(null===e)return"";let r="";if("linear"===e)r=xV(YW.LINEAR);else if("relu"===e)r=xV(YW.RELU,n);else if("elu"===e)r=xV(YW.ELU,n);else if("relu6"===e)r=xV(YW.RELU6,n);else if("prelu"===e)r=CB(qW.PRELU,n);else if("sigmoid"===e)r=xV(YW.SIGMOID,n);else{if("leakyrelu"!==e)throw new Error(`Activation ${e} has not been implemented for the WebGPU backend.`);r=xV(YW.LEAKYRELU,n)}let s=kW(n?4:1),i="";return i=t?`\n      fn activation(a : ${s}, coords : vec${a}<i32>) -> ${s} {\n        let b = getPreluActivationWeightsByOutputCoords(coords);\n        ${r}\n      }`:`\n      fn activation(a : ${s}, coords : vec${a}<i32>) -> ${s} {\n        ${r}\n      }`,i}function bV(e,t){return`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      ${t?"value = activation(value, coords);":""}\n      `}function wV(e,t,n=!1,a=!1,r=!1,s=1){$r.assert(e&&1===s||!e,(()=>`transposeA ${e} is not compatible with component size ${s}`));let i=`\n      ${e?"value = getA(batch, col, row);":"value = getA(batch, row, col);"}\n\n    `,o=t?"value = getB(batch, col, row);":"value = getB(batch, row, col);";return`\n  fn mm_readA(batch: i32, row: i32, col: i32) -> ${kW(s)} {\n    var value = ${kW(s)}(0.0);\n    ${n&&r?i:`\n    ${e?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}\n    {\n      ${i}\n    }\n    `}\n    return value;\n  }\n\n  fn mm_readB(batch: i32, row: i32, col: i32) -> ${kW(s)} {\n    var value = ${kW(s)}(0.0);\n    ${o}\n    return value;\n  }\n  `}function vV(e,t,n,a,r=!1,s=!1,i=!1,o=1){return`\n  ${wV(n,a,r,s,i,o)}\n  fn mm_write(batch: i32, row: i32, col: i32, valueIn: ${kW(o)}) {\n    ${r&&s?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}\n    {\n      var value = valueIn;\n      let coords = vec3<i32>(batch, row, col);\n      ${bV(e,t)}\n      setOutputAtCoords(coords[0], coords[1], coords[2], value);\n    }\n  }\n  `}function kV(e,t,n=!1,a=32,r=!1,s=32,i=!1){let o=t[1]*e[1],l=t[0]*e[0],u=n?o:a,d=n?a:o,p=u/t[0],h=a/t[1],c=e[1],f=e[0];return $r.assert((n&&4===p&&4===e[1]||!n&&(3===p||4===p))&&u%t[0]==0&&a%t[1]==0&&4===e[0],(()=>`If transposeA ${n} is true, innerElementSize ${p} and workPerThread[1] ${e[1]} must be 4.\n          Otherwise, innerElementSize ${p} must be 3 or 4.\n      tileAWidth ${u} must be divisible by workgroupSize[0]${t[0]}. tileInner ${a} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`)),`\n  var<workgroup> mm_Asub : array<array<vec${p}<f32>, ${u/p}>, ${d}>;\n  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${l/e[0]}>, ${a}>;\n\n  ${CW()} {\n    let localRow = i32(localId.y);\n    let tileRow = localRow * ${c};\n    let tileCol = i32(localId.x);\n\n    let globalRow = i32(globalId.y) * ${c};\n    let globalCol = i32(globalId.x) * ${f};\n    let batch = ${r?"0":"i32(globalId.z)"};\n    let batchA = ${r||!i?"batch":"batch % uniforms.aShape[0]"};\n    let batchB = ${r||!i?"batch":"batch % uniforms.bShape[0]"};\n    let globalRowStart = i32(workgroupId.y) * ${o};\n\n    let numTiles = ${r?`${Math.ceil(s/a)}`:`(uniforms.dimInner - 1) / ${a} + 1`};\n    var kStart = ${r?`i32(globalId.z) * ${s}`:"0"};\n\n    var acc: array<vec4<f32>, ${c}>;\n\n    // Loop over shared dimension.\n    let tileRowB = localRow * ${h};\n    for (var t = 0; t < numTiles; t++) {\n        // Load one tile of A into local memory.\n        for (var innerRow = 0; innerRow < ${c}; innerRow++) {\n            let inputRow = tileRow + innerRow;\n            let inputCol = tileCol;\n            ${((e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          kStart + inputRow,\n          globalRowStart + inputCol * ${t});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          globalRow + innerRow,\n          kStart + inputCol * ${t});\n        `)(n,p)}\n        }\n\n        // Load one tile of B into local memory.\n        for (var innerRow = 0; innerRow < ${h}; innerRow++) {\n            let inputRow = tileRowB + innerRow;\n            let inputCol = tileCol;\n            mm_Bsub[inputRow][inputCol] = mm_readB(batchB, kStart + inputRow, globalCol);\n        }\n        kStart = kStart + ${a};\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        ${((e,t,n,a)=>{if(e)return`\n      for (var k = 0; k < ${a}; k++) {\n        let BCached0 = mm_Bsub[k][tileCol];\n        let ACached0 = mm_Asub[k][localRow];\n        for (var i = 0; i < ${n}; i++) {\n          acc[i] = fma(BCached0, vec4<f32>(ACached0[i]), acc[i]);\n        }\n      }`;{let e="",r="";for(let n=0;n<t;n++)e+=`let BCached${n} = mm_Bsub[k * ${t} + ${n}][tileCol];`,r+=`acc[i] = fma(BCached${n}, vec4<f32>(ACached[${n}]), acc[i]);`;return`\n      for (var k = 0; k < ${a/t}; k++) {\n        ${e}\n        for (var i = 0; i < ${n}; i++) {\n          let ACached = mm_Asub[tileRow + i][k];\n          ${r}\n        }\n      }`}})(n,p,c,a)}\n        workgroupBarrier();\n    }\n\n    for (var innerRow = 0; innerRow < ${c}; innerRow++) {\n        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n    }\n  }`}var IV=e=>e?"\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          kStart + inputRow,\n          globalRowStart + inputCol);\n        ":"\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          globalRowStart + inputRow,\n          kStart + inputCol);\n        ";function SV(e,t,n=!1,a=32,r=!1,s=32,i=!1,o=!1){let l=e[1]*t[1],u=e[0]*t[0],d=n?l:a,p=n?a:l;$r.assert(p%t[1]==0&&d%t[0]==0&&a%t[1]==0,(()=>`tileAHight ${p} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${d} must be divisible by workgroupSize[0]${t[0]}, tileInner ${a} must be divisible by workgroupSize[1]${t[1]}`));let h=p/t[1],c=d/t[0],f=a/t[1],m=e[1],g=e[0],y=i?`\n      let localRow = i32(localId.y);\n      let localCol = i32(localId.x);\n      let globalRowStart = i32(workgroupId.y) * ${l};\n      let globalColStart = i32(workgroupId.x) * ${u};\n\n      // Loop over shared dimension.\n      for (var t = 0; t < numTiles; t++) {\n        // Load one tile of A into local memory.\n        for (var inputRow = localRow; inputRow < ${p}; inputRow = inputRow + ${t[1]}) {\n          for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${t[0]}) {\n            ${IV(n)}\n          }\n        }\n        // Load one tile of B into local memory.\n        for (var inputRow = localRow; inputRow < ${a}; inputRow = inputRow + ${t[1]}) {\n              for (var inputCol = localCol; inputCol < ${u}; inputCol = inputCol + ${t[0]}) {\n            mm_Bsub[inputRow][inputCol] = mm_readB(batchB,\n              kStart + inputRow,\n              globalColStart + inputCol);\n          }\n        }\n        kStart = kStart + ${a};\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        var BCached : array<f32, ${g}>;\n        for (var k = 0; k < ${a}; k++) {\n          for (var inner = 0; inner < ${g}; inner++) {\n            BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n          }\n          for (var innerRow = 0; innerRow < ${m}; innerRow++) {\n            let ACached = ${n?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n            for (var innerCol = 0; innerCol < ${g}; innerCol++) {\n              acc[innerRow][innerCol] =\n                  fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);\n            }\n          }\n        }\n        workgroupBarrier();\n      }\n      for (var innerRow = 0; innerRow < ${m}; innerRow++) {\n        let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n        for (var innerCol = 0; innerCol < ${g}; innerCol++) {\n          let gCol = globalColStart + localCol + innerCol * ${t[0]};\n          mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n        }\n      }\n      `:`\n  let tileRow = i32(localId.y) * ${m};\n  let tileCol = i32(localId.x) * ${g};\n\n  let globalRow = i32(globalId.y) * ${m};\n  let globalCol = i32(globalId.x) * ${g};\n  let globalRowStart = i32(workgroupId.y) * ${l};\n\n  let tileRowA = i32(localId.y) * ${h};\n  let tileColA = i32(localId.x) * ${c};\n  let tileRowB = i32(localId.y) * ${f};\n  // Loop over shared dimension.\n  for (var t = 0; t < numTiles; t++) {\n    // Load one tile of A into local memory.\n    for (var innerRow = 0; innerRow < ${h}; innerRow++) {\n      for (var innerCol = 0; innerCol < ${c}; innerCol++) {\n        let inputRow = tileRowA + innerRow;\n        let inputCol = tileColA + innerCol;\n        ${IV(n)}\n      }\n    }\n\n    // Load one tile of B into local memory.\n    for (var innerRow = 0; innerRow < ${f}; innerRow++) {\n      for (var innerCol = 0; innerCol < ${g}; innerCol++) {\n        let inputRow = tileRowB + innerRow;\n        let inputCol = tileCol + innerCol;\n        mm_Bsub[inputRow][inputCol] = mm_readB(batchB,\n          kStart + inputRow,\n          globalCol + innerCol);\n      }\n    }\n    kStart = kStart + ${a};\n    workgroupBarrier();\n\n    // Compute acc values for a single thread.\n    var BCached : array<f32, ${g}>;\n    for (var k = 0; k < ${a}; k++) {\n      for (var inner = 0; inner < ${g}; inner++) {\n        BCached[inner] = mm_Bsub[k][tileCol + inner];\n      }\n\n      for (var innerRow = 0; innerRow < ${m}; innerRow++) {\n        ${(e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];")(n)}\n        for (var innerCol = 0; innerCol < ${g}; innerCol++) {\n          acc[innerRow][innerCol] =\n              fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);\n        }\n      }\n    }\n\n    workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < ${m}; innerRow++) {\n    for (var innerCol = 0; innerCol < ${g}; innerCol++) {\n      mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n          acc[innerRow][innerCol]);\n    }\n  }\n  `;return`\n    var<workgroup> mm_Asub : array<array<f32, ${d}>, ${p}>;\n    var<workgroup> mm_Bsub : array<array<f32, ${u}>, ${a}>;\n\n    ${CW()} {\n      let batch = ${r?"0":"i32(globalId.z)"};\n      let batchA = ${r||!o?"batch":"batch % uniforms.aShape[0]"};\n      let batchB = ${r||!o?"batch":"batch % uniforms.bShape[0]"};\n      let numTiles = ${r?`${Math.ceil(s/a)}`:`(uniforms.dimInner - 1) / ${a} + 1`};\n      var kStart = ${r?`i32(globalId.z) * ${s}`:"0"};\n\n      var acc : array<array<f32, ${g}>, ${m}>;\n\n      // Without this initialization strange values show up in acc.\n      for (var innerRow = 0; innerRow < ${m}; innerRow++) {\n        for (var innerCol = 0; innerCol < ${g}; innerCol++) {\n          acc[innerRow][innerCol] = 0.0;\n        }\n      }\n      ${y}\n    }\n  `}var CV=class{constructor(e,t,n=!1,a=!1,r=null,s=null,i=null,o=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let l=n?e[1]:e[2];if(this.isVec4=(l%4==0&&!n||t[1]%4==0&&n)&&t[2]%4==0&&!a,this.outputComponent=this.isVec4?4:1,this.isVectorA=1===t[1]&&!n,!this.isVec4&&this.isVectorA)this.elementsPerThread=[1,1,1],this.workgroupSize=[32,1,1];else{let e=WW(t[1],l,t[2],n);this.workgroupSize=e.workgroupSize,this.elementsPerThread=e.elementsPerThread}this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread);let u=null!=r,d=null!=i;u&&this.variableNames.push("bias"),d&&this.variableNames.push("preluActivationWeights"),this.sequentialAccessByThreads=o,this.transposeA=n,this.transposeB=a,this.addBias=u,this.activation=s,this.hasPreluActivationWeights=d,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(t[1],t[2],l),this.shaderKey=`matMulPacked_${this.elementsPerThread}_${n}_${a}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.isVectorA}_${this.sequentialAccessByThreads}`}getShapeFit(e,t,n){let a=this.workgroupSize[1]*this.elementsPerThread[1],r=this.workgroupSize[0]*this.elementsPerThread[0];return!this.isVec4&&this.isVectorA?this.tileInner=4*this.workgroupSize[0]:this.tileInner=r,[e%a==0,t%r==0,n%this.tileInner==0]}getUserCode(){return`\n      ${AV(this.activation,this.hasPreluActivationWeights,this.isVec4)}\n      ${vV(this.addBias,this.activation,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner,this.isVec4?4:1)}\n      ${this.isVec4?kV(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,!0):this.isVectorA?function(e,t=!1){$r.assert(1===e[1]&&1===e[2],(()=>`A linear work group size is required. But got ${e}.`));let n=4*e[0];return`\n    var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;\n\n    ${CW()} {\n      let tileCol = i32(localId.x);\n      let globalCol = i32(globalId.x);\n      let globalRow = i32(globalId.y);\n\n      let numTiles = (uniforms.dimInner - 1) / ${n} + 1;\n      let batch = i32(globalId.z);\n      let batchA = batch % uniforms.aShape[0];\n      let batchB = batch % uniforms.bShape[0];\n      // Without this initialization strange values show up in acc.\n      var acc = 0.0;\n\n      // Loop over shared dimension.\n      for (var t = 0; t < numTiles; t++) {\n        // Load one tile of A into local memory.\n        let colA = t * ${n} + tileCol * 4;\n        mm_Asub[tileCol] = vec4<f32>(${(e=>e?"\n      mm_readA(batchA, colA, globalRow),\n      mm_readA(batchA, colA + 1, globalRow),\n      mm_readA(batchA, colA + 2, globalRow),\n      mm_readA(batchA, colA + 3, globalRow)\n  ":"\n      mm_readA(batchA, globalRow, colA),\n      mm_readA(batchA, globalRow, colA + 1),\n      mm_readA(batchA, globalRow, colA + 2),\n      mm_readA(batchA, globalRow, colA + 3)\n  ")(t)});\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        for (var k = 0; k < ${n/4}; k++) {\n          let rowB = t * ${n} + k * 4;\n          let BCached = vec4<f32>(mm_readB(batchB, rowB, globalCol),\n                              mm_readB(batchB, rowB + 1, globalCol),\n                              mm_readB(batchB, rowB + 2, globalCol),\n                              mm_readB(batchB, rowB + 3, globalCol));\n\n          let ACached = mm_Asub[k];\n          acc = acc + dot(ACached, BCached);\n        }\n\n        workgroupBarrier();\n      }\n\n      mm_write(batch, globalRow, globalCol, acc);\n    }\n  `}(this.workgroupSize,this.transposeA):SV(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,this.sequentialAccessByThreads,!0)}\n    `}},NV=class{constructor(e,t=!1,n=!1,a=null,r=null,s=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize);let i=null!=a,o=null!=s;i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=n,this.addBias=i,this.activation=r,this.hasPreluActivationWeights=o,this.shaderKey=`matMulReduce_${this.activation}_${t}_${n}`}getUserCode(){return`\n      ${AV(this.activation,this.hasPreluActivationWeights)}\n      ${vV(this.addBias,this.activation,this.transposeA,this.transposeB)}\n      ${function(e){return`\n    var<workgroup> sumValues : array<f32, ${e}>;\n    ${CW()} {\n      let coords = getOutputCoords();\n      let batch = coords[0];\n      let batchA = batch % uniforms.aShape[0];\n      let batchB = batch % uniforms.bShape[0];\n      let row = coords[1];\n      let col = coords[2];\n      var sum = 0.0;\n      let Length = uniforms.dimInner;\n      for (var k = i32(localId.x); k < Length; k = k + ${e}) {\n        let dataA = mm_readA(batchA, row, k);\n        let dataB = mm_readB(batchB, k, col);\n        sum = sum + dataA * dataB;\n      }\n      sumValues[localId.x] = sum;\n      workgroupBarrier();\n\n      for(var currentSize = ${e/2}u; currentSize > 1u;\n          currentSize = currentSize / 2u) {\n        if (localId.x < currentSize)\n        {\n          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];\n        }\n        workgroupBarrier();\n      }\n\n      if (localId.x == 0u) {\n        sum = sumValues[0] + sumValues[1];\n        mm_write(batch, row, col, sum);\n      }\n    }\n  `}(this.workgroupSize[0])}\n    `}},TV=class{constructor(e,t,n,a=!1,r=!1,s=null,i=null,o=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[16,8,1],this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workgroupSize[0]),Math.ceil(n[1]/this.workgroupSize[1]),n[0]];let l=null!=s;l&&this.variableNames.push("bias");let u=null!=o;u&&this.variableNames.push("preluActivationWeights"),this.transposeA=a,this.transposeB=r,this.addBias=l,this.activation=i,this.hasPreluActivationWeights=u,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${a}_${r}`}getUserCode(){return`\n      ${AV(this.activation,this.hasPreluActivationWeights)}\n      ${vV(this.addBias,this.activation,this.transposeA,this.transposeB)}\n      ${function(e){let t=e[1],n=e[0],a=t>n?t:n;return`\n  var<workgroup> mm_Asub : array<array<f32, ${a}>, ${t}>;\n  var<workgroup> mm_Bsub : array<array<f32, ${n}>, ${a}>;\n\n  // If the output size is small for matrix multiplication, avoid to use vec4\n  // and handle some elements per thread to optimally utilize the ALU.\n  // Read data from global memory to registers firstly, then store them into\n  // shared memory, so it is instruction-Level parallelism for arithmetic\n  // operations and others handle IO operations between barrier api, makes ALU\n  // and load/store units work simultaneously, could improves the performance.\n  ${CW()} {\n    let tileRow = i32(localId.y);\n    let tileCol = i32(localId.x);\n    let globalRow = i32(globalId.y);\n    let globalCol = i32(globalId.x);\n    let batch = i32(globalId.z);\n    let batchA = batch % uniforms.aShape[0];\n    let batchB = batch % uniforms.bShape[0];\n\n    // uniforms.dimInner should be greater than 0.\n    let numTiles = (uniforms.dimInner - 1) / ${a} + 1;\n    var acc = 0.0;\n\n    var globalColA = tileCol;\n    var globalRowB = 0;\n    var regA = mm_readA(batchA, globalRow, globalColA);\n    var regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);\n    var regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);\n    globalColA = globalColA + ${a};\n    globalRowB = globalRowB + ${a};\n\n    for (var t = 0; t < numTiles; t = t + 1) {\n      mm_Asub[tileRow][tileCol] = regA;\n      mm_Bsub[2 * tileRow][tileCol] = regB0;\n      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;\n\n      workgroupBarrier();\n\n      regA = mm_readA(batchA, globalRow, globalColA);\n      regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);\n      regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);\n      globalColA = globalColA + ${a};\n      globalRowB = globalRowB + ${a};\n\n      for (var k = 0; k < ${a}; k = k + 1) {\n        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];\n      }\n      workgroupBarrier();\n    }\n\n    mm_write(batch, globalRow, globalCol, acc);\n  }\n  `}(this.workgroupSize)}\n    `}},RV=class{constructor(e,t,n=!1,a=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[8,8,1],this.atomic=!0,this.splitedDimInner=128,$r.assert(1===e[0],(()=>"MatMulSplitKProgram only supports batch = 1.")),this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0,3]};let r=(n&&this.outputShape[1]%4==0||!n&&t%4==0)&&this.outputShape[2]%4==0;this.elementsPerThread=[4,4,this.splitedDimInner],this.outputComponent=r?4:1,r||(this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1)),this.dispatch=LW(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],t],this.workgroupSize,this.elementsPerThread),this.transposeA=n,this.transposeB=a,this.shaderKey=`matMulSplitK_${n}_${a}_${this.elementsPerThread}_${this.outputComponent}`}getUserCode(){let e=this.outputComponent;return`\n      ${wV(!1,this.transposeB,!1,!1,!1,e)}\n      fn mm_write(batch: i32, row : i32, col : i32, value : ${kW(e)}) {\n        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {\n          let coords = vec3<i32>(batch, row, col);\n          let flatIndex = getOutputIndexFromCoords(coords);\n          // The problem is that we should initialize output to zero before using.\n          // Otherwise, the original value will be added to the result.\n          for (var i = 0; i < ${e}; i = i + 1) {\n            ${vW("&result[flatIndex + i]",e>1?"value[i]":"value","float32")}\n          }\n        }\n      }\n      ${4===e?kV(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner):SV(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner)}\n    `}},EV=class{constructor(e,t=null,n=null,a=null){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=null!=t,this.hasPreluActivationWeights=null!=a,this.activation=n,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${n}`}getUserCode(){return`\n    ${AV(this.activation,this.hasPreluActivationWeights)}\n    ${CW("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        var value = getXByOutputIndex(index);\n        ${bV(this.addBias,this.activation)}\n        setOutputAtIndex(index, value);\n      }\n    }\n    `}},$V=class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="fill"}getUserCode(){return`\n    ${CW("index")} {\n      if (index < uniforms.size) {\n        setOutputAtIndex(index, uniforms.value);\n      }\n    }\n  `}};function MV(e){let{backend:t,attrs:n}=e,{shape:a,value:r}=n,{dtype:s}=n;if(s=s||$r.inferDtype(r),"string"===s){let e=$r.getArrayFromDType(s,$r.sizeFromShape(a));return e.fill(r),t.makeTensorInfo(a,s,e)}{let e=new $V(a),n=[{type:"float32",data:[r]}];return t.runWebGPUProgram(e,[],s,n)}}var FV={kernelName:on,backendName:"webgpu",kernelFunc:MV};function _V(e){let{inputs:t,attrs:n}=e,{x:a}=t,{shape:r}=n,s=$r.sizeFromShape(a.shape),i=$r.inferFromImplicitShape(r,s),o=$r.sizeFromShape(i);return $r.assert(s===o,(()=>`The new shape (${i}) has ${o} elements and the old shape (${a.shape}) has ${s} elements. The new shape and old shape must have the same number of elements.`)),e.backend.incRef(a.dataId),{dataId:a.dataId,shape:i,dtype:a.dtype}}var PV={kernelName:ya,backendName:"webgpu",kernelFunc:_V};function OV({a:e,b:t,transposeA:n,transposeB:a,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let u=e.shape.length,d=t.shape.length,p=n?e.shape[u-2]:e.shape[u-1],h=a?t.shape[d-1]:t.shape[d-2],c=n?e.shape[u-1]:e.shape[u-2],f=a?t.shape[d-2]:t.shape[d-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=$r.sizeFromShape(m),x=$r.sizeFromShape(g),A=Xl.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([c,f]);$r.assert(p===h,(()=>`Error in matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${a} must match.`));let b,w,v=n?[y,p,c]:[y,c,p],k=a?[x,f,h]:[x,h,f],I=_V({inputs:{x:e},backend:r,attrs:{shape:v}}),S=_V({inputs:{x:t},backend:r,attrs:{shape:k}}),C=[I,S],N=Math.max(y,x),T=[I,S],R=[{type:"int32",data:[c]},{type:"int32",data:[f]},{type:"int32",data:[p]}],E=[N,c,f],$=Xe().get("WEBGPU_MATMUL_PROGRAM_TYPE");if($<0){let e=Xe().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),t=e>0?e:r.thresholdToIncreaseWorkgroups,n=N*Math.ceil(c/32)*Math.ceil(f/32);$=n<=t||c<=8&&n<=2*t?N*c*f<=128?OW.MatMulReduceProgram:1===N&&h>=2e3?OW.MatMulSplitKProgram:OW.MatMulSmallOutputSizeProgram:OW.MatMulPackedProgram}switch($){case OW.MatMulReduceProgram:b=new NV(E,n,a,s,l,i);break;case OW.MatMulSplitKProgram:if(w=MV({backend:r,attrs:{shape:E,value:0,dtype:e.dtype}}),b=new RV(E,h,n,a),s||l){w=r.runWebGPUProgram(b,T,e.dtype,R,w);let t=new EV(w.shape,s,l,i),n=null,a=[w];s&&a.push(s),i&&a.push(i),"leakyrelu"===l&&(n=[{type:"float32",data:[o]}],t.uniforms+=" alpha : f32,");let u=r.runWebGPUProgram(t,a,w.dtype,n);C.push(w);let d=_V({inputs:{x:u},backend:r,attrs:{shape:A}});C.push(u);for(let e of C)r.disposeData(e.dataId);return d}break;case OW.MatMulSmallOutputSizeProgram:b=new TV(v,k,E,n,a,s,l,i);break;case OW.MatMulPackedProgram:let t=r.adapterInfo.isIntel();b=new CV(v,E,n,a,s,l,i,t);break;default:throw new Error(`Unsupported MatMulProgramType ${$}.`)}s&&T.push(s),i&&T.push(i),"leakyrelu"===l&&(R.push({type:"float32",data:[o]}),b.uniforms+=" alpha : f32,"),w=r.runWebGPUProgram(b,T,e.dtype,R,w);let M=_V({inputs:{x:w},backend:r,attrs:{shape:A}});C.push(w);for(let e of C)r.disposeData(e.dataId);return M}var DV={kernelName:mr,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:p}=a;return OV({a:r,b:s,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:p,activation:d})}},zV=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.workgroupSize=[128,1,1],this.size=!0,this.outputShape=am.assertAndGetBroadcastShape(t,n),this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`\n      fn binaryOpComplex(\n          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {\n        ${CB(this.op,!1)}\n      }\n\n      ${CW("index")} {\n        if(index < uniforms.size) {\n          let areal = getARealByOutputIndex(index);\n          let aimag = getAImagByOutputIndex(index);\n          let breal = getBRealByOutputIndex(index);\n          let bimag = getBImagByOutputIndex(index);\n          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));\n        }\n      }\n    `}},LV=class{constructor(e,t,n){if(this.size=!0,this.variableNames=["A","B"],this.outputShape=am.assertAndGetBroadcastShape(t,n),this.dispatchLayout=UW(this.outputShape),this.op=e,this.useSharedMemoryWithA=t.length<=1&&n.length>1&&t[0]<128,this.useSharedMemoryWithB=n.length<=1&&t.length>1&&n[0]<128,this.useSharedMemoryWithA||this.useSharedMemoryWithB)this.outputComponent=1,this.variableComponents=[1,1],this.lastDimensionSize=this.useSharedMemoryWithB?n[0]:t[0],this.shaderKey=`binary_${e}_${this.lastDimensionSize}`,this.type="shared",this.workgroupSize=[256,1,1];else{let a=t.length>0&&t[t.length-1]%4==0,r=n.length>0&&n[n.length-1]%4==0;a&&r?(this.outputComponent=4,this.variableComponents=[4,4]):a&&($r.isScalarShape(n)||1===n[n.length-1])||r&&($r.isScalarShape(t)||1===t[t.length-1])?(this.outputComponent=4,this.variableComponents=a?[4,1]:[1,4]):(this.outputComponent=1,this.variableComponents=[1,1]),this.type="nonshared",this.shaderKey=`binary_${e}_${this.variableComponents}`,this.workgroupSize=[128,1,1]}this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.outputComponent,1,1])}getUserCode(){let e,t=4===this.outputComponent?"vec4<f32>":"f32",n=`\n    fn binaryOperation(a : ${t}, b : ${t}) -> ${t} {\n      ${CB(this.op,4===this.outputComponent)}\n    };\n    `;if("shared"===this.type){let t=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",a=this.useSharedMemoryWithB?`let a = getAByOutputIndex(index);\n          let b = sharedBuf[${t}];`:`let a = sharedBuf[${t}];\n          let b = getBByOutputIndex(index);`;e=`\n        ${n}\n        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;\n        ${CW("index")} {\n          // Fill in the shared memory buffer.\n          let localIndex = i32(localId.x);\n          if(localIndex < ${this.lastDimensionSize}) {\n            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);\n          }\n          workgroupBarrier();\n\n          if(index < uniforms.size) {\n            let coords = getCoordsFromIndex(index);\n            ${a}\n            setOutputAtIndex(index, binaryOperation(a, b));\n          }\n        }\n        `}else e=`\n       ${n}\n       ${CW("index")} {\n         if (index < uniforms.size) {\n           let coords = getCoordsFromIndex(index * ${this.outputComponent});\n           let a = ${t}(getAByOutputCoords(coords));\n           let b = ${t}(getBByOutputCoords(coords));\n           setOutputAtIndex(index, binaryOperation(a, b));\n         }\n       }\n       `;return e}};function WV(e){let{inputs:t}=e,{x:n}=t;return e.backend.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var BV={kernelName:gn,backendName:"webgpu",kernelFunc:WV};function VV(e){let{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.makeTensorInfo(a.shape,"complex64"),i=n.tensorMap.get(s.dataId),o=WV({inputs:{x:a},backend:n}),l=WV({inputs:{x:r},backend:n});return i.complexTensorInfos={real:o,imag:l},s}var UV={kernelName:Ct,backendName:"webgpu",kernelFunc:VV},GV=class{constructor(e,t,n=""){this.variableNames=["A"],this.size=!0,this.workgroupSize=[128,1,1],this.outputShape=e,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.op=t,""!==n&&(this.uniforms=n),this.shaderKey=`unary_${t}`}getUserCode(){return`\n      fn unaryOperation(a : f32) -> f32 {\n        ${xV(this.op,!1)}\n      }\n      ${CW("index")} {\n        if (index < uniforms.size) {\n          let a = getAByOutputIndex(index);\n          setOutputAtIndex(index, unaryOperation(a));\n        }\n      }\n      `}};function HV({opType:e,cpuKernelImpl:t,dtype:n}){return({inputs:a,backend:r})=>{let{x:s}=a,i=r,o=n||s.dtype;if(i.shouldExecuteOnCPU([s])&&null!=t){let e=i.tensorMap.get(s.dataId),n=t(e.values,o);return i.makeTensorInfo(s.shape,o,n)}let l=new GV(s.shape,e);return i.runWebGPUProgram(l,[s],o)}}function jV({opType:e,cpuKernelImpl:t,supportsComplex:n=!1,dtype:a}){return({inputs:r,backend:s})=>{let{a:i,b:o}=r,l=s;if(n&&"complex64"===i.dtype){let t,n,a=l.tensorMap.get(i.dataId),r=l.tensorMap.get(o.dataId);if(e!==qW.MUL)[t,n]=[[a.complexTensorInfos.real,r.complexTensorInfos.real],[a.complexTensorInfos.imag,r.complexTensorInfos.imag]].map((t=>{let[n,a]=t,r={dataId:n.dataId,dtype:n.dtype,shape:i.shape},s={dataId:a.dataId,dtype:a.dtype,shape:o.shape},u=new LV(e,i.shape,o.shape);return l.runWebGPUProgram(u,[r,s],Cs(n.dtype,a.dtype))}));else{let e=new zV(qW.COMPLEX_MULTIPLY_REAL,i.shape,o.shape),s=new zV(qW.COMPLEX_MULTIPLY_IMAG,i.shape,o.shape),u=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:i.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:i.shape},{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o.shape},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o.shape}];t=l.runWebGPUProgram(e,u,"float32"),n=l.runWebGPUProgram(s,u,"float32")}let s=VV({inputs:{real:t,imag:n},backend:l});return l.disposeData(t.dataId),l.disposeData(n.dataId),s}let u=a||Cs(i.dtype,o.dtype);if(("string"===i.dtype||"string"===o.dtype||l.shouldExecuteOnCPU([i,o]))&&null!=t){let e=l.tensorMap.get(i.dataId).values,n=l.tensorMap.get(o.dataId).values,a="string"===i.dtype?am.fromUint8ToStringArray(e):e,r="string"===i.dtype?am.fromUint8ToStringArray(n):n,[s,d]=t(i.shape,o.shape,a,r,u);return l.makeTensorInfo(d,u,s)}let d=new LV(e,i.shape,o.shape);return l.runWebGPUProgram(d,[i,o],u)}}var{addImpl:qV,castImpl:XV,ceilImpl:KV,concatImpl:YV,equalImpl:ZV,expImpl:JV,expm1Impl:QV,floorImpl:eU,floorDivImpl:tU,gatherNdImpl:nU,gatherV2Impl:aU,greaterEqualImpl:rU,greaterImpl:sU,lessEqualImpl:iU,lessImpl:oU,logImpl:lU,maxImpl:uU,maximumImpl:dU,minimumImpl:pU,multiplyImpl:hU,negImpl:cU,notEqualImpl:fU,prodImpl:mU,rangeImpl:gU,rsqrtImpl:yU,scatterImpl:xU,simpleAbsImpl:AU,sliceImpl:bU,stridedSliceImpl:wU,stringNGramsImpl:vU,subImpl:kU,tileImpl:IU,topKImpl:SU,transposeImpl:CU,uniqueImpl:NU}=tx,TU=HV({opType:YW.ABS,cpuKernelImpl:AU}),RU={kernelName:Qe,backendName:"webgpu",kernelFunc:TU},EU=HV({opType:YW.ACOS}),$U={kernelName:et,backendName:"webgpu",kernelFunc:EU},MU=HV({opType:YW.ACOSH}),FU={kernelName:tt,backendName:"webgpu",kernelFunc:MU},_U=jV({opType:qW.ADD,cpuKernelImpl:qV,supportsComplex:!0}),PU={kernelName:nt,backendName:"webgpu",kernelFunc:_U},OU=class{constructor(e){this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map(((e,t)=>`T${t}`)),this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let e=[];this.variableNames.forEach((t=>{e.push(`let v${t} = get${t}ByOutputCoords(coords);`)}));let t=this.variableNames.map((e=>`v${e}`)).join(" + ");return`\n      ${CW("index")} {\n        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if (flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            ${e.join("\n        ")}\n            setOutputAtIndex(flatIndex, ${t});\n          }\n        }\n      }\n    `}},DU={kernelName:at,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,a=t;if(1===a.length)return WV({inputs:{x:a[0]},backend:n});let r=a.map((e=>e.dtype)).reduce(((e,t)=>Cs(e,t))),s=a.map((e=>e.shape)),i=new OU(s);return n.runWebGPUProgram(i,a,r)}},zU=class{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[16,16,1];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){$r.assert(this.workgroupSize[0]===this.workgroupSize[1],(()=>`Must be a square tile, current tile shape is ${this.workgroupSize[0]} x ${this.workgroupSize[1]}`));let e=this.workgroupSize[0];return`\n      var<workgroup> tile : array<array<f32, ${this.workgroupSize[0]+1}>, ${this.workgroupSize[0]}>;\n      ${CW()} {\n        var x = i32(workgroupId.x) * ${e} + i32(localId.x);\n        var y = i32(workgroupId.y) * ${e} + i32(localId.y);\n        let width = uniforms.outShape[0];\n        let height = uniforms.outShape[1];\n        if (x < width && y < height) {\n          tile[localId.y][localId.x] = f32(A[y * width + x]);\n        }\n        workgroupBarrier();\n\n        x = i32(workgroupId.y) * ${e} + i32(localId.x);\n        y = i32(workgroupId.x) * ${e} + i32(localId.y);\n        if (x < height && y < width) {\n          setOutputAtIndex((y * height + x), tile[localId.x]\n            [localId.y]);\n        }\n      }\n    `}},LU=class{constructor(e,t){this.variableNames=["A"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){let e=IW(this.outputShape.length),t=WU(this.newDim);return`\n      ${CW("index")} {\n        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if(flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(\n              ${e}(${t}), uniforms.aShape)]);\n          }\n        }\n      }\n    `}};function WU(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=new Array(t);for(let t=0;t<e.length;t++)n[e[t]]=`coords.${SW(t)}`;return n.join()}function BU(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{perm:s}=a,i=n,o=r.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=r.shape[s[e]];if(n.shouldExecuteOnCPU([r])){let e=i.tensorMap.get(r.dataId).values,t=CU(e,r.shape,r.dtype,s,l);return n.makeTensorInfo(l,r.dtype,t)}if(2===r.shape.length&&$r.arraysEqual(s,[1,0])){let e=new zU(r.shape,s);return i.runWebGPUProgram(e,[r],r.dtype)}let u=new LU(r.shape,s);return i.runWebGPUProgram(u,[r],r.dtype)}var VU={kernelName:ir,backendName:"webgpu",kernelFunc:BU},UU=class{constructor(e,t,n){this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];let[a]=am.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=0===a.length?[1]:a,e.inSize>=32768&&n>=512?this.workgroupSize=[512,1,1]:e.inSize>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0",n=this.workgroupSize[0];"min"===this.reduceType||"max"===this.reduceType?(e=`\n         if (isnan(candidate)) {\n          bestValue = uniforms.NAN;\n         } else if (!isnan(bestValue) && candidate ${"min"===this.reduceType?"<":">"} bestValue)\n           {  bestValue = candidate; }`,t="f32(x[offset])"):"sum"===this.reduceType||"mean"===this.reduceType?e=" bestValue = bestValue + candidate; ":"prod"===this.reduceType?(e=" bestValue = bestValue * candidate; ",t="1.0"):"all"===this.reduceType?(e=" bestValue = f32(bestValue >= 1.0 && candidate >= 1.0); ",t="1.0"):"any"===this.reduceType&&(e=" bestValue = f32(bestValue >= 1.0 || candidate >= 1.0); ",t="0.0");let a="mean"===this.reduceType?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`\n       fn DIV_CEIL(a : u32, b : u32) -> u32 {\n        return ((a - 1u) / b + 1u);\n       }\n\n       \n         var<workgroup> xBestValues : array<f32, ${n}>;\n       \n       fn getOffset(outputIndex : i32) -> i32 {\n         let outputCoords = getCoordsFromIndex(outputIndex);\n         let offset = ${1===this.outputShape.length?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;\n          return offset;\n       }\n       ${CW("index")} {\n         let outputIndex = index / ${n};\n         let offset = getOffset(outputIndex);\n         var bestValue = ${t};\n         let Length = uniforms.reduceSize;\n         let WorkPerThread = DIV_CEIL(u32(Length), ${n}u);\n         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;\n             k = k + ${n}) {\n           let candidate = f32(x[offset + k]);\n           ${e}\n         }\n         xBestValues[localId.x] = bestValue;\n         workgroupBarrier();\n\n         var reduceSize = min(u32(Length), ${n}u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (localId.x < currentSize) {\n            let candidate = xBestValues[localId.x + interval];\n            ${e}\n            xBestValues[localId.x] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (localId.x == 0u && outputIndex < uniforms.size) {\n          ${a}\n        }\n       }\n     `}},GU={mean:"float32",all:"bool",any:"bool"};function HU(e,t,n,a,r){let s=e.shape.length,i=[],o=$r.parseAxisParam(t,e.shape),l=o,u=am.getAxesPermutation(l,s),d=e;null!=u&&(d=BU({inputs:{x:e},attrs:{perm:u},backend:r}),l=am.getInnerMostAxes(l.length,s),i.push(d)),am.assertAxesAreInnerMostDims(a,l,s);let p,[h,c]=am.computeOutAndReduceShapes(d.shape,l),f=h;if(n&&(f=am.expandShapeToKeepDim(h,o)),"max"!==a&&"prod"!==a||!r.shouldExecuteOnCPU([d])){let t=$r.sizeFromShape(c),n={windowSize:t,inSize:t,batchSize:$r.sizeFromShape(d.shape)/t,outSize:1},s=GU[a]||Ns(e.dtype),o=[{type:"int32",data:[t]}],l=new UU(n,a,r.device.limits.maxComputeWorkgroupSizeX),u=r.runWebGPUProgram(l,[d],s,o);i.push(u),p=_V({inputs:{x:u},attrs:{shape:f},backend:r})}else{let t=r.tensorMap.get(d.dataId).values;switch(a){case"max":let n=uU(t,$r.sizeFromShape(c),f,e.dtype);p=r.makeTensorInfo(f,e.dtype,n);break;case"prod":let{outVals:s,outShape:i,outDtype:o}=mU(d.shape,d.dtype,t,l);p=r.makeTensorInfo(i,o,s);break;default:throw new Error(`${a} CPU implementation is not yet supported.`)}}return i.forEach((e=>r.disposeData(e.dataId))),p}var jU={kernelName:rt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{keepDims:s,axis:i}=a;return HU(r,i,s,"all",n)}},qU={kernelName:st,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{keepDims:s,axis:i}=a;return HU(r,i,s,"any",n)}},XU=class{constructor(e,t,n){this.workgroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;let a=[t];this.op="min"===n?"<":">";let[r,s]=am.computeOutAndReduceShapes(e,a);this.outputShape=0===r.length?[1]:r,this.dispatchLayout=UW(this.outputShape),$r.sizeFromShape(s)<32?(this.type="plain",this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize)):(this.type="shared",this.dispatch=LW(this.dispatchLayout,this.outputShape,[1,1,1])),this.inputShape=e,this.shaderKey=`argMinMax_${this.op}_${this.type}`}getUserCode(){let e=this.workgroupSize[0],t=()=>1===this.inputShape.length?"uniforms.xShape":`uniforms.xShape.${SW(this.inputShape.length-1)}`,n=()=>{let e="";if(1===this.outputShape.length)1!==this.inputShape.length&&(e+="outputCoords,");else for(let t=0;t<this.outputShape.length;t++)e+=`outputCoords.${SW(t)},`;return e};return"shared"===this.type?`\n      fn DIV_CEIL(a : u32, b : u32) -> u32 {\n        return ((a - 1u) / b + 1u);\n      }\n\n      \n      var<workgroup> xBestIndices : array<i32, ${e}>;\n      var<workgroup> xBestValues : array<f32, ${e}>;\n    \n\n      ${CW("index")} {\n        let outputIndex = index / ${e};\n        let reduceLength = ${t()};\n\n        var bestIndex = i32(localId.x);\n        var bestValue = uniforms.infinityValue;\n        let outputCoords = getCoordsFromIndex(outputIndex);\n        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;\n            k = k + ${e}) {\n          let candidate = getX(${n()} k);\n          if (!isnan(candidate) && candidate ${this.op} bestValue) {\n            bestValue = candidate;\n            bestIndex = k;\n          }\n        }\n        xBestValues[localId.x] = bestValue;\n        xBestIndices[localId.x] = bestIndex;\n        workgroupBarrier();\n\n        var reduceSize = min(u32(reduceLength), ${e}u);\n        for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n            currentSize = reduceSize / 2u) {\n          let interval = DIV_CEIL(reduceSize, 2u);\n          if (localId.x < currentSize) {\n            let candidate = xBestValues[localId.x + interval];\n            if (candidate ${this.op} bestValue) {\n              bestValue = candidate;\n              xBestValues[localId.x] = bestValue;\n              xBestIndices[localId.x] = xBestIndices[localId.x + interval];\n            }\n          }\n          reduceSize = interval;\n          workgroupBarrier();\n        }\n\n        if (localId.x == 0u && outputIndex < uniforms.size) {\n          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);\n        }\n      }\n    `:`\n      ${CW("index")} {\n        if (index < uniforms.size) {\n          let outputCoords = getCoordsFromIndex(index);\n          var bestIndex = 0;\n          var bestValue = getX(${n()} 0);\n          let reduceLength = ${t()};\n          for (var i = 1; i < reduceLength; i++) {\n            let candidate = getX(${n()} i);\n            if (candidate ${this.op} bestValue) {\n              bestValue = candidate;\n              bestIndex = i;\n            }\n          }\n          setOutputAtIndexI32(index, bestIndex);\n        }\n      }\n      `}},KU={kernelName:it,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a,i=$r.parseAxisParam(s,r.shape),o=am.getAxesPermutation(i,r.shape.length),l=r,u=[];null!=o&&(l=BU({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=am.getInnerMostAxes(i.length,l.shape.length)),am.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let d=new XU(l.shape,i[0],"max"),p=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],h=n.runWebGPUProgram(d,[l],"int32",p);return u.forEach((e=>n.disposeData(e.dataId))),h}},YU={kernelName:ot,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a,i=$r.parseAxisParam(s,r.shape),o=am.getAxesPermutation(i,r.shape.length),l=r,u=[];null!=o&&(l=BU({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=am.getInnerMostAxes(i.length,l.shape.length)),am.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let d=new XU(l.shape,i[0],"min"),p=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],h=n.runWebGPUProgram(d,[l],"int32",p);return u.forEach((e=>n.disposeData(e.dataId))),h}},ZU=HV({opType:YW.ASIN}),JU={kernelName:lt,backendName:"webgpu",kernelFunc:ZU},QU=HV({opType:YW.ASINH}),eG={kernelName:ut,backendName:"webgpu",kernelFunc:QU},tG=HV({opType:YW.ATAN}),nG={kernelName:dt,backendName:"webgpu",kernelFunc:tG},aG=jV({opType:qW.ATAN2}),rG={kernelName:ht,backendName:"webgpu",kernelFunc:aG},sG=HV({opType:YW.ATANH}),iG={kernelName:pt,backendName:"webgpu",kernelFunc:sG},oG=class{constructor(e){this.variableNames=["x"],this.uniforms="strides : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`\n      ${CW("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let batch = coords[0];\n          let d = coords[3];\n\n          let xRCCorner = coords.yz * uniforms.strides;\n          let xRCorner = xRCCorner.x;\n          let xCCorner = xRCCorner.y;\n\n          let value = getX(batch, xRCorner, xCCorner, d);\n          setOutputAtIndex(index, value);\n        }\n      }\n    `}},lG=class{constructor(e,t,n=!1,a=!1,r=!1){if(this.variableNames=["x"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workgroupSize=[128,1,1],this.size=!0,"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=n,this.flattenPositions=a,this.includeBatchIndex=r,this.shaderKey=`pool2D_${t}_${n}_${a}_${r}`}getUserCode(){let e;e="avg"===this.poolType?"resultValue = resultValue + value; count = count + 1.0;":this.computePositions?`let currMaxValue = mix(value, maxValue, maxValueFound);\n      if (value >= currMaxValue) {\n        maxValue = value;\n        maxValueFound = 1.0;\n        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"((batch * uniforms.xShape[1] + xR) * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"(xR * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"wR * uniforms.filterDims.y + wC"};\n      }`:"resultValue = max(value, resultValue);";let t="resultValue";return"avg"===this.poolType&&(t="resultValue / max(count, 1.0)"),`\n      ${CW("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n          let batch = coords[0];\n          let d = coords[3];\n          let xRCCorner = vec2<i32>(coords.yz) * uniforms.strides - uniforms.pads;\n          let xRCorner = xRCCorner.x;\n          let xCCorner = xRCCorner.y;\n\n          ${this.computePositions?"var maxValue = 0.0;\n            var maxValueFound = 0.0;\n            var maxPosition = 0;":`var resultValue = ${"avg"===this.poolType?"0.0":"-1.0 / pow(10.0, -20.0)"};`}\n\n          var count = 0.0;\n          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilations.x) {\n            let xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= uniforms.convDims.x) {\n              continue;\n            }\n\n            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilations.y) {\n              let xC = xCCorner + wC;\n              if (xC < 0 || xC >= uniforms.convDims.y) {\n                continue;\n              }\n\n              let value = getX(batch, xR, xC, d);\n              ${e}\n            }\n          }\n\n          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${t});`}\n        }\n      }\n    `}},uG=class{constructor(e,t,n=!1,a=!1,r=!1){if(this.variableNames=["x"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, convDims : vec3<i32>, filterDims : vec3<i32>,",this.workgroupSize=[128,1,1],this.size=!0,"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=n,this.flattenPositions=a,this.includeBatchIndex=r,this.shaderKey=`pool3D_${t}_${n}_${a}_${r}`}getUserCode(){let e;e="avg"===this.poolType?"resultValue += value; count += 1.0;":this.computePositions?`let currMaxValue = mix(value, maxValue, maxValueFound);\n      if (value >= currMaxValue) {\n        maxValue = value;\n        maxValueFound = 1.0;\n        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"(((batch * uniforms.xShape.y + xD) * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"((xD * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"wD * uniforms.filterDims.y * uniforms.filterDims.y + wR * uniforms.filterDims.z + wC"};\n      }`:"resultValue = max(value, resultValue);";let t="resultValue";return"avg"===this.poolType&&(t="resultValue / max(count, 1.0)"),`\n      ${CW("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let batch = coords.x;\n          let ch = coords.u;\n\n          let xCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;\n          let xDCorner = xCorner.x;\n          let xRCorner = xCorner.y;\n          let xCCorner = xCorner.z;\n\n          ${this.computePositions?"var maxValue = 0.0;\n            var maxValueFound = 0.0;\n            var maxPosition = 0;":`var resultValue = ${"avg"===this.poolType?"0.0":"-1.0 / pow(10.0, -20.0)"};`}\n\n          var count = 0.0;\n          for (var wD = 0; wD < uniforms.filterDims.x; wD++) {\n            let xD = xDCorner + wD;\n            if (xD < 0 || xD >= uniforms.convDims.x) {\n              continue;\n            }\n\n            for (var wR = 0; wR < uniforms.filterDims.y; wR++) {\n              let xR = xRCorner + wR;\n              if (xR < 0 || xR >= uniforms.convDims.y) {\n                continue;\n              }\n\n              for (var wC = 0; wC < uniforms.filterDims.z; wC++) {\n                let xC = xCCorner + wC;\n                if (xC < 0 || xC >= uniforms.convDims.z) {\n                  continue;\n                }\n\n                let value = getX(batch, xD, xR, xC, ch);\n                ${e}\n              }\n            }\n          }\n\n          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${t});`}\n        }\n      }\n    `}};function dG(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:i}=a;return HU(r,s,i,"max",n)}var pG={kernelName:Dn,backendName:"webgpu",kernelFunc:dG};function hG(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{keepDims:s,axis:i}=a;return HU(r,i,s,"mean",n)}var cG={kernelName:Gn,backendName:"webgpu",kernelFunc:hG};function fG(e,t,n,a){if(1===t.filterWidth&&1===t.filterHeight&&$r.arraysEqual(t.inShape,t.outShape))return WV({inputs:{x:e},backend:a});if(t.filterWidth===t.inWidth&&t.filterHeight===t.inHeight&&1===t.batchSize&&"VALID"===t.padInfo.type){let r,s=e.shape.length,i=_V({inputs:{x:e},backend:a,attrs:{shape:[e.shape[s-3]*e.shape[s-2],e.shape[s-1]]}});"avg"===n?r=hG({inputs:{x:i},backend:a,attrs:{axis:0,keepDims:!1}}):($r.assert("max"===n,(()=>`Invalid pool type ${n}`)),r=dG({inputs:{x:i},backend:a,attrs:{reductionIndices:0,keepDims:!1}}));let o=_V({inputs:{x:r},backend:a,attrs:{shape:t.outShape}});return a.disposeData(i.dataId),a.disposeData(r.dataId),o}let r,s=[{type:"int32",data:[t.strideHeight,t.strideWidth]}];return 1===t.filterHeight&&1===t.filterWidth?r=new oG(t):("avg"===n?r=new lG(t,"avg"):($r.assert("max"===n,(()=>`Invalid pool type ${n}`)),r=new lG(t,"max")),s.push({type:"int32",data:[t.padInfo.top,t.padInfo.left]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]},{type:"int32",data:[t.inHeight,t.inWidth]},{type:"int32",data:[t.effectiveFilterHeight,t.effectiveFilterWidth]})),a.runWebGPUProgram(r,[e],e.dtype,s)}var mG={kernelName:ct,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=a;return fG(r,am.computePool2DInfo(r.shape,s,i,1,o,l),"avg",n)}},gG={kernelName:mt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=a,d=am.computePool3DInfo(r.shape,s,i,[1,1,1],o,u,l),p=new uG(d,"avg"),h=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.front,d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inDepth,d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]}];return n.runWebGPUProgram(p,[r],r.dtype,h)}},yG=class{constructor(e){this.variableNames=["dy"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,\n       outHeight : i32, outWidth : i32, avgMultiplier : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool2DBackprop"}getUserCode(){return`\n      ${CW("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d = coords[3];\n\n        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;\n        let dyRCorner = dyRCCorner.x;\n        let dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var wR = 0; wR < uniforms.filterDims[0]; wR = wR + uniforms.dilations[0]) {\n          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);\n\n          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n            continue;\n          }\n          let idyR = i32(dyR);\n\n          for (var wC = 0; wC < uniforms.filterDims[1]; wC = wC + uniforms.dilations[1]) {\n            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);\n\n            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n              continue;\n            }\n            let idyC = i32(dyC);\n\n            let dyValue = getDy(batch, idyR, idyC, d);\n\n            dotProd = dotProd + dyValue * uniforms.avgMultiplier;\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    `}},xG=class{constructor(e){this.variableNames=["dy"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,\n       outDepth : i32, outHeight : i32, outWidth : i32, avgMultiplier : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool3DBackprop"}getUserCode(){return`\n      ${CW("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords.x;\n        let ch = coords.u;\n\n        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;\n        let dyDCorner = dyCorner.x;\n        let dyRCorner = dyCorner.y;\n        let dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {\n          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);\n\n          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {\n            continue;\n          }\n          let idyD = i32(dyD);\n\n          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {\n            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);\n\n            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n              continue;\n            }\n            let idyR = i32(dyR);\n\n            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {\n              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);\n\n              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n                continue;\n              }\n              let idyC = i32(dyC);\n\n              let dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              dotProd += dyValue * uniforms.avgMultiplier;\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    `}},AG={kernelName:gt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:d}=a,p=am.computePool3DInfo(i.shape,o,l,1,u,d),h=new xG(p),c=1/(p.filterDepth*p.filterHeight*p.filterWidth),f=[{type:"int32",data:[p.strideDepth,p.strideHeight,p.strideWidth]},{type:"int32",data:[p.effectiveFilterDepth-1-p.padInfo.front,p.effectiveFilterHeight-1-p.padInfo.top,p.effectiveFilterWidth-1-p.padInfo.left]},{type:"int32",data:[p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth]},{type:"int32",data:[p.outDepth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]},{type:"float32",data:[c]}];return n.runWebGPUProgram(h,[r],i.dtype,f)}},bG={kernelName:ft,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s;jW([r,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=a,d=am.computePool2DInfo(i.shape,o,l,1,u),p=new yG(d),h=1/(d.filterHeight*d.filterWidth),c=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"float32",data:[h]}];return n.runWebGPUProgram(p,[r],i.dtype,c)}},wG={kernelName:yt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:i,transposeB:o}=a;return OV({a:r,b:s,transposeA:i,transposeB:o,backend:n})}},vG=class{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${IW(e.length)}, `,this.shaderKey="slice"}getUserCode(){let e,t=IW(this.rank),n=function(e){if(1===e)return"sourceLoc";if(e<=6)return kG.slice(0,e).map((e=>`sourceLoc.${e}`)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);return e=1===this.start.length?this.outputShape.map(((e,t)=>"sourceLoc = uniforms.start + coords;")):this.outputShape.map(((e,t)=>`sourceLoc.${kG[t]} = uniforms.start.${SW(t)} + coords.${kG[t]};`)),`\n      ${CW("index")} {\n        if (index < uniforms.size) {\n          var sourceLoc : ${t};\n          let coords = getCoordsFromIndex(index);\n          ${e.join("\n")}\n          setOutputAtIndex(index, getSource(${n}));\n        }\n      }\n    `}},kG=["x","y","z","w","u","v"];function IG(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:i}=a,[o,l]=$f.parseSliceParams(r,s,i);if($f.assertParamsValid(r,o,l),n.shouldExecuteOnCPU([r])||"string"===r.dtype){let e=n.tensorMap.get(r.dataId),t=bU(e.values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,t)}if(0===$r.sizeFromShape(l))return n.makeTensorInfo(l,r.dtype,[]);let u=new vG(o,l),d=[{type:"int32",data:o}];return n.runWebGPUProgram(u,[r],r.dtype,d)}var SG={kernelName:$a,backendName:"webgpu",kernelFunc:IG},CG={kernelName:xt,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:i}=a;$r.assert(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet"));let o=s.reduce(((e,t)=>e*t)),l=am.getReshaped(r.shape,s,o),u=am.getPermuted(l.length,s.length),d=am.getReshapedPermuted(r.shape,s,o),p=am.getSliceBeginCoords(i,s.length),h=am.getSliceSize(d,i,s.length),c=[],f=_V({inputs:{x:r},backend:n,attrs:{shape:l}}),m=BU({inputs:{x:f},backend:n,attrs:{perm:u}}),g=_V({inputs:{x:m},backend:n,attrs:{shape:d}}),y=IG({inputs:{x:g},backend:n,attrs:{begin:p,size:h}});return c.push(f),c.push(m),c.push(g),c.forEach((e=>n.disposeData(e.dataId))),y}},NG=`\n  fn bincount_write(index: i32, value: f32) {\n    ${vW("&result[index]","value","float32")}\n  }\n`,TG=class{constructor(e,t,n=!1){this.outputShape=[],this.variableNames=["x"],this.uniforms="binCountSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.hasWeights=!0,this.binaryOutput=!1,this.outputShape=e,this.rank=e.length,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.binaryOutput=n,n&&(this.atomic=!1),this.hasWeights=t,this.hasWeights&&this.variableNames.push("w"),this.shaderKey=`bincount_${this.hasWeights}_${this.binaryOutput}_${this.rank}`}getUserCode(){return`\n    ${this.binaryOutput?"\n  fn bincount_write(index: i32, value: f32) {\n    atomicStore(&result[index], bitcast<i32>(value));\n  }\n":NG}\n  ${CW("index")} {\n    ${1===this.rank?`if (index < uniforms.xShape) {\n      let indexVal = i32(getX(index));\n      if (indexVal < uniforms.binCountSize) {\n        let value = ${this.binaryOutput?1:this.hasWeights?"getW(index)":"1."};\n        bincount_write(indexVal, value);\n      }\n    }`:`let coord = getCoordsFromIndex(index);\n    if (coordsInBounds2D(coord, uniforms.xShape)) {\n      let indexVal = i32(getX(coord[0], coord[1]));\n      if (indexVal < uniforms.binCountSize) {\n        let value = ${this.binaryOutput?1:this.hasWeights?"getW(coord[0], coord[1])":"1."};\n        bincount_write(coord.x * uniforms.binCountSize + indexVal, value);\n      }\n    }`}\n  }\n  `}},RG={kernelName:At,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i}=a,o=$r.sizeFromShape(r.shape),l=$r.sizeFromShape(s.shape)>0,u=[i],d=s.dtype,p=MV({backend:n,attrs:{shape:u,value:0,dtype:d}}),h=new TG([o],l),c=[{type:"int32",data:[i]}],f=l?[r,s]:[r];return n.runWebGPUProgram(h,f,d,c,p)}},EG=class{constructor(e){this.outputShape=[],this.variableNames=["s0","s1"],this.uniforms="s0Size : i32, s1Size : i32, ",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="broadcastArgs"}getUserCode(){return`\n  ${CW("index")} {\n    if (index < uniforms.size) {\n      var s0 = 1.0;\n      var s1 = 1.0;\n      let indexS0 = index - uniforms.size + uniforms.s0Size;\n      let indexS1 = index - uniforms.size + uniforms.s1Size;\n      if (indexS0 >= 0) {\n        s0 = getS0(indexS0);\n      }\n      if (indexS1 >= 0) {\n        s1 = getS1(indexS1);\n      }\n\n      if (s0 == 1.0) {\n        setOutputAtIndex(index, s1);\n      } else if (s1 == 1.0) {\n        setOutputAtIndex(index, s0);\n      } else if (s0 != s1) {\n        setOutputAtIndex(index, uniforms.NAN);\n      } else {\n        setOutputAtIndex(index, s0);\n      }\n    }\n  }\n  `}},$G={kernelName:vt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:a,s1:r}=t;if(n.shouldExecuteOnCPU([a,r])){let e=n.tensorMap.get(a.dataId),t=n.tensorMap.get(r.dataId),s=e.values,i=t.values,o=am.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}let s=$r.sizeFromShape(a.shape),i=$r.sizeFromShape(r.shape),o=Math.max(s,i),l=new EG(o),u=[{type:"int32",data:[s]},{type:"int32",data:[i]}];return n.runWebGPUProgram(l,[a,r],"int32",u)}},MG=jV({opType:qW.NOT_EQUAL,dtype:"bool",cpuKernelImpl:fU}),FG={kernelName:Jn,backendName:"webgpu",kernelFunc:MG};function _G(e){let{inputs:t,backend:n}=e,{input:a}=t;return WV({inputs:{x:n.tensorMap.get(a.dataId).complexTensorInfos.real},backend:n})}var PG={kernelName:fa,backendName:"webgpu",kernelFunc:_G},OG={kernelName:kt,backendName:"webgpu",kernelFunc:function e(t){let{inputs:n,backend:a,attrs:r}=t,{x:s}=n,{dtype:i}=r;if("complex64"===i){if("complex64"===s.dtype)return WV({inputs:{x:s},backend:a});let t=gd(s.shape),n=e({inputs:{x:s},backend:a,attrs:{dtype:"float32"}}),r=VV({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeData(n.dataId),r}if("complex64"===s.dtype){let t=_G({inputs:{input:s},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:i}});return a.disposeData(t.dataId),n}if(!$r.hasEncodingLoss(s.dtype,i)){let e=WV({inputs:{x:s},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(a.shouldExecuteOnCPU([s])){let e=a.tensorMap.get(s.dataId).values,[t,n,r]=XV(e,s.shape,s.dtype,i);return a.makeTensorInfo(t,n,r)}if("int32"===i)return function(e,t){let n=new GV(e.shape,YW.TO_INT),a=t.runWebGPUProgram(n,[e],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(s,a);if("bool"===i){let e=a.makeTensorInfo([],"bool",$r.getTypedArrayFromDType("bool",1)),t=MG({inputs:{a:s,b:e},backend:a});return a.disposeData(e.dataId),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},DG=HV({opType:YW.CEIL,cpuKernelImpl:KV}),zG={kernelName:It,backendName:"webgpu",kernelFunc:DG},LG=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workgroupSize=[64,1,1],this.outputComponent=4,this.size=!0,this.outputShape=e,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`\n      ${CW("index")} {\n        if(index < uniforms.size) {\n          let value = getAByOutputIndex(index);\n          var clampedValue = clamp(\n              value, vec4<f32>(uniforms.minVal), vec4<f32>(uniforms.maxVal));\n          clampedValue = select(clampedValue, value, isnanVec4(value));\n          setOutputAtIndex(index, clampedValue);\n        }\n      }\n    `}},WG=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="clip"}getUserCode(){return`\n      ${CW("index")} {\n        if(index < uniforms.size) {\n          let value = getAByOutputIndex(index);\n          if (isnan(value)) {\n            setOutputAtIndex(index, value);\n            return;\n          }\n          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));\n        }\n      }\n    `}},BG={kernelName:St,backendName:"webgpu",kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:s}=n,{clipValueMin:i,clipValueMax:o}=r,l=[{type:"float32",data:[i]},{type:"float32",data:[o]}];return t=$r.sizeFromShape(s.shape)%4==0?new LG(s.shape):new WG(s.shape),a.runWebGPUProgram(t,[s],s.dtype,l)}},VG=class{constructor(e){this.outputShape=[],this.variableNames=["real","imag"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="complexAbs"}getUserCode(){return`\n    ${CW("index")} {\n      if (index < uniforms.size) {\n        let re = abs(getRealByOutputIndex(index));\n        let im = abs(getImagByOutputIndex(index));\n        let mx = max(re, im);\n\n        // The length function in wgsl may be not underflow-safe on some GPUs.\n        // So the safe solution is to ensure underflow-safety in all cases.\n        setOutputAtIndex(index, select(mx * length(vec2<f32>(1, min(re, im)/mx)), 0.0, mx == 0.0));\n      }\n    }\n  `}};function UG(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}var GG={kernelName:Nt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a}=t,r=n.tensorMap.get(a.dataId),s=new VG(a.shape),i=[UG(a,r.complexTensorInfos.real),UG(a,r.complexTensorInfos.imag)];return n.runWebGPUProgram(s,i,i[0].dtype)}},HG=class{constructor(e){this.uniforms="",this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=am.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`)),this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let e=0;e<this.offsetLength;e++)this.uniforms+=`offset${e} : i32,`;this.shaderKey="concat"}getUserCode(){let e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let t=1;t<this.offsetLength;t++)e.push(`else if (yC < uniforms.offset${[t]}){ setOutputAtCoords(coords.x, coords.y, getT${t}(yR, yC - uniforms.offset${t-1})); }`);let t=this.offsetLength,n=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${t}(yR, yC - uniforms.offset${n})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`\n      ${CW("index")} {\n        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if(flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            let yR = coords.x;\n            let yC = coords.y;\n\n            ${e.join("\n        ")}\n          }\n        }\n      }\n    `}};function jG(e){let{inputs:t,backend:n}=e,{input:a}=t;return WV({inputs:{x:n.tensorMap.get(a.dataId).complexTensorInfos.imag},backend:n})}var qG={kernelName:xn,backendName:"webgpu",kernelFunc:jG};function XG(e,t,n){let a=e[0].dtype;if("complex64"===a){let a=e.map((e=>_G({inputs:{input:e},backend:n}))),r=e.map((e=>jG({inputs:{input:e},backend:n}))),s=XG(a,t,n),i=XG(r,t,n),o=VV({inputs:{real:s,imag:i},backend:n});return a.forEach((e=>n.disposeData(e.dataId))),r.forEach((e=>n.disposeData(e.dataId))),n.disposeData(s.dataId),n.disposeData(i.dataId),o}let r=n.shouldExecuteOnCPU(e);if("string"===a&&(r=!0),r){let r=e.map((e=>{let a=[-1,$r.sizeFromShape(e.shape.slice(t))];return _V({inputs:{x:e},backend:n,attrs:{shape:a}})})),s=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=am.computeOutShape(r.map((e=>e.shape)),1),o=1===r[0].shape[0],l=YV(s,i,a,o),u=am.computeOutShape(e.map((e=>e.shape)),t),d=n.makeTensorInfo(u,a,l);return r.forEach((e=>n.disposeData(e.dataId))),d}let s=n.device.limits.maxStorageBuffersPerShaderStage-1;if(e.length>s){let a=[];for(let r=0;r<e.length;r+=s){let i=e.slice(r,r+s);a.push(XG(i,t,n))}let r=XG(a,t,n);for(let e of a)n.disposeData(e.dataId);return r}let{tensors2D:i,outShape:o}=function(e,t,n){let a=am.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>_V({inputs:{x:e},backend:n,attrs:{shape:[$r.sizeFromShape(e.shape.slice(0,t)),$r.sizeFromShape(e.shape.slice(t))]}}))),outShape:a}}(e,t,n),l=i.map((e=>e.shape)),u=new HG(l),d=[],p=new Array(l.length-1);if(p.length>0){p[0]=l[0][1],d.push({type:"int32",data:[p[0]]});for(let e=1;e<p.length;e++)p[e]=p[e-1]+l[e][1],d.push({type:"int32",data:[p[e]]})}let h=n.runWebGPUProgram(u,i,i[0].dtype,d);i.forEach((e=>n.disposeData(e.dataId)));let c=_V({inputs:{x:h},backend:n,attrs:{shape:o}});return n.disposeData(h.dataId),c}function KG(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=$r.parseAxisParam(r,t[0].shape)[0],i=t.map((e=>e.shape));am.assertParamsConsistent(i,s);let o=am.computeOutShape(t.map((e=>e.shape)),s);if(0===$r.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter((e=>$r.sizeFromShape(e.shape)>0));return 1===l.length?WV({inputs:{x:l[0]},backend:n}):XG(l,s,n)}var YG={kernelName:Tt,backendName:"webgpu",kernelFunc:KG},ZG=class{constructor(e,t,n,a,r=!1,s=null,i=!1,o=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,this.isChannelsLast="channelsLast"===e.dataFormat,this.isVec4=((e.inChannels%4==0||e.inChannels%3==0)&&this.isChannelsLast||e.outWidth%4==0&&!this.isChannelsLast)&&e.outChannels%4==0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workgroupSize=BW(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=VW(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4?(this.outputComponent=4,this.isChannelsLast&&e.inChannels%4!=0?(this.innerElementSize=3,this.variableComponents=[1,4]):(this.innerElementSize=4,this.variableComponents=[4,4]),r&&(this.variableNames.push("bias"),this.variableComponents.push(4)),i&&(this.variableNames.push("preluActivationWeights"),this.variableComponents.push(4))):(this.innerElementSize=this.elementsPerThread[0],r&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights")),this.sequentialAccessByThreads=o,this.addBias=r,this.activation=s,this.hasPreluActivationWeights=i,this.tileAOuter=this.workgroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workgroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workgroupSize[0]*this.innerElementSize,this.workgroupSize[1]),this.fitAOuter=t%this.tileAOuter==0,this.fitBOuter=n%this.tileBOuter==0,this.fitInner=a%this.tileInner==0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}_${this.sequentialAccessByThreads}`}getUserCode(){let e=this.isVec4?kV(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner):SV(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner,!1,null,this.sequentialAccessByThreads),t=this.isVec4?[this.innerElementSize,4,4]:[1,1,1];return`\n    ${function(e,t,n,a,r=!1,s=null,i=!1,o=4,l=4,u=4){let d=e?"\n      let coord = vec4<i32>(batch, xRow, xCol, xCh);\n      ":"\n      let coord = vec4<i32>(batch, xCh, xRow, xCol);\n      ",p=e?"\n      let coords = vec4<i32>(\n        batch,\n        row / outWidth,\n        row % outWidth,\n        col);\n      ":"\n      let coords = vec4<i32>(\n        batch,\n        row,\n        col / outWidth,\n        col % outWidth);\n      ",h=e?"uniforms.xShape[1]":"uniforms.xShape[2]",c=e?"uniforms.xShape[2]":"uniforms.xShape[3]",f=e?"row":"col",m=e?"col":"row",g=`\n      let inChannels = uniforms.wShape[2];\n      let outWidth = ${e?"uniforms.outShape[2]":"uniforms.outShape[3]"};\n      let outRow = ${f} / outWidth;\n      let outCol = ${f} % outWidth;\n\n      let WRow = ${m} / (uniforms.filterDims[1] * inChannels);\n      let WCol = ${m} / inChannels % uniforms.filterDims[1];\n      let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * WRow - uniforms.pads[0];\n      let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * WCol - uniforms.pads[1];\n      let xCh = ${m} % inChannels;\n      var resData = ${kW(o)}(0.0);\n      // The bounds checking is always needed since we use it to pad zero for\n      // the 'same' padding type.\n      if (xRow >= 0 && xRow < ${h} && xCol >= 0 && xCol < ${c}) {\n        ${d}\n        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);\n        ${(e=>{switch(e){case 1:return"resData = f32(x[xIndex]);";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = vec4<f32>(x[xIndex / 4]);";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(o)}\n      }\n      return resData;`,y=e?t&&a?`\n      ${g}`:`\n      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n        ${g}\n      }\n      return ${kW(o)}(0.0);`:a&&n?`\n      ${g}`:`\n      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {\n        ${g}\n      }\n      return ${kW(o)}(0.0);`,x=`${(e=>{switch(e){case 1:return"return f32(W[row * uniforms.wShape[3] + col]);";case 4:return"return vec4<f32>(W[(row * uniforms.wShape[3] + col) / 4]);";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(l)}`,A=kW(u),b=kW(e?o:l),w=kW(e?l:o);return`\n      ${AV(s,i,4===u,4)}\n      fn mm_readA(batch: i32, row : i32, col : i32) -> ${b} {\n        ${e?y:x}\n      }\n\n      fn mm_readB(batch: i32, row : i32, col : i32) -> ${w} {\n        ${e?x:y}\n      }\n\n      fn mm_write(batch: i32, row : i32, col : i32, valueIn : ${A}) {\n        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)\n        {\n        var value = valueIn;\n        let outWidth = ${e?"uniforms.outShape[2]":"uniforms.outShape[3]"};\n        ${p}\n        ${bV(r,s)}\n        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n        }\n      }`}(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,t[0],t[1],t[2])}\n    ${e}\n  `}},JG=class{constructor(e,t=!1,n=null,a=!1){this.variableNames=["x","W"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>,",this.workgroupSize=[4,4,8],this.outputShape=e.outShape,this.isChannelsLast="channelsLast"===e.dataFormat,this.dispatchLayout=this.isChannelsLast?{x:[2],y:[1],z:[0,3]}:{x:[3],y:[2],z:[0,1]},this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=t,this.activation=n,this.hasPreluActivationWeights=a,t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`conv2dnaive_${this.activation}_${this.isChannelsLast}`}getUserCode(){return`\n       ${AV(this.activation,this.hasPreluActivationWeights,!1,4)}\n       fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32{\n         let coords = vec4<i32>(batch, row, col, chan);\n         if (coordsInBounds4D(coords, uniforms.xShape)) {\n           return  getX(batch, row, col, chan);\n         } else {\n          return 0.0;\n         }\n       }\n       fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{\n         let coords = vec4<i32>(row, col, xChannel, outChannel);\n         if(coordsInBounds4D(coords, uniforms.wShape)) {\n           return getW(row, col, xChannel, outChannel);\n          } else {\n            return 0.0;\n          }\n       }\n       fn writeResult(batch : i32, row : i32, col : i32, chan : i32, valueIn : f32) {\n         let coords = ${this.isChannelsLast?"vec4<i32>(batch, row, col, chan);":"vec4<i32>(batch, chan, row, col);"}\n         if (coordsInBounds4D(coords, uniforms.outShape)) {\n           var value = valueIn;\n           ${bV(this.addBias,this.activation)}\n           setOutputAtCoords(coords.x, coords.y, coords.z, coords.w, value);\n         }\n       }\n       ${CW("index")} {\n         let coords = getOutputCoords();\n         let batch = coords[0];\n         let outChannel = ${this.isChannelsLast?"coords[3];":"coords[1];"}\n         let outRow = ${this.isChannelsLast?"coords[1];":"coords[2];"}\n         let outCol = ${this.isChannelsLast?"coords[2];":"coords[3];"}\n         var acc : f32 = 0.0;\n         for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {\n           for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {\n             let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * row - uniforms.pads[0];\n             let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * col - uniforms.pads[1];\n             for (var xChannel = 0; xChannel < ${this.isChannelsLast?"uniforms.xShape[3];":"uniforms.xShape[1];"} xChannel = xChannel + 1) {\n               ${this.isChannelsLast?"let v = readInp(batch, xRow, xCol, xChannel);":"let v = readInp(batch, xChannel, xRow, xCol);"}\n               let f = readFilt(row, col, xChannel, outChannel);\n               acc = acc + v * f;\n             }\n           }\n         }\n         writeResult(batch, outRow, outCol, outChannel, acc);\n       }\n     `}},QG=class{constructor(e,t){this.variableNames=["x"],this.uniforms="pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,\n       inChannels : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?"coords[1]":"coords[2]",a=this.isChannelsLast?"coords[2]":"coords[1]",r=this.isChannelsLast?"getX(batch, xRow, xCol, ch)":"getX(batch, ch, xRow, xCol)";return`\n    ${CW("index")} {\n      let coords = getCoordsFromIndex(index);\n      if(index < uniforms.size) {\n        let batch = coords[0];\n        let row = ${n};\n        let col = ${a};\n        let offsetY = (row / uniforms.outWidth) * uniforms.strides[0] - uniforms.pads[0];\n        let xRow = offsetY + uniforms.dilations[0] * (col / uniforms.itemsPerBlockRow);\n        var value = 0.0;\n        if(xRow < uniforms.xShape[${e}] && xRow >= 0) {\n          let offsetX = (row % uniforms.outWidth) * uniforms.strides[1] -\n              uniforms.pads[1];\n          let xCol = offsetX + uniforms.dilations[1] * ((col %\n              uniforms.itemsPerBlockRow) / uniforms.inChannels);\n          let ch = col % uniforms.inChannels;\n          if(xCol < uniforms.xShape[${t}] && xCol >= 0) {\n            value = ${r};\n          }\n        }\n        setOutputAtIndex(index, value);\n      }\n    }\n   `}};function eH(e,t){let n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function tH({x:e,filter:t,convInfo:n,backend:a,bias:r=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l=null!=r,u=null!=s,d="channelsLast"===n.dataFormat,p=d&&n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&"VALID"===n.padInfo.type,h=Xe().getBool("WEBGPU_USE_NAIVE_CONV2D_DEBUG");if(!h&&(p||1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type)))return function({x:e,filter:t,convInfo:n,backend:a,bias:r=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l,u,d="channelsLast"===n.dataFormat,p=!d,h=[];if(d&&n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&"VALID"===n.padInfo.type){let r=n.inHeight*n.inWidth*n.inChannels;l=_V({inputs:{x:e},backend:a,attrs:{shape:[1,n.batchSize,r]}}),u=_V({inputs:{x:t},backend:a,attrs:{shape:[1,r,n.outChannels]}})}else l=_V({inputs:{x:e},backend:a,attrs:{shape:d?[n.batchSize,n.inHeight*n.inWidth,n.inChannels]:[n.batchSize,n.inChannels,n.inHeight*n.inWidth]}}),u=_V({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}});if(h.push(l),h.push(u),null!=s){let e=eH(s.shape,d);null!=e&&(s=_V({inputs:{x:s},backend:a,attrs:{shape:e}}),h.push(s))}if(null!=r){let e=eH(r.shape,d);null!=e&&(r=_V({inputs:{x:r},backend:a,attrs:{shape:e}}),h.push(r))}let c=OV({a:d?l:u,b:d?u:l,transposeA:p,transposeB:!1,backend:a,bias:r,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),f=_V({inputs:{x:c},backend:a,attrs:{shape:n.outShape}});h.push(c);for(let e of h)a.disposeData(e.dataId);return f}({x:e,filter:t,convInfo:n,backend:a,bias:r,activation:o,preluActivationWeights:s,leakyreluAlpha:i});let c=Xe().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),f=c>-1?c:a.thresholdToIncreaseWorkgroups,m=n.batchSize*Math.ceil(n.outHeight*n.outWidth/32)*Math.ceil(n.outChannels/32);if(Xe().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")||m<=f)return function({x:e,filter:t,convInfo:n,backend:a,bias:r=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:l,filterHeight:u,inChannels:d,strideWidth:p,strideHeight:h,padInfo:c,outWidth:f,outHeight:m,dilationWidth:g,dilationHeight:y,dataFormat:x}=n,A="channelsLast"===x,b=l*u*d,w=m*f,v=A?[n.batchSize,w,b]:[n.batchSize,b,w],k=new QG(v,A),I=[{type:"int32",data:[c.top,c.left]},{type:"int32",data:[h,p]},{type:"int32",data:[y,g]},{type:"int32",data:[f]},{type:"int32",data:[d*l]},{type:"int32",data:[d]}],S=a.runWebGPUProgram(k,[e],e.dtype,I),C=[];C.push(S);let N=_V({inputs:{x:t},backend:a,attrs:{shape:[1,b,-1]}});if(C.push(N),null!=s){let e=eH(s.shape,A);null!=e&&(s=_V({inputs:{x:s},backend:a,attrs:{shape:e}}),C.push(s))}if(null!=r){let e=eH(r.shape,A);null!=e&&(r=_V({inputs:{x:r},backend:a,attrs:{shape:e}}),C.push(r))}let T=OV({a:A?S:N,b:A?N:S,transposeA:!A,transposeB:!1,backend:a,bias:r,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),R=_V({inputs:{x:T},backend:a,attrs:{shape:n.outShape}});C.push(T);for(let e of C)a.disposeData(e.dataId);return R}({x:e,filter:t,convInfo:n,backend:a,bias:r,preluActivationWeights:s,leakyreluAlpha:i,activation:o});let g,y=[n.padInfo.top,n.padInfo.left],x=[{type:"int32",data:[n.filterHeight,n.filterWidth]},{type:"int32",data:[...y]},{type:"int32",data:[n.strideHeight,n.strideWidth]},{type:"int32",data:[n.dilationHeight,n.dilationWidth]}];if(h)g=new JG(n,l,o,u);else{let e=d?n.outHeight*n.outWidth:n.outChannels,t=d?n.outChannels:n.outHeight*n.outWidth,r=n.filterHeight*n.filterWidth*n.inChannels;x.push({type:"int32",data:[e]},{type:"int32",data:[t]},{type:"int32",data:[r]});let s=a.adapterInfo.isIntel();g=new ZG(n,e,t,r,l,o,u,s)}let A=[],b=[e,t];l&&(!d&&1===r.shape.length&&(r=_V({inputs:{x:r},backend:a,attrs:{shape:[r.shape[0],1,1]}}),A.push(r)),b.push(r)),u&&(!d&&1===s.shape.length&&(s=_V({inputs:{x:s},backend:a,attrs:{shape:[s.shape[0],1,1]}}),A.push(s)),b.push(s)),"leakyrelu"===o&&(x.push({type:"float32",data:[i]}),g.uniforms+=" alpha : f32,");let w=a.runWebGPUProgram(g,b,e.dtype,x);for(let e of A)a.disposeData(e.dataId);return w}var nH,aH={kernelName:Rt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:d}=n,p=am.convertConv2DDataFormat(l);return tH({x:r,filter:s,convInfo:am.computeConv2DInfo(r.shape,s.shape,i,u,o,d,!1,p),backend:a})}},rH=class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>,",this.workgroupSize=[64,1,1],this.size=!1,this.isVec4=!1,this.workPerThread=1,this.outputShape=e.inShape,this.isChannelsLast="channelsLast"===e.dataFormat,this.isVec4=this.isChannelsLast&&e.outChannels%4==0&&e.inChannels%4==0,this.isVec4?(this.workPerThread=2,this.outputComponent=4,this.workgroupSize=[4,4,4],this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize,[4,this.workPerThread,1])):(this.size=!0,this.workPerThread=1,this.workgroupSize=[64,1,1],this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize)),this.shaderKey=`conv2DDerInput_${this.isChannelsLast}_${this.isVec4}_${this.workPerThread}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1,a=`\n    ${CW()} {\n      let batch = i32(globalId.z) / uniforms.outShape[1];\n      let r = i32(globalId.z) % uniforms.outShape[1];\n      let c = i32(globalId.y) * ${this.workPerThread};\n      let d1 = i32(globalId.x) * 4;\n\n      let dyCorner = vec2<i32>(r, c) - uniforms.pads;\n\n      // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n      // ? = to be determined. : = across all values in that axis.\n      var dotProd: array<vec4<f32>, ${this.workPerThread}>;\n      for (var i = 0; i < ${this.workPerThread}; i++) {\n        dotProd[i] = vec4<f32>(0.0);\n      }\n      for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {\n        let dyR = f32(dyCorner.x + wR) / f32(uniforms.strides.x);\n        let wRPerm = uniforms.filterDims.x - 1 - wR;\n        if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) ||\n            fract(dyR) > 0.0) {\n          continue;\n        }\n        let idyR = i32(dyR);\n\n        for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {\n          let dyC = f32(dyCorner.y + wC) / f32(uniforms.strides.y);\n          let dyC2 = f32(dyCorner.y + 1 + wC) / f32(uniforms.strides.y);\n          let wCPerm = uniforms.filterDims.y - 1 - wC;\n          var bDyCVal = true;\n          var bDyCVal2 = true;\n          if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||\n              fract(dyC) > 0.0) {\n            bDyCVal = false;\n          }\n          if (dyC2 < 0.0 || dyC2 >= f32(uniforms.outBackprop[2]) ||\n              fract(dyC2) > 0.0) {\n            bDyCVal2 = false;\n          }\n\n          let idyC = i32(dyC);\n          let idyC2 = i32(dyC2);\n          if (bDyCVal && bDyCVal2) {\n            let d2Length = uniforms.outBackprop[3];\n            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {\n              let wValue0 = getW(wRPerm, wCPerm, d1, d2);\n              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);\n              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);\n              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);\n              var xValue =  getDy(batch, idyR, idyC, d2);\n              let tmpval = vec4<f32>(dot(xValue, wValue0),\n                                     dot(xValue, wValue1),\n                                     dot(xValue, wValue2),\n                                     dot(xValue, wValue3));\n              dotProd[0] = dotProd[0] + tmpval;\n              xValue = getDy(batch, idyR, idyC2, d2);\n              dotProd[1] = dotProd[1] + vec4<f32>(dot(xValue, wValue0),\n                                                  dot(xValue, wValue1),\n                                                  dot(xValue, wValue2),\n                                                  dot(xValue, wValue3));\n            }\n          } else if (bDyCVal) {\n            let d2Length = uniforms.outBackprop[3];\n            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {\n              let wValue0 = getW(wRPerm, wCPerm, d1, d2);\n              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);\n              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);\n              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);\n              var xValue =  getDy(batch, idyR, idyC, d2);\n              let tmpval = vec4<f32>(dot(xValue, wValue0),\n                                     dot(xValue, wValue1),\n                                     dot(xValue, wValue2),\n                                     dot(xValue, wValue3));\n              dotProd[0] = dotProd[0] + tmpval;\n            }\n          } else if (bDyCVal2) {\n            let d2Length = uniforms.outBackprop[3];\n            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {\n              let wValue0 = getW(wRPerm, wCPerm, d1, d2);\n              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);\n              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);\n              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);\n              var xValue =  getDy(batch, idyR, idyC2, d2);\n              let tmpval = vec4<f32>(dot(xValue, wValue0),\n                                     dot(xValue, wValue1),\n                                     dot(xValue, wValue2),\n                                     dot(xValue, wValue3));\n              dotProd[1] = dotProd[1] + tmpval;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < ${this.workPerThread}; i = i + 1) {\n        let coords = vec4<i32>(batch, r, c + i, d1);\n        if (coordsInBounds4D(coords, uniforms.outShape)) {\n          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);\n        }\n      }\n    }\n    `;return this.isVec4?`\n    ${a}\n    `:`\n    ${CW("index")} {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d1 = coords[${n}];\n\n        let dyCorner = vec2<i32>(coords[${e}], coords[${t}]) - uniforms.pads;\n        let dyRCorner = dyCorner.x;\n        let dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {\n          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.strides.x);\n          let wRPerm = uniforms.filterDims.x - 1 - wR;\n          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||\n              wRPerm < 0) {\n            continue;\n          }\n          let idyR = i32(dyR);\n\n          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {\n            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.strides.y);\n            let wCPerm = uniforms.filterDims.y - 1 - wC;\n            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||\n                fract(dyC) > 0.0 || wCPerm < 0) {\n              continue;\n            }\n            let idyC = i32(dyC);\n\n            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {\n              let xValue = ${this.isChannelsLast?"getDy(batch, idyR, idyC, d2)":"getDy(batch, d2, idyR, idyC)"};\n              let wValue = getW(wRPerm, wCPerm, d1, d2);\n              dotProd = dotProd + xValue * wValue;\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  `}},sH=class{constructor(e){this.variableNames=["x","dy"],this.uniforms="pads : vec2<i32>, strides : vec2<i32>, batchSize : i32, outHeight : i32, outWidth : i32, inHeight : i32, inWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast="channelsLast"===e.dataFormat,this.shaderKey=`conv2DDerFilter_${this.isChannelsLast}`}getUserCode(){return`\n    ${CW("index")} {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let wR = coords[0];\n        let wC = coords[1];\n        let d1 = coords[2];\n        let d2 = coords[3];\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var b = 0; b < uniforms.batchSize; b = b + 1) {\n          for (var yR = 0; yR < uniforms.outHeight; yR = yR + 1) {\n            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];\n            if (xR < 0 || xR >= uniforms.inHeight) {\n              continue;\n            }\n\n            for (var yC = 0; yC < uniforms.outWidth; yC = yC + 1) {\n              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];\n\n              if (xC < 0 || xC >= uniforms.inWidth) {\n                continue;\n              }\n\n              if (${this.isChannelsLast}) {\n                let dyValue = getDy(b, yR, yC, d2);\n                let xValue = getX(b, xR, xC, d1);\n                dotProd = dotProd + xValue * dyValue;\n              } else {\n                let dyValue = getDy(b, d2, yR, yC);\n                let xValue = getX(b, d1, xR, xC);\n                dotProd = dotProd + xValue * dyValue;\n              }\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  `}},iH=class{constructor(e){this.variableNames=["x","dy"],this.uniforms="pads : vec3<i32>, strides : vec3<i32>, batchSize : i32, outDepth : i32,\n       outHeight : i32, outWidth : i32, inDepth : i32, inHeight : i32, inWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerFilter"}getUserCode(){return`\n    ${CW("index")} {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let wF = coords.x;\n        let wR = coords.y;\n        let wC = coords.z;\n        let d1 = coords.w;\n        let d2 = coords.u;\n\n        var dotProd = 0.0;\n        for (var b = 0; b < uniforms.batchSize; b++) {\n          for (var yF = 0; yF < uniforms.outDepth; yF++) {\n            let xF = wF + yF * uniforms.strides[0] - uniforms.pads[0];\n            if (xF < 0 || xF >= uniforms.inDepth) {\n              continue;\n            }\n\n            for (var yR = 0; yR < uniforms.outHeight; yR++) {\n              let xR = wR + yR * uniforms.strides[1] - uniforms.pads[1];\n              if (xR < 0 || xR >= uniforms.inHeight) {\n                continue;\n              }\n\n              for (var yC = 0; yC < uniforms.outWidth; yC++) {\n                let xC = wC + yC * uniforms.strides[2] - uniforms.pads[2];\n                if (xC < 0 || xC >= uniforms.inWidth) {\n                  continue;\n                }\n\n                let dyValue = getDy(b, yF, yR, yC, d2);\n                let xValue = getX(b, xF, xR, xC, d1);\n                dotProd += xValue * dyValue;\n              }\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  `}},oH=class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec3<i32>, pads : vec3<i32>, strides : vec3<i32>,\n      outDepth : i32, outHeight : i32, outWidth : i32, outChannels : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerInput"}getUserCode(){return`\n    ${CW("index")} {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords.x;\n        let d1 = coords.u;\n\n        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;\n        let dyFCorner = dyCorner.x;\n        let dyRCorner = dyCorner.y;\n        let dyCCorner = dyCorner.z;\n\n        var dotProd = 0.0;\n        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {\n          let dyF = f32(dyFCorner + wF) / f32(uniforms.strides[0]);\n          if (dyF < 0.0 || dyF >= f32(uniforms.outDepth) || fract(dyF) > 0.0) {\n            continue;\n          }\n          let idyF = i32(dyF);\n\n          let wFPerm = uniforms.filterDims[0] - 1 - wF;\n\n          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {\n            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);\n\n            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n              continue;\n            }\n            let idyR = i32(dyR);\n\n            let wRPerm = uniforms.filterDims[1] - 1 - wR;\n\n            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {\n              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);\n\n              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n                continue;\n              }\n              let idyC = i32(dyC);\n\n              let wCPerm = uniforms.filterDims[2] - 1 - wC;\n\n              for (var d2 = 0; d2 < uniforms.outChannels; d2++) {\n                let xValue = getDy(batch, idyF, idyR, idyC, d2);\n                let wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  `}},lH={kernelName:Et,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:d}=a,p=am.convertConv2DDataFormat(l),h=am.computeConv2DInfo(r.shape,d,i,1,o,u,!1,p),c=new sH(h),f=[{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.batchSize]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"int32",data:[h.inHeight]},{type:"int32",data:[h.inWidth]}];return n.runWebGPUProgram(c,[r,s],r.dtype,f)}},uH=class{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,$r.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),this.isVec4=e.inChannels%4==0&&e.outChannels%4==0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workgroupSize=BW(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=VW(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4&&(this.outputComponent=4,this.variableComponents=[4,1]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}`}getUserCode(){let e=this.isVec4?kV(this.elementsPerThread,this.workgroupSize):SV(this.elementsPerThread,this.workgroupSize);return`\n    ${function(e=4){let t=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n        \n      let outRow = row / uniforms.outShape[2];\n      let outCol = row % uniforms.outShape[2];\n\n      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);\n      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];\n      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.strides[0]);\n      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.strides[1]);\n      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {\n        return ${kW(e)}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {\n        return ${kW(e)}(0.0);\n      }\n      let coord = vec4<i32>(\n          batch,\n          i32(xR),\n          i32(xC),\n          col % uniforms.outBackprop[3]);\n      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${e}];\n      }\n      return ${kW(e)}(0.0);`;return`\n  fn mm_readA(batch: i32, row : i32, col : i32) -> ${kW(e)} {\n    ${t}\n  }\n\n  fn mm_readB(batch: i32, row : i32, col : i32) -> ${kW(e)} {\n    let coordX = uniforms.filterDims.x - 1 -\n        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);\n    let coordY = uniforms.filterDims.y - 1 -\n        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];\n    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&\n        coordX >= 0 && coordY >= 0) {\n      let rowInner = row % uniforms.outBackprop[3];\n      let coord = vec4<i32>(coordX, coordY, col, rowInner);\n      ${(e=>{switch(e){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return"\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];\n            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];\n            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];\n            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];\n            return vec4<f32>(v0, v1, v2, v3);\n            ";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(e)}\n    }\n    return ${kW(e)}(0.0);\n  }\n\n  fn mm_write(batch: i32, row : i32, col : i32, valueInput : ${kW(e)}) {\n    if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {\n      var value = valueInput;\n      let outCoord = vec4<i32>(\n          batch,\n          row / uniforms.outShape[2],\n          row % uniforms.outShape[2],\n          col);\n      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${e}] = value;\n    }\n  }`}(this.isVec4?4:1)}\n    ${e}\n    `}},dH={kernelName:$t,backendName:"webgpu",kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{dy:s,filter:i}=n,{inputShape:o,strides:l,pad:u,dataFormat:d,dimRoundingMode:p}=r,h=am.convertConv2DDataFormat(d),c=am.computeConv2DInfo(o,i.shape,l,1,u,p,!1,h),f=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.filterHeight-1-c.padInfo.top,c.filterWidth-1-c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.batchSize,c.outHeight,c.outWidth,c.outChannels]}];if(Xe().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE")||"channelsLast"!==c.dataFormat)t=new rH(c);else{t=new uH(c);let e=c.inHeight*c.inWidth,n=c.inChannels,a=c.filterHeight*c.filterWidth*c.outChannels;f.push({type:"uint32",data:[e]},{type:"uint32",data:[n]},{type:"uint32",data:[a]})}return a.runWebGPUProgram(t,[s,i],"float32",f)}},pH=class{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims: vec3<i32>, pads: vec3<i32>, strides: vec3<i32>, dilations: vec3<i32>,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3dnaive"}getUserCode(){return`\n    ${CW("index")} {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        let batch = coords.x;\n        let d2 = coords.u;\n\n        let xFRCCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;\n        let xFCorner = xFRCCorner.x;\n        let xRCorner = xFRCCorner.y;\n        let xCCorner = xFRCCorner.z;\n\n        let inputDepthNearestVec4 = (uniforms.xShape.u / 4) * 4;\n        let inputDepthVec4Remainder = uniforms.xShape.u % 4;\n\n        var dotProd = 0.0;\n        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {\n          let xF = xFCorner + wF * uniforms.dilations[0];\n          if (xF < 0 || xF >= uniforms.xShape.y) {\n            continue;\n          }\n\n          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {\n            let xR = xRCorner + wR * uniforms.dilations[1];\n            if (xR < 0 || xR >= uniforms.xShape.z) {\n              continue;\n            }\n\n            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {\n              let xC = xCCorner + wC * uniforms.dilations[2];\n              if (xC < 0 || xC >= uniforms.xShape.w) {\n                continue;\n              }\n\n              for (var d1 = 0; d1 < inputDepthNearestVec4; d1 += 4) {\n                let xValues = vec4<f32>(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                let wValues = vec4<f32>(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (inputDepthVec4Remainder == 1) {\n                dotProd += getX(batch, xF, xR, xC, inputDepthNearestVec4) *\n                  getW(wF, wR, wC, inputDepthNearestVec4, d2);\n              } else if (inputDepthVec4Remainder == 2) {\n                let xValues = vec2<f32>(\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4),\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1)\n                );\n                let wValues = vec2<f32>(\n                  getW(wF, wR, wC, inputDepthNearestVec4, d2),\n                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (inputDepthVec4Remainder == 3) {\n                let xValues = vec3<f32>(\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4),\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2)\n                );\n                let wValues = vec3<f32>(\n                  getW(wF, wR, wC, inputDepthNearestVec4, d2),\n                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2),\n                  getW(wF, wR, wC, inputDepthNearestVec4 + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }`}},hH={kernelName:Mt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l}=a,u=am.computeConv3DInfo(r.shape,s.shape,i,l,o),d=[u.padInfo.front,u.padInfo.top,u.padInfo.left],p=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[...d]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationDepth,u.dilationHeight,u.dilationWidth]}],h=new pH(u),c=Cs(r.dtype,s.dtype);return n.runWebGPUProgram(h,[r,s],c,p)}},cH={kernelName:Ft,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,filterShape:l}=a,u=am.computeConv3DInfo(r.shape,l,i,1,o),d=new iH(u),p=[{type:"int32",data:[u.padInfo.front,u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.batchSize]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.inDepth]},{type:"int32",data:[u.inHeight]},{type:"int32",data:[u.inWidth]}];return n.runWebGPUProgram(d,[r,s],s.dtype,p)}},fH={kernelName:_t,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:i,pad:o,inputShape:l}=a,u=am.computeConv3DInfo(l,s.shape,i,1,o),d=new oH(u),p=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[u.filterDepth-1-u.padInfo.front,u.filterHeight-1-u.padInfo.top,u.filterWidth-1-u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.outChannels]}];return n.runWebGPUProgram(d,[r,s],r.dtype,p)}},mH=HV({opType:YW.COS}),gH={kernelName:Pt,backendName:"webgpu",kernelFunc:mH},yH=HV({opType:YW.COSH}),xH={kernelName:Ot,backendName:"webgpu",kernelFunc:yH},AH=class{constructor(e,t,n,a){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workgroupSize=[64,1,1],this.size=!0;let[r]=t;this.outputShape=[r,n[0],n[1],e],this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.methodId="bilinear"===a?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,a,r]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[s,i,o]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`\n    ${CW("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let height_ratio = f32(${n});\n        let width_ratio = f32(${s});\n        let b = coords[0];\n        let y = coords[1];\n        let x = coords[2];\n        let d = coords[3];\n        // get box vals\n        let y1 = getBoxes(b, 0);\n        let x1 = getBoxes(b, 1);\n        let y2 = getBoxes(b, 2);\n        let x2 = getBoxes(b, 3);\n        // get image in batch index\n        let bInd = i32(round(getBoxInd(b)));\n        if(bInd < 0 || bInd >= uniforms.outShape[0]) {\n          return;\n        }\n        let height_scale = ${a};\n        let width_scale = ${i};\n        let in_y = ${r};\n        if( in_y < 0.0 || in_y > ${e} ) {\n          setOutputAtIndex(index, uniforms.extrapolationValue);\n          return;\n        }\n        let in_x = ${o};\n        if( in_x < 0.0 || in_x > ${t} ) {\n          setOutputAtIndex(index, uniforms.extrapolationValue);\n          return;\n        }\n        let sourceFracIndexCR = vec2<f32>(in_x,in_y);\n        if(${this.methodId} == 1) {\n          // Compute the four integer indices.\n          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);\n          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));\n          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);\n          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);\n          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);\n          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);\n          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);\n          let top = topLeft + (topRight - topLeft) * fracCR.x;\n          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          let newValue = top + (bottom - top) * fracCR.y;\n          setOutputAtIndex(index, newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          let sourceNearestCR = vec2<i32>(floor(\n            sourceFracIndexCR + vec2<f32>(0.5,0.5)));\n          let newValue = getImage(\n            bInd, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    }\n    `}},bH={kernelName:Lt,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=a,d=new AH(r.shape[3],s.shape,o,l),p=[{type:"float32",data:[u]}];return n.runWebGPUProgram(d,[r,s,i],"float32",p)}};!function(e){e.Prod="*",e.Sum="+"}(nH||(nH={}));var wH=class{constructor(e,t,n,a){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0,this.workgroupSize=[128,1,1],this.outputShape=t,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.exclusive=n,this.reverse=a,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){let e=this.outputShape.length,t=this.op===nH.Prod?"1.0":"0.0",n=this.exclusive?t:`getX(${vH(e,"coords",this.op)})`,a=this.outputShape[this.outputShape.length-1],r="",s="";return this.exclusive?(r=this.reverse?"end != "+(a-1):"end != 0",s=this.reverse?"end + 1":"end - 1"):(r=this.reverse?`end + pow2 < ${a}`:"end >= pow2",s=this.reverse?"end + pow2":"end - pow2"),`\n      ${CW("index")} {\n       if (index < uniforms.size) {\n         var coords = getCoordsFromIndex(index);\n\n         let end = ${kH(e,"coords",this.op)};\n         var val = ${n};\n         let pow2 = i32(pow(2.0, uniforms.index));\n         if (${r}) {\n           let idx = ${s};\n           ${kH(e,"coords",this.op)} = idx;\n           val ${this.op}= getX(${vH(e,"coords",this.op)});\n         }\n         setOutputAtIndex(index, val);\n       }\n      }\n    `}};function vH(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function kH(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function IH(e,t,n,a,r,s){let i=t.shape.length,o=am.getAxesPermutation([a],i),l=t;null!=o&&(l=BU({inputs:{x:t},backend:n,attrs:{perm:o}}));let u=am.getInnerMostAxes(1,i)[0];if(u!==i-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${a}`);let d=l.shape[u],p=WV({inputs:{x:l},backend:n});for(let t=0;t<=Math.ceil(Math.log2(d))-1;t++){let a=new wH(e,l.shape,!1,s),r=p,i=[{type:"float32",data:[t]}];p=n.runWebGPUProgram(a,[p],p.dtype,i),n.disposeData(r.dataId)}if(r){let t=new wH(e,l.shape,r,s),a=p,i=[{type:"float32",data:[0]}];p=n.runWebGPUProgram(t,[p],p.dtype,i),n.disposeData(a.dataId)}if(null!=o){let e=BU({inputs:{x:p},backend:n,attrs:{perm:am.getUndoAxesPermutation(o)}});return n.disposeData(p.dataId),n.disposeData(l.dataId),e}return p}var SH={kernelName:Dt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a;return IH(nH.Prod,r,n,s,i,o)}},CH={kernelName:zt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a;return IH(nH.Sum,r,n,s,i,o)}},NH={kernelName:Wt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i,binaryOutput:o}=a,l=1===r.shape.length,u=$r.sizeFromShape(s.shape)>0,d=s.dtype,p=l?[r.shape[0]]:[r.shape[0],r.shape[1]],h=MV({backend:n,attrs:{shape:l?[i]:[r.shape[0],i],value:0,dtype:d}}),c=new TG(p,u,o),f=[{type:"int32",data:[i]}],m=u?[r,s]:[r];return n.runWebGPUProgram(c,m,d,f,h)}},TH=class{constructor(e,t){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`\n      ${CW("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let h = ${this.getHeightCoordString()};\n          let w = ${this.getWidthCoordString()};\n          let d = ${this.getDepthCoordString()};\n\n          let in_h = h / uniforms.blockSize;\n          let offset_h = h % uniforms.blockSize;\n          let in_w = w / uniforms.blockSize;\n          let offset_w = w % uniforms.blockSize;\n          let offset_d = (offset_h * uniforms.blockSize + offset_w) *\n            ${this.getOutputDepthSize()};\n          let in_d = d + offset_d;\n\n          let rlt = ${this.getInputSamplingString()};\n          setOutputAtIndex(index, rlt);\n        }\n      }`}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}},RH={kernelName:Bt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:i}=a,o=r.shape[0],l=("NHWC"===i?r.shape[1]:r.shape[2])*s,u=("NHWC"===i?r.shape[2]:r.shape[3])*s,d=("NHWC"===i?r.shape[3]:r.shape[1])/(s*s),p=[{type:"int32",data:[s]}],h=new TH("NHWC"===i?[o,l,u,d]:[o,d,l,u],i);return n.runWebGPUProgram(h,[r],r.dtype,p)}},EH=class{constructor(e,t,n,a=!1,r=null,s=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>,",this.workgroupSize=[16,16,1],this.outputShape=e,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),a&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.addBias=a,this.activation=r,this.hasPreluActivation=s,this.filterHeight=t,this.filterWidth=n,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){let e=this.filterWidth*this.filterHeight,t=this.workgroupSize[0]*this.workgroupSize[1]*this.workgroupSize[2],n=this.workgroupSize[1]+this.filterHeight-1,a=this.workgroupSize[0]+this.filterWidth-1;return`\n      ${AV(this.activation,this.hasPreluActivation,!1,4)}\n\n      var<workgroup> mm_Asub : array<array<f32, ${a}>, ${n}>;\n      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;\n      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {\n        var value = 0.0;\n        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])\n        {\n          value = getX(batch, channel, row, col);\n        }\n        return value;\n      }\n\n      ${CW()} {\n        let coords = getOutputCoords();\n        let batch = coords[0];\n        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pads;\n        let channelMul = uniforms.wShape[3];\n        let d1 = coords[1] / channelMul;\n        let q = coords[1] % channelMul;\n\n        let inputRowStart = xRCCorner.x;\n        let inputColStart = xRCCorner.y;\n\n        let localRow = i32(localId.y);\n        let localCol = i32(localId.x);\n\n        // Load one tile of X into local memory.\n        for (var inputRow = localRow; inputRow < ${n}; inputRow = inputRow + ${this.workgroupSize[1]}) {\n          for (var inputCol = localCol; inputCol < ${a}; inputCol = inputCol + ${this.workgroupSize[0]}) {\n            let rowOffset = inputRow - localRow;\n            let colOffset = inputCol - localCol;\n            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);\n          }\n        }\n\n        // Load one tile of W into local memory.\n        var wIndex = i32(localIndex);\n        ${e<t?`if (wIndex < ${e})`:`for(; wIndex < ${e}; wIndex = wIndex + ${t})`}\n\n        {\n          let wRow = wIndex / ${this.filterWidth};\n          let wCol = wIndex % ${this.filterWidth};\n          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);\n        }\n\n        workgroupBarrier();\n\n        var value = 0.0;\n        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {\n          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {\n            let xVal = mm_Asub[localRow + wR][localCol + wC];\n            let wVal = mm_Bsub[wR][wC];\n            value = fma(xVal, wVal, value);\n          }\n        }\n        ${bV(this.addBias,this.activation)}\n        if (coordsInBounds4D(coords, uniforms.outShape)) {\n          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n        }\n      }\n    `}},$H=class{constructor(e,t=!1,n=null,a=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>, virtualWidth : i32,",this.workgroupSize=[64,1,1],this.workPerThread=4,this.outputComponent=4,this.outputShape=e.outShape,this.virtualWidth=Math.ceil(this.outputShape[2]/this.workPerThread)*this.workPerThread;let r=[this.outputShape[0],this.outputShape[1],this.virtualWidth,this.outputShape[3]];this.dispatchLayout=UW(r),this.dispatch=LW(this.dispatchLayout,r,this.workgroupSize,[this.outputComponent*this.workPerThread,1,1]),$r.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=a,this.shaderKey=`depthwiseVec4_${n}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.convInfo.strideHeight}_${this.convInfo.strideWidth}_${this.workPerThread}`}getUserCode(){let e=(this.workPerThread-1)*this.convInfo.strideWidth+this.convInfo.filterWidth,t=this.convInfo.strideHeight,n=this.convInfo.strideWidth;return`\n      ${AV(this.activation,this.hasPreluActivation,!0,4)}\n      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {\n        var value = vec4<f32>(0.0);\n        if (col >=0 && col < uniforms.inDims[1]) {\n          value = getX(batch, row, col, channel);\n        }\n        return value;\n      }\n\n      ${CW("index")} {\n        let width0 = uniforms.outShape[3] / ${this.outputComponent};\n        let d1 = (index % width0) * ${this.outputComponent};\n        var index1 = index / width0;\n        let width1 = uniforms.virtualWidth / ${this.workPerThread};\n        let c = (index1 % width1) * ${this.workPerThread};\n        index1 = index1 / width1;\n        let r = index1 % uniforms.outShape[1];\n        let batch = index1 / uniforms.outShape[1];\n\n        let xRCCorner = vec2<i32>(r, c) * vec2<i32>(${t}, ${n}) - uniforms.pads;\n\n        let xRCorner = xRCCorner.x;\n        let xCCorner = xRCCorner.y;\n        var xVals : array<vec4<f32>, ${e}>;\n        var dotProd : array<vec4<f32>, ${this.workPerThread}>;\n        for (var i = 0; i < ${this.workPerThread}; i++) {\n          dotProd[i] = vec4<f32>(0.0);\n        }\n\n        // Use constant instead of uniform can give better performance.\n        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {\n          let xR = xRCorner + wR;\n          if (xR >=0 && xR < uniforms.inDims[0]) {\n            for (var i = 0; i < ${e}; i++) {\n              xVals[i] = readX(batch, xR, xCCorner + i, d1);\n            }\n            for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {\n              let wValue = getW(wR, wC, d1, 0);\n              for (var i = 0; i < ${this.workPerThread}; i++) {\n                dotProd[i] = fma(xVals[i * ${n} + wC], wValue, dotProd[i]);\n              }\n            }\n          }\n        }\n\n        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let coords = vec4<i32>(batch, r, c + i, d1);\n          if (coordsInBounds4D(coords, uniforms.outShape)) {\n            var value = dotProd[i];\n            ${bV(this.addBias,this.activation)}\n            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n          }\n        }\n      }\n    `}},MH=class{constructor(e,t=!1,n=null,a=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,\n      filterWidth : i32, strides : vec2<i32>, dilations : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast="channelsLast"===e.dataFormat,t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=a,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`\n      ${AV(this.activation,this.hasPreluActivation,!1,4)}\n\n      ${CW("index")} {\n        if (index < uniforms.size) {\n          let coords = getOutputCoords();\n          let batch = coords[0];\n          let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.strides - uniforms.pads;\n          let d2 = coords[${this.isChannelsLast?3:1}];\n          let channelMul = uniforms.wShape[3];\n          let d1 = d2 / channelMul;\n          let q = d2 % channelMul;\n\n          let inputRowStart = xRCCorner.x;\n          let inputColStart = xRCCorner.y;\n          let inputRowEnd = inputRowStart + uniforms.filterHeight *\n              uniforms.dilations[0];\n          let inputColEnd = inputColStart + uniforms.filterWidth *\n              uniforms.dilations[1];\n\n          // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get\n          // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all\n          // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.\n          // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.\n          var value = 0.0;\n\n          // Extract if checking out of for loop for performance.\n          if (inputRowStart >= 0 && inputColStart >= 0 &&\n            inputRowEnd < uniforms.inDims[0] &&\n                inputColEnd < uniforms.inDims[1]) {\n              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {\n                let xR = inputRowStart + wR * uniforms.dilations[0];\n\n                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {\n                  let xC = inputColStart + wC * uniforms.dilations[1];\n\n                  let xVal = ${e};\n                  let wVal = getW(wR, wC, d1, q);\n                  value = value + xVal * wVal;\n                }\n              }\n            } else {\n              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {\n                let xR = inputRowStart + wR * uniforms.dilations[0];\n\n                if (xR < 0 || xR >= uniforms.inDims[0]) {\n                  continue;\n                }\n\n                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {\n                  let xC = inputColStart + wC * uniforms.dilations[1];\n\n                  if (xC < 0 || xC >= uniforms.inDims[1]) {\n                    continue;\n                  }\n\n                  let xVal = ${e};\n                  let wVal = getW(wR, wC, d1, q);\n                  value = value + xVal * wVal;\n                }\n              }\n            }\n            ${bV(this.addBias,this.activation)}\n          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n        }\n      }\n    `}},FH={kernelName:Vt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:d}=a,p=am.convertConv2DDataFormat(l),h=u;null==h&&(h=[1,1]);let c,f=am.computeConv2DInfo(r.shape,s.shape,i,h,o,d,!0,p),m=[{type:"int32",data:[f.padInfo.top,f.padInfo.left]},{type:"int32",data:[f.inHeight,f.inWidth]}],g="channelsLast"===f.dataFormat;return!g&&f.inHeight>16&&f.inWidth>16&&1===f.strideHeight&&1===f.strideWidth&&1===f.dilationWidth&&1===f.dilationHeight&&f.inChannels===f.outChannels?c=new EH(f.outShape,f.filterHeight,f.filterWidth):g&&f.outHeight>4&&f.outWidth>4&&f.strideWidth<=2&&f.inChannels===f.outChannels&&1===f.dilationHeight&&1===f.dilationWidth&&f.inChannels%4==0?(c=new $H(f),m.push({type:"int32",data:[c.virtualWidth]})):(c=new MH(f),m.push({type:"int32",data:[f.filterHeight]},{type:"int32",data:[f.filterWidth]},{type:"int32",data:[f.strideHeight,f.strideWidth]},{type:"int32",data:[f.dilationHeight,f.dilationWidth]})),n.runWebGPUProgram(c,[r,s],r.dtype,m)}},_H=class{constructor(e){this.variableNames=["x","dy"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>, outHeight : i32,\n      outWidth : i32, inHeight : i32, inWidth : i32, batchSize : i32, channelMul : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_filter"}getUserCode(){return`\n      ${CW("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let wR = coords[0];\n        let wC = coords[1];\n        let d1 = coords[2];\n        let dm = coords[3];\n        let d2 = d1 * uniforms.channelMul + dm;\n\n        var dotProd = 0.0;\n        for (var b = 0; b < uniforms.batchSize; b++) {\n          for (var yR = 0; yR < uniforms.outHeight; yR++) {\n            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];\n\n            if (xR < 0 || xR >= uniforms.inHeight) {\n              continue;\n            }\n\n            for (var yC = 0; yC < uniforms.outWidth; yC++) {\n              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];\n\n              if (xC < 0 || xC >= uniforms.inWidth) {\n                continue;\n              }\n\n              let dyValue = getDy(b, yR, yC, d2);\n              let xValue = getX(b, xR, xC, d1);\n              dotProd += xValue * dyValue;\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    `}},PH=class{constructor(e){this.variableNames=["dy","W"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>,\n       outHeight : i32, outWidth : i32, channelMul : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_input"}getUserCode(){return`\n      ${CW("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d1 = coords[3];\n        let dyCorner = coords.yz - uniforms.pads;\n        let dyRCorner = dyCorner.x;\n        let dyCCorner = dyCorner.y;\n\n        var dotProd = 0.0;\n        for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {\n          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);\n\n          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n            continue;\n          }\n\n          let idyR = i32(dyR);\n          let wRPerm = uniforms.filterDims[0] - 1 - wR;\n\n          for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {\n            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);\n\n            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n              continue;\n            }\n\n            let idyC = i32(dyC);\n            let wCPerm = uniforms.filterDims[1] - 1 - wC;\n\n            for (var dm = 0; dm < uniforms.channelMul; dm++) {\n              let d2 = d1 * uniforms.channelMul + dm;\n              let xValue = getDy(batch, idyR, idyC, d2);\n              let wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    `}},OH={kernelName:Ut,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:d}=a,p=am.computeConv2DInfo(r.shape,d,i,o,l,u,!0),h=new _H(p),c=[{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]},{type:"int32",data:[p.inHeight]},{type:"int32",data:[p.inWidth]},{type:"int32",data:[p.batchSize]},{type:"int32",data:[p.outChannels/p.inChannels]}];return n.runWebGPUProgram(h,[r,s],"float32",c)}},DH={kernelName:Gt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:d}=a,p=am.computeConv2DInfo(d,s.shape,i,o,l,u,!0),h=new PH(p),c=[{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.filterHeight-1-p.padInfo.top,p.filterWidth-1-p.padInfo.left]},{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]},{type:"int32",data:[p.outChannels/p.inChannels]}];return n.runWebGPUProgram(h,[r,s],r.dtype,c)}},zH=class{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,e],this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="diag"}getUserCode(){return`\n      ${CW("index")} {\n        if (index < uniforms.size) {\n          let coords = getOutputCoords();\n          let value = select(0.0, getX(coords[0]), coords[0] == coords[1]);\n          setOutputAtIndex(index, value);\n        }\n      }\n    `}},LH={kernelName:Ht,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a}=t,r=[...a.shape,...a.shape],s=$r.sizeFromShape(a.shape),i=_V({inputs:{x:a},backend:n,attrs:{shape:[s]}}),o=new zH(s),l=n.runWebGPUProgram(o,[i],i.dtype),u=_V({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeData(i.dataId),n.disposeData(l.dataId),u}},WH=class{constructor(e){this.variableNames=["x","w"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="dilation2d"}getUserCode(){return`\n       ${CW("index")} {\n         if (index < uniforms.size) {\n           let neg_infinity = -3.4e38;\n           let coords = getOutputCoords();\n           let batch = coords.x;\n           let d1 = coords.w;\n           let outTopLeftCorner = coords.yz * uniforms.strides - uniforms.pads;\n           let hBeg = outTopLeftCorner.x;\n           let wBeg = outTopLeftCorner.y;\n\n           var curVal = neg_infinity;\n           for (var h = 0; h < uniforms.filterDims[0]; h = h + 1) {\n             let hIn = hBeg + h * uniforms.dilations[0];\n\n             if (hIn >= 0 && hIn < uniforms.xShape[1]) {\n               for (var w = 0; w < uniforms.filterDims[1]; w = w + 1) {\n                 let wIn = wBeg + w * uniforms.dilations[1];\n\n                 if (wIn >= 0 && wIn < uniforms.xShape[2]) {\n                   let val = getX(batch, hIn, wIn, d1) + getW(h, w, d1);\n                   if (val > curVal) {\n                     curVal = val;\n                   }\n                 }\n               }\n             }\n           }\n\n           setOutputAtIndex(index, curVal);\n         }\n       }\n     `}},BH={kernelName:jt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l}=a,u=am.computeDilation2DInfo(r.shape,s.shape,i,o,"NHWC",l),d=[u.padInfo.top,u.padInfo.left],p=[{type:"int32",data:[u.filterHeight,u.filterWidth]},{type:"int32",data:[...d]},{type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]}],h=new WH(u);return n.runWebGPUProgram(h,[r,s],r.dtype,p)}},VH=class{constructor(e,t){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.inShape,this.dispatchLayout=UW(e.outShape),this.dispatch=LW(this.dispatchLayout,e.outShape,this.workgroupSize),"float32"!==t&&"int32"!==t)throw new Error(`Dilation2DBackpropInput only supports float32 and int32\n          types, does not support ${t} type.`);this.type=t,this.shaderKey="dilation2DBackpropInput"}getUserCode(){return`\n       ${CW("index")} {\n         if (index < uniforms.dySize) {\n           let coords = getDyCoordsFromIndex(index);\n           let b = coords[0];\n           let r = coords[1];\n           let c = coords[2];\n           let d = coords[3];\n\n           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;\n           var curVal = -3.4e38;  // neg_infinity\n           var xRMax = 0;\n           var xCMax = 0;\n\n           // In the case of multiple argmax branches, we only back-propagate\n           // along the last branch, i.e., the one with largest value of\n           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling\n           // backward routines.\n           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {\n             let xR = dyCorner.x + wR * uniforms.dilations[0];\n\n             if (xR >= 0 && xR < uniforms.xShape[1]) {\n               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {\n                 let xC = dyCorner.y + wC * uniforms.dilations[1];\n\n                 if (xC >= 0 && xC < uniforms.xShape[2]) {\n                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);\n                   if (val > curVal) {\n                     curVal = val;\n                     xRMax = xR;\n                     xCMax = xC;\n                   }\n                 }\n               }\n             }\n           }\n\n           let flatIndexIn = d + uniforms.xShape[3] *\n               (xCMax + uniforms.xShape[2] * (xRMax + uniforms.xShape[1] * b));\n           let value = getDy(b, r, c, d);\n           ${vW("&result[flatIndexIn]","value",this.type)}\n         }\n       }\n     `}},UH=class{constructor(e,t,n){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.filterShape,this.dispatchLayout=UW(e.outShape),this.dispatch=LW(this.dispatchLayout,e.outShape,this.workgroupSize),"float32"!==n&&"int32"!==n)throw new Error(`Dilation2DBackpropFilter only supports float32 and int32\n          types, does not support ${n} type.`);this.type=n,this.shaderKey="dilation2DBackpropFilter"}getUserCode(){return`\n       ${CW("index")} {\n         if (index < uniforms.dySize) {\n           let coords = getDyCoordsFromIndex(index);\n           let b = coords[0];\n           let r = coords[1];\n           let c = coords[2];\n           let d = coords[3];\n\n           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;\n           var curVal = -3.4e38;  // neg_infinity\n           var wRMax = 0;\n           var wCMax = 0;\n\n           // In the case of multiple argmax branches, we only back-propagate\n           // along the last branch, i.e., the one with largest value of\n           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling\n           // backward routines.\n           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {\n             let xR = dyCorner.x + wR * uniforms.dilations[0];\n\n             if (xR >= 0 && xR < uniforms.xShape[1]) {\n               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {\n                 let xC = dyCorner.y + wC * uniforms.dilations[1];\n\n                 if (xC >= 0 && xC < uniforms.xShape[2]) {\n                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);\n                   if (val > curVal) {\n                     curVal = val;\n                     wRMax = wR;\n                     wCMax = wC;\n                   }\n                 }\n               }\n             }\n           }\n\n           let flatIndexIn = d + uniforms.wShape[2] * (wCMax + wRMax * uniforms.wShape[1]);\n           let value = getDy(b, r, c, d);\n           ${vW("&result[flatIndexIn]","value",this.type)}\n         }\n       }\n     `}},GH={kernelName:Xt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,dy:i}=t,{strides:o,pad:l,dilations:u}=a,d=am.computeDilation2DInfo(r.shape,s.shape,o,l,"NHWC",u),p=s.dtype,h=new UH(d,s.shape,p),c=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[$r.sizeFromShape(d.outShape)]}],f=MV({backend:n,attrs:{shape:s.shape,value:0,dtype:p}});return n.runWebGPUProgram(h,[r,s,i],p,c,f)}},HH={kernelName:qt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,dy:i}=t,{strides:o,pad:l,dilations:u}=a,d=am.computeDilation2DInfo(r.shape,s.shape,o,l,"NHWC",u),p=r.dtype,h=new VH(d,p),c=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[$r.sizeFromShape(d.outShape)]}],f=MV({backend:n,attrs:{shape:d.inShape,value:0,dtype:p}});return n.runWebGPUProgram(h,[r,s,i],p,c,f)}},jH=class{constructor(e,t,n){this.variableNames=["Image"],this.uniforms="alpha: f32,",this.workgroupSize=[64,1,1],this.pixelsOpType=wW.DRAW,this.size=!0,this.outputShape=e,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.type=t,this.textureFormat=n,this.shaderKey=`draw_${t}_${n}`}getUserCode(){let e,t="float32"===this.type?"value":"value / 255.0";return e=`\n      if (uniforms.numChannels == 1) {\n        rgba[0] = ${t};\n        rgba[1] = ${t};\n        rgba[2] = ${t};\n      } else {\n        rgba[d] = ${t};\n      }`,`\n       @group(0) @binding(0) var outImage : texture_storage_2d<${this.textureFormat}, write>;\n       ${CW("index")} {\n         if (index < uniforms.size) {\n           var rgba = vec4<f32>(0.0, 0.0, 0.0, uniforms.alpha);\n           for (var d = 0; d < uniforms.numChannels; d = d + 1) {\n             let value = f32(inBuf[index * uniforms.numChannels + d]);\n             ${e}\n           }\n           rgba.x = rgba.x * rgba.w;\n           rgba.y = rgba.y * rgba.w;\n           rgba.z = rgba.z * rgba.w;\n           let coords = getCoordsFromIndex(index);\n           textureStore(outImage, vec2<i32>(coords.yx), rgba);\n         }\n       }\n      `}},qH={kernelName:Kt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{image:r}=t,{canvas:s,options:i}=a,[o,l]=r.shape.slice(0,2),{imageOptions:u}=i||{},d=(null==u?void 0:u.alpha)||1,p=n.device.features.has("bgra8unorm-storage")?"bgra8unorm":"rgba8unorm",h=[o,l],c=new jH(h,r.dtype,p);s.width=l,s.height=o;let f,m="webgpu",g=s.getContext(m);g||(f=new OffscreenCanvas(l,o),g=f.getContext(m));let y=3===r.shape.length?r.shape[2]:1;g.configure({device:n.device,format:p,usage:GPUTextureUsage.STORAGE_BINDING,alphaMode:"premultiplied"});let x="int32",A=n.makeTensorInfo(h,x),b=n.tensorMap.get(A.dataId);b.resource=g.getCurrentTexture(),b.external=!0;let w=[{type:"uint32",data:[y]},{type:"float32",data:[d]}];if(n.runWebGPUProgram(c,[r],x,w,A),f){let e=s.getContext("2d");if(!e)throw new Error("Please make sure this canvas has only been used for 2d or webgpu context!");e.drawImage(f,0,0)}return n.disposeData(A.dataId),r}},XH=jV({opType:qW.MUL,cpuKernelImpl:hU,supportsComplex:!0}),KH={kernelName:Yn,backendName:"webgpu",kernelFunc:XH};function YH(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;return HU(r,s,i,"sum",n)}var ZH={kernelName:za,backendName:"webgpu",kernelFunc:YH},JH={kernelName:Zt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,s=t,{allDims:i,summedDims:o,idDims:l}=am.decodeEinsumEquation(r,s.length);am.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:d}=am.getEinsumComputePath(o,l),p=d.length,h=null,c=i.length,f=[];for(let e=0;e<p;++e){for(let t of d[e]){let e,{permutationIndices:a,expandDims:r}=am.getEinsumPermutation(c,l[t]);am.isIdentityPermutation(a)?e=s[t]:(e=BU({inputs:{x:s[t]},backend:n,attrs:{perm:a}}),f.push(e));let i=e.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);$r.arraysEqual(e.shape,i)||(e=_V({inputs:{x:e},backend:n,attrs:{shape:i}}),f.push(e)),null===h?h=e:(h=XH({inputs:{a:e,b:h},backend:n}),f.push(h))}e<p-1&&(u[e]>=0&&(h=YH({inputs:{x:h},backend:n,attrs:{axis:u[e]-(i.length-c),keepDims:!1}}),f.push(h)),c--)}for(let e of f)e!==h&&n.disposeData(e.dataId);return h}},QH=HV({opType:YW.ELU}),ej={kernelName:Jt,backendName:"webgpu",kernelFunc:QH},tj={kernelName:Qt,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n}=e,{dy:a,y:r}=t,s=new LV(qW.ELU_DER,a.shape,r.shape);return n.runWebGPUProgram(s,[a,r],a.dtype)}},nj=jV({opType:qW.EQUAL,dtype:"bool",cpuKernelImpl:ZV}),aj={kernelName:tn,backendName:"webgpu",kernelFunc:nj},rj=HV({opType:YW.ERF}),sj={kernelName:en,backendName:"webgpu",kernelFunc:rj},ij=HV({opType:YW.EXP,cpuKernelImpl:JV,dtype:"float32"}),oj={kernelName:nn,backendName:"webgpu",kernelFunc:ij};function lj(e){let{inputs:t,attrs:n,backend:a}=e,{dim:r}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=r;return r<0&&($r.assert(-(i+1)<=r,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+r+1),o.splice(l,0,1),_V({inputs:{x:s},backend:a,attrs:{shape:o}})}var uj={kernelName:an,backendName:"webgpu",kernelFunc:lj},dj=HV({opType:YW.EXPM1,cpuKernelImpl:QV}),pj={kernelName:rn,backendName:"webgpu",kernelFunc:dj},hj=class{constructor(e,t){this.variableNames=["real","imag"],this.outputShape=[],this.uniforms="exponentMultiplier : f32, denominator: f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.component=e,this.shaderKey=`fft_${e}`}getUserCode(){return`\n    fn unaryOpComplex(real: f32, expR: f32, imag: f32, expI: f32) -> f32 {\n      ${"real"===this.component?"return real * expR - imag * expI;":"return real * expI + imag * expR;"}\n    }\n\n    fn mulMatDFT(batch: i32, index: i32) -> f32 {\n      let indexRatio = f32(index) / f32(uniforms.realShape[1]);\n      let exponentMultiplierTimesIndexRatio =\n          uniforms.exponentMultiplier * indexRatio;\n\n      var result = 0.0;\n\n      for (var i = 0; i < uniforms.realShape[1]; i = i + 1) {\n        // x = (-2|2 * PI / N) * index * i;\n        let x = exponentMultiplierTimesIndexRatio * f32(i);\n        let expR = cos(x);\n        let expI = sin(x);\n        let real = getReal(batch, i);\n        let imag = getImag(batch, i);\n\n        result = result +\n            unaryOpComplex(real, expR, imag, expI) / uniforms.denominator;\n      }\n\n      return result;\n    }\n\n    ${CW("index")} {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        setOutputAtIndex(index, mulMatDFT(coords[0], coords[1]));\n      }\n    }\n  `}};function cj(e,t,n){let a=n.tensorMap.get(e.dataId),r=$r.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=[],o=_V({inputs:{x:e},backend:n,attrs:{shape:[r/s,s]}});i.push(o);let l=o.shape,u=new hj("real",l),d=new hj("imag",l),p=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:l},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:l}],h=[{type:"float32",data:[t?2*Math.PI:-2*Math.PI]},{type:"float32",data:[t?l[1]:1]}],c=n.runWebGPUProgram(u,p,"float32",h);i.push(c);let f=n.runWebGPUProgram(d,p,"float32",h);i.push(f);let m=VV({inputs:{real:c,imag:f},backend:n});i.push(m);let g=_V({inputs:{x:m},backend:n,attrs:{shape:e.shape}});return i.forEach((e=>n.disposeData(e.dataId))),g}var fj,mj={kernelName:sn,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:a}=t;return cj(a,!1,n)}},gj=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`\n      ${CW("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let coordX = uniforms.xShape[2] - coords[2] - 1;\n          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);\n          setOutputAtIndex(index, outputValue);\n        }\n      }\n    `}},yj={kernelName:ln,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,a=t,r=new gj(n.shape);return a.runWebGPUProgram(r,[n],n.dtype)}},xj=HV({opType:YW.FLOOR,cpuKernelImpl:eU}),Aj={kernelName:un,backendName:"webgpu",kernelFunc:xj},bj=jV({opType:qW.FLOOR_DIV,cpuKernelImpl:tU,dtype:"int32"}),wj={kernelName:dn,backendName:"webgpu",kernelFunc:bj},vj=class{constructor(e,t,n=!1){this.pixelsOpType=wW.FROM_PIXELS,this.outputShape=[0],this.variableNames=[],this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize,[t,1,1]),this.importVideo=n,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){let e=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`\n      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};\n      ${CW("index")} {\n        let flatIndex = index * uniforms.numChannels;\n        if (flatIndex < uniforms.size) {\n          let coords = getCoordsFromIndex(flatIndex);\n          let values = ${e};\n          for (var i = 0; i < uniforms.numChannels; i = i + 1) {\n            result[flatIndex + i] = i32(floor(255.0 * values[i]));\n          }\n        }\n      }\n  `}},kj={kernelName:cr,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{pixels:r}=t,{numChannels:s}=a;if(null==r)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let i="undefined"!=typeof HTMLVideoElement&&r instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&r instanceof HTMLImageElement,l="undefined"!=typeof HTMLCanvasElement&&r instanceof HTMLCanvasElement||"undefined"!=typeof OffscreenCanvas&&r instanceof OffscreenCanvas,u="undefined"!=typeof ImageBitmap&&r instanceof ImageBitmap,[d,p]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],h=[p,d,s],c=Xe().getBool("WEBGPU_IMPORT_EXTERNAL_TEXTURE")&&i,f=i||o;if(u||l||f){let e;if(c)e=n.device.importExternalTexture({source:r});else{if(f){let e=Xe().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(null==fj||e!==Ij)&&(Ij=e,fj=document.createElement("canvas").getContext("2d",{willReadFrequently:Ij})),fj.canvas.width=d,fj.canvas.height=p,fj.drawImage(r,0,0,d,p),r=fj.canvas}let t=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,a=n.textureManager.acquireTexture(h[1],h[0],"rgba8unorm",t);n.queue.copyExternalImageToTexture({source:r},{texture:a},[h[1],h[0]]),e=a}let t=$r.sizeFromShape(h),a=$r.computeStrides(h),i=new vj(h,s,c),o=[{type:"uint32",data:[t]},{type:"uint32",data:[s]},{type:"uint32",data:[...a]}],l=n.makeTensorInfo([p,d],"int32");n.tensorMap.get(l.dataId).resource=e;let u=n.runWebGPUProgram(i,[l],"int32",o);return n.disposeData(l.dataId),u}let m=r.data,g=m;if(null!=s&&4!==s){g=new Uint8Array(r.width*r.height*s);let e=m.length,t=0;for(let n=0;n<e;n++)n%4<s&&(g[t++]=m[n])}let y=n.makeTensorInfo(h,"int32",new Int32Array(g));return n.uploadToGPU(y.dataId),y}},Ij=Xe().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU"),Sj=class{constructor(e,t,n,a,r){this.uniforms="varianceEpsilon : f32,",this.workgroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],am.assertAndGetBroadcastShape(e,t),am.assertAndGetBroadcastShape(e,n),this.outputShape=e,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),null!=a&&(am.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset")),null!=r&&(am.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale")),this.offsetShape=a,this.scaleShape=r,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";null!=this.offsetShape&&(e="getOffsetByOutputIndex(index)");let t="1.0";return null!=this.scaleShape&&(t="getScaleByOutputIndex(index)"),`\n      ${CW("index")} {\n        if (index < uniforms.size)\n        {\n          let xValue = getXByOutputIndex(index);\n          let meanValue = getMeanByOutputIndex(index);\n          let varianValue = getVarianceByOutputIndex(index);\n          let offsetValue = ${e};\n          let scaleValue = ${t};\n          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));\n          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));\n        }\n      }\n  `}},Cj={kernelName:pn,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:a,scale:r,offset:s,mean:i,variance:o}=e,{varianceEpsilon:l}=t,u=n,d=[a,i,o],p=null;null!=s&&(p=s.shape,d.push(s));let h=null;null!=r&&(h=r.shape,d.push(r));let c=new Sj(a.shape,i.shape,o.shape,p,h),f=[{type:"float32",data:[l]}];return u.runWebGPUProgram(c,d,a.dtype,f)}},Nj={kernelName:gr,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:d,dilations:p,dimRoundingMode:h,activation:c,leakyreluAlpha:f}=a,m=am.convertConv2DDataFormat(d);return tH({x:r,filter:s,convInfo:am.computeConv2DInfo(r.shape,s.shape,l,p,u,h,!1,m),backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:f,activation:c})}},Tj={kernelName:yr,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:c}=a,f=d;null==f&&(f=[1,1]),$r.assert(am.eitherStridesOrDilationsAreOne(l,f),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${f}'`));let m=am.computeConv2DInfo(r.shape,s.shape,l,f,u,p,!0),g=[r,s],y=null!=i,x=null!=o;y&&g.push(i),x&&g.push(o);let A,b=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.inHeight,m.inWidth]}];return m.outHeight>4&&m.outWidth>4&&m.strideWidth<=2&&m.inChannels===m.outChannels&&1===m.dilationHeight&&1===m.dilationWidth&&m.inChannels%4==0?(A=new $H(m,y,h,x),b.push({type:"int32",data:[A.virtualWidth]})):(A=new MH(m,y,h,x),b.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]})),"leakyrelu"===h&&(b.push({type:"float32",data:[c]}),A.uniforms+=" alpha : f32,"),n.runWebGPUProgram(A,g,"float32",b)}},Rj=class{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${IW(e)},`}getUserCode(){let e;return e=this.sliceDim>1?"uniforms.strides[j]":"uniforms.strides",`\n      ${CW("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          var flattenIndex = 0;\n          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {\n            let indexTemp = i32(round(getIndices(coords[0], j)));\n            let strideNum = ${e};\n            flattenIndex = flattenIndex + indexTemp * strideNum;\n          }\n\n          setOutputAtIndex(index, getA(flattenIndex, coords[1]));\n        }\n      }\n      `}},Ej={kernelName:cn,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=r.shape,i=s[s.length-1],o=$r.sizeFromShape(a.shape),[l,u,d,p]=am.prepareAndValidate(a,r),h=_V({inputs:{x:r},backend:n,attrs:{shape:[u,i]}}),c=_V({inputs:{x:a},backend:n,attrs:{shape:[$r.sizeFromShape(a.shape)/d,d]}});if(n.shouldExecuteOnCPU([a,r])||"string"===a.dtype){let e=n.readSync(r.dataId),t=n.bufferSync(a),s=nU(e,t,a.dtype,u,i,d,p,a.shape,o);return n.makeTensorInfo(l,a.dtype,s.values)}let f=new Rj(i,[u,d]),m=[{type:"int32",data:[i]},{type:"int32",data:p}],g=n.runWebGPUProgram(f,[c,h],c.dtype,m),y=_V({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeData(h.dataId),n.disposeData(c.dataId),n.disposeData(g.dataId),y}},$j=class{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="gather"}getUserCode(){let e=function(e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let a=0;a<e.length;a++)2===a?n.push("indexZ"):n.push(`${t[a]}`);return n.join()}(this.aShape);return`\n      ${CW("index")} {\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          let indexZ = i32(getIndices(resRC.x, resRC.z));\n          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);\n          setOutputAtIndex(index, inBounds * getA(${e}));\n        }\n      }\n    `}};function Mj(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:i,batchDims:o}=a,l=$r.parseAxisParam(i,r.shape)[0],u=am.segment_util.collectGatherOpShapeInfo(r,s,l,o),d=$r.sizeFromShape(s.shape),p=[],h=_V({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),c=_V({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,d/u.batchSize]}});p.push(h),p.push(c);let f=[u.batchSize,u.outerSize,d/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,s])){let e=n.tensorMap.get(c.dataId).values,t=Io(c.shape,c.dtype,e),a=n.tensorMap.get(h.dataId).values,r=Io(h.shape,h.dtype,a),s=aU(r,t,f);return p.forEach((e=>n.disposeData(e.dataId))),n.makeTensorInfo(u.outputShape,s.dtype,s.values)}let m=new $j(h.shape,f),g=n.runWebGPUProgram(m,[h,c],h.dtype);p.push(g);let y=_V({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return p.forEach((e=>n.disposeData(e.dataId))),y}var Fj={kernelName:hn,backendName:"webgpu",kernelFunc:Mj},_j=jV({opType:qW.GREATER,cpuKernelImpl:sU,dtype:"bool"}),Pj={kernelName:fn,backendName:"webgpu",kernelFunc:_j},Oj=jV({opType:qW.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:rU}),Dj={kernelName:mn,backendName:"webgpu",kernelFunc:Oj},zj={kernelName:yn,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:a}=t;return cj(a,!0,n)}},Lj=HV({opType:YW.IS_FINITE,dtype:"bool"}),Wj={kernelName:An,backendName:"webgpu",kernelFunc:Lj},Bj=HV({opType:YW.IS_INF,dtype:"bool"}),Vj={kernelName:bn,backendName:"webgpu",kernelFunc:Bj},Uj=HV({opType:YW.IS_NAN,dtype:"bool"}),Gj={kernelName:wn,backendName:"webgpu",kernelFunc:Uj},Hj={kernelName:vn,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a,i=[{type:"float32",data:[s]}],o=new GV(r.shape,YW.LEAKYRELU,"alpha : f32,");return n.runWebGPUProgram(o,[r],"float32",i)}},jj=jV({opType:qW.LESS,dtype:"bool",cpuKernelImpl:oU}),qj={kernelName:kn,backendName:"webgpu",kernelFunc:jj},Xj=jV({opType:qW.LESS_EQUAL,dtype:"bool",cpuKernelImpl:iU}),Kj={kernelName:In,backendName:"webgpu",kernelFunc:Xj},Yj=class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="start : f32, step : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="linSpace"}getUserCode(){return`\n      ${CW("index")} {\n        if (index < uniforms.size) {\n          setOutputAtIndex(index, uniforms.start + f32(index) * uniforms.step);\n        }\n      }\n    `}},Zj={kernelName:Sn,backendName:"webgpu",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,i=(r-a)/(s-1),o=new Yj(s),l=[{type:"float32",data:[a]},{type:"float32",data:[i]}];return t.runWebGPUProgram(o,[],"float32",l)}},Jj=HV({opType:YW.LOG,cpuKernelImpl:lU}),Qj={kernelName:Cn,backendName:"webgpu",kernelFunc:Jj},eq=HV({opType:YW.LOG1P}),tq={kernelName:Nn,backendName:"webgpu",kernelFunc:eq},nq=jV({opType:qW.LOGICAL_AND,dtype:"bool"}),aq={kernelName:Tn,backendName:"webgpu",kernelFunc:nq},rq=HV({opType:YW.LOGICAL_NOT}),sq={kernelName:Rn,backendName:"webgpu",kernelFunc:rq},iq=jV({opType:qW.LOGICAL_OR}),oq={kernelName:En,backendName:"webgpu",kernelFunc:iq},lq="\n  var powValue = 0.0;\n  let basis = uniforms.bias + uniforms.alpha * sum;\n  if (uniforms.beta == 0.5) {\n    powValue = inverseSqrt(basis);\n  } else if (uniforms.beta == 1.0) {\n    powValue = 1.0 / basis;\n  } else {\n    powValue = exp(log(basis) * (-uniforms.beta));\n  }\n",uq=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn"}getUserCode(){return`\n    ${CW("index")} {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        let b = coords[0];\n        let r = coords[1];\n        let c = coords[2];\n        let d = coords[3];\n\n        let x = getX(b, r, c, d);\n        var sum = 0.0;\n        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {\n          let idx = d + i;\n          if (idx >= 0 && idx < uniforms.xShape[3]) {\n            let z = getX(b, r, c, idx);\n            sum = sum + z * z;\n          }\n        }\n        ${lq}\n\n        setOutputAtIndex(index, x * powValue);\n      }\n    }\n  `}},dq=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[256,1,1],this.maxAllowRadius=16,$r.assert(t<=this.maxAllowRadius,(()=>`Radius must be less than or equal to ${this.maxAllowRadius}, current radius is ${t}`)),this.outputShape=e,this.elementsPerWorkgroup=this.workgroupSize[0]-2*this.maxAllowRadius,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=LW(this.dispatchLayout,this.outputShape,[this.elementsPerWorkgroup,this.workgroupSize[1],this.workgroupSize[2]]),this.shaderKey="lrn_shared"}getUserCode(){return`\n    var <workgroup>lrnSub: array<f32, ${this.workgroupSize[0]}>;\n    const elementsPerWorkgroup = ${this.elementsPerWorkgroup};\n    const maxAllowRadius = ${this.maxAllowRadius};\n\n    ${CW()} {\n      let localDepth = i32(localId.x);\n      let workgroupDepth = i32(workgroupId.x) * elementsPerWorkgroup;\n      let xDepth = workgroupDepth + localDepth - maxAllowRadius;\n      let b = i32(globalId.z) / uniforms.xShape[1];\n      let r = i32(globalId.z) - b * uniforms.xShape[1];\n      let c = i32(globalId.y);\n      let d = workgroupDepth + localDepth;\n\n      var x = 0.0;\n      if (xDepth >= 0 && xDepth < uniforms.xShape[3]) {\n        x = getX(b, r, c, xDepth);\n      }\n      lrnSub[localDepth] = x;\n      workgroupBarrier();\n\n      if (localDepth < elementsPerWorkgroup && d < uniforms.outShape[3]) {\n        var sum = 0.0;\n        let index = localDepth + maxAllowRadius;\n        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {\n          let z = lrnSub[index + i];\n          sum = sum + z * z;\n        }\n        ${lq}\n\n        setOutputAtCoords(b, r, c, d, lrnSub[index] * powValue);\n      }\n    } `}},pq={kernelName:_n,backendName:"webgpu",kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:s}=n,{depthRadius:i,bias:o,alpha:l,beta:u}=r;t=i>16?new uq(s.shape):new dq(s.shape,i);let d=[{type:"int32",data:[i]},{type:"float32",data:[o]},{type:"float32",data:[l]},{type:"float32",data:[u]}];return a.runWebGPUProgram(t,[s],s.dtype,d)}},hq=class{constructor(e){this.outputShape=[],this.variableNames=["inputImage","outputImage","dy"],this.uniforms="depthRadius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn_grad"}getUserCode(){return`\n    ${CW("index")} {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        let b = coords[0];\n        let r = coords[1];\n        let c = coords[2];\n\n        let MIN_DEPTH_BEGIN = 0;\n        let MAX_DEPTH_END = uniforms.outShape[3];\n        var result = 0.0;\n        for (var d = MIN_DEPTH_BEGIN; d < MAX_DEPTH_END; d++) {\n          let depthBegin = max(MIN_DEPTH_BEGIN, d - uniforms.depthRadius);\n          let depthEnd = min(MAX_DEPTH_END, d + uniforms.depthRadius + 1);\n\n          var norm = 0.0;\n          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {\n            if (k < depthBegin) {\n              continue;\n            } else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            } else {\n              break;\n            }\n          }\n\n          norm = uniforms.alpha * norm + uniforms.bias;\n\n          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {\n            if (k < depthBegin) {\n              continue;\n            } else if (k >= depthBegin && k < depthEnd) {\n              var dyi = -2.0 * uniforms.alpha * uniforms.beta\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d) / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * uniforms.beta);\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        setOutputAtIndex(index, result);\n      }\n    }\n  `}},cq={kernelName:Pn,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:d}=a,p=new hq(r.shape),h=[{type:"int32",data:[o]},{type:"float32",data:[l]},{type:"float32",data:[u]},{type:"float32",data:[d]}];return n.runWebGPUProgram(p,[r,s,i],r.dtype,h)}},fq=jV({opType:qW.MAX,cpuKernelImpl:dU}),mq={kernelName:zn,backendName:"webgpu",kernelFunc:fq},gq={kernelName:Ln,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=a;return fG(r,am.computePool2DInfo(r.shape,s,i,1,o,l),"max",n)}},yq={kernelName:Bn,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=a,d=am.computePool3DInfo(r.shape,s,i,[1,1,1],o,u,l),p=new uG(d,"max"),h=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.front,d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inDepth,d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]}];return n.runWebGPUProgram(p,[r],r.dtype,h)}},xq=class{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,\n       outHeight : i32, outWidth : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool2DBackprop"}getUserCode(){return`\n      ${CW("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d = coords[3];\n\n        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;\n        let dyRCorner = dyRCCorner.x;\n        let dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] - 1;\n        for (var wR = 0; wR < uniforms.filterDims[0]; wR += uniforms.dilations[0]) {\n          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);\n\n          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n            continue;\n          }\n          let idyR = i32(dyR);\n\n          for (var wC = 0; wC < uniforms.filterDims[1]; wC += uniforms.dilations[1]) {\n            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);\n\n            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n              continue;\n            }\n            let idyC = i32(dyC);\n\n            let dyValue = getDy(batch, idyR, idyC, d);\n            let maxPosValue = lastIndex - i32(getMaxPos(batch, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            let curPosValue = wR * uniforms.filterDims[1] + wC;\n            let mask = select(0.0, 1.0, maxPosValue == curPosValue);\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    `}},Aq=class{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,\n      outDepth : i32, outHeight : i32, outWidth : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool3DBackprop"}getUserCode(){return`\n      ${CW("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords.x;\n        let ch = coords.u;\n\n        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;\n        let dyDCorner = dyCorner.x;\n        let dyRCorner = dyCorner.y;\n        let dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] * uniforms.filterDims[2] - 1;\n\n        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {\n          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);\n\n          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {\n            continue;\n          }\n          let idyD = i32(dyD);\n\n          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {\n            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);\n\n            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n              continue;\n            }\n            let idyR = i32(dyR);\n\n            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {\n              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);\n\n              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n                continue;\n              }\n              let idyC = i32(dyC);\n\n              let dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              let maxPosValue = lastIndex - i32(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              let curPosValue = wD * uniforms.filterDims[1] * uniforms.filterDims[2] + wR * uniforms.filterDims[2] + wC;\n              let mask = select(0.0, 1.0, maxPosValue == curPosValue);\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    `}},bq={kernelName:Vn,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:d}=a,p=am.computePool3DInfo(i.shape,o,l,[1,1,1],u,d),h=new uG(p,"max",!0),c=[{type:"int32",data:[p.strideDepth,p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.front,p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.inDepth,p.inHeight,p.inWidth]},{type:"int32",data:[p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth]}],f=n.runWebGPUProgram(h,[i],"int32",c),m=new Aq(p);c=[{type:"int32",data:[p.strideDepth,p.strideHeight,p.strideWidth]},{type:"int32",data:[p.effectiveFilterDepth-1-p.padInfo.front,p.effectiveFilterHeight-1-p.padInfo.top,p.effectiveFilterWidth-1-p.padInfo.left]},{type:"int32",data:[p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth]},{type:"int32",data:[p.outDepth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]}];let g=n.runWebGPUProgram(m,[r,f],i.dtype,c);return n.disposeData(f.dataId),g}},wq={kernelName:Wn,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:i}=t,o=s;jW([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:d,dimRoundingMode:p}=a,h=am.computePool2DInfo(o.shape,l,u,1,d,p),c=new lG(h,"max",!0),f=[{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.dilationHeight,h.dilationWidth]},{type:"int32",data:[h.inHeight,h.inWidth]},{type:"int32",data:[h.effectiveFilterHeight,h.effectiveFilterWidth]}],m=n.runWebGPUProgram(c,[o],"int32",f),g=new xq(h);f=[{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.effectiveFilterHeight-1-h.padInfo.top,h.effectiveFilterWidth-1-h.padInfo.left]},{type:"int32",data:[h.dilationHeight,h.dilationWidth]},{type:"int32",data:[h.effectiveFilterHeight,h.effectiveFilterWidth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]}];let y=n.runWebGPUProgram(g,[r,m],o.dtype,f);return n.disposeData(m.dataId),y}},vq={kernelName:Un,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{filterSize:r,strides:s,pad:i,includeBatchInIndex:o}=a,{x:l}=t;$r.assert(4===l.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${l.shape.length}.`));let u=[1,1];$r.assert(am.eitherStridesOrDilationsAreOne(s,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`));let d=am.computePool2DInfo(l.shape,r,s,u,i),p=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]}],h=new lG(d,"max",!1),c=n.runWebGPUProgram(h,[l],l.dtype,p);return h=new lG(d,"max",!0,!0,o),[c,n.runWebGPUProgram(h,[l],"int32",p)]}},kq={kernelName:Hn,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;return HU(r,s,i,"min",n)}},Iq=jV({opType:qW.MIN,cpuKernelImpl:pU}),Sq={kernelName:jn,backendName:"webgpu",kernelFunc:Iq},Cq=class{constructor(e,t,n){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1])),this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,t.map(((e,t)=>{this.uniforms+=` pad${t} : vec2<i32>,`})),this.offset="reflect"===n?0:1,this.shaderKey=`mirrorPad_${n}`}getUserCode(){let e=this.xShape.length,t=this.xShape.map(((e,t)=>`uniforms.pad${t}[0]`)).join(","),n=this.xShape.map(((t,n)=>`uniforms.pad${n}[0] + uniforms.xShape${e>1?`[${n}]`:""}`)).join(","),a=1===e?"start":"start[i]",r=1===e?"end":"end[i]",s=1===e?"outC":"outC[i]",i=IW(e),o=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`\n      ${CW("index")} {\n        if (index < uniforms.size) {\n          let start = ${i}(${t});\n          let end = ${i}(${n});\n          var outC = getCoordsFromIndex(index);\n          for (var i = 0; i < ${e}; i = i + 1) {\n            if (${s} < ${a}) {\n              ${s} = ${a} * 2 - ${s} - ${this.offset};\n            } else if(${s} >= ${r}) {\n              ${s} = (${r} - 1) * 2 - ${s} + ${this.offset};\n            }\n          }\n          let coords = outC - start;\n          setOutputAtIndex(index, getX(${o}));\n        }\n      }\n    `}},Nq={kernelName:qn,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:a}=e,{paddings:r,mode:s}=t,i=n,o=r.map((e=>({type:"int32",data:[e[0],e[1]]}))),l=new Cq(a.shape,r,s);return i.runWebGPUProgram(l,[a],a.dtype,o)}},Tq=jV({opType:qW.MOD}),Rq={kernelName:Xn,backendName:"webgpu",kernelFunc:Tq},Eq=class{constructor(e,t){this.variableNames=["probs"],this.outputShape=[],this.uniforms="seed : f32, numOutcomes: i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="multinomial"}getUserCode(){return`\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    fn random (seed : f32, resultUV : vec2<f32>) -> f32 {\n      let HASHSCALE1 = 443.8975;\n      let p = resultUV * seed;\n      var p3  = fract(vec3<f32>(p.xyx) * HASHSCALE1);\n      p3 = p3 + dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${CW("index")} {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        let batch = coords[0];\n\n        let resUV = vec2<f32>(f32(coords[1]) / f32(uniforms.outShape[1]),\n            f32(coords[0]) / f32(uniforms.outShape[0]));\n        let r = random(uniforms.seed, resUV);\n        var cdf = 0.0;\n        for (var i = 0; i < uniforms.numOutcomes - 1; i = i + 1) {\n          cdf = cdf + getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutputAtIndexI32(index, i);\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutputAtIndexI32(index, uniforms.numOutcomes - 1);\n      }\n    }\n  `}},$q=class{constructor(e){this.variableNames=["logits"],this.outputShape=e,this.dispatchLayout=UW(this.outputShape),this.dispatch=[this.outputShape[0],1,1],this.outputShape[1]>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.shaderKey="softmax"}getUserCode(){return`\n    var<workgroup> buf : array<f32, ${this.workgroupSize[0]}>;\n    var<workgroup> rowMaxShared : f32;\n    var<workgroup> rowSumShared : f32;\n    const blockSize = ${this.workgroupSize[0]};\n    ${CW("index")} {\n      let row = index / blockSize;\n      let tid = i32(localId.x);\n      let cols = uniforms.outShape[1];\n\n      var threadMax = -3.402823e+38f;\n      for (var col = tid; col < cols; col += blockSize) {\n        let value = getLogits(row, col);\n        threadMax = max(threadMax, value);\n      }\n      if (tid < cols) {\n        buf[tid] = threadMax;\n      }\n      workgroupBarrier();\n\n      var reduceSize = min(cols, blockSize);\n      for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n        reduceSize = currSize + (reduceSize & 1);\n        if (tid < currSize) {\n          buf[tid] = max(buf[tid], buf[tid + reduceSize]);\n        }\n        workgroupBarrier();\n      }\n\n      if (tid == 0) {\n        rowMaxShared = buf[0];\n      }\n      workgroupBarrier();\n\n      var threadSum = 0.0;\n      for (var col = tid; col < cols; col += blockSize) {\n        let subExp = exp(getLogits(row, col) - rowMaxShared);\n        threadSum += subExp;\n      }\n      buf[tid] = threadSum;\n      workgroupBarrier();\n\n      for (var currSize = blockSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n        if (tid < currSize) {\n          buf[tid] = buf[tid] + buf[tid + currSize];\n        }\n        workgroupBarrier();\n      }\n\n      if (tid == 0) {\n        rowSumShared = buf[0];\n      }\n      workgroupBarrier();\n\n      for (var col = tid; col < cols; col += blockSize) {\n        let value = exp(getLogits(row, col) - rowMaxShared) / rowSumShared;\n        setOutputAtCoords(row, col, value);\n      }\n  }\n    `}};function Mq(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,i=_V({inputs:{x:r},backend:n,attrs:{shape:[$r.sizeFromShape(r.shape)/r.shape[s],r.shape[s]]}}),o=new $q(i.shape),l=n.runWebGPUProgram(o,[i],r.dtype),u=_V({inputs:{x:l},backend:n,attrs:{shape:r.shape}});return n.disposeData(i.dataId),n.disposeData(l.dataId),u}var Fq={kernelName:Ba,backendName:"webgpu",kernelFunc:Mq},_q={kernelName:Kn,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:i,normalized:o}=a,l=o?r:Mq({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=l.shape[0],d=l.shape[1],p=new Eq(u,s),h=[{type:"float32",data:[i]},{type:"int32",data:[d]}],c=n.runWebGPUProgram(p,[l],"int32",h);return o||n.disposeData(l.dataId),c}},Pq={kernelName:Zn,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])){let e=n.tensorMap.get(a.dataId),[t,r]=cU(e.values,a.shape,a.dtype);return n.makeTensorInfo(r,a.dtype,t)}let r=new GV(a.shape,YW.NEG);return n.runWebGPUProgram(r,[a],a.dtype)}},Oq={kernelName:Qn,backendName:"webgpu",kernelFunc:function(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=a,u=n.readSync(r.dataId),d=n.readSync(s.dataId),{selectedIndices:p}=pg.nonMaxSuppressionV3Impl(u,d,i,o,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},Dq={kernelName:ta,backendName:"webgpu",kernelFunc:function(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=a,d=n.readSync(r.dataId),p=n.readSync(s.dataId),h=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=pg.nonMaxSuppressionV5Impl(d,p,h,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},zq=class{constructor(e,t){this.variableNames=["x"],this.uniforms="onValue : f32, offValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="onehot"}getUserCode(){return`\n      ${CW("index")} {\n        if(index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          setOutputAtIndex(index, mix(uniforms.offValue, uniforms.onValue,\n                                      f32(i32(round(getX(coords.x))) == coords.y)));\n        }\n      }\n    `}},Lq={kernelName:aa,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:s,depth:i,onValue:o,offValue:l}=a,u=$r.sizeFromShape(r.shape),d=new zq(u,i),p=_V({inputs:{x:r},backend:n,attrs:{shape:[u]}}),h=[{type:"float32",data:[o]},{type:"float32",data:[l]}],c=n.runWebGPUProgram(d,[p],s,h);n.disposeData(p.dataId);let f=_V({inputs:{x:c},backend:n,attrs:{shape:[...r.shape,i]}});return n.disposeData(c.dataId),f}};function Wq(e){let{inputs:t,backend:n}=e,{x:a}=t;if("complex64"===a.dtype){let e=_G({inputs:{input:a},backend:n}),t=Wq({inputs:{x:e},backend:n}),r=jG({inputs:{input:a},backend:n}),s=Wq({inputs:{x:r},backend:n}),i=VV({inputs:{real:t,imag:s},backend:n});return n.disposeData(e.dataId),n.disposeData(t.dataId),n.disposeData(r.dataId),n.disposeData(s.dataId),i}return MV({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}var Bq={kernelName:pr,backendName:"webgpu",kernelFunc:Wq},Vq={kernelName:na,backendName:"webgpu",kernelFunc:function e(t){let{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){let t=_G({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),s=jG({inputs:{input:r},backend:a}),i=Wq({inputs:{x:s},backend:a}),o=VV({inputs:{real:n,imag:i},backend:a});return a.disposeData(t.dataId),a.disposeData(n.dataId),a.disposeData(s.dataId),a.disposeData(i.dataId),o}return MV({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:a})}},Uq={kernelName:ra,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return lj({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{$r.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),$r.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=KG({inputs:t.map((e=>{let t=lj({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeData(e.dataId))),l}};function Gq(e,t=!1){let n=e.length,a=IW(n),r=e.map(((e,t)=>`uniforms.pad${t}[0]`)).join(","),s=e.map(((e,t)=>`uniforms.pad${t}[0] + uniforms.xShape${n>1?`[${t}]`:""}`)).join(",");return`\n        let start = ${n>1?`${a}(${r})`:`${r}`};\n        let end = ${n>1?`${a}(${s})`:`${s}`};\n        if (${n>1?"any(paddedCoords < start)":"paddedCoords < start"} || ${n>1?"any(paddedCoords >= end)":"paddedCoords >= end"}) {\n          setOutputAtIndex(index, ${t?0:"uniforms.constantValue"});\n        } else {\n          let coords = paddedCoords - start;\n          setOutputAtIndex(index, getX(${n>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n):"coords"}));\n        }\n  `}var Hq=class{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1])),this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),t.map(((e,t)=>{this.uniforms+=` pad${t} : vec2<i32>,`})),this.xShape=e,this.shaderKey="pad"}getUserCode(){return`\n      ${CW("index")} {\n        if (index < uniforms.size) {\n          let paddedCoords = getCoordsFromIndex(index);\n          ${Gq(this.xShape)}\n        }\n      }\n    `}},jq={kernelName:sa,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:i}=a;if(s.every((e=>$r.arraysEqual(e,[0,0]))))return WV({inputs:{x:r},backend:n});if(0===$r.sizeFromShape(r.shape))return MV({backend:n,attrs:{shape:s.map(((e,t)=>e[0]+r.shape[t]+e[1])),value:i,dtype:r.dtype}});let o=[{type:"float32",data:[i]}];s.map((e=>o.push({type:"int32",data:[e[0],e[1]]})));let l=new Hq(r.shape,s);return n.runWebGPUProgram(l,[r],r.dtype,o)}},qq=jV({opType:qW.POW}),Xq={kernelName:oa,backendName:"webgpu",kernelFunc:qq},Kq={kernelName:la,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a,alpha:r}=t,s=new LV(qW.PRELU,a.shape,r.shape);return n.runWebGPUProgram(s,[a,r],"float32")}},Yq={kernelName:ua,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;return HU(r,s,i,"prod",n)}},Zq={kernelName:ca,backendName:"webgpu",kernelFunc:e=>{let{backend:t,attrs:n}=e,{start:a,stop:r,step:s,dtype:i}=n,o=gU(a,r,s,i);return t.makeTensorInfo([o.length],i,o)}},Jq=jV({opType:qW.DIV}),Qq={kernelName:Yt,backendName:"webgpu",kernelFunc:Jq},eX=HV({opType:YW.RECIPROCAL}),tX={kernelName:ma,backendName:"webgpu",kernelFunc:eX},nX=HV({opType:YW.RELU}),aX={kernelName:ga,backendName:"webgpu",kernelFunc:nX},rX=HV({opType:YW.RELU6}),sX={kernelName:va,backendName:"webgpu",kernelFunc:rX},iX=class{constructor(e,t,n){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`\n      ${CW("index")} {\n        if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let d = coords[3];\n          let rc = coords.yz;\n\n          let effectiveInSize = vec2<f32>(\n            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveOutSize = vec2<f32>(\n            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveInputOverOutputRatioRC =\n              effectiveInSize / effectiveOutSize;\n\n          // Fractional source index\n          let sourceFracIndexRC =\n            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *\n            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);\n\n          // Compute the four integer indices.\n          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);\n          let sourceCeilRC = vec2<i32>(\n            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));\n\n          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);\n          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);\n          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);\n          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);\n\n          let top = topLeft + (topRight - topLeft) * fracRC.y;\n          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n          let newValue = top + (bottom - top) * fracRC.x;\n\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    `}},oX={kernelName:ba,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,size:i,halfPixelCenters:o}=a,[l,u]=i,d=[{type:"float32",data:[s&&l>1?1:0,s&&u>1?1:0]},{type:"float32",data:[o?.5:0]}],p=new iX(r.shape,l,u);return n.runWebGPUProgram(p,[r],"float32",d)}},lX=class{constructor(e,t){this.variableNames=["dy"],this.uniforms="effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, heightScale : f32, widthScale : f32,\n       invHeightScale : f32, invWidthScale : f32, winHeight : i32, winWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey=`resizeBilinearBackprop_${t}`}getUserCode(){return`\n      ${CW("index")} {\n        if (index < uniforms.size) {\n          let coords = getOutputCoords();\n          let b = coords[0];\n          let d = coords[3];\n          let r = coords[1];\n          let c = coords[2];\n\n          var accumulator = 0.0;\n\n          // Compute bounds for where in dy we will look\n          let startRLerp = floor(f32(r) * uniforms.invHeightScale);\n          let startDyR = i32(startRLerp - f32(uniforms.winHeight / 2));\n\n          let startCLerp = floor(f32(c) * uniforms.invWidthScale);\n          let startDyC = i32(startCLerp - f32(uniforms.winWidth / 2));\n\n          // Loop over dy\n          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {\n            let dyR = startDyR + dyROffset;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {\n              continue;\n            }\n\n            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {\n              let dyC = startDyC + dyCOffset;\n\n              // Guard against the window exceeding the bounds of dy\n              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {\n                continue;\n              }\n\n              let dxR = f32(dyR) * uniforms.heightScale;\n              let topDxRIndex = i32(floor(dxR));\n              let bottomDxRIndex = i32(min(ceil(dxR), f32(uniforms.outShape[1] - 1)));\n              let dxRLerp = dxR - f32(topDxRIndex);\n              let inverseDxRLerp = 1.0 - dxRLerp;\n\n              let dxC = f32(dyC) * uniforms.widthScale;\n              let leftDxCIndex = i32(floor(dxC));\n              let rightDxCIndex = i32(min(ceil(dxC), f32(uniforms.outShape[2] - 1)));\n              let dxCLerp = dxC - f32(leftDxCIndex);\n              let inverseDxCLerp = 1.0 - dxCLerp;\n\n              if (r == topDxRIndex && c == leftDxCIndex) {\n                // topLeft\n                accumulator +=\n                  getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n              }\n\n              if (r == topDxRIndex && c == rightDxCIndex) {\n                // topRight\n                accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n              }\n\n              if (r == bottomDxRIndex && c == leftDxCIndex) {\n                // bottomLeft\n                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n              }\n\n              if (r == bottomDxRIndex && c == rightDxCIndex) {\n                // bottomRight\n                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n              }\n            }\n          }\n          // End loop over dy\n\n          setOutputAtIndex(index, accumulator);\n        }\n      }\n    `}},uX={kernelName:wa,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a,[,o,l]=r.shape,[,u,d]=s.shape,p=[i&&u>1?o-1:o,i&&d>1?l-1:l],h=[i&&u>1?u-1:u,i&&d>1?d-1:d],c=p[0]/h[0],f=p[1]/h[1],m=1/c,g=1/f,y=2*Math.ceil(m)+2,x=2*Math.ceil(g)+2,A=new lX(r.shape,i),b=[{type:"int32",data:p},{type:"int32",data:h},{type:"float32",data:[c]},{type:"float32",data:[f]},{type:"float32",data:[m]},{type:"float32",data:[g]},{type:"int32",data:[y]},{type:"int32",data:[x]}];return n.runWebGPUProgram(A,[s],s.dtype,b)}},dX=class{constructor(e,t,n,a){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.halfPixelCenters=a,this.shaderKey=`resizeNearest_${a}`}getUserCode(){let e;return e=this.halfPixelCenters?"max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":"vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`\n      ${CW("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let d = coords[3];\n          let rc = coords.yz;\n\n          let effectiveInSize = vec2<f32>(\n            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveOutSize = vec2<f32>(\n            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveInputOverOutputRatioRC =\n              effectiveInSize / effectiveOutSize;\n\n          // Fractional source index\n          let sourceFracIndexRC = ${e};\n\n          // Compute the coordinators of nearest neighbor point.\n          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));\n          let sourceNearestRC = vec2<i32>(\n            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));\n          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    `}},pX={kernelName:xa,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a,[l,u]=o,d=[{type:"float32",data:[s&&l>1?1:0,s&&u>1?1:0]},{type:"float32",data:[s?.5:0]}],p=new dX(r.shape,l,u,i);return n.runWebGPUProgram(p,[r],r.dtype,d)}},hX=class{constructor(e,t){this.variableNames=["dy"],this.uniforms="effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, invHeightScale : f32, invWidthScale : f32,\n       winHeight : i32, winWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey=`resizeNearestNeigborBackprop_${t}`}getUserCode(){return`\n      ${CW("index")} {\n        if (index < uniforms.size) {\n          let coords = getOutputCoords();\n          let b = coords[0];\n          let d = coords[3];\n          let r = coords[1];\n          let c = coords[2];\n\n          var accumulator = 0.0;\n\n          // Compute bounds for where in dy we will look\n          let startRLerp = floor(f32(r) * uniforms.invHeightScale);\n          let startDyR = i32(floor(startRLerp - f32(uniforms.winHeight / 2)));\n\n          let startCLerp = floor(f32(c) * uniforms.invWidthScale);\n          let startDyC = i32(floor(startCLerp - f32(uniforms.winWidth / 2)));\n\n          // Loop over dy\n          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {\n            let dyR = startDyR + dyROffset;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {\n              continue;\n            }\n\n            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {\n              let dyC = startDyC + dyCOffset;\n\n              // Guard against the window exceeding the bounds of dy\n              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {\n                continue;\n              }\n\n              let sourceFracRow = f32(uniforms.effectiveXSize[0]) *\n                  (f32(dyR) / f32(uniforms.effectiveYSize[0]));\n\n              let sourceFracCol = f32(uniforms.effectiveXSize[1]) *\n                  (f32(dyC) / f32(uniforms.effectiveYSize[1]));\n\n              let sourceNearestRow =\n                  i32(min(f32(uniforms.outShape[1] - 1),\n                  ${this.alignCorners?"floor(sourceFracRow + 0.5)":"floor(sourceFracRow)"}));\n\n              let sourceNearestCol =\n                  i32(min(f32(uniforms.outShape[2] - 1),\n                  ${this.alignCorners?"floor(sourceFracCol + 0.5)":"floor(sourceFracCol)"}));\n\n              if (r == sourceNearestRow && c == sourceNearestCol) {\n                accumulator += getDy(b, dyR, dyC, d);\n              }\n            }\n          }\n          // End loop over dy\n\n          setOutputAtIndex(index, accumulator);\n        }\n      }\n    `}},cX={kernelName:Aa,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a,[,o,l]=r.shape,[,u,d]=s.shape,p=[i&&u>1?o-1:o,i&&d>1?l-1:l],h=[i&&u>1?u-1:u,i&&d>1?d-1:d],c=1/(p[0]/h[0]),f=1/(p[1]/h[1]),m=2*Math.ceil(c)+2,g=2*Math.ceil(f)+2,y=new hX(r.shape,i),x=[{type:"int32",data:p},{type:"int32",data:h},{type:"float32",data:[c]},{type:"float32",data:[f]},{type:"int32",data:[m]},{type:"int32",data:[g]}];return n.runWebGPUProgram(y,[s],s.dtype,x)}},fX=class{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=" axis : vec4<i32>,",this.shaderKey="reverse"}getUserCode(){return`\n      \n      // Using uniform variables as judging conditions, so the function has\n      // coherent execution within all threads.\n      fn getReverseCoords(coords : vec4<i32>) -> vec4<i32> {\n        var reverseCoords = coords;\n        if (uniforms.axis[0] == 1) {\n          reverseCoords[0] = uniforms.xShape[0] - coords[0] - 1;\n        }\n        if (uniforms.axis[1] == 1) {\n          reverseCoords[1] = uniforms.xShape[1] - coords[1] - 1;\n        }\n        if (uniforms.axis[2] == 1) {\n          reverseCoords[2] = uniforms.xShape[2] - coords[2] - 1;\n        }\n        if (uniforms.axis[3] == 1) {\n          reverseCoords[3] = uniforms.xShape[3] - coords[3] - 1;\n        }\n\n        return reverseCoords;\n      }\n    \n      ${CW("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let reverseCoords = getReverseCoords(coords);\n          setOutputAtIndex(index, getX(reverseCoords[0],\n              reverseCoords[1], reverseCoords[2], reverseCoords[3]));\n        }\n      }\n    `}},mX={kernelName:ka,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a,i=r.shape.length;if(0===i)return WV({inputs:{x:r},backend:n});let o=r.shape,l=[1,1,1,1];o.forEach(((e,t)=>{l[t+4-i]=e}));let u=$r.parseAxisParam(s,r.shape),d=[0,0,0,0];u.forEach((e=>{d[e+4-i]=1}));let p=[{type:"int32",data:d}],h=_V({inputs:{x:r},backend:n,attrs:{shape:l}}),c=new fX(l),f=n.runWebGPUProgram(c,[h],h.dtype,p);n.disposeData(h.dataId);let m=_V({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeData(f.dataId),m}},gX=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="centerX : f32, centerY : f32, sinRadians : f32,\n          cosRadians : f32,",this.shaderKey="rotate",this.outputShape=e,"number"==typeof t?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`\n        ${CW("index")} {\n          if (index < uniforms.size) {\n            let coords = getCoordsFromIndex(index);\n            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *\n                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *\n                uniforms.sinRadians;\n            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *\n                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *\n                uniforms.cosRadians;\n            let coordX = i32(round(coordXFloat + uniforms.centerX));\n            let coordY = i32(round(coordYFloat + uniforms.centerY));\n            ${this.fillSnippet}\n            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&\n                coordY < uniforms.xShape[1]) {\n              outputValue = getX(coords[0], coordY, coordX, coords[3]);\n            }\n            setOutputAtIndex(index, outputValue);\n          }\n        }\n      `}},yX={kernelName:fr,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:a}=e,{radians:r,fillValue:s,center:i}=t,o=n,l=new gX(a.shape,s),[u,d]=am.getImageCenter(i,a.shape[1],a.shape[2]),p=[{type:"float32",data:[u]},{type:"float32",data:[d]},{type:"float32",data:[Math.sin(r)]},{type:"float32",data:[Math.cos(r)]}];return"number"==typeof s?p.push({type:"float32",data:[Number.parseFloat(s.toFixed(2))]}):p.push({type:"float32",data:s}),o.runWebGPUProgram(l,[a],a.dtype,p)}},xX=HV({opType:YW.ROUND}),AX={kernelName:Ia,backendName:"webgpu",kernelFunc:xX},bX=HV({opType:YW.RSQRT,cpuKernelImpl:yU}),wX={kernelName:Sa,backendName:"webgpu",kernelFunc:bX},vX=class{constructor(e,t,n,a,r,s,i,o=!0){this.variableNames=["updates","indices"],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=s,this.type=i,this.sumDupeIndices=o,this.dispatchLayout=UW(e),this.dispatch=LW(this.dispatchLayout,e,this.workgroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${a}_${this.sliceDimGreaterThanOne}_${i}_${o}_${r.length}`;let l=IW(r.length);this.uniforms=`sliceDim : i32, strides: ${l}, updatesSize: i32,`,this.updatesRank=a,this.indicesRank=n}getUserCode(){let e="";1===this.indicesRank?e="coords[0]":2===this.indicesRank&&(e="coords[0], j");let t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",a="",r="";1===this.dispatchLayout.x.length?(a="flattenedIndex",r="\n      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {\n        return index;\n      }\n      "):2===this.dispatchLayout.x.length&&(a="vec2<i32>(flattenedIndex, coords[1])",r="\n      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {\n        // N.B. |updates| could be a scalar tensor, conceptually representing a\n        // 2D tensor with all values equal to that. By design, its size must be\n        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|\n        // gives the other.\n        let sliceSize = uniforms.outShape[1];\n        let d0 = index / sliceSize;\n        let d1 = index - d0 * sliceSize;\n        return vec2<i32>(d0, d1);\n      }\n      ");let s=`getUpdates(${Array.from({length:this.updatesRank},((e,t)=>`coords[${t}]`)).join(", ")})`;return`\n    ${r}\n      ${CW("index")} {\n        if (index < uniforms.updatesSize) {\n          let coords = getUpdatesCoordsFromFlatIndex(index);\n          var flattenedIndex = 0;\n          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {\n            let indexInside = i32(round(${t}));\n            flattenedIndex = flattenedIndex + indexInside * ${n};\n          }\n          let updateValue =\n              ${FW(this.type)}(${s});\n          let flatIndex = getOutputIndexFromCoords(${a});\n\n          ${this.sumDupeIndices?vW("&result[flatIndex]","updateValue",this.type):"atomicStore(&result[flatIndex], bitcast<i32>(updateValue));"}\n        }\n      }`}},kX={kernelName:Ca,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:i}=a,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:p}=am.calculateShapes(s,r,i),h=[p/u,u];if(0===p)return n.makeTensorInfo(i,r.dtype);let c=_V({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),f=_V({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),m=f.dtype,g=MV({backend:n,attrs:{shape:h,value:0,dtype:m}}),y=[{type:"int32",data:[o]},{type:"int32",data:d},{type:"int32",data:[$r.sizeFromShape(f.shape)]}],x=new vX(f.shape,o,c.shape.length,f.shape.length,d,h,m),A=n.runWebGPUProgram(x,[f,c],m,y,g),b=_V({inputs:{x:A},backend:n,attrs:{shape:i}});return n.disposeData(c.dataId),n.disposeData(f.dataId),n.disposeData(A.dataId),b}},IX=class{constructor(e,t){this.outputShape=[],this.variableNames=["sortedSequence","values"],this.uniforms="numInputs : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.side=t,this.shaderKey=`search_sorted_${t}`}getUserCode(){return`\n      fn findBound(batch: i32, value: f32) -> i32 {\n        var left = i32(0);\n        var right = uniforms.numInputs;\n        while (left < right) {\n          var mid = (left + right) / 2;\n          if (getSortedSequence(batch, mid) ${"left"===this.side?"<":"<="} value) {\n            left = mid + 1;\n          } else {\n            right = mid;\n          }\n        }\n        return right;\n      }\n\n      ${CW("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let value = getValuesByOutputIndex(index);\n          setOutputAtIndexI32(index, findBound(coords[0], value));\n        }\n      }\n    `}},SX={kernelName:Ta,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:s}=t,{side:i}=a,o=new IX([s.shape[0],s.shape[1]],i),l=[{type:"int32",data:[r.shape[1]]}];return n.runWebGPUProgram(o,[r,s],"int32",l)}},CX=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.cRank=e,this.rank=n,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(1===this.rank)t="resRC",e="resRC";else{let n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],r=[];for(let e=0;e<this.outputShape.length;e++)r.push(`${n[e]}`),e<this.cRank&&a.push(`${n[e]}`);e=a.join(),t=r.join()}return`\n      ${CW("index")} {\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          let cVal = getC(${e});\n          if (cVal >= 1.0) {\n            setOutputAtIndex(index, getA(${t}));\n          } else {\n            setOutputAtIndex(index, getB(${t}));\n          }\n        }\n      }\n    `}},NX={kernelName:Ra,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t,i=new CX(a.shape.length,r.shape,r.shape.length);return n.runWebGPUProgram(i,[a,r,s],Cs(r.dtype,s.dtype))}},TX=HV({opType:YW.SELU}),RX={kernelName:Ea,backendName:"webgpu",kernelFunc:TX},EX=HV({opType:YW.SIGMOID}),$X={kernelName:Pa,backendName:"webgpu",kernelFunc:EX},MX=HV({opType:YW.SIGN}),FX={kernelName:_a,backendName:"webgpu",kernelFunc:MX},_X=HV({opType:YW.SIN}),PX={kernelName:Ma,backendName:"webgpu",kernelFunc:_X},OX=HV({opType:YW.SINH}),DX={kernelName:Fa,backendName:"webgpu",kernelFunc:OX},zX=HV({opType:YW.SOFTPLUS}),LX={kernelName:Oa,backendName:"webgpu",kernelFunc:zX},WX=class{constructor(e,t,n,a,r,s){this.variableNames=["x"],this.outputShape=[],this.uniforms="",this.workgroupSize=[64,1,1],this.size=!0;let i=new Array(a.length);for(let e=0;e<i.length;e++)i[e]=a[r[e]];this.outputShape=i,this.newDim=r,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,this.paddedXShape=t,this.uniforms+=`reshapedPaddedXShape : ${IW(a.length)}, paddedXShapeStrides : ${IW(s)}, `,n.map(((e,t)=>{this.uniforms+=` pad${t} : vec2<i32>,`})),this.shaderKey=`spaceToBatchND_${r}`}getUserCode(){let e=IW(this.outputShape.length),t=WU(this.newDim);return`\n      ${EW(this.paddedXShape,"PaddedX")}\n      ${CW("index")} {\n        if(index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let switchedIndex = getIndexFromCoords${this.outputShape.length}D(${e}(${t}), uniforms.reshapedPaddedXShape);\n          let paddedCoords = getPaddedXCoordsFromIndex(switchedIndex);\n          ${Gq(this.xShape,!0)}\n        }\n      }\n    `}},BX={kernelName:La,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:i}=a;$r.assert(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet"));let o=s.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<r.shape.length;++e)l.push([0,0]);let u=l.map(((e,t)=>e[0]+r.shape[t]+e[1])),d=am.getReshaped(u,s,o,!1),p=am.getPermuted(d.length,s.length,!1),h=am.getReshapedPermuted(u,s,o,!1),c=$r.computeStrides(u),f=new WX(r.shape,u,l,d,p,c.length),m=[{type:"int32",data:d},{type:"int32",data:c}];l.map((e=>m.push({type:"int32",data:[e[0],e[1]]})));let g=n.runWebGPUProgram(f,[r],r.dtype,m),y=_V({inputs:{x:g},backend:n,attrs:{shape:h}});return n.disposeData(g.dataId),y}},VX=class{constructor(e,t,n){this.variableNames=["input","indices","segmentIds"],this.outputShape=[],this.uniforms="segmentSize : i32, sparseSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e,this.type=n,this.dispatchLayout=UW([t]),this.dispatch=LW(this.dispatchLayout,[t],this.workgroupSize),this.shaderKey="sparseSegmentSum"}getUserCode(){return`\n    ${CW("index")} {\n      if (index < uniforms.sparseSize) {\n        let indexInSegmentIds = index / uniforms.segmentSize;\n        let indexInSegment = index % uniforms.segmentSize;\n        let indexInInput = indices[indexInSegmentIds];\n        let segmentId = segmentIds[indexInSegmentIds];\n\n        let value = input[indexInInput * uniforms.segmentSize + indexInSegment];\n        let outIndex = segmentId * uniforms.segmentSize + indexInSegment;\n        ${vW("&result[outIndex]","value",this.type)}\n      }\n    }\n  `}},GX=class{constructor(e,t){this.variableNames=["segmentIds"],this.outputShape=[],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=[e],this.dispatchLayout=UW(t),this.dispatch=LW(this.dispatchLayout,t,this.workgroupSize),this.shaderKey="sparseSegmentIdCountProgram"}getUserCode(){return`\n    ${CW("index")} {\n      if (index < uniforms.segmentIdsShape) {\n        let segmentId = segmentIds[index];\n        ${vW("&result[segmentId]","1","int32")}\n      }\n    }\n  `}},HX=class{constructor(e,t){this.variableNames=["segmentSum","sameSegmentIdCount"],this.outputShape=[],this.uniforms="segmentSize : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.type=t,this.dispatchLayout=UW(e),this.dispatch=LW(this.dispatchLayout,e,this.workgroupSize),this.shaderKey="sparseSegmentMean"}getUserCode(){return`\n    ${CW("index")} {\n      if (index < uniforms.size) {\n        let segmentId = index / uniforms.segmentSize;\n        let count = sameSegmentIdCount[segmentId];\n        if (count != 0) {\n          ${"float32"===this.type?"setOutputAtIndex(index, segmentSum[index] / f32(count));":"setOutputAtIndexI32(index, segmentSum[index] / count);"}\n        }\n      }\n    }\n  `}};function jX(e,t,n,a=!1,r){let s,i=$r.sizeFromShape(e.shape)/e.shape[0],o=e.dtype,l=$r.sizeFromShape(t.shape),u=r.readSync(n.dataId),d=l>0?u[l-1]+1:0,p=e.shape.slice();p[0]=d;let h=l*i,c=MV({backend:r,attrs:{shape:p,value:0,dtype:o}});s=new VX(p,h,o);let f=[{type:"int32",data:[i]},{type:"int32",data:[h]}],m=r.runWebGPUProgram(s,[e,t,n],o,f,c);if(a)return m;let g=MV({backend:r,attrs:{shape:[d],value:0,dtype:"int32"}});s=new GX(d,n.shape);let y=r.runWebGPUProgram(s,[n],"int32",null,g),x=MV({backend:r,attrs:{shape:p,value:0,dtype:o}});s=new HX(p,o),f=[{type:"int32",data:[i]}];let A=r.runWebGPUProgram(s,[m,y],o,f,x);return r.disposeData(m.dataId),r.disposeData(y.dataId),A}var qX={kernelName:Ga,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;return jX(a,r,s,!1,n)}},XX={kernelName:Ha,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;return jX(a,r,s,!0,n)}},KX=class{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let e=function(e,t=""){if(e>=5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`(resRC % ${t}aShape)`;let n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let r=0;r<e;r++)a.push(`(${n[r]} % ${t}aShape[${r}])`);return a.join()}(this.rank,"uniforms.");return`\n      ${CW("index")} {\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          setOutputAtIndex(index, getA(${e}));\n        }\n      }\n    `}};function YX(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;if(n.shouldExecuteOnCPU([r])||"string"===r.dtype||r.shape.length>=5){let e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>$r.decodeString(e))):e,a=Io(r.shape,r.dtype,t),i=IU(a,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}let i=new KX(r.shape,s);return n.runWebGPUProgram(i,[r],r.dtype)}var ZX={kernelName:ar,backendName:"webgpu",kernelFunc:YX},JX={kernelName:ja,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:i}=t,{outputShape:o}=a,{sliceRank:l,numUpdates:u,sliceSize:d,strides:p,outputSize:h}=am.calculateShapes(s,r,o),c=!1;if("string"===s.dtype){let e=n.bufferSync(r),t=n.bufferSync(s),a=$r.decodeString(n.readSync(i.dataId)[0]),f=xU(e,t,o,h,d,u,l,p,a,c);return n.makeTensorInfo(o,f.dtype,f.values)}let f=[h/d,d],m=_V({inputs:{x:r},backend:n,attrs:{shape:[u,l]}}),g=s.shape.length?_V({inputs:{x:s},backend:n,attrs:{shape:[u,d]}}):WV({inputs:{x:s},backend:n}),y=g.dtype,x=n.makeTensorInfo([],y,$r.makeZerosTypedArray(1,y)),A=_V({inputs:{x:i},backend:n,attrs:{shape:Array(f.length).fill(1)}}),b=YX({inputs:{x:A},backend:n,attrs:{reps:f}}),w=[{type:"int32",data:[l]},{type:"int32",data:p},{type:"int32",data:[$r.sizeFromShape([u,d])]}];switch(u){case 0:break;case 1:{let e=new vX([u,d],l,m.shape.length,g.shape.length,p,f,y,c);n.runWebGPUProgram(e,[g,m],y,w,b)}break;default:{let e=new vX([u,d],l,m.shape.length,x.shape.length,p,f,y,c);n.runWebGPUProgram(e,[x,m],y,w,b)}{let e=new vX([u,d],l,m.shape.length,g.shape.length,p,f,y);n.runWebGPUProgram(e,[g,m],y,w,b)}}let v=_V({inputs:{x:b},backend:n,attrs:{shape:o}});return n.disposeData(m.dataId),n.disposeData(g.dataId),n.disposeData(A.dataId),n.disposeData(x.dataId),n.disposeData(b.dataId),v}},QX={kernelName:Wa,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=a,o=$r.parseAxisParam(i,r.shape)[0],l=am.prepareSplitSize(r,s,o),u=r.shape.length,d=new Array(u).fill(0),p=r.shape.slice();return l.map((e=>{let t=[...p];t[o]=e;let a=IG({inputs:{x:r},backend:n,attrs:{begin:d,size:t}});return d[o]+=e,a}))}},eK=HV({opType:YW.SQRT}),tK={kernelName:Da,backendName:"webgpu",kernelFunc:eK},nK={kernelName:Xa,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,a=t,r=new GV(n.shape,YW.SQUARE);return a.runWebGPUProgram(r,[n],n.dtype)}},aK=jV({opType:qW.SQUARED_DIFFERENCE}),rK={kernelName:qa,backendName:"webgpu",kernelFunc:aK},sK={kernelName:hr,backendName:"webgpu",kernelFunc:function({inputs:e,attrs:t,backend:n}){let{x:a}=e,r=new GV(a.shape,YW.STEP,"stepAlpha : f32,"),s=[{type:"float32",data:[t.alpha]}];return n.runWebGPUProgram(r,[a],a.dtype,s)}},iK=class{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]);let t=IW(this.outputShape.length);this.uniforms=`begin : ${t},  strides : ${t}, `,this.shaderKey="stridedSlice"}getUserCode(){let e="";if(1===this.outputShape.length)e="coords * uniforms.strides + uniforms.begin";else{let t=0;e=this.outputShape.map(((e,n)=>(t++,1===this.outputShape.length?`coords * uniforms.strides[${n}] + uniforms.begin[${n}]`:`coords[${t-1}] * uniforms.strides[${n}] + uniforms.begin[${n}]`))).join(",")}return`\n       ${CW("index")} {\n         if (index < uniforms.size) {\n           let coords = getCoordsFromIndex(index);\n           setOutputAtIndex(index, getX(${e}));\n         }\n       }\n     `}},oK={kernelName:Ya,backendName:"webgpu",kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:s}=n,{begin:i,end:o,strides:l,beginMask:u,endMask:d,ellipsisMask:p,newAxisMask:h,shrinkAxisMask:c}=r,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:x,begin:A,end:b,strides:w}=$f.sliceInfo(s.shape,i,o,l,u,d,p,h,c);if(g)t=_V({inputs:{x:s},backend:a,attrs:{shape:m}});else if(y||x){$r.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));let e=$f.computeOutShape(A,b,w),n=IG({inputs:{x:s},backend:a,attrs:{begin:A,size:e}});t=_V({inputs:{x:n},backend:a,attrs:{shape:m}}),a.disposeData(n.dataId)}else if(a.shouldExecuteOnCPU([s])){let e=a.readSync(s.dataId),n=Io(s.shape,s.dtype,e),r=wU(f,n,w,A);t=a.makeTensorInfo(m,s.dtype,r.values)}else{let e=new iK(f),n=[{type:"int32",data:A},{type:"int32",data:w}],r=a.runWebGPUProgram(e,[s],s.dtype,n);t=_V({inputs:{x:r},backend:a,attrs:{shape:m}}),a.disposeData(r.dataId)}return t}},lK={kernelName:Za,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=a,{data:d,dataSplits:p}=t,h=n.readSync(d.dataId),c=n.readSync(p.dataId),[f,m]=vU(h,c,r,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}},uK=jV({opType:qW.SUB,cpuKernelImpl:kU,supportsComplex:!0}),dK={kernelName:er,backendName:"webgpu",kernelFunc:uK},pK=HV({opType:YW.TAN}),hK={kernelName:tr,backendName:"webgpu",kernelFunc:pK},cK=HV({opType:YW.TANH}),fK={kernelName:nr,backendName:"webgpu",kernelFunc:cK},mK={kernelName:Na,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{tensor:r,indices:s,updates:i}=t,{}=a,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:p}=am.calculateShapes(i,s,r.shape),h=[p/u,u];if(0===p)return n.makeTensorInfo(r.shape,s.dtype);let c=[],f=_V({inputs:{x:s},backend:n,attrs:{shape:[l,o]}});c.push(f);let m=_V({inputs:{x:i},backend:n,attrs:{shape:[l,u]}});c.push(m);let g=_V({inputs:{x:r},backend:n,attrs:{shape:h}});c.push(g);let y=YX({inputs:{x:g},backend:n,attrs:{reps:Array(h.length).fill(1)}}),x=new vX([l,u],o,f.shape.length,m.shape.length,d,h,r.dtype,!1),A=[{type:"int32",data:[o]},{type:"int32",data:d},{type:"int32",data:[$r.sizeFromShape([l,u])]}],b=n.runWebGPUProgram(x,[m,f],g.dtype,A,y);c.push(b);let w=_V({inputs:{x:b},backend:n,attrs:{shape:r.shape}});return c.forEach((e=>n.disposeData(e.dataId))),w}},gK=class{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, negativeInf : f32,\n        dir : i32, inc : i32,",this.shaderKey="swap"}getUserCode(){return`\n        ${CW("index")} {\n          if (index < uniforms.size) {\n            let outC = getCoordsFromIndex(index);\n            let batch = outC[0];\n            let elemIdx = outC[1];\n            // We compare elements pair-wise within a group of size 2 * inc.\n            // The comparing rule for each group alternates between ascending\n            // and descending. Within each group, we compare each pair at\n            // positions i and i+inc. To decide whether an element at position i\n            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n            // inc, it is in the first half of the group, we denote it as x0,\n            // otherwise we denote it as x1.\n            // For example, as shown in the Bitonic top K paper referenced\n            // above, Figure5(a) shows that element[1] is in the second half of\n            // the group when group size is 2, but it is in the first half of\n            // the group when group size is 4.\n            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;\n            var i = 0;\n            if (isFirstInPair) {\n              i = elemIdx;\n            } else {\n              i = elemIdx - uniforms.inc;\n            }\n\n            var i0 = 0;\n            if (uniforms.firstPass == 1) {\n              i0 = i;\n            } else {\n              i0 = i32(getIndices(batch, i));\n            }\n\n            var i1 = 0;\n            if (uniforms.firstPass == 1) {\n              i1 = i + uniforms.inc;\n            } else {\n              i1 = i32(getIndices(batch, i + uniforms.inc));\n            }\n\n            var x0 = f32(0.0);\n            var x1 = f32(0.0);\n            if (i0 < uniforms.inputSize) {\n              x0 = getX(batch, i0);\n            } else {\n              x0 = uniforms.negativeInf;\n            }\n            if (i1 < uniforms.inputSize) {\n              x1 = getX(batch, i1);\n            } else {\n              x1 = uniforms.negativeInf;\n            }\n\n            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;\n            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n            if (reverse == isGreater) {\n              // Elements in opposite order of direction\n              let iTemp = i0;\n              i0 = i1;\n              i1 = iTemp;\n            }\n            if (isFirstInPair) {\n              setOutputAtIndex(index, f32(i0));\n            } else {\n              setOutputAtIndex(index, f32(i1));\n            }\n          }\n        }\n      `}},yK=class{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`\n        ${CW("index")} {\n          if (index < uniforms.size) {\n            let outC = getCoordsFromIndex(index);\n            let batch = outC[0];\n            let elemIdx = outC[1];\n            // The output size is half of the previous size.\n            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _\n            // (k=4), we only need to output the indices at positions |, the\n            // indices at positions _ can be thrown away, see Figure5(b) After\n            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced\n            // above.\n            // For example, the paper shows we only need to output the orange\n            // bars. The output sequence should look like this | | | | | | | |.\n            // Because the sequence is halved, to map the output index back to\n            // the previous sequence to find the corresponding value, we need\n            // to double the index. When we double the index, we basically\n            // interpolate a position, so 2i looks like\n            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k\n            // position of each 2k positions by - elemIdx % k. E.g. for output\n            // at index 4,5,6,7, we want to get the corresponding element at\n            // original index 8,9,10,11, for output at index 8,9,10,11,\n            // we want to get the corresponding element at original index\n            // 16,17,18,19, so on and so forth.\n\n            var i = 0;\n            if (elemIdx < uniforms.k) {\n              i = elemIdx;\n            } else {\n              i = elemIdx * 2 - elemIdx % uniforms.k;\n            }\n            var i0 = 0;\n            if (uniforms.firstPass == 1) {\n              i0 = i;\n            } else {\n              i0 = i32(getIndices(batch, i));\n            }\n            var i1 = 0;\n            if (uniforms.firstPass == 1) {\n              i1 = i + uniforms.k;\n            } else {\n              i1 = i32(getIndices(batch, i + uniforms.k));\n            }\n\n            let x0 = getX(batch, i0);\n            var x1 = f32(0.0);\n            if (i1 < uniforms.inputSize) {\n              x1 = getX(batch, i1);\n            } else {\n              x1 = x0;\n            }\n\n            if (x0 >= x1) {\n              setOutputAtIndex(index, f32(i0));\n            } else {\n              setOutputAtIndex(index, f32(i1));\n            }\n          }\n        }\n      `}};function xK(e,t){null!==t&&e.disposeData(t.dataId)}function AK(e){let t=1;for(;t<e;)t*=2;return t}var bK={kernelName:rr,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:i}=a,o=r.shape,l=o[o.length-1];if(n.shouldExecuteOnCPU([r])){let e=n.readSync(r.dataId),[t,a]=SU(e,o,r.dtype,s,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===s)return o[o.length-1]=0,[n.makeTensorInfo(o,r.dtype,[]),n.makeTensorInfo(o,"int32",[])];if(1===l)return[r,MV({attrs:{shape:o,dtype:"int32",value:0},backend:n})];let u=$r.sizeFromShape(o)/l,d=_V({inputs:{x:r},attrs:{shape:[u,l]},backend:n}),p=AK(s),h=AK(l),c=null,f=()=>null===c?[d,d]:[d,c],m=(e,t,a)=>{let r=f(),s=new gK(a),i=[{type:"int32",data:[l]},{type:"int32",data:[null===c?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[e]},{type:"int32",data:[t]}],o=c;c=n.runWebGPUProgram(s,r,"int32",i),xK(n,o)};for(let e=1;e<p;e*=2){let t=2*e;for(let n=e;n>=1;n/=2)m(t,n,[u,h])}for(let e=h;e>p;e/=2){let t=f(),a=new yK([u,e/2]),r=[{type:"int32",data:[l]},{type:"int32",data:[null===c?1:0]},{type:"int32",data:[p]}],s=c;c=n.runWebGPUProgram(a,t,"int32",r),xK(n,s);let i=p/2,o=2*i;for(let e=i;e>=1;e/=2)m(o,e,c.shape)}let g=c;c=IG({inputs:{x:c},backend:n,attrs:{begin:0,size:[u,s]}}),xK(n,g);let y=Mj({inputs:{x:d,indices:c},backend:n,attrs:{axis:1,batchDims:1}});xK(n,d);let x=o.slice(0,-1);x.push(s),g=c,c=_V({inputs:{x:c},attrs:{shape:x},backend:n}),xK(n,g);let A=y;return y=_V({inputs:{x:y},attrs:{shape:x},backend:n}),xK(n,A),[y,c]}},wK=class{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=UW(this.outputShape),this.dispatch=LW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="transform"}getUserCode(){return`\n          fn mapCoord(outCoord : f32, len : f32) -> f32{\n            var inCoord = outCoord;\n            if(uniforms.fillModeId == 2) {\n              if (inCoord < 0.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz2 = 2.0 * len;\n                  if (inCoord < sz2) {\n                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +\n                    inCoord;\n                  }\n                  if (inCoord < -len) {\n                    inCoord = inCoord + sz2;\n                  } else {\n                    inCoord = -inCoord - 1.0;\n                  }\n                }\n              } else if (inCoord > len - 1.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz2 = 2.0 * len;\n                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));\n                  if (inCoord >= len) {\n                    inCoord = sz2 - inCoord - 1.0;\n                  }\n                }\n              }\n              return clamp(inCoord, 0.0, len - 1.0);\n            } else if (uniforms.fillModeId == 3) {\n              if (inCoord < 0.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz = len - 1.0;\n                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);\n                }\n              } else if (inCoord > len - 1.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz = len - 1.0;\n                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));\n                }\n              }\n              return clamp(inCoord, 0.0, len - 1.0);\n            } else if (uniforms.fillModeId == 4) {\n              return clamp(outCoord, 0.0, len - 1.0);\n            }\n            return outCoord;\n          }\n          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,\n            channel : i32) -> f32 {\n            var outputValue : f32;\n            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {\n                outputValue = getImage(batch, coordY, coordX, channel);\n            } else {\n              outputValue = uniforms.fillValue;\n            }\n            return outputValue;\n          }\n\n          ${CW("index")} {\n            if (index < uniforms.size) {\n              let coords = getCoordsFromIndex(index);\n              var outputValue : f32;\n              let batch = coords[0];\n              let x = coords[2];\n              let y = coords[1];\n              let channel = coords[3];\n              let xf = f32(x);\n              let yf = f32(y);\n              let a1 = getTransforms(batch, 0);\n              let a2 = getTransforms(batch, 1);\n              let a3 = getTransforms(batch, 2);\n              let b1 = getTransforms(batch, 3);\n              let b2 = getTransforms(batch, 4);\n              let b3 = getTransforms(batch, 5);\n              let c1 = getTransforms(batch, 6);\n              let c2 = getTransforms(batch, 7);\n              let projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = uniforms.fillValue;\n              } else {\n                let inX = (a1 * xf + a2 * yf + a3) / projection;\n                let inY = (b1 * xf + b2 * yf + b3) / projection;\n                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));\n                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));\n\n                if (uniforms.interpolationModeId == 1) {\n                  let coordY = i32(round(mapY));\n                  let coordX = i32(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  let yFloor = floor(mapY);\n                  let xFloor = floor(mapX);\n                  let yCeil = yFloor + 1.0;\n                  let xCeil = xFloor + 1.0;\n                  let valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);\n                  let valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutputAtIndex(index, outputValue);\n            }\n          }\n        `}},vK={kernelName:sr,backendName:"webgpu",kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{image:s,transforms:i}=n,{interpolation:o,fillMode:l,fillValue:u,outputShape:d}=r,[p,h,c,f]=s.shape,[m,g]=null!=d?d:[h,c],y=new wK([p,m,g,f]),x="nearest"===o?1:2;switch(l){case"constant":default:t=1;break;case"reflect":t=2;break;case"wrap":t=3;break;case"nearest":t=4}let A=[{type:"int32",data:[x]},{type:"int32",data:[t]},{type:"float32",data:[u]}];return a.runWebGPUProgram(y,[s,i],"float32",A)}},kK={kernelName:lr,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{value:r}=t,{axis:s}=a;s<0&&(s+=r.shape.length);let i=r,o=i.shape.length,l=r.shape[s],u=new Array(o-1),d=0;for(let e=0;e<o;e++)e!==s&&(u[d++]=i.shape[e]);let p=[],h=new Array(o).fill(0),c=i.shape.slice();c[s]=1;let f=new Array(l);for(let e=0;e<f.length;e++){h[s]=e;let t=IG({inputs:{x:i},backend:n,attrs:{begin:h,size:c}}),a=_V({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=a,p.push(t)}return p.forEach((e=>n.disposeData(e.dataId))),f}},IK=class{constructor(e,t,n){if(this.outputShape=[],this.variableNames=["x","segmentIds"],this.uniforms="numSegments : i32, xSize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=t,this.dispatchLayout=UW(e),this.dispatch=LW(this.dispatchLayout,e,this.workgroupSize),"float32"!==n&&"int32"!==n)throw new Error(`UnsortedSegmentSum only supports float32 and int32\n              types, does not support ${n} type.`);this.type=n,this.shaderKey="unsortedSegmentSum"}getUserCode(){return`\n    ${CW("index")} {\n      if (index < uniforms.xSize) {\n        let coords = getXCoordsFromIndex(index);\n        let b = coords[0];\n        let inCol = coords[1];\n\n        let segmentId = i32(getSegmentIds(inCol));\n        if (segmentId >= 0) {\n          let flatIndex = b * uniforms.numSegments + segmentId % uniforms.numSegments;\n          let value = getX(b, inCol);\n\n          ${vW("&result[flatIndex]","value",this.type)}\n        }\n      }\n    }\n  `}},SK={kernelName:ur,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:i}=a,o=r.shape.length,l=[],u=0,d=am.getAxesPermutation([u],o),p=r;null!=d&&(p=BU({inputs:{x:r},backend:n,attrs:{perm:d}}),l.push(p),u=am.getInnerMostAxes(1,o)[0]);let h=am.segment_util.computeOutShape(p.shape,u,i),c=$r.sizeFromShape([p.shape[u]]),f=_V({inputs:{x:p},backend:n,attrs:{shape:[-1,c]}});l.push(f);let m=r.dtype,g=[f.shape[0],i],y=MV({backend:n,attrs:{shape:g,value:0,dtype:m}}),x=new IK(f.shape,g,m),A=[{type:"int32",data:[i]},{type:"int32",data:[$r.sizeFromShape(f.shape)]}],b=n.runWebGPUProgram(x,[f,s],m,A,y),w=_V({inputs:{x:b},backend:n,attrs:{shape:h}});l.push(b);let v=w;if(null!=d){l.push(w);let e=am.getUndoAxesPermutation(d);v=BU({inputs:{x:v},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeData(e.dataId))),v}},CK=[DV,RU,$U,FU,PU,DU,jU,qU,KU,YU,JU,eG,nG,rG,iG,mG,gG,AG,bG,wG,CG,RG,$G,OG,zG,BG,UV,GG,YG,aH,lH,dH,hH,cH,fH,gH,xH,bH,SH,CH,NH,RH,OH,DH,FH,LH,BH,GH,HH,qH,JH,ej,tj,aj,sj,oj,uj,pj,mj,FV,yj,kj,Aj,wj,Cj,Nj,Tj,Ej,Fj,Pj,Dj,BV,zj,qG,Wj,Vj,Gj,Hj,qj,Kj,Zj,tq,Qj,aq,sq,oq,pq,cq,pG,mq,gq,wq,yq,bq,vq,cG,kq,Sq,Nq,Rq,_q,KH,Pq,Oq,Dq,FG,Lq,Vq,Uq,jq,Xq,Kq,Yq,Zq,PG,Qq,tX,aX,sX,PV,oX,uX,pX,cX,mX,yX,AX,wX,kX,SX,NX,RX,$X,FX,PX,DX,SG,sK,oK,lK,Fq,LX,BX,qX,XX,JX,QX,tK,nK,rK,dK,ZH,hK,fK,mK,ZX,bK,vK,VU,kK,SK,Bq];for(let e of CK)Sr(e);var NK="4.21.0",TK={tfjs:NK,"tfjs-core":NK,"tfjs-converter":"4.21.0","tfjs-backend-cpu":"4.21.0","tfjs-backend-webgl":"4.21.0","tfjs-backend-wasm":"4.21.0","tfjs-backend-webgpu":"4.21.0"},RK=void 0;function EK(...e){const t=new Date,n=`${t.getHours().toString().padStart(2,"0")}:${t.getMinutes().toString().padStart(2,"0")}:${t.getSeconds().toString().padStart(2,"0")}.${t.getMilliseconds().toString().padStart(3,"0")}`;e&&console.log(n,"Human:",...e)}var $K=()=>"undefined"!=typeof performance?performance.now():parseInt((Number(process.hrtime.bigint())/1e3/1e3).toString());function MK(e,t,n="config",a=[]){for(const r of Object.keys(t))if("object"==typeof t[r])MK(e[r],t[r],r,a);else{const s=e&&void 0!==e[r];s||a.push({reason:"unknown property",where:`${n}.${r} = ${t[r]}`});const i=e&&typeof e[r]==typeof t[r];s&&!i&&a.push({reason:"property type mismatch",where:`${n}.${r} = ${t[r]}`,expected:typeof e[r]})}return t.debug&&"config"===n&&a.length>0&&EK("invalid configuration",a),a}function FK(...e){const t=e=>e&&"object"==typeof e;return e.reduce(((e,n)=>(Object.keys(n||{}).forEach((a=>{const r=e[a],s=n[a];Array.isArray(r)&&Array.isArray(s)?e[a]=r.concat(...s):t(r)&&t(s)?e[a]=FK(r,s):e[a]=s})),e)),{})}var _K={backend:"",modelBasePath:"",cacheModels:!0,validateModels:!0,wasmPath:"",wasmPlatformFetch:!1,debug:!1,async:!0,warmup:"full",cacheSensitivity:.7,skipAllowed:!1,deallocate:!1,flags:{},softwareKernels:!1,filter:{enabled:!0,equalization:!1,width:0,height:0,flip:!1,return:!0,autoBrightness:!0,brightness:0,contrast:0,sharpness:0,blur:0,saturation:0,hue:0,negative:!1,sepia:!1,vintage:!1,kodachrome:!1,technicolor:!1,polaroid:!1,pixelate:0},gesture:{enabled:!0},face:{enabled:!0,detector:{modelPath:"blazeface.json",rotation:!1,maxDetected:1,skipFrames:99,skipTime:2500,minConfidence:.2,minSize:0,iouThreshold:.1,scale:1.4,mask:!1,return:!1},mesh:{enabled:!0,modelPath:"facemesh.json",keepInvalid:!1},attention:{enabled:!1,modelPath:"facemesh-attention.json"},iris:{enabled:!0,scale:2.3,modelPath:"iris.json"},emotion:{enabled:!0,minConfidence:.1,skipFrames:99,skipTime:1500,modelPath:"emotion.json"},description:{enabled:!0,modelPath:"faceres.json",skipFrames:99,skipTime:3e3,minConfidence:.1},antispoof:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"antispoof.json"},liveness:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"liveness.json"}},body:{enabled:!0,modelPath:"movenet-lightning.json",maxDetected:-1,minConfidence:.3,skipFrames:1,skipTime:200},hand:{enabled:!0,rotation:!0,skipFrames:99,skipTime:1e3,minConfidence:.5,iouThreshold:.2,maxDetected:-1,landmarks:!0,detector:{modelPath:"handtrack.json"},skeleton:{modelPath:"handlandmark-lite.json"}},object:{enabled:!1,modelPath:"centernet.json",minConfidence:.2,iouThreshold:.4,maxDetected:10,skipFrames:99,skipTime:2e3},segmentation:{enabled:!1,modelPath:"rvm.json",ratio:.5,mode:"default"}},PK="\n  precision highp float;\n  attribute vec2 pos;\n  attribute vec2 uv;\n  varying vec2 vUv;\n  uniform float flipY;\n  void main(void) {\n    vUv = uv;\n    gl_Position = vec4(pos.x, pos.y*flipY, 0.0, 1.);\n  }\n",OK="\n  precision highp float;\n  varying vec2 vUv;\n  uniform sampler2D texture;\n  uniform float m[20];\n  void main(void) {\n    vec4 c = texture2D(texture, vUv);\n    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[3] * c.a + m[4];\n    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[8] * c.a + m[9];\n    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[13] * c.a + m[14];\n    gl_FragColor.a = m[15] * c.r + m[16] * c.g + m[17] * c.b + m[18] * c.a + m[19];\n  }\n",DK="\n  precision highp float;\n  varying vec2 vUv;\n  uniform sampler2D texture;\n  uniform float m[20];\n  void main(void) {\n    vec4 c = texture2D(texture, vUv);\n    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[4];\n    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[9];\n    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[14];\n    gl_FragColor.a = c.a;\n  }\n",zK="\n  precision highp float;\n  varying vec2 vUv;\n  uniform vec2 size;\n  uniform sampler2D texture;\n  vec2 pixelate(vec2 coord, vec2 size) {\n    return floor( coord / size ) * size;\n  }\n  void main(void) {\n    gl_FragColor = vec4(0.0);\n    vec2 coord = pixelate(vUv, size);\n    gl_FragColor += texture2D(texture, coord);\n  }\n",LK="\n  precision highp float;\n  varying vec2 vUv;\n  uniform sampler2D texture;\n  uniform vec2 px;\n  void main(void) {\n    gl_FragColor = vec4(0.0);\n    gl_FragColor += texture2D(texture, vUv + vec2(-7.0*px.x, -7.0*px.y))*0.0044299121055113265;\n    gl_FragColor += texture2D(texture, vUv + vec2(-6.0*px.x, -6.0*px.y))*0.00895781211794;\n    gl_FragColor += texture2D(texture, vUv + vec2(-5.0*px.x, -5.0*px.y))*0.0215963866053;\n    gl_FragColor += texture2D(texture, vUv + vec2(-4.0*px.x, -4.0*px.y))*0.0443683338718;\n    gl_FragColor += texture2D(texture, vUv + vec2(-3.0*px.x, -3.0*px.y))*0.0776744219933;\n    gl_FragColor += texture2D(texture, vUv + vec2(-2.0*px.x, -2.0*px.y))*0.115876621105;\n    gl_FragColor += texture2D(texture, vUv + vec2(-1.0*px.x, -1.0*px.y))*0.147308056121;\n    gl_FragColor += texture2D(texture, vUv                             )*0.159576912161;\n    gl_FragColor += texture2D(texture, vUv + vec2( 1.0*px.x,  1.0*px.y))*0.147308056121;\n    gl_FragColor += texture2D(texture, vUv + vec2( 2.0*px.x,  2.0*px.y))*0.115876621105;\n    gl_FragColor += texture2D(texture, vUv + vec2( 3.0*px.x,  3.0*px.y))*0.0776744219933;\n    gl_FragColor += texture2D(texture, vUv + vec2( 4.0*px.x,  4.0*px.y))*0.0443683338718;\n    gl_FragColor += texture2D(texture, vUv + vec2( 5.0*px.x,  5.0*px.y))*0.0215963866053;\n    gl_FragColor += texture2D(texture, vUv + vec2( 6.0*px.x,  6.0*px.y))*0.00895781211794;\n    gl_FragColor += texture2D(texture, vUv + vec2( 7.0*px.x,  7.0*px.y))*0.0044299121055113265;\n  }\n",WK="\n  precision highp float;\n  varying vec2 vUv;\n  uniform sampler2D texture;\n  uniform vec2 px;\n  uniform float m[9];\n  void main(void) {\n    vec4 c11 = texture2D(texture, vUv - px); // top left\n    vec4 c12 = texture2D(texture, vec2(vUv.x, vUv.y - px.y)); // top center\n    vec4 c13 = texture2D(texture, vec2(vUv.x + px.x, vUv.y - px.y)); // top right\n    vec4 c21 = texture2D(texture, vec2(vUv.x - px.x, vUv.y) ); // mid left\n    vec4 c22 = texture2D(texture, vUv); // mid center\n    vec4 c23 = texture2D(texture, vec2(vUv.x + px.x, vUv.y) ); // mid right\n    vec4 c31 = texture2D(texture, vec2(vUv.x - px.x, vUv.y + px.y) ); // bottom left\n    vec4 c32 = texture2D(texture, vec2(vUv.x, vUv.y + px.y) ); // bottom center\n    vec4 c33 = texture2D(texture, vUv + px ); // bottom right\n    gl_FragColor = \n    c11 * m[0] + c12 * m[1] + c22 * m[2] +\n    c21 * m[3] + c22 * m[4] + c23 * m[5] +\n    c31 * m[6] + c32 * m[7] + c33 * m[8];\n    gl_FragColor.a = c22.a;\n  }\n",BK=(e,t,n)=>{const a=new RegExp("\\b"+t+" \\w+ (\\w+)","ig");e.replace(a,((e,t)=>(n[t]=0,e)))},VK=class{constructor(e,t,n){c(this,"uniform",{}),c(this,"attribute",{}),c(this,"gl"),c(this,"id"),c(this,"compile",((e,t)=>{const n=this.gl.createShader(t);return n?(this.gl.shaderSource(n,e),this.gl.compileShader(n),this.gl.getShaderParameter(n,this.gl.COMPILE_STATUS)?n:(EK(`filter: gl compile failed: ${this.gl.getShaderInfoLog(n)||"unknown"}`),null)):(EK("filter: could not create shader"),null)})),this.gl=e;const a=this.compile(t,this.gl.VERTEX_SHADER),r=this.compile(n,this.gl.FRAGMENT_SHADER);if(this.id=this.gl.createProgram(),a&&r)if(this.id)if(this.gl.attachShader(this.id,a),this.gl.attachShader(this.id,r),this.gl.linkProgram(this.id),this.gl.getProgramParameter(this.id,this.gl.LINK_STATUS)){this.gl.useProgram(this.id),BK(t,"attribute",this.attribute);for(const e in this.attribute)this.attribute[e]=this.gl.getAttribLocation(this.id,e);BK(t,"uniform",this.uniform),BK(n,"uniform",this.uniform);for(const e in this.uniform)this.uniform[e]=this.gl.getUniformLocation(this.id,e)}else EK(`filter: gl link failed: ${this.gl.getProgramInfoLog(this.id)||"unknown"}`);else EK("filter: could not create webgl program")}};function UK(){let e=0,t=null,n=!1,a=-1,r=[null,null],s=[],i=null,o=null;const l=tY(100,100),u={},d=l.getContext("webgl");if(!d)return void EK("filter: cannot get webgl context");function p(e){return r[e]=r[e]||function(e,t){const n=d.createFramebuffer();d.bindFramebuffer(d.FRAMEBUFFER,n);const a=d.createRenderbuffer();d.bindRenderbuffer(d.RENDERBUFFER,a);const r=d.createTexture();return d.bindTexture(d.TEXTURE_2D,r),d.texImage2D(d.TEXTURE_2D,0,d.RGBA,e,t,0,d.RGBA,d.UNSIGNED_BYTE,null),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MAG_FILTER,d.LINEAR),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,d.LINEAR),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_S,d.CLAMP_TO_EDGE),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_T,d.CLAMP_TO_EDGE),d.framebufferTexture2D(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,d.TEXTURE_2D,r,0),d.bindTexture(d.TEXTURE_2D,null),d.bindFramebuffer(d.FRAMEBUFFER,null),{fbo:n,texture:r}}(l.width,l.height),r[e]}function h(r=0){if(!o)return;let s=null,i=null,l=!1;s=0===e?t:p(a).texture||null,e++,!n||1&r?(a=(a+1)%2,i=p(a).fbo||null):(i=null,l=e%2==0),d.bindTexture(d.TEXTURE_2D,s),d.bindFramebuffer(d.FRAMEBUFFER,i),d.uniform1f(o.uniform.flipY,l?-1:1),d.drawArrays(d.TRIANGLES,0,6)}function c(e){if(u[e])return o=u[e],d.useProgram((o?o.id:null)||null),o;if(o=new VK(d,PK,e),!o)return EK("filter: could not get webgl program"),null;const t=Float32Array.BYTES_PER_ELEMENT,n=4*t;return d.enableVertexAttribArray(o.attribute.pos),d.vertexAttribPointer(o.attribute.pos,2,d.FLOAT,!1,n,0*t),d.enableVertexAttribArray(o.attribute.uv),d.vertexAttribPointer(o.attribute.uv,2,d.FLOAT,!1,n,2*t),u[e]=o,o}this.gl=d;const f={colorMatrix:e=>{const t=new Float32Array(e);t[4]/=255,t[9]/=255,t[14]/=255,t[19]/=255;const n=c(1===t[18]&&0===t[3]&&0===t[8]&&0===t[13]&&0===t[15]&&0===t[16]&&0===t[17]&&0===t[19]?DK:OK);n&&(d.uniform1fv(n.uniform.m,t),h())},brightness:e=>{const t=(e||0)+1;f.colorMatrix([t,0,0,0,0,0,t,0,0,0,0,0,t,0,0,0,0,0,1,0])},saturation:e=>{const t=2*(e||0)/3+1,n=-.5*(t-1);f.colorMatrix([t,n,n,0,0,n,t,n,0,0,n,n,t,0,0,0,0,0,1,0])},desaturate:()=>{f.saturation(-1)},contrast:e=>{const t=(e||0)+1,n=-128*(t-1);f.colorMatrix([t,0,0,0,n,0,t,0,0,n,0,0,t,0,n,0,0,0,1,0])},negative:()=>{f.contrast(-2)},hue:e=>{e=(e||0)/180*Math.PI;const t=Math.cos(e),n=Math.sin(e),a=.213,r=.715,s=.072;f.colorMatrix([a+.787*t+n*-a,r+t*-r+n*-r,s+t*-s+.928*n,0,0,a+t*-a+.143*n,r+t*(1-r)+.14*n,s+t*-s+-.283*n,0,0,a+t*-a+-.787*n,r+t*-r+n*r,s+.928*t+n*s,0,0,0,0,0,1,0])},desaturateLuminance:()=>{f.colorMatrix([.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,0,0,0,1,0])},sepia:()=>{f.colorMatrix([.393,.7689999,.18899999,0,0,.349,.6859999,.16799999,0,0,.272,.5339999,.13099999,0,0,0,0,0,1,0])},brownie:()=>{f.colorMatrix([.5997023498159715,.34553243048391263,-.2708298674538042,0,47.43192855600873,-.037703249837783157,.8609577587992641,.15059552388459913,0,-36.96841498319127,.24113635128153335,-.07441037908422492,.44972182064877153,0,-7.562075277591283,0,0,0,1,0])},vintagePinhole:()=>{f.colorMatrix([.6279345635605994,.3202183420819367,-.03965408211312453,0,9.651285835294123,.02578397704808868,.6441188644374771,.03259127616149294,0,7.462829176470591,.0466055556782719,-.0851232987247891,.5241648018700465,0,5.159190588235296,0,0,0,1,0])},kodachrome:()=>{f.colorMatrix([1.1285582396593525,-.3967382283601348,-.03992559172921793,0,63.72958762196502,-.16404339962244616,1.0835251566291304,-.05498805115633132,0,24.732407896706203,-.16786010706155763,-.5603416277695248,1.6014850761964943,0,35.62982807460946,0,0,0,1,0])},technicolor:()=>{f.colorMatrix([1.9125277891456083,-.8545344976951645,-.09155508482755585,0,11.793603434377337,-.3087833385928097,1.7658908555458428,-.10601743074722245,0,-70.35205161461398,-.231103377548616,-.7501899197440212,1.847597816108189,0,30.950940869491138,0,0,0,1,0])},polaroid:()=>{f.colorMatrix([1.438,-.062,-.062,0,0,-.122,1.378,-.122,0,0,-.016,-.016,1.483,0,0,0,0,0,1,0])},shiftToBGR:()=>{f.colorMatrix([0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0])},convolution:e=>{const t=new Float32Array(e),n=1/l.width,a=1/l.height,r=c(WK);r&&(d.uniform1fv(r.uniform.m,t),d.uniform2f(r.uniform.px,n,a),h())},detectEdges:()=>{f.convolution.call(this,[0,1,0,1,-4,1,0,1,0])},sobelX:()=>{f.convolution.call(this,[-1,0,1,-2,0,2,-1,0,1])},sobelY:()=>{f.convolution.call(this,[-1,-2,-1,0,0,0,1,2,1])},sharpen:e=>{const t=e||1;f.convolution.call(this,[0,-1*t,0,-1*t,1+4*t,-1*t,0,-1*t,0])},emboss:e=>{const t=e||1;f.convolution.call(this,[-2*t,-1*t,0,-1*t,1,1*t,0,1*t,2*t])},blur:e=>{const t=e/7/l.width,n=e/7/l.height,a=c(LK);a&&(d.uniform2f(a.uniform.px,0,n),h(1),d.uniform2f(a.uniform.px,t,0),h())},pixelate:e=>{const t=e/l.width,n=e/l.height,a=c(zK);a&&(d.uniform2f(a.uniform.size,t,n),h())}};this.add=function(e){const t=Array.prototype.slice.call(arguments,1),n=f[e];s.push({func:n,args:t})},this.reset=function(){s=[]},this.get=function(){return s},this.apply=function(a){!function(e,t){if(e!==l.width||t!==l.height){if(l.width=e,l.height=t,!i){const e=new Float32Array([-1,-1,0,1,1,-1,1,1,-1,1,0,0,-1,1,0,0,1,-1,1,1,1,1,1,0]);i=d.createBuffer(),d.bindBuffer(d.ARRAY_BUFFER,i),d.bufferData(d.ARRAY_BUFFER,e,d.STATIC_DRAW),d.pixelStorei(d.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0)}d.viewport(0,0,l.width,l.height),r=[null,null]}}(a.width,a.height),e=0,t||(t=d.createTexture()),d.bindTexture(d.TEXTURE_2D,t),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_S,d.CLAMP_TO_EDGE),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_T,d.CLAMP_TO_EDGE),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,d.NEAREST),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MAG_FILTER,d.NEAREST),d.texImage2D(d.TEXTURE_2D,0,d.RGBA,d.RGBA,d.UNSIGNED_BYTE,a);for(let e=0;e<s.length;e++){n=e===s.length-1;const t=s[e];t.func.apply(this,t.args||[])}return l},this.draw=function(e){return this.add("brightness",0),this.apply(e)}}async function GK(e){const t=4===e.shape.length?Bp(e):e,n=zp(t,3,2),a=[gu(n[0]),gu(n[1]),gu(n[2])],r=[mu(n[0]),mu(n[1]),mu(n[2])],s=await Promise.all(r.map((e=>e.data()))),i=Math.max(s[0][0],s[1][0],s[2][0]),o=(i>1?255:1)/i;let l;if(o>1){const e=[td(n[0],a[0]),td(n[1],a[1]),td(n[2],a[2])],s=[td(r[0],a[0]),td(r[1],a[1]),td(r[2],a[2])],i=[$o(e[0],o),$o(e[1],o),$o(e[2],o)],u=Vp([i[0],i[1],i[2]],2);l=il(u,[1,t.shape[0]||0,t.shape[1]||0,3]),fi([...e,...s,...i,u])}else l=Cu(t,0);return fi([...n,...a,...r,n,t,e]),l}var HK,jK,qK,XK,KK=3840,YK=null,ZK=null,JK=null,QK={inputSum:0,cacheDiff:1,sumMethod:0,inputTensor:void 0};function eY(){QK.inputSum=0,QK.cacheDiff=1,QK.sumMethod=0,QK.inputTensor=void 0}function tY(e,t){let n;if(rY.browser)if(rY.worker){if("undefined"==typeof OffscreenCanvas)throw new Error("canvas error: attempted to run in web worker but OffscreenCanvas is not supported");n=new OffscreenCanvas(e,t)}else if("undefined"!=typeof document)n=document.createElement("canvas"),n.width=e,n.height=t;else{if("undefined"==typeof navigator||"ReactNative"!==navigator.product)throw new Error("canvas error: attempted to run in browser but DOM is not defined");if(void 0!==rY.Canvas)n=new rY.Canvas(e,t);else{if(void 0===globalThis.Canvas)throw new Error("canvas error: attempted to use canvas in react-native without canvas support installed");n=new globalThis.Canvas(e,t)}}else void 0!==rY.Canvas?n=new rY.Canvas(e,t):void 0!==globalThis.Canvas&&(n=new globalThis.Canvas(e,t));return n}function nY(e,t){const n=t||tY(e.width,e.height);return n.getContext("2d").drawImage(e,0,0),n}async function aY(e,t,n=!0){var a,r,s;if(!e)return t.debug&&EK("input error: input is missing"),{tensor:null,canvas:null};if(!(e instanceof ms||"undefined"!=typeof Image&&e instanceof Image||void 0!==globalThis.Canvas&&e instanceof globalThis.Canvas||"undefined"!=typeof ImageData&&e instanceof ImageData||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap||"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLMediaElement&&e instanceof HTMLMediaElement||"undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof OffscreenCanvas&&e instanceof OffscreenCanvas))throw new Error("input error: type not recognized");if(e instanceof ms){let n=null;if(e.isDisposedInternal)throw new Error("input error: attempted to use tensor but it is disposed");if(!e.shape)throw new Error("input error: attempted to use tensor without a shape");if(3===e.shape.length){if(3===e.shape[2])n=Cu(e,0);else if(4===e.shape[2]){const t=Mp(e,[0,0,0],[-1,-1,3]);n=Cu(t,0),fi(t)}}else 4===e.shape.length&&(3===e.shape[3]?n=Co(e):4===e.shape[3]&&(n=Fp(e,[0,0,0,0],[-1,-1,-1,3])));if(null==n||4!==n.shape.length||1!==n.shape[0]||3!==n.shape[3])throw new Error(`input error: attempted to use tensor with unrecognized shape: ${e.shape.toString()}`);if("int32"===n.dtype){const e=So(n,"float32");fi(n),n=e}return{tensor:n,canvas:t.filter.return?ZK:null}}if(void 0!==e.readyState&&e.readyState<=2)return t.debug&&EK("input stream is not ready"),{tensor:null,canvas:YK};const i=e.naturalWidth||e.videoWidth||e.width||e.shape&&e.shape[1]>0,o=e.naturalHeight||e.videoHeight||e.height||e.shape&&e.shape[2]>0;if(!i||!o)return t.debug&&EK("cannot determine input dimensions"),{tensor:null,canvas:YK};let l=i,u=o;if(l>KK&&(l=KK,u=Math.trunc(l*o/i)),u>KK&&(u=KK,l=Math.trunc(u*i/o)),((null==(a=t.filter)?void 0:a.width)||0)>0?l=t.filter.width:((null==(r=t.filter)?void 0:r.height)||0)>0&&(l=i*((t.filter.height||0)/o)),(t.filter.height||0)>0?u=t.filter.height:(t.filter.width||0)>0&&(u=o*((t.filter.width||0)/i)),!l||!u)throw new Error("input error: cannot determine dimension");YK&&YK.width===l&&YK.height===u||(YK=tY(l,u));const d=YK.getContext("2d");if("undefined"!=typeof ImageData&&e instanceof ImageData?d.putImageData(e,0,0):t.filter.flip&&void 0!==d.translate?(d.translate(i,0),d.scale(-1,1),d.drawImage(e,0,0,i,o,0,0,YK.width,YK.height),d.setTransform(1,0,0,1,0,0)):d.drawImage(e,0,0,i,o,0,0,YK.width,YK.height),ZK&&YK.width===ZK.width&&YK.height===ZK.height||(ZK=tY(YK.width,YK.height)),t.filter.enabled&&rY.webgl.supported?(HK||(HK=rY.browser?new UK:null),rY.filter=!!HK,(null==HK?void 0:HK.add)?(HK.reset(),0!==t.filter.brightness&&HK.add("brightness",t.filter.brightness),0!==t.filter.contrast&&HK.add("contrast",t.filter.contrast),0!==t.filter.sharpness&&HK.add("sharpen",t.filter.sharpness),0!==t.filter.blur&&HK.add("blur",t.filter.blur),0!==t.filter.saturation&&HK.add("saturation",t.filter.saturation),0!==t.filter.hue&&HK.add("hue",t.filter.hue),t.filter.negative&&HK.add("negative"),t.filter.sepia&&HK.add("sepia"),t.filter.vintage&&HK.add("brownie"),t.filter.sepia&&HK.add("sepia"),t.filter.kodachrome&&HK.add("kodachrome"),t.filter.technicolor&&HK.add("technicolor"),t.filter.polaroid&&HK.add("polaroid"),0!==t.filter.pixelate&&HK.add("pixelate",t.filter.pixelate),ZK=(null==(s=HK.get())?void 0:s.length)>1?HK.apply(YK):HK.draw(YK)):(t.debug&&EK("input process error: cannot initialize filters"),rY.webgl.supported=!1,t.filter.enabled=!1,nY(YK,ZK))):(nY(YK,ZK),HK&&(HK=null),rY.filter=!!HK),!n)return{tensor:null,canvas:ZK};if(!ZK)throw new Error("canvas error: cannot create output");let p,h=3;if("undefined"!=typeof ImageData&&e instanceof ImageData||e.data&&e.width&&e.height)rY.browser&&wf?p=wf?wf.fromPixels(e):null:(h=e.data.length/e.height/e.width,p=ni(new Uint8Array(e.data.buffer),[e.height,e.width,h],"int32"));else if(JK&&ZK.width===JK.width&&ZK.height===JK.height||(JK=tY(ZK.width,ZK.height)),wf&&rY.browser)"webgl"===t.backend||"humangl"===t.backend||"webgpu"===t.backend?p=wf.fromPixels(ZK):(JK=nY(ZK),p=wf.fromPixels(JK));else{const e=nY(ZK).getContext("2d").getImageData(0,0,l,u);h=e.data.length/l/u,p=ni(new Uint8Array(e.data.buffer),[l,u,h])}if(4===h){const e=Mp(p,[0,0,0],[-1,-1,3]);fi(p),p=e}if(!p)throw new Error("input error: cannot create tensor");const c=So(p,"float32"),f=t.filter.equalization?await GK(c):Cu(c,0);if(fi([p,c]),t.filter.autoBrightness){const e=mu(f),n=await e.data();t.filter.brightness=n[0]>1?1-n[0]/255:1-n[0],fi(e)}return{tensor:f,canvas:t.filter.return?ZK:null}}jK=new WeakMap,qK=new WeakMap,XK=new WeakMap;var rY=new class{constructor(){if(c(this,"browser"),c(this,"node"),c(this,"worker"),c(this,"platform",""),c(this,"agent",""),c(this,"backends",[]),c(this,"initial"),c(this,"filter"),c(this,"tfjs"),c(this,"offscreen"),c(this,"perfadd",!1),c(this,"tensorflow",{version:void 0,gpu:void 0}),c(this,"wasm",{supported:void 0,backend:void 0,simd:void 0,multithread:void 0}),c(this,"webgl",{supported:void 0,backend:void 0,version:void 0,renderer:void 0,shader:void 0,vendor:void 0}),c(this,"webgpu",{supported:void 0,backend:void 0,adapter:void 0}),c(this,"cpu",{model:void 0,flags:[]}),c(this,"kernels",[]),g(this,jK),g(this,qK),g(this,XK),this.browser="undefined"!=typeof navigator&&void 0!==navigator.appVersion,this.node="undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node,this.tfjs={version:TK["tfjs-core"]},this.offscreen="undefined"!=typeof OffscreenCanvas,this.initial=!0,this.worker=this.browser&&this.offscreen?"undefined"!=typeof WorkerGlobalScope:void 0,"undefined"!=typeof navigator&&void 0!==navigator.userAgent){const e=navigator.userAgent||"",t=e.match(/\(([^()]+)\)/g);if(null==t?void 0:t[0]){const n=t[0].match(/\(([^()]+)\)/g);this.platform=(null==n?void 0:n[0])?n[0].replace(/\(|\)/g,""):"",this.agent=e.replace(t[0],""),this.platform[1]&&(this.agent=this.agent.replace(t[1],"")),this.agent=this.agent.replace(/  /g," ")}}else"undefined"!=typeof process&&(this.platform=`${process.platform} ${process.arch}`,this.agent=`NodeJS ${process.version}`)}get Canvas(){return m(this,jK)}set Canvas(e){y(this,jK,e),globalThis.Canvas=e}get Image(){return m(this,qK)}set Image(e){y(this,qK,e),globalThis.Image=e}get ImageData(){return m(this,XK)}set ImageData(e){y(this,XK,e),globalThis.ImageData=e}async updateBackend(){this.backends=Object.keys(di().registryFactory);try{this.tensorflow={version:Ii().binding?Ii().binding.TF_Version:void 0,gpu:Ii().binding?Ii().binding.isUsingGpuDevice():void 0}}catch(e){}this.wasm.supported="undefined"!=typeof WebAssembly,this.wasm.backend=this.backends.includes("wasm"),this.wasm.supported&&this.wasm.backend&&(this.wasm.simd=await Xe().getAsync("WASM_HAS_SIMD_SUPPORT"),this.wasm.multithread=await Xe().getAsync("WASM_HAS_MULTITHREAD_SUPPORT"));const e=tY(100,100),t=e?e.getContext("webgl2"):void 0;this.webgl.supported=void 0!==t,this.webgl.backend=this.backends.includes("webgl"),this.webgl.supported&&this.webgl.backend&&t&&(this.webgl.version=t.getParameter(t.VERSION),this.webgl.vendor=t.getParameter(t.VENDOR),this.webgl.renderer=t.getParameter(t.RENDERER),this.webgl.shader=t.getParameter(t.SHADING_LANGUAGE_VERSION)),this.webgpu.supported=this.browser&&"undefined"!=typeof navigator&&void 0!==navigator.gpu,this.webgpu.backend=this.backends.includes("webgpu");try{if(this.webgpu.supported){const e=await navigator.gpu.requestAdapter();this.webgpu.adapter=await(null==e?void 0:e.requestAdapterInfo())}}catch(e){this.webgpu.supported=!1}try{this.kernels=Ir(Ai()).map((e=>e.kernelName.toLowerCase()))}catch(e){}}updateCPU(){const e={model:"",flags:[]};this.node&&this.platform.startsWith("linux"),this.cpu?this.cpu=e:Object.defineProperty(this,"cpu",{value:e})}},sY=class{constructor(){c(this,"config"),c(this,"element"),c(this,"stream"),c(this,"devices",[]),c(this,"enumerate",(async()=>{try{const e=await navigator.mediaDevices.enumerateDevices();this.devices=e.filter((e=>"videoinput"===e.kind))}catch(e){this.devices=[]}return this.devices})),c(this,"start",(async e=>{var t,n;if((null==e?void 0:e.debug)&&(this.config.debug=null==e?void 0:e.debug),(null==e?void 0:e.crop)&&(this.config.crop=null==e?void 0:e.crop),(null==e?void 0:e.mode)&&(this.config.mode=null==e?void 0:e.mode),(null==e?void 0:e.width)&&(this.config.width=null==e?void 0:e.width),(null==e?void 0:e.height)&&(this.config.height=null==e?void 0:e.height),(null==e?void 0:e.id)&&(this.config.id=null==e?void 0:e.id),null==e?void 0:e.element)if("string"==typeof e.element){const t=document.getElementById(e.element);if(!(t&&t instanceof HTMLVideoElement))return this.config.debug&&EK("webcam","cannot get dom element",e.element),`webcam error: cannot get dom element: ${e.element}`;this.element=t}else{if(!(e.element instanceof HTMLVideoElement))return this.config.debug&&EK("webcam","unknown dom element",e.element),`webcam error: unknown dom element: ${e.element}`;this.element=e.element}else this.element=document.createElement("video");const a={audio:!1,video:{facingMode:"front"===this.config.mode?"user":"environment",resizeMode:this.config.crop?"crop-and-scale":"none"}};if((null==(t=this.config)?void 0:t.width)>0&&(a.video.width={ideal:this.config.width}),(null==(n=this.config)?void 0:n.height)>0&&(a.video.height={ideal:this.config.height}),this.config.id&&(a.video.deviceId=this.config.id),this.element.addEventListener("play",(()=>{this.config.debug&&EK("webcam","play")})),this.element.addEventListener("pause",(()=>{this.config.debug&&EK("webcam","pause")})),this.element.addEventListener("click",(async()=>{this.element&&this.stream&&(this.element.paused?await this.element.play():this.element.pause())})),!(null==navigator?void 0:navigator.mediaDevices))return this.config.debug&&EK("webcam error","no devices"),"webcam error: no devices";try{this.stream=await navigator.mediaDevices.getUserMedia(a)}catch(e){return EK("webcam",e),`webcam error: ${e}`}if(!this.stream)return this.config.debug&&EK("webcam error","no stream"),"webcam error no stream";this.element.srcObject=this.stream;const r=new Promise((e=>{this.element?this.element.onloadeddata=()=>e(!0):e(!1)}));return await r,await this.element.play(),this.config.debug&&EK("webcam",{width:this.width,height:this.height,label:this.label,stream:this.stream,track:this.track,settings:this.settings,constraints:this.constraints,capabilities:this.capabilities}),`webcam: ${this.label}`})),c(this,"pause",(()=>{this.element&&this.element.pause()})),c(this,"play",(async()=>{this.element&&await this.element.play()})),c(this,"stop",(()=>{this.config.debug&&EK("webcam","stop"),this.track&&this.track.stop()})),this.config={element:void 0,debug:!0,mode:"front",crop:!1,width:0,height:0}}get track(){if(this.stream)return this.stream.getVideoTracks()[0]}get capabilities(){if(this.track)return this.track.getCapabilities?this.track.getCapabilities():void 0}get constraints(){if(this.track)return this.track.getConstraints?this.track.getConstraints():void 0}get settings(){if(!this.stream)return;const e=this.stream.getVideoTracks()[0];return e.getSettings?e.getSettings():void 0}get label(){return this.track?this.track.label:""}get paused(){var e;return(null==(e=this.element)?void 0:e.paused)||!1}get width(){var e;return(null==(e=this.element)?void 0:e.videoWidth)||0}get height(){var e;return(null==(e=this.element)?void 0:e.videoHeight)||0}},iY={};h(iY,{"affectnet-mobilenet":()=>AY,age:()=>bY,"anti-spoofing":()=>JY,antispoof:()=>oY,blazeface:()=>lY,"blazeface-back":()=>wY,"blazeface-front":()=>vY,"blazepose-detector":()=>kY,"blazepose-full":()=>IY,"blazepose-heavy":()=>SY,"blazepose-lite":()=>CY,centernet:()=>uY,default:()=>pZ,efficientpose:()=>NY,"efficientpose-i-lite":()=>QY,"efficientpose-ii-lite":()=>eZ,"efficientpose-iv":()=>tZ,emotion:()=>dY,faceboxes:()=>TY,facemesh:()=>pY,"facemesh-attention":()=>EY,"facemesh-attention-pinto":()=>RY,"facemesh-detection-full":()=>$Y,"facemesh-detection-short":()=>MY,faceres:()=>hY,"faceres-deep":()=>FY,gear:()=>OY,"gear-e1":()=>_Y,"gear-e2":()=>PY,gender:()=>zY,"gender-ssrnet-imdb":()=>DY,handdetect:()=>LY,"handlandmark-full":()=>WY,"handlandmark-lite":()=>cY,"handlandmark-sparse":()=>BY,handskeleton:()=>VY,handtrack:()=>fY,"insightface-efficientnet-b0":()=>nZ,"insightface-ghostnet-strides1":()=>aZ,"insightface-ghostnet-strides2":()=>rZ,"insightface-mobilenet-emore":()=>sZ,"insightface-mobilenet-swish":()=>iZ,iris:()=>mY,liveness:()=>gY,meet:()=>UY,mobileface:()=>GY,mobilefacenet:()=>HY,models:()=>yY,"movenet-lightning":()=>xY,"movenet-multipose":()=>jY,"movenet-thunder":()=>qY,nanodet:()=>XY,"nanodet-e":()=>oZ,"nanodet-g":()=>lZ,"nanodet-m":()=>uZ,"nanodet-t":()=>dZ,posenet:()=>KY,rvm:()=>YY,selfie:()=>ZY});var oY=853098,lY=538928,uY=4030290,dY=820516,pY=1477958,hY=6978814,cY=2023432,fY=2964837,mY=2599092,gY=592976,yY=0,xY=4650216,AY=6920630,bY=161240,wY=538928,vY=402048,kY=5928856,IY=6339202,SY=27502466,CY=2726402,NY=5651240,TY=2013002,RY=2387598,EY=2382414,$Y=1026192,MY=201268,FY=13957620,_Y=112438,PY=112438,OY=1498916,DY=161236,zY=201808,LY=3515612,WY=5431368,BY=5286322,VY=5502280,UY=372228,GY=2183192,HY=5171976,jY=9448838,qY=12477112,XY=7574558,KY=5032780,YY=3739355,ZY=212886,JY=853098,QY=2269064,eZ=5651240,tZ=25643252,nZ=13013224,aZ=8093408,rZ=8049584,sZ=6938536,iZ=12168584,oZ=12319156,lZ=7574558,uZ=1887474,dZ=5294216,pZ={antispoof:oY,blazeface:lY,centernet:uY,emotion:dY,facemesh:pY,faceres:hY,"handlandmark-lite":cY,handtrack:fY,iris:mY,liveness:gY,models:yY,"movenet-lightning":xY,"affectnet-mobilenet":AY,age:bY,"blazeface-back":wY,"blazeface-front":vY,"blazepose-detector":kY,"blazepose-full":IY,"blazepose-heavy":SY,"blazepose-lite":CY,efficientpose:NY,faceboxes:TY,"facemesh-attention-pinto":RY,"facemesh-attention":EY,"facemesh-detection-full":$Y,"facemesh-detection-short":MY,"faceres-deep":FY,"gear-e1":_Y,"gear-e2":PY,gear:OY,"gender-ssrnet-imdb":DY,gender:zY,handdetect:LY,"handlandmark-full":WY,"handlandmark-sparse":BY,handskeleton:VY,meet:UY,mobileface:GY,mobilefacenet:HY,"movenet-multipose":jY,"movenet-thunder":qY,nanodet:XY,posenet:KY,rvm:YY,selfie:ZY,"anti-spoofing":JY,"efficientpose-i-lite":QY,"efficientpose-ii-lite":eZ,"efficientpose-iv":tZ,"insightface-efficientnet-b0":nZ,"insightface-ghostnet-strides1":aZ,"insightface-ghostnet-strides2":rZ,"insightface-mobilenet-emore":sZ,"insightface-mobilenet-swish":iZ,"nanodet-e":oZ,"nanodet-g":lZ,"nanodet-m":uZ,"nanodet-t":dZ},hZ={cacheModels:!0,cacheSupported:!0,verbose:!0,debug:!1,modelBasePath:""},cZ={};async function fZ(e){var t,n,a,r,s,i;let o=function(e,t){const n=e.endsWith("/")?"":"/",a=t.startsWith(".")||t.startsWith("/")||t.startsWith("http:")||t.startsWith("https:")||t.startsWith("file:")?`${t}`:`${e}${n}${t}`;if(!a.toLocaleLowerCase().includes(".json"))throw new Error(`modelpath error: expecting json file: ${a}`);return a}(hZ.modelBasePath,e||"");o.toLowerCase().endsWith(".json")||(o+=".json");const l=o.includes("/")?o.split("/"):o.split("\\"),u=l[l.length-1].replace(".json",""),d="indexeddb://"+u;cZ[u]={name:u,loaded:!1,sizeFromManifest:0,sizeLoadedWeights:0,sizeDesired:iY[u],inCache:!1,url:""},hZ.cacheSupported="undefined"!=typeof indexedDB;let p={};try{p=hZ.cacheSupported&&hZ.cacheModels?await Yc.listModels():{}}catch(e){hZ.cacheSupported=!1}cZ[u].inCache=hZ.cacheSupported&&hZ.cacheModels&&Object.keys(p).includes(d),cZ[u].url=cZ[u].inCache?d:o;const h="undefined"==typeof fetch?{}:{fetchFunc:(e,t)=>async function(e,t){return hZ.debug&&EK("load model fetch:",e,t),fetch(e,t)}(e,t)};let c=new Xy(cZ[u].url,h);cZ[u].loaded=!1;try{c.findIOHandler(),hZ.debug&&EK("model load handler:",c.handler)}catch(e){EK("error finding model i/o handler:",o,e)}try{const e=await(null==(t=c.handler)?void 0:t.load())||null;cZ[u].sizeFromManifest=(null==(n=null==e?void 0:e.weightData)?void 0:n.byteLength)||0,e?c.loadSync(e):c=await Ky(cZ[u].inCache?d:o,h),cZ[u].sizeLoadedWeights=(null==(r=null==(a=c.artifacts)?void 0:a.weightData)?void 0:r.byteLength)||(null==(i=null==(s=c.artifacts)?void 0:s.weightData)?void 0:i[0].byteLength)||0,hZ.verbose&&EK("load:",{model:u,url:c.modelUrl,bytes:cZ[u].sizeLoadedWeights}),cZ[u].loaded=!0}catch(e){EK("error loading model:",o,e)}if(cZ[u].loaded&&hZ.cacheModels&&hZ.cacheSupported&&!cZ[u].inCache)try{const e=await c.save(d);hZ.debug&&EK("model saved:",d,e)}catch(e){EK("error saving model:",o,e)}return c}var mZ="3.3.4",gZ={name:"humangl",priority:999,canvas:null,gl:null,extensions:[],webGLattr:{alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!1,desynchronized:!0}};var yZ={tf255:255,tf1:1,tf2:2,tf05:.5,tf127:127.5,rgb:[.2989,.587,.114]},xZ={};async function AZ(e,t=!1){var n,a;if(e.state="backend",0===(null==(n=e.config.backend)?void 0:n.length)&&(e.config.backend=await async function(){var e;return await rY.updateBackend(),(null==(e=rY.tensorflow)?void 0:e.version)?"tensorflow":rY.webgpu.supported&&rY.webgpu.backend?"webgpu":rY.webgl.supported&&rY.webgl.backend?"webgl":rY.wasm.supported&&rY.wasm.backend?"wasm":"cpu"}()),t||rY.initial||e.config.backend&&e.config.backend.length>0&&Ai()!==e.config.backend){const t=$K();if(e.config.backend&&e.config.backend.length>0){"undefined"==typeof window&&"undefined"!=typeof WorkerGlobalScope&&e.config.debug&&e.config.debug&&EK("running inside web worker"),"undefined"!=typeof navigator&&(null==(a=null==navigator?void 0:navigator.userAgent)?void 0:a.toLowerCase().includes("electron"))&&e.config.debug&&EK("running inside electron");let t=Object.keys(di().registryFactory);if("humangl"!==e.config.backend||t.includes("humangl")||(function(e){var t;if("humangl"===e.config.backend&&(gZ.name in di().registry&&!(null==(t=null==gZ?void 0:gZ.gl)?void 0:t.getParameter(gZ.gl.VERSION))&&(EK("humangl error: backend invalid context"),e.models.reset()),!wi(gZ.name))){try{gZ.canvas=tY(100,100)}catch(e){return void EK("humangl error: cannot create canvas:",e)}try{if(gZ.gl=gZ.canvas.getContext("webgl2",gZ.webGLattr),!gZ.gl)return void EK("humangl error: cannot get webgl context");if(!gZ.gl.getParameter(gZ.gl.VERSION).includes("2.0"))return EK("backend override: using fallback webgl backend as webgl 2.0 is not detected"),void(e.config.backend="webgl");gZ.canvas&&(gZ.canvas.addEventListener("webglcontextlost",(t=>{throw EK("humangl error:",t.type),EK("possible browser memory leak using webgl or conflict with multiple backend registrations"),e.emit("error"),new Error("backend error: webgl context lost")})),gZ.canvas.addEventListener("webglcontextrestored",(e=>{EK("humangl error: context restored:",e)})),gZ.canvas.addEventListener("webglcontextcreationerror",(e=>{EK("humangl error: context create:",e)})))}catch(e){return void EK("humangl error: cannot get webgl context:",e)}try{LI(2,gZ.gl)}catch(e){return void EK("humangl error: cannot set webgl context:",e)}try{const e=new VC(gZ.gl);ki(gZ.name,(()=>new pT(e)),gZ.priority)}catch(e){return void EK("humangl error: cannot register webgl backend:",e)}try{Ir("webgl").forEach((e=>{Sr({...e,backendName:gZ.name})}))}catch(e){return void EK("humangl error: cannot update webgl backend registration:",e)}try{Xe().flagRegistry.WEBGL_VERSION&&Xe().set("WEBGL_VERSION",2)}catch(e){return void EK("humangl error: cannot set WebGL backend flags:",e)}!function(){const e=gZ.gl;e&&(gZ.extensions=e.getSupportedExtensions())}();const t=Ii(),n=void 0!==t.gpgpu?t.getGPGPUContext().gl:null;n?e.config.debug&&EK("humangl backend registered:",{webgl:n.getParameter(n.VERSION),renderer:n.getParameter(n.RENDERER)}):EK("humangl error: no current gl context:",n,gZ.gl)}}(e),t=Object.keys(di().registryFactory)),e.config.debug&&EK("available backends:",t),rY.browser&&!rY.node&&"tensorflow"===e.config.backend&&t.includes("webgl")&&(e.config.debug&&EK("override: backend set to tensorflow while running in browser"),e.config.backend="webgl"),!rY.node||rY.browser||"webgl"!==e.config.backend&&"humangl"!==e.config.backend||!t.includes("tensorflow")||(e.config.debug&&EK(`override: backend set to ${e.config.backend} while running in nodejs`),e.config.backend="tensorflow"),rY.browser&&"webgpu"===e.config.backend)if("undefined"==typeof navigator||void 0===navigator.gpu)EK("override: backend set to webgpu but browser does not support webgpu"),e.config.backend="webgl";else{const t=await navigator.gpu.requestAdapter();e.config.debug&&EK("enumerated webgpu adapter:",t),t?EK("webgpu adapter info:","requestAdapterInfo"in t?await t.requestAdapterInfo():void 0):(EK("override: backend set to webgpu but browser reports no available gpu"),e.config.backend="webgl")}if(t.includes(e.config.backend)||(EK(`error: backend ${e.config.backend} not found in registry`),e.config.backend=rY.node?"tensorflow":"webgl",e.config.debug&&EK(`override: setting backend ${e.config.backend}`)),e.config.debug&&EK("setting backend:",[e.config.backend]),"wasm"===e.config.backend){if(Xe().flagRegistry.CANVAS2D_WILL_READ_FREQUENTLY&&Xe().set("CANVAS2D_WILL_READ_FREQUENTLY",!0),e.config.debug&&EK("wasm path:",e.config.wasmPath),void 0===oW)throw new Error("backend error: attempting to use wasm backend but wasm path is not set");oW(e.config.wasmPath,e.config.wasmPlatformFetch);let t=!1,n=!1;try{t=await Xe().getAsync("WASM_HAS_MULTITHREAD_SUPPORT"),n=await Xe().getAsync("WASM_HAS_SIMD_SUPPORT"),e.config.debug&&EK(`wasm execution: ${n?"simd":"no simd"} ${t?"multithreaded":"singlethreaded"}`),e.config.debug&&!n&&EK("warning: wasm simd support is not enabled")}catch(e){EK("wasm detection failed")}}try{await yi(e.config.backend),await xi()}catch(t){return EK("error: cannot set backend:",e.config.backend,t),!1}e.config.debug&&(xZ=JSON.parse(JSON.stringify(Xe().flags)))}if("humangl"!==Ai()&&"webgl"!==Ai()||(Xe().flagRegistry.WEBGL_USE_SHAPES_UNIFORMS&&Xe().set("WEBGL_USE_SHAPES_UNIFORMS",!0),Xe().flagRegistry.WEBGL_EXP_CONV&&Xe().set("WEBGL_EXP_CONV",!0),e.config.debug&&void 0!==e.config.deallocate&&e.config.deallocate&&(EK("changing webgl: WEBGL_DELETE_TEXTURE_THRESHOLD:",!0),Xe().set("WEBGL_DELETE_TEXTURE_THRESHOLD",0))),Ai(),e.config.debug){const t=Xe().flags,n={};for(const e of Object.keys(t))xZ[e]!==t[e]&&(n[e]=t[e]);e.config.debug&&Object.keys(n).length>0&&EK("backend:",Ai(),"flags:",n)}if(e.config.flags&&Object.keys(e.config.flags).length>0){e.config.debug&&EK("flags:",e.config.flags);for(const[t,n]of Object.entries(e.config.flags))Xe().set(t,n)}si(),yZ.tf255=xu(255,"float32"),yZ.tf1=xu(1,"float32"),yZ.tf2=xu(2,"float32"),yZ.tf05=xu(.5,"float32"),yZ.tf127=xu(127.5,"float32"),yZ.rgb=jp([.2989,.587,.114],"float32"),e.performance.initBackend=Math.trunc($K()-t),e.config.backend=Ai(),await rY.updateBackend(),function(e){const t=[];rY.kernels.includes("mod")||(Sr({kernelName:"Mod",backendName:Ai(),kernelFunc:e=>ci((()=>td(e.inputs.a,$o(Eo(e.inputs.a,e.inputs.b),e.inputs.b))))}),rY.kernels.push("mod"),t.push("mod")),rY.kernels.includes("floormod")||(Sr({kernelName:"FloorMod",backendName:Ai(),kernelFunc:e=>ci((()=>To($o(Ro(e.inputs.a,e.inputs.b),e.inputs.b),wd(e.inputs.a,e.inputs.b))))}),rY.kernels.push("floormod"),t.push("floormod")),!rY.kernels.includes("rotatewithoffset")&&e.softwareKernels&&(Sr({kernelName:"RotateWithOffset",backendName:Ai(),kernelFunc:e=>ci((()=>{const t=Ai();yi("cpu");const n=Rc.rotateWithOffset(e.inputs.image,e.attrs.radians,e.attrs.fillValue,e.attrs.center);return yi(t),n}))}),rY.kernels.push("rotatewithoffset"),t.push("rotatewithoffset")),t.length>0&&e.debug&&EK("registered kernels:",t)}(e.config)}return!0}function bZ(e,t){for(const n of e)Sr({kernelName:n,backendName:t.backend,kernelFunc:e=>{var a;return t.debug&&EK("kernelFunc",n,t.backend,e),null==(a=null==e?void 0:e.inputs)?void 0:a.info}});rY.kernels=Ir(Ai()).map((e=>e.kernelName.toLowerCase()))}var wZ={};h(wZ,{all:()=>uJ,body:()=>eJ,canvas:()=>oJ,face:()=>QZ,gesture:()=>aJ,hand:()=>tJ,init:()=>dJ,object:()=>nJ,options:()=>MZ,person:()=>iJ,tensor:()=>lJ});var vZ=e=>{if(e)if(e.getContext){const t=e.getContext("2d",{willReadFrequently:!0});if(t)return t;EK("draw error: cannot get canvas context")}else EK("draw error: canvas context not defined");else EK("draw error: invalid canvas");return null},kZ=e=>Math.round(180*e/Math.PI),IZ=(e,t,n)=>e.replace(t,"number"==typeof n?n.toFixed(1):n),SZ=(e,t)=>{if(!t.useDepth||void 0===e)return t.color;const n=Uint8ClampedArray.from([127+2*e,127-2*e,255]);return`rgba(${n[0]}, ${n[1]}, ${n[2]}, ${t.alpha})`};function CZ(e,t,n,a,r){const s=t.replace(/\[.*\]/g,"").split("\n").map((e=>e.trim())),i=Math.max(0,n);for(let t=s.length-1;t>=0;t--){const n=t*r.lineHeight+a;r.shadowColor&&""!==r.shadowColor&&(e.fillStyle=r.shadowColor,e.fillText(s[t],i+5,n+16)),e.fillStyle=r.labelColor,e.fillText(s[t],i+4,n+15)}}function NZ(e,t,n,a,r){e.fillStyle=SZ(a,r),e.beginPath(),e.arc(t,n,r.pointSize,0,2*Math.PI),e.fill()}function TZ(e,t,n,a,r,s){if(e.beginPath(),e.lineWidth=s.lineWidth,s.useCurves){const s=(t+t+a)/2,i=(n+n+r)/2;e.ellipse(s,i,a/2,r/2,0,0,2*Math.PI)}else e.moveTo(t+s.roundRect,n),e.lineTo(t+a-s.roundRect,n),e.quadraticCurveTo(t+a,n,t+a,n+s.roundRect),e.lineTo(t+a,n+r-s.roundRect),e.quadraticCurveTo(t+a,n+r,t+a-s.roundRect,n+r),e.lineTo(t+s.roundRect,n+r),e.quadraticCurveTo(t,n+r,t,n+r-s.roundRect),e.lineTo(t,n+s.roundRect),e.quadraticCurveTo(t,n,t+s.roundRect,n),e.closePath();e.stroke()}function RZ(e,t,n){if(!(t.length<2)){e.beginPath(),e.moveTo(t[0][0],t[0][1]);for(const a of t)e.strokeStyle=SZ(a[2]||0,n),e.lineTo(Math.trunc(a[0]),Math.trunc(a[1]));e.stroke(),n.fillPolygons&&(e.closePath(),e.fill())}}function EZ(e,t,n){if(!(t.length<2))if(e.lineWidth=n.lineWidth,!n.useCurves||t.length<=2)RZ(e,t,n);else{e.moveTo(t[0][0],t[0][1]);for(let n=0;n<t.length-2;n++){const a=(t[n][0]+t[n+1][0])/2,r=(t[n][1]+t[n+1][1])/2;e.quadraticCurveTo(t[n][0],t[n][1],a,r)}e.quadraticCurveTo(t[t.length-2][0],t[t.length-2][1],t[t.length-1][0],t[t.length-1][1]),e.stroke(),n.fillPolygons&&(e.closePath(),e.fill())}}function $Z(e,t,n,a=5){let r,s,i;e.beginPath(),e.moveTo(t[0],t[1]),e.lineTo(n[0],n[1]),r=Math.atan2(n[1]-t[1],n[0]-t[0]),s=a*Math.cos(r)+n[0],i=a*Math.sin(r)+n[1],e.moveTo(s,i),r+=1/3*(2*Math.PI),s=a*Math.cos(r)+n[0],i=a*Math.sin(r)+n[1],e.lineTo(s,i),r+=1/3*(2*Math.PI),s=a*Math.cos(r)+n[0],i=a*Math.sin(r)+n[1],e.lineTo(s,i),e.closePath(),e.stroke(),e.fill()}var MZ={color:"rgba(173, 216, 230, 0.6)",labelColor:"rgba(173, 216, 230, 1)",shadowColor:"black",alpha:.5,font:'small-caps 16px "Segoe UI"',lineHeight:18,lineWidth:4,pointSize:2,roundRect:8,drawPoints:!1,drawLabels:!0,drawBoxes:!0,drawAttention:!0,drawGestures:!0,drawPolygons:!0,drawGaze:!0,fillPolygons:!1,useDepth:!0,useCurves:!1,faceLabels:"",bodyLabels:"",bodyPartLabels:"",objectLabels:"",handLabels:"",fingerLabels:"",gestureLabels:""},FZ={silhouette:[10,338,297,332,284,251,389,356,454,323,361,288,397,365,379,378,400,377,152,148,176,149,150,136,172,58,132,93,234,127,162,21,54,103,67,109],lipsUpperOuter:[185,40,39,37,0,267,269,270,409],lipsLowerOuter:[61,146,91,181,84,17,314,405,321,375,291],lipsUpperInner:[191,80,81,82,13,312,311,310,415],lipsLowerInner:[78,95,88,178,87,14,317,402,318,324,308],lipsLowerSemiOuter:[76,77,90,180,85,16,315,404,320,307,306],lipsUpperSemiOuter:[184,74,73,72,11,302,303,304,408],lipsLowerSemiInner:[62,96,89,179,86,15,316,403,319,325,292],lipsUpperSemiInner:[183,42,41,38,12,268,271,272,407],rightEyeUpper0:[246,161,160,159,158,157,173],rightEyeLower0:[33,7,163,144,145,153,154,155,133],rightEyeUpper1:[247,30,29,27,28,56,190],rightEyeLower1:[130,25,110,24,23,22,26,112,243],rightEyeUpper2:[113,225,224,223,222,221,189],rightEyeLower2:[226,31,228,229,230,231,232,233,244],rightEyeLower3:[143,111,117,118,119,120,121,128,245],rightEyebrowUpper:[156,70,63,105,66,107,55,193],rightEyebrowLower:[35,124,46,53,52,65],rightEyeIris:[473,474,475,476,477],leftEyeUpper0:[466,388,387,386,385,384,398],leftEyeLower0:[263,249,390,373,374,380,381,382,362],leftEyeUpper1:[467,260,259,257,258,286,414],leftEyeLower1:[359,255,339,254,253,252,256,341,463],leftEyeUpper2:[342,445,444,443,442,441,413],leftEyeLower2:[446,261,448,449,450,451,452,453,464],leftEyeLower3:[372,340,346,347,348,349,350,357,465],leftEyebrowUpper:[383,300,293,334,296,336,285,417],leftEyebrowLower:[265,353,276,283,282,295],leftEyeIris:[468,469,470,471,472],midwayBetweenEyes:[168],noseTip:[1],noseBottom:[2],noseRightCorner:[98],noseLeftCorner:[327],rightCheek:[205],leftCheek:[425]},_Z={count:468,mouth:13,symmetryLine:[13,FZ.midwayBetweenEyes[0]]},PZ={leftEye:0,rightEye:1,nose:2,mouth:3,leftEar:4,rightEar:5,symmetryLine:[3,2]},OZ=[{key:"EyeUpper0",indices:[9,10,11,12,13,14,15]},{key:"EyeUpper1",indices:[25,26,27,28,29,30,31]},{key:"EyeUpper2",indices:[41,42,43,44,45,46,47]},{key:"EyeLower0",indices:[0,1,2,3,4,5,6,7,8]},{key:"EyeLower1",indices:[16,17,18,19,20,21,22,23,24]},{key:"EyeLower2",indices:[32,33,34,35,36,37,38,39,40]},{key:"EyeLower3",indices:[54,55,56,57,58,59,60,61,62]},{key:"EyebrowUpper",indices:[63,64,65,66,67,68,69,70]},{key:"EyebrowLower",indices:[48,49,50,51,52,53]}],DZ=[[.499976992607117,.652534008026123],[.500025987625122,.547487020492554],[.499974012374878,.602371990680695],[.482113003730774,.471979022026062],[.500150978565216,.527155995368958],[.499909996986389,.498252987861633],[.499523013830185,.40106201171875],[.289712011814117,.380764007568359],[.499954998493195,.312398016452789],[.499987006187439,.269918978214264],[.500023007392883,.107050001621246],[.500023007392883,.666234016418457],[.5000159740448,.679224014282227],[.500023007392883,.692348003387451],[.499976992607117,.695277988910675],[.499976992607117,.70593398809433],[.499976992607117,.719385027885437],[.499976992607117,.737019002437592],[.499967992305756,.781370997428894],[.499816000461578,.562981009483337],[.473773002624512,.573909997940063],[.104906998574734,.254140973091125],[.365929991006851,.409575998783112],[.338757991790771,.41302502155304],[.311120003461838,.409460008144379],[.274657994508743,.389131009578705],[.393361985683441,.403706014156342],[.345234006643295,.344011008739471],[.370094001293182,.346076011657715],[.319321990013123,.347265005111694],[.297903001308441,.353591024875641],[.24779200553894,.410809993743896],[.396889001131058,.842755019664764],[.280097991228104,.375599980354309],[.106310002505779,.399955987930298],[.2099249958992,.391353011131287],[.355807989835739,.534406006336212],[.471751004457474,.65040397644043],[.474155008792877,.680191993713379],[.439785003662109,.657229006290436],[.414617002010345,.66654098033905],[.450374007225037,.680860996246338],[.428770989179611,.682690978050232],[.374971002340317,.727805018424988],[.486716985702515,.547628998756409],[.485300987958908,.527395009994507],[.257764995098114,.314490020275116],[.401223003864288,.455172002315521],[.429818987846375,.548614978790283],[.421351999044418,.533740997314453],[.276895999908447,.532056987285614],[.483370006084442,.499586999416351],[.33721199631691,.282882988452911],[.296391993761063,.293242990970612],[.169294998049736,.193813979625702],[.447580009698868,.302609980106354],[.392390012741089,.353887975215912],[.354490011930466,.696784019470215],[.067304998636246,.730105042457581],[.442739009857178,.572826027870178],[.457098007202148,.584792017936707],[.381974011659622,.694710969924927],[.392388999462128,.694203019142151],[.277076005935669,.271932005882263],[.422551989555359,.563233017921448],[.385919004678726,.281364023685455],[.383103013038635,.255840003490448],[.331431001424789,.119714021682739],[.229923993349075,.232002973556519],[.364500999450684,.189113974571228],[.229622006416321,.299540996551514],[.173287004232407,.278747975826263],[.472878992557526,.666198015213013],[.446828007698059,.668527007102966],[.422762006521225,.673889994621277],[.445307999849319,.580065965652466],[.388103008270264,.693961024284363],[.403039008378983,.706539988517761],[.403629004955292,.693953037261963],[.460041999816895,.557139039039612],[.431158006191254,.692366003990173],[.452181994915009,.692366003990173],[.475387006998062,.692366003990173],[.465828001499176,.779190003871918],[.472328990697861,.736225962638855],[.473087012767792,.717857003211975],[.473122000694275,.704625964164734],[.473033010959625,.695277988910675],[.427942007780075,.695277988910675],[.426479011774063,.703539967536926],[.423162013292313,.711845993995667],[.4183090031147,.720062971115112],[.390094995498657,.639572978019714],[.013953999616206,.560034036636353],[.499913990497589,.58014702796936],[.413199990987778,.69539999961853],[.409626007080078,.701822996139526],[.468080013990402,.601534962654114],[.422728985548019,.585985004901886],[.463079988956451,.593783974647522],[.37211999297142,.47341400384903],[.334562003612518,.496073007583618],[.411671012639999,.546965003013611],[.242175996303558,.14767599105835],[.290776997804642,.201445996761322],[.327338010072708,.256527006626129],[.399509996175766,.748921036720276],[.441727995872498,.261676013469696],[.429764986038208,.187834024429321],[.412198007106781,.108901023864746],[.288955003023148,.398952007293701],[.218936994671822,.435410976409912],[.41278201341629,.398970007896423],[.257135003805161,.355440020561218],[.427684992551804,.437960982322693],[.448339998722076,.536936044692993],[.178560003638268,.45755398273468],[.247308000922203,.457193970680237],[.286267012357712,.467674970626831],[.332827985286713,.460712015628815],[.368755996227264,.447206974029541],[.398963987827301,.432654976844788],[.476410001516342,.405806005001068],[.189241006970406,.523923993110657],[.228962004184723,.348950982093811],[.490725994110107,.562400996685028],[.404670000076294,.485132992267609],[.019469000399113,.401564002037048],[.426243007183075,.420431017875671],[.396993011236191,.548797011375427],[.266469985246658,.376977026462555],[.439121007919312,.51895797252655],[.032313998788595,.644356966018677],[.419054001569748,.387154996395111],[.462783008813858,.505746960639954],[.238978996872902,.779744982719421],[.198220998048782,.831938028335571],[.107550002634525,.540755033493042],[.183610007166862,.740257024765015],[.134409993886948,.333683013916016],[.385764002799988,.883153975009918],[.490967005491257,.579378008842468],[.382384985685349,.508572995662689],[.174399003386497,.397670984268188],[.318785011768341,.39623498916626],[.343364000320435,.400596976280212],[.396100014448166,.710216999053955],[.187885001301765,.588537991046906],[.430987000465393,.944064974784851],[.318993002176285,.898285031318665],[.266247987747192,.869701027870178],[.500023007392883,.190576016902924],[.499976992607117,.954452991485596],[.366169989109039,.398822009563446],[.393207013607025,.39553701877594],[.410373002290726,.391080021858215],[.194993004202843,.342101991176605],[.388664990663528,.362284004688263],[.365961998701096,.355970978736877],[.343364000320435,.355356991291046],[.318785011768341,.35834002494812],[.301414996385574,.363156020641327],[.058132998645306,.319076001644135],[.301414996385574,.387449026107788],[.499987989664078,.618434011936188],[.415838003158569,.624195992946625],[.445681989192963,.566076993942261],[.465844005346298,.620640993118286],[.49992299079895,.351523995399475],[.288718998432159,.819945991039276],[.335278987884521,.852819979190826],[.440512001514435,.902418971061707],[.128294005990028,.791940987110138],[.408771991729736,.373893976211548],[.455606997013092,.451801002025604],[.499877005815506,.908990025520325],[.375436991453171,.924192011356354],[.11421000212431,.615022003650665],[.448662012815475,.695277988910675],[.4480200111866,.704632043838501],[.447111994028091,.715808033943176],[.444831997156143,.730794012546539],[.430011987686157,.766808986663818],[.406787008047104,.685672998428345],[.400738000869751,.681069016456604],[.392399996519089,.677703022956848],[.367855995893478,.663918972015381],[.247923001646996,.601333022117615],[.452769994735718,.420849978923798],[.43639200925827,.359887003898621],[.416164010763168,.368713974952698],[.413385987281799,.692366003990173],[.228018000721931,.683571994304657],[.468268007040024,.352671027183533],[.411361992359161,.804327011108398],[.499989002943039,.469825029373169],[.479153990745544,.442654013633728],[.499974012374878,.439637005329132],[.432112008333206,.493588984012604],[.499886006116867,.866917014122009],[.49991300702095,.821729004383087],[.456548988819122,.819200992584229],[.344549000263214,.745438992977142],[.37890899181366,.574010014533997],[.374292999505997,.780184984207153],[.319687992334366,.570737957954407],[.357154995203018,.604269981384277],[.295284003019333,.621580958366394],[.447750002145767,.862477004528046],[.410986006259918,.508723020553589],[.31395098567009,.775308012962341],[.354128003120422,.812552988529205],[.324548006057739,.703992962837219],[.189096003770828,.646299958229065],[.279776990413666,.71465802192688],[.1338230073452,.682700991630554],[.336768001317978,.644733011722565],[.429883986711502,.466521978378296],[.455527991056442,.548622965812683],[.437114000320435,.558896005153656],[.467287987470627,.529924988746643],[.414712011814117,.335219979286194],[.37704598903656,.322777986526489],[.344107985496521,.320150971412659],[.312875986099243,.32233202457428],[.283526003360748,.333190023899078],[.241245999932289,.382785975933075],[.102986000478268,.468762993812561],[.267612010240555,.424560010433197],[.297879010438919,.433175981044769],[.333433985710144,.433878004550934],[.366427004337311,.426115989685059],[.396012008190155,.416696012020111],[.420121014118195,.41022801399231],[.007561000064015,.480777025222778],[.432949006557465,.569517970085144],[.458638995885849,.479089021682739],[.473466008901596,.545744001865387],[.476087987422943,.563830018043518],[.468472003936768,.555056989192963],[.433990985155106,.582361996173859],[.483518004417419,.562983989715576],[.482482999563217,.57784903049469],[.42645001411438,.389798998832703],[.438998997211456,.39649498462677],[.450067013502121,.400434017181396],[.289712011814117,.368252992630005],[.276670008897781,.363372981548309],[.517862021923065,.471948027610779],[.710287988185883,.380764007568359],[.526226997375488,.573909997940063],[.895093023777008,.254140973091125],[.634069979190826,.409575998783112],[.661242008209229,.41302502155304],[.688880026340485,.409460008144379],[.725341975688934,.389131009578705],[.606630027294159,.40370500087738],[.654766023159027,.344011008739471],[.629905998706818,.346076011657715],[.680678009986877,.347265005111694],[.702096998691559,.353591024875641],[.75221198797226,.410804986953735],[.602918028831482,.842862963676453],[.719901978969574,.375599980354309],[.893692970275879,.399959981441498],[.790081977844238,.391354024410248],[.643998026847839,.534487962722778],[.528249025344849,.65040397644043],[.525849997997284,.680191040039062],[.560214996337891,.657229006290436],[.585384011268616,.66654098033905],[.549625992774963,.680860996246338],[.57122802734375,.682691991329193],[.624852001667023,.72809898853302],[.513050019741058,.547281980514526],[.51509702205658,.527251958847046],[.742246985435486,.314507007598877],[.598631024360657,.454979002475739],[.570338010787964,.548575043678284],[.578631997108459,.533622980117798],[.723087012767792,.532054007053375],[.516445994377136,.499638974666595],[.662801027297974,.282917976379395],[.70362401008606,.293271005153656],[.830704987049103,.193813979625702],[.552385985851288,.302568018436432],[.607609987258911,.353887975215912],[.645429015159607,.696707010269165],[.932694971561432,.730105042457581],[.557260990142822,.572826027870178],[.542901992797852,.584792017936707],[.6180260181427,.694710969924927],[.607590973377228,.694203019142151],[.722943007946014,.271963000297546],[.577413976192474,.563166975975037],[.614082992076874,.281386971473694],[.616907000541687,.255886018276215],[.668509006500244,.119913995265961],[.770092010498047,.232020974159241],[.635536015033722,.189248979091644],[.77039098739624,.299556016921997],[.826722025871277,.278755009174347],[.527121007442474,.666198015213013],[.553171992301941,.668527007102966],[.577238023281097,.673889994621277],[.554691970348358,.580065965652466],[.611896991729736,.693961024284363],[.59696102142334,.706539988517761],[.596370995044708,.693953037261963],[.539958000183105,.557139039039612],[.568841993808746,.692366003990173],[.547818005084991,.692366003990173],[.52461302280426,.692366003990173],[.534089982509613,.779141008853912],[.527670979499817,.736225962638855],[.526912987232208,.717857003211975],[.526877999305725,.704625964164734],[.526966989040375,.695277988910675],[.572058022022247,.695277988910675],[.573521018028259,.703539967536926],[.57683801651001,.711845993995667],[.581691026687622,.720062971115112],[.609944999217987,.639909982681274],[.986046016216278,.560034036636353],[.5867999792099,.69539999961853],[.590372025966644,.701822996139526],[.531915009021759,.601536989212036],[.577268004417419,.585934996604919],[.536915004253387,.593786001205444],[.627542972564697,.473352015018463],[.665585994720459,.495950996875763],[.588353991508484,.546862006187439],[.757824003696442,.14767599105835],[.709249973297119,.201507985591888],[.672684013843536,.256581008434296],[.600408971309662,.74900496006012],[.55826598405838,.261672019958496],[.570303976535797,.187870979309082],[.588165998458862,.109044015407562],[.711045026779175,.398952007293701],[.781069993972778,.435405015945435],[.587247014045715,.398931980133057],[.742869973182678,.355445981025696],[.572156012058258,.437651991844177],[.55186802148819,.536570012569427],[.821442008018494,.457556009292603],[.752701997756958,.457181990146637],[.71375697851181,.467626988887787],[.66711300611496,.460672974586487],[.631101012229919,.447153985500336],[.6008620262146,.432473003864288],[.523481011390686,.405627012252808],[.810747981071472,.523926019668579],[.771045982837677,.348959028720856],[.509127020835876,.562718033790588],[.595292985439301,.485023975372314],[.980530977249146,.401564002037048],[.573499977588654,.420000016689301],[.602994978427887,.548687994480133],[.733529984951019,.376977026462555],[.560611009597778,.519016981124878],[.967685997486115,.644356966018677],[.580985009670258,.387160003185272],[.537728011608124,.505385041236877],[.760966002941132,.779752969741821],[.801778972148895,.831938028335571],[.892440974712372,.54076099395752],[.816350996494293,.740260004997253],[.865594983100891,.333687007427216],[.614073991775513,.883246004581451],[.508952975273132,.579437971115112],[.617941975593567,.508316040039062],[.825608015060425,.397674977779388],[.681214988231659,.39623498916626],[.656635999679565,.400596976280212],[.603900015354156,.710216999053955],[.81208598613739,.588539004325867],[.56801301240921,.944564998149872],[.681007981300354,.898285031318665],[.733752012252808,.869701027870178],[.633830010890961,.398822009563446],[.606792986392975,.39553701877594],[.589659988880157,.391062021255493],[.805015981197357,.342108011245728],[.611334979534149,.362284004688263],[.634037971496582,.355970978736877],[.656635999679565,.355356991291046],[.681214988231659,.35834002494812],[.698584973812103,.363156020641327],[.941866993904114,.319076001644135],[.698584973812103,.387449026107788],[.584177017211914,.624107003211975],[.554318010807037,.566076993942261],[.534153997898102,.62064003944397],[.711217999458313,.819975018501282],[.664629995822906,.852871000766754],[.559099972248077,.902631998062134],[.871706008911133,.791940987110138],[.591234028339386,.373893976211548],[.544341027736664,.451583981513977],[.624562978744507,.924192011356354],[.88577002286911,.615028977394104],[.551338016986847,.695277988910675],[.551980018615723,.704632043838501],[.552887976169586,.715808033943176],[.555167973041534,.730794012546539],[.569944024085999,.767035007476807],[.593203008174896,.685675978660583],[.599261999130249,.681069016456604],[.607599973678589,.677703022956848],[.631937980651855,.663500010967255],[.752032995223999,.601315021514893],[.547226011753082,.420395016670227],[.563543975353241,.359827995300293],[.583841025829315,.368713974952698],[.586614012718201,.692366003990173],[.771915018558502,.683578014373779],[.531597018241882,.352482974529266],[.588370978832245,.804440975189209],[.52079701423645,.442565023899078],[.567984998226166,.493479013442993],[.543282985687256,.819254994392395],[.655317008495331,.745514988899231],[.621008992195129,.574018001556396],[.625559985637665,.78031200170517],[.680198013782501,.570719003677368],[.64276397228241,.604337990283966],[.704662978649139,.621529996395111],[.552012026309967,.862591981887817],[.589071989059448,.508637011051178],[.685944974422455,.775357007980347],[.645735025405884,.812640011310577],[.675342977046967,.703978002071381],[.810858011245728,.646304965019226],[.72012197971344,.714666962623596],[.866151988506317,.682704985141754],[.663187026977539,.644596993923187],[.570082008838654,.466325998306274],[.544561982154846,.548375964164734],[.562758982181549,.558784961700439],[.531987011432648,.530140042304993],[.585271000862122,.335177004337311],[.622952997684479,.32277899980545],[.655896008014679,.320163011550903],[.687132000923157,.322345972061157],[.716481983661652,.333200991153717],[.758756995201111,.382786989212036],[.897013008594513,.468769013881683],[.732392013072968,.424547016620636],[.70211398601532,.433162987232208],[.66652500629425,.433866024017334],[.633504986763,.426087975502014],[.603875994682312,.416586995124817],[.579657971858978,.409945011138916],[.992439985275269,.480777025222778],[.567192018032074,.569419980049133],[.54136598110199,.478899002075195],[.526564002037048,.546118021011353],[.523913025856018,.563830018043518],[.531529009342194,.555056989192963],[.566035985946655,.582329034805298],[.51631098985672,.563053965568542],[.5174720287323,.577877044677734],[.573594987392426,.389806985855103],[.560697972774506,.395331978797913],[.549755990505219,.399751007556915],[.710287988185883,.368252992630005],[.723330020904541,.363372981548309]],zZ=[127,34,139,11,0,37,232,231,120,72,37,39,128,121,47,232,121,128,104,69,67,175,171,148,157,154,155,118,50,101,73,39,40,9,151,108,48,115,131,194,204,211,74,40,185,80,42,183,40,92,186,230,229,118,202,212,214,83,18,17,76,61,146,160,29,30,56,157,173,106,204,194,135,214,192,203,165,98,21,71,68,51,45,4,144,24,23,77,146,91,205,50,187,201,200,18,91,106,182,90,91,181,85,84,17,206,203,36,148,171,140,92,40,39,193,189,244,159,158,28,247,246,161,236,3,196,54,68,104,193,168,8,117,228,31,189,193,55,98,97,99,126,47,100,166,79,218,155,154,26,209,49,131,135,136,150,47,126,217,223,52,53,45,51,134,211,170,140,67,69,108,43,106,91,230,119,120,226,130,247,63,53,52,238,20,242,46,70,156,78,62,96,46,53,63,143,34,227,173,155,133,123,117,111,44,125,19,236,134,51,216,206,205,154,153,22,39,37,167,200,201,208,36,142,100,57,212,202,20,60,99,28,158,157,35,226,113,160,159,27,204,202,210,113,225,46,43,202,204,62,76,77,137,123,116,41,38,72,203,129,142,64,98,240,49,102,64,41,73,74,212,216,207,42,74,184,169,170,211,170,149,176,105,66,69,122,6,168,123,147,187,96,77,90,65,55,107,89,90,180,101,100,120,63,105,104,93,137,227,15,86,85,129,102,49,14,87,86,55,8,9,100,47,121,145,23,22,88,89,179,6,122,196,88,95,96,138,172,136,215,58,172,115,48,219,42,80,81,195,3,51,43,146,61,171,175,199,81,82,38,53,46,225,144,163,110,246,33,7,52,65,66,229,228,117,34,127,234,107,108,69,109,108,151,48,64,235,62,78,191,129,209,126,111,35,143,163,161,246,117,123,50,222,65,52,19,125,141,221,55,65,3,195,197,25,7,33,220,237,44,70,71,139,122,193,245,247,130,33,71,21,162,153,158,159,170,169,150,188,174,196,216,186,92,144,160,161,2,97,167,141,125,241,164,167,37,72,38,12,145,159,160,38,82,13,63,68,71,226,35,111,158,153,154,101,50,205,206,92,165,209,198,217,165,167,97,220,115,218,133,112,243,239,238,241,214,135,169,190,173,133,171,208,32,125,44,237,86,87,178,85,86,179,84,85,180,83,84,181,201,83,182,137,93,132,76,62,183,61,76,184,57,61,185,212,57,186,214,207,187,34,143,156,79,239,237,123,137,177,44,1,4,201,194,32,64,102,129,213,215,138,59,166,219,242,99,97,2,94,141,75,59,235,24,110,228,25,130,226,23,24,229,22,23,230,26,22,231,112,26,232,189,190,243,221,56,190,28,56,221,27,28,222,29,27,223,30,29,224,247,30,225,238,79,20,166,59,75,60,75,240,147,177,215,20,79,166,187,147,213,112,233,244,233,128,245,128,114,188,114,217,174,131,115,220,217,198,236,198,131,134,177,132,58,143,35,124,110,163,7,228,110,25,356,389,368,11,302,267,452,350,349,302,303,269,357,343,277,452,453,357,333,332,297,175,152,377,384,398,382,347,348,330,303,304,270,9,336,337,278,279,360,418,262,431,304,408,409,310,415,407,270,409,410,450,348,347,422,430,434,313,314,17,306,307,375,387,388,260,286,414,398,335,406,418,364,367,416,423,358,327,251,284,298,281,5,4,373,374,253,307,320,321,425,427,411,421,313,18,321,405,406,320,404,405,315,16,17,426,425,266,377,400,369,322,391,269,417,465,464,386,257,258,466,260,388,456,399,419,284,332,333,417,285,8,346,340,261,413,441,285,327,460,328,355,371,329,392,439,438,382,341,256,429,420,360,364,394,379,277,343,437,443,444,283,275,440,363,431,262,369,297,338,337,273,375,321,450,451,349,446,342,467,293,334,282,458,461,462,276,353,383,308,324,325,276,300,293,372,345,447,382,398,362,352,345,340,274,1,19,456,248,281,436,427,425,381,256,252,269,391,393,200,199,428,266,330,329,287,273,422,250,462,328,258,286,384,265,353,342,387,259,257,424,431,430,342,353,276,273,335,424,292,325,307,366,447,345,271,303,302,423,266,371,294,455,460,279,278,294,271,272,304,432,434,427,272,407,408,394,430,431,395,369,400,334,333,299,351,417,168,352,280,411,325,319,320,295,296,336,319,403,404,330,348,349,293,298,333,323,454,447,15,16,315,358,429,279,14,15,316,285,336,9,329,349,350,374,380,252,318,402,403,6,197,419,318,319,325,367,364,365,435,367,397,344,438,439,272,271,311,195,5,281,273,287,291,396,428,199,311,271,268,283,444,445,373,254,339,263,466,249,282,334,296,449,347,346,264,447,454,336,296,299,338,10,151,278,439,455,292,407,415,358,371,355,340,345,372,390,249,466,346,347,280,442,443,282,19,94,370,441,442,295,248,419,197,263,255,359,440,275,274,300,383,368,351,412,465,263,467,466,301,368,389,380,374,386,395,378,379,412,351,419,436,426,322,373,390,388,2,164,393,370,462,461,164,0,267,302,11,12,374,373,387,268,12,13,293,300,301,446,261,340,385,384,381,330,266,425,426,423,391,429,355,437,391,327,326,440,457,438,341,382,362,459,457,461,434,430,394,414,463,362,396,369,262,354,461,457,316,403,402,315,404,403,314,405,404,313,406,405,421,418,406,366,401,361,306,408,407,291,409,408,287,410,409,432,436,410,434,416,411,264,368,383,309,438,457,352,376,401,274,275,4,421,428,262,294,327,358,433,416,367,289,455,439,462,370,326,2,326,370,305,460,455,254,449,448,255,261,446,253,450,449,252,451,450,256,452,451,341,453,452,413,464,463,441,413,414,258,442,441,257,443,442,259,444,443,260,445,444,467,342,445,459,458,250,289,392,290,290,328,460,376,433,435,250,290,392,411,416,433,341,463,464,453,464,465,357,465,412,343,412,399,360,363,440,437,399,456,420,456,363,401,435,288,372,383,353,339,255,249,448,261,255,133,243,190,133,155,112,33,246,247,33,130,25,398,384,286,362,398,414,362,463,341,263,359,467,263,249,255,466,467,260,75,60,166,238,239,79,162,127,139,72,11,37,121,232,120,73,72,39,114,128,47,233,232,128,103,104,67,152,175,148,173,157,155,119,118,101,74,73,40,107,9,108,49,48,131,32,194,211,184,74,185,191,80,183,185,40,186,119,230,118,210,202,214,84,83,17,77,76,146,161,160,30,190,56,173,182,106,194,138,135,192,129,203,98,54,21,68,5,51,4,145,144,23,90,77,91,207,205,187,83,201,18,181,91,182,180,90,181,16,85,17,205,206,36,176,148,140,165,92,39,245,193,244,27,159,28,30,247,161,174,236,196,103,54,104,55,193,8,111,117,31,221,189,55,240,98,99,142,126,100,219,166,218,112,155,26,198,209,131,169,135,150,114,47,217,224,223,53,220,45,134,32,211,140,109,67,108,146,43,91,231,230,120,113,226,247,105,63,52,241,238,242,124,46,156,95,78,96,70,46,63,116,143,227,116,123,111,1,44,19,3,236,51,207,216,205,26,154,22,165,39,167,199,200,208,101,36,100,43,57,202,242,20,99,56,28,157,124,35,113,29,160,27,211,204,210,124,113,46,106,43,204,96,62,77,227,137,116,73,41,72,36,203,142,235,64,240,48,49,64,42,41,74,214,212,207,183,42,184,210,169,211,140,170,176,104,105,69,193,122,168,50,123,187,89,96,90,66,65,107,179,89,180,119,101,120,68,63,104,234,93,227,16,15,85,209,129,49,15,14,86,107,55,9,120,100,121,153,145,22,178,88,179,197,6,196,89,88,96,135,138,136,138,215,172,218,115,219,41,42,81,5,195,51,57,43,61,208,171,199,41,81,38,224,53,225,24,144,110,105,52,66,118,229,117,227,34,234,66,107,69,10,109,151,219,48,235,183,62,191,142,129,126,116,111,143,7,163,246,118,117,50,223,222,52,94,19,141,222,221,65,196,3,197,45,220,44,156,70,139,188,122,245,139,71,162,145,153,159,149,170,150,122,188,196,206,216,92,163,144,161,164,2,167,242,141,241,0,164,37,11,72,12,144,145,160,12,38,13,70,63,71,31,226,111,157,158,154,36,101,205,203,206,165,126,209,217,98,165,97,237,220,218,237,239,241,210,214,169,140,171,32,241,125,237,179,86,178,180,85,179,181,84,180,182,83,181,194,201,182,177,137,132,184,76,183,185,61,184,186,57,185,216,212,186,192,214,187,139,34,156,218,79,237,147,123,177,45,44,4,208,201,32,98,64,129,192,213,138,235,59,219,141,242,97,97,2,141,240,75,235,229,24,228,31,25,226,230,23,229,231,22,230,232,26,231,233,112,232,244,189,243,189,221,190,222,28,221,223,27,222,224,29,223,225,30,224,113,247,225,99,60,240,213,147,215,60,20,166,192,187,213,243,112,244,244,233,245,245,128,188,188,114,174,134,131,220,174,217,236,236,198,134,215,177,58,156,143,124,25,110,7,31,228,25,264,356,368,0,11,267,451,452,349,267,302,269,350,357,277,350,452,357,299,333,297,396,175,377,381,384,382,280,347,330,269,303,270,151,9,337,344,278,360,424,418,431,270,304,409,272,310,407,322,270,410,449,450,347,432,422,434,18,313,17,291,306,375,259,387,260,424,335,418,434,364,416,391,423,327,301,251,298,275,281,4,254,373,253,375,307,321,280,425,411,200,421,18,335,321,406,321,320,405,314,315,17,423,426,266,396,377,369,270,322,269,413,417,464,385,386,258,248,456,419,298,284,333,168,417,8,448,346,261,417,413,285,326,327,328,277,355,329,309,392,438,381,382,256,279,429,360,365,364,379,355,277,437,282,443,283,281,275,363,395,431,369,299,297,337,335,273,321,348,450,349,359,446,467,283,293,282,250,458,462,300,276,383,292,308,325,283,276,293,264,372,447,346,352,340,354,274,19,363,456,281,426,436,425,380,381,252,267,269,393,421,200,428,371,266,329,432,287,422,290,250,328,385,258,384,446,265,342,386,387,257,422,424,430,445,342,276,422,273,424,306,292,307,352,366,345,268,271,302,358,423,371,327,294,460,331,279,294,303,271,304,436,432,427,304,272,408,395,394,431,378,395,400,296,334,299,6,351,168,376,352,411,307,325,320,285,295,336,320,319,404,329,330,349,334,293,333,366,323,447,316,15,315,331,358,279,317,14,316,8,285,9,277,329,350,253,374,252,319,318,403,351,6,419,324,318,325,397,367,365,288,435,397,278,344,439,310,272,311,248,195,281,375,273,291,175,396,199,312,311,268,276,283,445,390,373,339,295,282,296,448,449,346,356,264,454,337,336,299,337,338,151,294,278,455,308,292,415,429,358,355,265,340,372,388,390,466,352,346,280,295,442,282,354,19,370,285,441,295,195,248,197,457,440,274,301,300,368,417,351,465,251,301,389,385,380,386,394,395,379,399,412,419,410,436,322,387,373,388,326,2,393,354,370,461,393,164,267,268,302,12,386,374,387,312,268,13,298,293,301,265,446,340,380,385,381,280,330,425,322,426,391,420,429,437,393,391,326,344,440,438,458,459,461,364,434,394,428,396,262,274,354,457,317,316,402,316,315,403,315,314,404,314,313,405,313,421,406,323,366,361,292,306,407,306,291,408,291,287,409,287,432,410,427,434,411,372,264,383,459,309,457,366,352,401,1,274,4,418,421,262,331,294,358,435,433,367,392,289,439,328,462,326,94,2,370,289,305,455,339,254,448,359,255,446,254,253,449,253,252,450,252,256,451,256,341,452,414,413,463,286,441,414,286,258,441,258,257,442,257,259,443,259,260,444,260,467,445,309,459,250,305,289,290,305,290,460,401,376,435,309,250,392,376,411,433,453,341,464,357,453,465,343,357,412,437,343,399,344,360,440,420,437,456,360,420,363,361,401,288,265,372,353,390,339,249,339,448,255];function LZ(e){const t=e.map((e=>e[0]));return t.push(e[e.length-1][1]),t}function WZ(e){const t=e.map((e=>e[0]));return t.push(e[e.length-1][1]),t}[127,234,132,58,172,150,149,148,152,377,378,379,397,288,361,454,356,70,63,105,66,107,336,296,334,293,300,168,6,195,4,98,97,2,326,327,33,160,158,133,153,144,362,385,387,263,373,380,57,40,37,0,267,270,287,321,314,17,84,91,78,81,13,311,308,402,14,178].map((e=>DZ[e])),[33,133,362,263,1,62,308,159,145,386,374,6,102,331,2,13,14,70,105,107,336,334,300,54,10,284,50,280,234,454,58,288,152].map((e=>DZ[e])),[33,133,362,263,1,78,308].map((e=>DZ[evar BZ,VZ={lips:WZ([[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]]),leftEye:WZ([[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]]),leftEyebrow:WZ([[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]]),leftIris:WZ([[474,475],[475,476],[476,477],[477,474]]),rightEye:WZ([[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]]),rightEyebrow:WZ([[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]]),rightIris:WZ([[469,470],[470,471],[471,472],[472,469]]),faceOval:WZ([[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]])},UZ=Object.entries(VZ).map((([e,t])=>t.map((t=>[t,e])))).flat(),GZ=(new Map(UZ),[61,146,91,181,84,17,314,405,321,375,291,185,40,39,37,0,267,269,270,409,78,95,88,178,87,14,317,402,318,324,308,191,80,81,82,13,312,311,310,415,76,77,90,180,85,16,315,404,320,307,306,184,74,73,72,11,302,303,304,408,62,96,89,179,86,15,316,403,319,325,292,183,42,41,38,12,268,271,272,407]),HZ=[33,7,163,144,145,153,154,155,133,246,161,160,159,158,157,173,130,25,110,24,23,22,26,112,243,247,30,29,27,28,56,190,226,31,228,229,230,231,232,233,244,113,225,224,223,222,221,189,35,124,46,53,52,65,143,111,117,118,119,120,121,128,245,156,70,63,105,66,107,55,193],jZ=[263,249,390,373,374,380,381,382,362,466,388,387,386,385,384,398,359,255,339,254,253,252,256,341,463,467,260,259,257,258,286,414,446,261,448,449,450,451,452,453,464,342,445,444,443,442,441,413,265,353,276,283,282,295,372,340,346,347,348,349,350,357,465,383,300,293,334,296,336,285,417];function qZ(e,t){var n,a,r,s,i,o,l,u,d;if(!BZ.drawLabels||0===(null==(n=BZ.faceLabels)?void 0:n.length))return;let p=BZ.faceLabels.slice();if(p=IZ(p,"[id]",e.id.toFixed(0)),e.score&&(p=IZ(p,"[score]",100*e.score)),e.gender&&(p=IZ(p,"[gender]",e.gender)),e.genderScore&&(p=IZ(p,"[genderScore]",100*e.genderScore)),e.age&&(p=IZ(p,"[age]",e.age)),e.distance&&(p=IZ(p,"[distance]",100*e.distance)),e.real&&(p=IZ(p,"[real]",100*e.real)),e.live&&(p=IZ(p,"[live]",100*e.live)),e.emotion&&e.emotion.length>0){const t=e.emotion.map((e=>`${Math.trunc(100*e.score)}% ${e.emotion}`));t.length>3&&(t.length=3),p=IZ(p,"[emotions]",t.join(" "))}(null==(r=null==(a=e.rotation)?void 0:a.angle)?void 0:r.roll)&&(p=IZ(p,"[roll]",kZ(e.rotation.angle.roll))),(null==(i=null==(s=e.rotation)?void 0:s.angle)?void 0:i.yaw)&&(p=IZ(p,"[yaw]",kZ(e.rotation.angle.yaw))),(null==(l=null==(o=e.rotation)?void 0:o.angle)?void 0:l.pitch)&&(p=IZ(p,"[pitch]",kZ(e.rotation.angle.pitch))),(null==(d=null==(u=e.rotation)?void 0:u.gaze)?void 0:d.bearing)&&(p=IZ(p,"[gaze]",kZ(e.rotation.gaze.bearing))),CZ(t,p,e.box[0],e.box[1],BZ)}function XZ(e,t){var n;if(BZ.drawGaze&&(null==(n=e.rotation)?void 0:n.angle)&&"undefined"!=typeof Path2D){t.strokeStyle="pink";const n=e.box[0]+e.box[2]/2-e.box[3]*kZ(e.rotation.angle.yaw)/90,a=e.box[1]+e.box[3]/2+e.box[2]*kZ(e.rotation.angle.pitch)/90,r=new Path2D(`\n      M ${e.box[0]+e.box[2]/2} ${e.box[1]}\n      C\n        ${n} ${e.box[1]},\n        ${n} ${e.box[1]+e.box[3]},\n        ${e.box[0]+e.box[2]/2} ${e.box[1]+e.box[3]}\n    `),s=new Path2D(`\n      M ${e.box[0]} ${e.box[1]+e.box[3]/2}\n      C \n        ${e.box[0]} ${a},\n        ${e.box[0]+e.box[2]} ${a},\n        ${e.box[0]+e.box[2]} ${e.box[1]+e.box[3]/2}\n    `);t.stroke(s),t.stroke(r)}}function KZ(e,t){var n;if(BZ.drawGaze&&(null==(n=e.rotation)?void 0:n.gaze.strength)&&e.rotation.gaze.bearing&&e.annotations.leftEyeIris&&e.annotations.rightEyeIris&&e.annotations.leftEyeIris[0]&&e.annotations.rightEyeIris[0]){t.strokeStyle="pink",t.fillStyle="pink";const n=[e.annotations.leftEyeIris[0][0]+Math.sin(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[3],e.annotations.leftEyeIris[0][1]+Math.cos(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[2]];$Z(t,[e.annotations.leftEyeIris[0][0],e.annotations.leftEyeIris[0][1]],[n[0],n[1]],4);const a=[e.annotations.rightEyeIris[0][0]+Math.sin(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[3],e.annotations.rightEyeIris[0][1]+Math.cos(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[2]];$Z(t,[e.annotations.rightEyeIris[0][0],e.annotations.rightEyeIris[0][1]],[a[0],a[1]],4)}}function YZ(e,t){if(BZ.drawPolygons&&e.mesh.length>=468){t.lineWidth=1;for(let n=0;n<zZ.length/3;n++)RZ(t,[zZ[3*n+0],zZ[3*n+1],zZ[3*n+2]].map((t=>e.mesh[t])),BZ);!function(e,t){var n,a,r,s;if((null==(n=e.annotations)?void 0:n.leftEyeIris)&&(null==(a=e.annotations)?void 0:a.leftEyeIris[0])){t.strokeStyle=BZ.useDepth?"rgba(255, 200, 255, 0.3)":BZ.color,t.beginPath();const n=Math.abs(e.annotations.leftEyeIris[3][0]-e.annotations.leftEyeIris[1][0])/2,a=Math.abs(e.annotations.leftEyeIris[4][1]-e.annotations.leftEyeIris[2][1])/2;t.ellipse(e.annotations.leftEyeIris[0][0],e.annotations.leftEyeIris[0][1],n,a,0,0,2*Math.PI),t.stroke(),BZ.fillPolygons&&(t.fillStyle=BZ.useDepth?"rgba(255, 255, 200, 0.3)":BZ.color,t.fill())}if((null==(r=e.annotations)?void 0:r.rightEyeIris)&&(null==(s=e.annotations)?void 0:s.rightEyeIris[0])){t.strokeStyle=BZ.useDepth?"rgba(255, 200, 255, 0.3)":BZ.color,t.beginPath();const n=Math.abs(e.annotations.rightEyeIris[3][0]-e.annotations.rightEyeIris[1][0])/2,a=Math.abs(e.annotations.rightEyeIris[4][1]-e.annotations.rightEyeIris[2][1])/2;t.ellipse(e.annotations.rightEyeIris[0][0],e.annotations.rightEyeIris[0][1],n,a,0,0,2*Math.PI),t.stroke(),BZ.fillPolygons&&(t.fillStyle=BZ.useDepth?"rgba(255, 255, 200, 0.3)":BZ.color,t.fill())}}(e,t)}}function ZZ(e,t){if(BZ.drawPoints)if((null==e?void 0:e.mesh.length)>=468)for(let n=0;n<e.mesh.length;n++)NZ(t,e.mesh[n][0],e.mesh[n][1],e.mesh[n][2],BZ),BZ.drawAttention&&(GZ.includes(n)&&NZ(t,e.mesh[n][0],e.mesh[n][1],e.mesh[n][2]+127,BZ),HZ.includes(n)&&NZ(t,e.mesh[n][0],e.mesh[n][1],e.mesh[n][2]-127,BZ),jZ.includes(n)&&NZ(t,e.mesh[n][0],e.mesh[n][1],e.mesh[n][2]-127,BZ));else for(const[n,a]of Object.entries((null==e?void 0:e.annotations)||{})){if(!(null==a?void 0:a[0]))continue;const e=a[0];NZ(t,e[0],e[1],0,BZ),BZ.drawLabels&&CZ(t,n,e[0],e[1],BZ)}}function JZ(e,t){BZ.drawBoxes&&TZ(t,e.box[0],e.box[1],e.box[2],e.box[3],BZ)}function QZ(e,t,n){if(BZ=FK(MZ,n),!t||!e)return;const a=vZ(e);if(a){a.font=BZ.font,a.strokeStyle=BZ.color,a.fillStyle=BZ.color;for(const e of t)JZ(e,a),qZ(e,a),e.mesh&&e.mesh.length>0&&(ZZ(e,a),YZ(e,a),XZ(e,a),KZ(e,a))}}function eJ(e,t,n){var a,r;const s=FK(MZ,n);if(!t||!e)return;const i=vZ(e);if(i){i.lineJoin="round";for(let e=0;e<t.length;e++){if(i.strokeStyle=s.color,i.fillStyle=s.color,i.lineWidth=s.lineWidth,i.font=s.font,s.drawBoxes&&t[e].box&&4===t[e].box.length&&(TZ(i,t[e].box[0],t[e].box[1],t[e].box[2],t[e].box[3],s),s.drawLabels&&(null==(a=s.bodyLabels)?void 0:a.length)>0)){let n=s.bodyLabels.slice();n=IZ(n,"[id]",t[e].id.toFixed(0)),n=IZ(n,"[score]",100*t[e].score),CZ(i,n,t[e].box[0],t[e].box[1],s)}if(s.drawPoints&&t[e].keypoints)for(let n=0;n<t[e].keypoints.length;n++)t[e].keypoints[n].score&&0!==t[e].keypoints[n].score&&(i.fillStyle=SZ(t[e].keypoints[n].position[2],s),NZ(i,t[e].keypoints[n].position[0],t[e].keypoints[n].position[1],0,s));if(s.drawLabels&&(null==(r=s.bodyPartLabels)?void 0:r.length)>0&&t[e].keypoints){i.font=s.font;for(const n of t[e].keypoints){if(!n.score||0===n.score)continue;let e=s.bodyPartLabels.slice();e=IZ(e,"[label]",n.part),e=IZ(e,"[score]",100*n.score),CZ(i,e,n.position[0],n.position[1],s)}}if(s.drawPolygons&&t[e].keypoints&&t[e].annotations)for(const n of Object.values(t[e].annotations))for(const e of n)EZ(i,e,s)}}}function tJ(e,t,n){var a,r;const s=FK(MZ,n);if(!t||!e)return;const i=vZ(e);if(i){i.lineJoin="round",i.font=s.font;for(const e of t){if(s.drawBoxes){if(i.strokeStyle=s.color,i.fillStyle=s.color,TZ(i,e.box[0],e.box[1],e.box[2],e.box[3],s),s.drawLabels&&(null==(a=s.handLabels)?void 0:a.length)>0){let t=s.handLabels.slice();t=IZ(t,"[id]",e.id.toFixed(0)),t=IZ(t,"[label]",e.label),t=IZ(t,"[score]",100*e.score),CZ(i,t,e.box[0],e.box[1],s)}i.stroke()}if(s.drawPoints&&e.keypoints&&e.keypoints.length>0)for(const t of e.keypoints)i.fillStyle=SZ(t[2],s),NZ(i,t[0],t[1],0,s);if(s.drawLabels&&e.annotations&&(null==(r=s.fingerLabels)?void 0:r.length)>0)for(const[t,n]of Object.entries(e.annotations)){let e=s.fingerLabels.slice();e=IZ(e,"[label]",t),CZ(i,e,n[n.length-1][0],n[n.length-1][1],s)}if(s.drawPolygons&&e.annotations){const t=e=>{if(e&&0!==e.length&&e[0])for(let t=0;t<e.length;t++){i.beginPath();const n=e[t][2]||0;i.strokeStyle=SZ(t*n,s),i.moveTo(e[t>0?t-1:0][0],e[t>0?t-1:0][1]),i.lineTo(e[t][0],e[t][1]),i.stroke()}};i.lineWidth=s.lineWidth,t(e.annotations.index),t(e.annotations.middle),t(e.annotations.ring),t(e.annotations.pinky),t(e.annotations.thumb)}}}}function nJ(e,t,n){var a;const r=FK(MZ,n);if(!t||!e)return;const s=vZ(e);if(s){s.lineJoin="round",s.font=r.font;for(const e of t)if(r.drawBoxes){if(s.strokeStyle=r.color,s.fillStyle=r.color,TZ(s,e.box[0],e.box[1],e.box[2],e.box[3],r),r.drawLabels&&(null==(a=r.objectLabels)?void 0:a.length)>0){let t=r.objectLabels.slice();t=IZ(t,"[id]",e.id.toFixed(0)),t=IZ(t,"[label]",e.label),t=IZ(t,"[score]",100*e.score),CZ(s,t,e.box[0],e.box[1],r)}s.stroke()}}}function aJ(e,t,n){var a;const r=FK(MZ,n);if(t&&e&&r.drawGestures&&(null==(a=r.gestureLabels)?void 0:a.length)>0){const n=vZ(e);if(!n)return;n.font=r.font,n.fillStyle=r.color;let a=1;for(let e=0;e<t.length;e++){const[s,i]=Object.entries(t[e]);if(i.length>1&&i[1].length>0){const e=s[1]>0?`#${s[1]}`:"";let t=r.gestureLabels.slice();t=IZ(t,"[where]",s[0]),t=IZ(t,"[who]",e),t=IZ(t,"[what]",i[1]),CZ(n,t,8,2+a*r.lineHeight,r),a+=1}}}}var rJ={face:"face\n    confidence: [score]%\n    [gender] [genderScore]%\n    age: [age] years\n    distance: [distance]cm\n    real: [real]%\n    live: [live]%\n    [emotions]\n    roll: [roll]° yaw:[yaw]° pitch:[pitch]°\n    gaze: [gaze]°",body:"body [score]%",bodyPart:"[label] [score]%",object:"[label] [score]%",hand:"[label] [score]%",finger:"[label]",gesture:"[where] [who]: [what]"},sJ=0;function iJ(e,t,n){const a=FK(MZ,n);if(!t||!e)return;const r=vZ(e);if(r){r.lineJoin="round",r.font=a.font;for(let e=0;e<t.length;e++)if(a.drawBoxes){if(r.strokeStyle=a.color,r.fillStyle=a.color,TZ(r,t[e].box[0],t[e].box[1],t[e].box[2],t[e].box[3],a),a.drawLabels){const n=`person #${e}`;a.shadowColor&&""!==a.shadowColor&&(r.fillStyle=a.shadowColor,r.fillText(n,t[e].box[0]+3,1+t[e].box[1]+a.lineHeight,t[e].box[2])),r.fillStyle=a.labelColor,r.fillText(n,t[e].box[0]+2,0+t[e].box[1]+a.lineHeight,t[e].box[2])}r.stroke()}}}function oJ(e,t){if(!e||!t)return;const n=vZ(t);n&&n.drawImage(e,0,0)}async function lJ(e,t){e&&t&&rY.browser&&await wf.toPixels(e,t)}async function uJ(e,t,n){if(!(null==t?void 0:t.performance)||!e)return null;const a=$K(),r=FK(MZ,n),s=Promise.all([QZ(e,t.face,r),eJ(e,t.body,r),tJ(e,t.hand,r),nJ(e,t.object,r),aJ(e,t.gesture,r)]);return sJ=rY.perfadd?sJ+Math.round($K()-a):Math.round($K()-a),t.performance.draw=sJ,s}function dJ(){MZ.faceLabels=rJ.face,MZ.bodyLabels=rJ.body,MZ.bodyPartLabels=rJ.bodyPart,MZ.handLabels=rJ.hand,MZ.fingerLabels=rJ.finger,MZ.objectLabels=rJ.object,MZ.gestureLabels=rJ.gesture}var pJ={};h(pJ,{connected:()=>mJ,kpt:()=>fJ});var hJ,cJ,fJ=["nose","leftEyeInside","leftEye","leftEyeOutside","rightEyeInside","rightEye","rightEyeOutside","leftEar","rightEar","leftMouth","rightMouth","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftPinky","rightPinky","leftIndex","rightIndex","leftThumb","rightThumb","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle","leftHeel","rightHeel","leftFoot","rightFoot","bodyCenter","bodyTop","leftPalm","leftHand","rightPalm","rightHand"],mJ={shoulders:["leftShoulder","rightShoulder"],hips:["rightHip","leftHip"],mouth:["leftMouth","rightMouth"],leftLegUpper:["leftHip","leftKnee"],leftLegLower:["leftKnee","leftAnkle"],leftFoot:["leftAnkle","leftHeel","leftFoot"],leftTorso:["leftShoulder","leftHip"],leftArmUpper:["leftShoulder","leftElbow"],leftArmLower:["leftElbow","leftWrist"],leftHand:["leftWrist","leftPalm"],leftHandPinky:["leftPalm","leftPinky"],leftHandIndex:["leftPalm","leftIndex"],leftHandThumb:["leftPalm","leftThumb"],leftEyeOutline:["leftEyeInside","leftEyeOutside"],rightLegUpper:["rightHip","rightKnee"],rightLegLower:["rightKnee","rightAnkle"],rightFoot:["rightAnkle","rightHeel","rightFoot"],rightTorso:["rightShoulder","rightHip"],rightArmUpper:["rightShoulder","rightElbow"],rightArmLower:["rightElbow","rightWrist"],rightHand:["rightWrist","rightPalm"],rightHandPinky:["rightPalm","rightPinky"],rightHandIndex:["rightPalm","rightIndex"],rightHandThumb:["rightPalm","rightThumb"],rightEyeOutline:["rightEyeInside","rightEyeOutside"]},gJ=224,yJ=[8,16,32,32,32];var xJ,AJ=[5,5];function bJ(e,t=[1,1]){const n=[e.map((e=>e[0])),e.map((e=>e[1]))],a=[Math.min(...n[0]),Math.min(...n[1])],r=[Math.max(...n[0]),Math.max(...n[1])],s=[a[0],a[1],r[0]-a[0],r[1]-a[1]];return{box:s,boxRaw:[s[0]/t[0],s[1]/t[1],s[2]/t[0],s[3]/t[1]]}}function wJ(e,t=[1,1]){const n=[e.map((e=>e[0])),e.map((e=>e[1]))],a=[Math.min(...n[0]),Math.min(...n[1])],r=[Math.max(...n[0]),Math.max(...n[1])],s=[(a[0]+r[0])/2,(a[1]+r[1])/2],i=Math.max(s[0]-a[0],s[1]-a[1],-s[0]+r[0],-s[1]+r[1]),o=[Math.trunc(s[0]-i),Math.trunc(s[1]-i),Math.trunc(2*i),Math.trunc(2*i)];return{box:o,boxRaw:[o[0]/t[0],o[1]/t[1],o[2]/t[0],o[3]/t[1]]}}function vJ(e,t){const n=[e[2]*t,e[3]*t];return[e[0]-(n[0]-e[2])/2,e[1]-(n[1]-e[3])/2,n[0],n[1]]}var kJ=256,IJ=Number.MAX_SAFE_INTEGER,SJ={landmarks:["ld_3d","activation_segmentation","activation_heatmap","world_3d","output_poseflag"],detector:[]},CJ=[],NJ=[[0,0],[0,0],[0,0],[0,0]],TJ=0,RJ=e=>1-1/(1+Math.exp(e));function EJ(e,t,n){var a,r;const s={};if(!(null==(a=null==e?void 0:e.shape)?void 0:a[1])||!(null==(r=null==e?void 0:e.shape)?void 0:r[2]))return e;let i;if(n&&(s.cropped=Rc.cropAndResize(e,[n],[0],[e.shape[1],e.shape[2]])),e.shape[1]!==e.shape[2]){const n=[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],a=[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0];NJ=[[0,0],n,a,[0,0]],s.pad=Rd(s.cropped||e,NJ),s.resize=Rc.resizeBilinear(s.pad,[t,t]),i=Eo(s.resize,yZ.tf255)}else e.shape[1]!==t?(s.resize=Rc.resizeBilinear(s.cropped||e,[t,t]),i=Eo(s.resize,yZ.tf255)):i=Eo(s.cropped||e,yZ.tf255);return Object.keys(s).forEach((e=>fi(s[e]))),i}async function $J(e,t,n){if(!(null==xJ?void 0:xJ.executor))return null;const a={};[a.ld,a.segmentation,a.heatmap,a.world,a.poseflag]=null==xJ?void 0:xJ.execute(e,SJ.landmarks);const r=(await a.poseflag.data())[0],s=await a.ld.data(),i=await a.world.data();Object.keys(a).forEach((e=>fi(a[e])));const o=[];for(let e=0;e<s.length/5;e++){const t=RJ(s[5*e+3]),a=RJ(s[5*e+4]),l=Math.trunc(100*t*a*r)/100,u=[s[5*e+0]/kJ,s[5*e+1]/kJ,s[5*e+2]+0],d=[Math.trunc(n[0]*u[0]),Math.trunc(n[1]*u[1]),u[2]],p=[i[5*e+0],i[5*e+1],i[5*e+2]+0];o.push({part:fJ[e],positionRaw:u,position:d,distance:p,score:l})}if(r<(t.body.minConfidence||0))return null;!function(e){const t=e.find((e=>"leftPalm"===e.part)),n=e.find((e=>"leftWrist"===e.part)),a=e.find((e=>"leftIndex"===e.part));t.position[2]=((n.position[2]||0)+(a.position[2]||0))/2;const r=e.find((e=>"rightPalm"===e.part)),s=e.find((e=>"rightWrist"===e.part)),i=e.find((e=>"rightIndex"===e.part));r.position[2]=((s.position[2]||0)+(i.position[2]||0))/2}(o);const l=function(e,t,n){for(const n of e)n.position=[Math.trunc(n.position[0]*(t[0]+NJ[2][0]+NJ[2][1])/t[0]-NJ[2][0]),Math.trunc(n.position[1]*(t[1]+NJ[1][0]+NJ[1][1])/t[1]-NJ[1][0]),n.position[2]],n.positionRaw=[n.position[0]/t[0],n.position[1]/t[1],2*n.position[2]/(t[0]+t[1])];return e}(o,n),u=bJ(l.map((e=>e.position)),[n[0],n[1]]),d={};for(const[e,t]of Object.entries(mJ)){const n=[];for(let e=0;e<t.length-1;e++){const a=l.find((n=>n.part===t[e])),r=l.find((n=>n.part===t[e+1]));a&&r&&n.push([a.position,r.position])}d[e]=n}return{id:0,score:Math.trunc(100*r)/100,box:u.box,boxRaw:u.boxRaw,keypoints:l,annotations:d}}async function MJ(e,t){var n,a,r;const s=[e.shape[2]||0,e.shape[1]||0],i=(t.body.skipTime||0)>$K()-TJ,o=IJ<(t.body.skipFrames||0);if(t.skipAllowed&&i&&o&&null!==CJ)IJ++;else{let i=[];if(null==(a=null==(n=t.body)?void 0:n.detector)?void 0:a.enabled){const n=EJ(e,224);i=await async function(e,t,n){const a={};a.res=null==hJ?void 0:hJ.execute(e,["Identity"]),a.logitsRaw=hl(a.res,[0,0,0],[1,-1,1]),a.boxesRaw=hl(a.res,[0,0,1],[1,-1,-1]),a.logits=Bp(a.logitsRaw),a.boxes=Bp(a.boxesRaw);const r=await async function(e,t,n,a){var r,s;const i=[],o={};o.boxes=function(e,t){return ci((()=>{const n=zp(e,12,1);let a=Bp(n[0]),r=Bp(n[1]),s=Bp(n[2]),i=Bp(n[3]);a=To(Eo(a,gJ),t.x),r=To(Eo(r,gJ),t.y),s=$o(Eo(s,gJ),AJ[0]),i=$o(Eo(i,gJ),AJ[1]);const o=td(a,Eo(s,2)),l=td(r,Eo(i,2)),u=To(o,s),d=To(l,i);return Vp([o,l,u,d],1)}))}(e,cJ),o.scores=pl(t),o.nms=await Rc.nonMaxSuppressionAsync(o.boxes,o.scores,1,(null==(r=n.body.detector)?void 0:r.minConfidence)||.1,(null==(s=n.body.detector)?void 0:s.iouThreshold)||.1);const l=await o.nms.data(),u=await o.scores.data(),d=await o.boxes.array();for(const e of Array.from(l)){const t=u[e],n=d[e],r={score:t,boxRaw:n,box:[Math.round(n[0]*a[0]),Math.round(n[1]*a[1]),Math.round(n[2]*a[0]),Math.round(n[3]*a[1])]};i.push(r)}return Object.keys(o).forEach((e=>fi(o[e]))),i}(a.boxes,a.logits,t,n);return Object.keys(a).forEach((e=>fi(a[e]))),r}(n,t,s),fi(n)}else i=[{box:[0,0,0,0],boxRaw:[0,0,1,1],score:0}];for(let n=0;n<i.length;n++){const a=EJ(e,256,null==(r=i[n])?void 0:r.boxRaw);CJ.length=0;const o=await $J(a,t,s);fi(a),o&&(o.id=n,CJ.push(o))}TJ=$K(),IJ=0}return CJ}var FJ,_J=[{class:1,label:"person"},{class:2,label:"bicycle"},{class:3,label:"car"},{class:4,label:"motorcycle"},{class:5,label:"airplane"},{class:6,label:"bus"},{class:7,label:"train"},{class:8,label:"truck"},{class:9,label:"boat"},{class:10,label:"traffic light"},{class:11,label:"fire hydrant"},{class:12,label:"stop sign"},{class:13,label:"parking meter"},{class:14,label:"bench"},{class:15,label:"bird"},{class:16,label:"cat"},{class:17,label:"dog"},{class:18,label:"horse"},{class:19,label:"sheep"},{class:20,label:"cow"},{class:21,label:"elephant"},{class:22,label:"bear"},{class:23,label:"zebra"},{class:24,label:"giraffe"},{class:25,label:"backpack"},{class:26,label:"umbrella"},{class:27,label:"handbag"},{class:28,label:"tie"},{class:29,label:"suitcase"},{class:30,label:"frisbee"},{class:31,label:"skis"},{class:32,label:"snowboard"},{class:33,label:"sports ball"},{class:34,label:"kite"},{class:35,label:"baseball bat"},{class:36,label:"baseball glove"},{class:37,label:"skateboard"},{class:38,label:"surfboard"},{class:39,label:"tennis racket"},{class:40,label:"bottle"},{class:41,label:"wine glass"},{class:42,label:"cup"},{class:43,label:"fork"},{class:44,label:"knife"},{class:45,label:"spoon"},{class:46,label:"bowl"},{class:47,label:"banana"},{class:48,label:"apple"},{class:49,label:"sandwich"},{class:50,label:"orange"},{class:51,label:"broccoli"},{class:52,label:"carrot"},{class:53,label:"hot dog"},{class:54,label:"pizza"},{class:55,label:"donut"},{class:56,label:"cake"},{class:57,label:"chair"},{class:58,label:"couch"},{class:59,label:"potted plant"},{class:60,label:"bed"},{class:61,label:"dining table"},{class:62,label:"toilet"},{class:63,label:"tv"},{class:64,label:"laptop"},{class:65,label:"mouse"},{class:66,label:"remote"},{class:67,label:"keyboard"},{class:68,label:"cell phone"},{class:69,label:"microwave"},{class:70,label:"oven"},{class:71,label:"toaster"},{class:72,label:"sink"},{class:73,label:"refrigerator"},{class:74,label:"book"},{class:75,label:"clock"},{class:76,label:"vase"},{class:77,label:"scissors"},{class:78,label:"teddy bear"},{class:79,label:"hair drier"},{class:80,label:"toothbrush"}],PJ=0,OJ=[],DJ=0,zJ=Number.MAX_SAFE_INTEGER;async function LJ(e,t){if(!(null==FJ?void 0:FJ.executor))return[];const n=(t.object.skipTime||0)>$K()-DJ,a=zJ<(t.object.skipFrames||0);return t.skipAllowed&&n&&a&&OJ.length>0?(zJ++,OJ):(zJ=0,new Promise((async n=>{const a=[e.shape[2]||0,e.shape[1]||0],r=Rc.resizeBilinear(e,[PJ,PJ]),s=t.object.enabled?null==FJ?void 0:FJ.execute(r,["tower_0/detections"]):null;DJ=$K(),fi(r);const i=await async function(e,t,n){if(!e)return[];const a={},r=[],s=await e.array();a.squeeze=Bp(e);const i=zp(a.squeeze,6,1);a.stack=Vp([i[1],i[0],i[3],i[2]],1),a.boxes=Bp(a.stack),a.scores=Bp(i[4]),a.classes=Bp(i[5]),fi([e,...i]),a.nms=await Rc.nonMaxSuppressionAsync(a.boxes,a.scores,n.object.maxDetected||0,n.object.iouThreshold,n.object.minConfidence||0);const o=await a.nms.data();let l=0;for(const e of Array.from(o)){const n=Math.trunc(100*s[0][e][4])/100,a=s[0][e][5];if(Number.isNaN(a))continue;const i=_J[a].label,[o,u]=[s[0][e][0]/PJ,s[0][e][1]/PJ],d=[o,u,s[0][e][2]/PJ-o,s[0][e][3]/PJ-u],p=[Math.trunc(d[0]*t[0]),Math.trunc(d[1]*t[1]),Math.trunc(d[2]*t[0]),Math.trunc(d[3]*t[1])];r.push({id:l++,score:n,class:a,label:i,box:p,boxRaw:d})}return Object.keys(a).forEach((e=>fi(a[e]))),r}(s,a,t);OJ=i,n(i)})))}var WJ={};h(WJ,{connected:()=>UJ,kpt:()=>VJ});var BJ,VJ=["head","neck","rightShoulder","rightElbow","rightWrist","chest","leftShoulder","leftElbow","leftWrist","bodyCenter","rightHip","rightKnee","rightAnkle","leftHip","leftKnee","leftAnkle"],UJ={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]},GJ=0,HJ={id:0,keypoints:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,annotations:{}},jJ=Number.MAX_SAFE_INTEGER;async function qJ(e,t){const[n,a]=e.shape,r=il(e,[a*n]),s=mu(r,0),i=(await s.data())[0];if(i>t){const e=zo(r,0),t=wd(e,n),a=(await t.data())[0],o=Eo(e,n),l=(await o.data())[0];return fi([r,s,e,t,o]),[a,l,i]}return fi([r,s]),[0,0,i]}async function XJ(e,t){if(!(null==BJ?void 0:BJ.executor)||!(null==BJ?void 0:BJ.inputs[0].shape))return[];const n=(t.body.skipTime||0)>$K()-GJ,a=jJ<(t.body.skipFrames||0);return t.skipAllowed&&n&&a&&Object.keys(HJ.keypoints).length>0?(jJ++,[HJ]):(jJ=0,new Promise((async n=>{const a=ci((()=>{var t,n;const a=Rc.resizeBilinear(e,[(null==(t=null==BJ?void 0:BJ.inputs[0].shape)?void 0:t[2])||0,(null==(n=null==BJ?void 0:BJ.inputs[0].shape)?void 0:n[1])||0],!1),r=$o(a,yZ.tf2);return td(r,yZ.tf1)}));let r;if(t.body.enabled&&(r=null==BJ?void 0:BJ.execute(a)),GJ=$K(),fi(a),r){HJ.keypoints.length=0;const n=Bp(r);fi(r);const a=oh(n,2);fi(n);for(let n=0;n<a.length;n++){const[r,s,i]=await qJ(a[n],t.body.minConfidence);i>(t.body.minConfidence||0)&&HJ.keypoints.push({score:Math.round(100*i)/100,part:VJ[n],positionRaw:[r/BJ.inputs[0].shape[2],s/BJ.inputs[0].shape[1]],position:[Math.round(e.shape[2]*r/BJ.inputs[0].shape[2]),Math.round(e.shape[1]*s/BJ.inputs[0].shape[1])]})}a.forEach((e=>fi(e)))}HJ.score=HJ.keypoints.reduce(((e,t)=>t.score>e?t.score:e),0);const s=HJ.keypoints.map((e=>e.position[0])),i=HJ.keypoints.map((e=>e.position[1]));HJ.box=[Math.min(...s),Math.min(...i),Math.max(...s)-Math.min(...s),Math.max(...i)-Math.min(...i)];const o=HJ.keypoints.map((e=>e.positionRaw[0])),l=HJ.keypoints.map((e=>e.positionRaw[1]));HJ.boxRaw=[Math.min(...o),Math.min(...l),Math.max(...o)-Math.min(...o),Math.max(...l)-Math.min(...l)];for(const[e,n]of Object.entries(UJ)){const a=[];for(let e=0;e<n.length-1;e++){const r=HJ.keypoints.find((t=>t.part===n[e])),s=HJ.keypoints.find((t=>t.part===n[e+1]));r&&s&&r.score>(t.body.minConfidence||0)&&s.score>(t.body.minConfidence||0)&&a.push([r.position,s.position])}HJ.annotations[e]=a}n([HJ])})))}var KJ=e=>[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])],YJ=e=>[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2,1],ZJ=(e,t)=>e?[Math.trunc(Math.max(0,e.startPoint[0])),Math.trunc(Math.max(0,e.startPoint[1])),Math.trunc(Math.min(t.shape[2]||0,e.endPoint[0])-Math.max(0,e.startPoint[0])),Math.trunc(Math.min(t.shape[1]||0,e.endPoint[1])-Math.max(0,e.startPoint[1]))]:[0,0,0,0],JJ=(e,t)=>e?[e.startPoint[0]/(t.shape[2]||0),e.startPoint[1]/(t.shape[1]||0),(e.endPoint[0]-e.startPoint[0])/(t.shape[2]||0),(e.endPoint[1]-e.startPoint[1])/(t.shape[1]||0)]:[0,0,0,0],QJ=(e,t,n)=>({startPoint:[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],endPoint:[e.endPoint[0]*t[0],e.endPoint[1]*t[1]],landmarks:e.landmarks.map((e=>[(e[0]+n[0])*t[0],(e[1]+n[1])*t[1]])),confidence:e.confidence}),eQ=(e,t,n)=>{const a=t.shape[1],r=t.shape[2],s=[e.startPoint[1]/a,e.startPoint[0]/r,e.endPoint[1]/a,e.endPoint[0]/r],i=Rc.cropAndResize(t,[s],[0],n),o=Eo(i,yZ.tf255);return fi(i),o},tQ=(e,t)=>{const n=YJ(e),a=KJ(e),r=[t*a[0]/2,t*a[1]/2];return{startPoint:[n[0]-r[0],n[1]-r[1]],endPoint:[n[0]+r[0],n[1]+r[1]],landmarks:e.landmarks,confidence:e.confidence,size:a}},nQ=e=>{const t=YJ(e),n=KJ(e),a=Math.max(...n)/2;return{startPoint:[Math.round(t[0]-a),Math.round(t[1]-a)],endPoint:[Math.round(t[0]+a),Math.round(t[1]+a)],landmarks:e.landmarks,confidence:e.confidence,size:[Math.round(n[0]),Math.round(n[1])]}},aQ=[[1,0,0],[0,1,0],[0,0,1]],rQ=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]],sQ=(e,t)=>{let n=0;for(let a=0;a<e.length;a++)n+=e[a]*t[a];return n},iQ=(e,t)=>{const n=[];for(let a=0;a<e.length;a++)n.push(e[a][t]);return n},oQ=(e,t)=>{const n=[],a=e.length;for(let r=0;r<a;r++){n.push([]);for(let s=0;s<a;s++)n[r].push(sQ(e[r],iQ(t,s)))}return n},lQ=(e,t)=>{const n=Math.cos(e),a=Math.sin(e),r=[[n,-a,0],[a,n,0],[0,0,1]],s=rQ(t[0],t[1]),i=oQ(s,r),o=rQ(-t[0],-t[1]);return oQ(i,o)},uQ=(e,t)=>[sQ(e,t[0]),sQ(e,t[1])];function dQ(e,t,n,a,r){const s=KJ(t),i=e.map((e=>[s[0]/r*(e[0]-r/2),s[1]/r*(e[1]-r/2),e[2]||0])),o=n&&0!==n&&Math.abs(n)>.2,l=o?lQ(n,[0,0]):aQ,u=o?i.map((e=>[...uQ(e,l),e[2]])):i,d=o?(e=>{const t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],n=[e[0][2],e[1][2]],a=[-sQ(t[0],n),-sQ(t[1],n)];return[t[0].concat(a[0]),t[1].concat(a[1]),[0,0,1]]})(a):aQ,p=YJ(t),h=[sQ(p,d[0]),sQ(p,d[1])];return u.map((e=>[Math.trunc(e[0]+h[0]),Math.trunc(e[1]+h[1]),Math.trunc(e[2]||0)]))}function pQ(e,t,n,a){const r=t.landmarks.length>=_Z.count?_Z.symmetryLine:PZ.symmetryLine;let s,i=0,o=aQ;if(e&&rY.kernels.includes("rotatewithoffset"))if(i=((e,t)=>{return(n=Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]))-2*Math.PI*Math.floor((n+Math.PI)/(2*Math.PI));var n})(t.landmarks[r[0]],t.landmarks[r[1]]),i&&0!==i&&Math.abs(i)>.2){const e=YJ(t),r=[e[0]/n.shape[2],e[1]/n.shape[1]],l=Rc.rotateWithOffset(n,i,0,[r[0],r[1]]);o=lQ(-i,e),s=eQ(t,l,[a,a]),fi(l)}else s=eQ(t,n,[a,a]);else s=eQ(t,n,[a,a]);return[i,o,s]}var hQ,cQ,fQ=(e,t)=>{const n=(e=>{const t=e.map((e=>e[0])),n=e.map((e=>e[1]));return[Math.min(...t)+(Math.max(...t)-Math.min(...t))/2,Math.min(...n)+(Math.max(...n)-Math.min(...n))/2]})(e),a=KJ(t);return{startPoint:[n[0]-a[0]/2,n[1]-a[1]/2],endPoint:[n[0]+a[0]/2,n[1]+a[1]/2]}},mQ=null,gQ=0,yQ=null;var xQ=0,AQ=FZ.leftEyeLower0,bQ=FZ.rightEyeLower0,wQ={leftBounds:[AQ[0],AQ[AQ.length-1]],rightBounds:[bQ[0],bQ[bQ.length-1]]},vQ=3,kQ=4,IQ=71,SQ=76;function CQ(e,t,n,a){for(let r=0;r<OZ.length;r++){const{key:s,indices:i}=OZ[r],o=FZ[`${n}${s}`];if(!a||a.includes(s))for(let n=0;n<i.length;n++){const a=i[n];e[o[n]]=[t[a][0],t[a][1],(t[a][2]+e[o[n]][2])/2]}}}var NQ=(e,t,n,a,r,s=!1,i=2.3)=>{const o=nQ(tQ((e=>{const t=e.map((e=>e[0])),n=e.map((e=>e[1]));return{startPoint:[Math.min(...t),Math.min(...n)],endPoint:[Math.max(...t),Math.max(...n)],landmarks:e}})([e[n],e[a]]),i)),l=KJ(o);let u=Rc.cropAndResize(t,[[o.startPoint[1]/r,o.startPoint[0]/r,o.endPoint[1]/r,o.endPoint[0]/r]],[0],[xQ,xQ]);if(s&&rY.kernels.includes("flipleftright")){const e=Rc.flipLeftRight(u);fi(u),u=e}return{box:o,boxSize:l,crop:u}},TQ=(e,t,n,a=!1)=>{const r=[];for(let s=0;s<SQ;s++){const i=e[3*s],o=e[3*s+1],l=e[3*s+2];r.push([(a?1-i/xQ:i/xQ)*n[0]+t.startPoint[0],o/xQ*n[1]+t.startPoint[1],l])}return{rawCoords:r,iris:r.slice(IQ)}},RQ=(e,t,n)=>{const a=e[FZ[`${n}EyeUpper0`][vQ]][2],r=e[FZ[`${n}EyeLower0`][kQ]][2],s=(a+r)/2;return t.map(((e,t)=>{let n=s;return 2===t?n=a:4===t&&(n=r),[e[0],e[1],n]}))};async function EQ(e,t,n,a){var r,s;if(!(null==cQ?void 0:cQ.executor))return e;const{box:i,boxSize:o,crop:l}=NQ(e,t,wQ.leftBounds[0],wQ.leftBounds[1],n,!0,(null==(r=a.face.iris)?void 0:r.scale)||2.3),{box:u,boxSize:d,crop:p}=NQ(e,t,wQ.rightBounds[0],wQ.rightBounds[1],n,!0,(null==(s=a.face.iris)?void 0:s.scale)||2.3),h=ul([l,p]);fi(l),fi(p);const c=cQ.execute(h);fi(h);const f=await c.data();fi(c);const m=f.slice(0,3*SQ),{rawCoords:g,iris:y}=TQ(m,i,o,!0),x=f.slice(3*SQ),{rawCoords:A,iris:b}=TQ(x,u,d,!1),w=(e=>e[wQ.leftBounds[0]][2]-e[wQ.rightBounds[0]][2])(e);Math.abs(w)<30?(CQ(e,g,"left",null),CQ(e,A,"right",null)):w<1?CQ(e,g,"left",["EyeUpper0","EyeLower0"]):CQ(e,A,"right",["EyeUpper0","EyeLower0"]);const v=RQ(e,y,"left"),k=RQ(e,b,"right");return e.concat(v).concat(k)}async function $Q(e,t){var n,a,r,s,i,o,l,u,d,p;const h={lips:await(null==(a=null==(n=t.filter((e=>160===e.size)))?void 0:n[0])?void 0:a.data()),irisL:await(null==(s=null==(r=t.filter((e=>10===e.size)))?void 0:r[0])?void 0:s.data()),eyeL:await(null==(o=null==(i=t.filter((e=>142===e.size)))?void 0:i[0])?void 0:o.data()),irisR:await(null==(u=null==(l=t.filter((e=>10===e.size)))?void 0:l[1])?void 0:u.data()),eyeR:await(null==(p=null==(d=t.filter((e=>142===e.size)))?void 0:d[1])?void 0:p.data())};for(const t of Object.values(h))if(!t)return e;const c=HZ.reduce(((t,n)=>t+e[n][2]),0)/HZ.length;for(let t=0;t<h.irisL.length/2;t++)e.push([h.irisL[2*t+0],h.irisL[2*t+1],c]);const f=jZ.reduce(((t,n)=>t+e[n][2]),0)/jZ.length;for(let t=0;t<h.irisR.length/2;t++)e.push([h.irisR[2*t+0],h.irisR[2*t+1],f]);for(let t=0;t<h.eyeL.length/2;t++)e[HZ[t]]=[h.eyeL[2*t+0],h.eyeL[2*t+1],e[HZ[t]][2]];for(let t=0;t<h.eyeR.length/2;t++)e[jZ[t]]=[h.eyeR[2*t+0],h.eyeR[2*t+1],e[jZ[t]][2]];for(let t=0;t<h.lips.length/2;t++)e[GZ[t]]=[h.lips[2*t+0],h.lips[2*t+1],e[GZ[t]][2]];return e}var MQ,FQ,_Q={boxes:[],skipped:Number.MAX_SAFE_INTEGER,timestamp:0},PQ=null,OQ=0,DQ=zZ,zQ=DZ,LQ=[],WQ=[],BQ=0,VQ=0,UQ=Number.MAX_SAFE_INTEGER,GQ=!1;async function HQ(e,t,n,a){var r,s;if(!MQ)return[];const i=UQ<((null==(r=t.face.emotion)?void 0:r.skipFrames)||0),o=((null==(s=t.face.emotion)?void 0:s.skipTime)||0)>$K()-VQ;return t.skipAllowed&&o&&i&&BQ===a&&WQ[n]&&WQ[n].length>0?(UQ++,WQ[n]):(UQ=0,new Promise((async r=>{var s,i,o;const l=[];if(null==(s=t.face.emotion)?void 0:s.enabled){const n={},a=(null==MQ?void 0:MQ.inputs[0].shape)?MQ.inputs[0].shape[2]:0;if((null==(i=t.face.emotion)?void 0:i.crop)>0){const r=null==(o=t.face.emotion)?void 0:o.crop,s=[[r,r,1-r,1-r]];n.resize=Rc.cropAndResize(e,s,[0],[a,a])}else n.resize=Rc.resizeBilinear(e,[a,a],!1);GQ?(n.mul=$o(n.resize,255),n.normalize=td(n.mul,[103.939,116.779,123.68]),n.emotion=null==MQ?void 0:MQ.execute(n.normalize)):(n.channels=$o(n.resize,yZ.rgb),n.grayscale=wu(n.channels,3,!0),n.grayscaleSub=td(n.grayscale,yZ.tf05),n.grayscaleMul=$o(n.grayscaleSub,yZ.tf2),n.emotion=null==MQ?void 0:MQ.execute(n.grayscaleMul)),VQ=$K();const r=await n.emotion.data();for(let e=0;e<r.length;e++)r[e]>(t.face.emotion.minConfidence||0)&&l.push({score:Math.min(.99,Math.trunc(100*r[e])/100),emotion:LQ[e]});l.sort(((e,t)=>t.score-e.score)),Object.keys(n).forEach((e=>fi(n[e])))}WQ[n]=l,BQ=a,r(l)})))}var jQ=[],qQ=0,XQ=0,KQ=Number.MAX_SAFE_INTEGER;async function YQ(e,t,n,a){var r,s,i,o;const l={age:0,gender:"unknown",genderScore:0,descriptor:[]};if(!(null==FQ?void 0:FQ.executor))return l;const u=KQ<((null==(r=t.face.description)?void 0:r.skipFrames)||0),d=((null==(s=t.face.description)?void 0:s.skipTime)||0)>$K()-qQ;return t.skipAllowed&&u&&d&&XQ===a&&(null==(i=null==jQ?void 0:jQ[n])?void 0:i.age)>0&&(null==(o=null==jQ?void 0:jQ[n])?void 0:o.genderScore)>0?(KQ++,jQ[n]):(KQ=0,new Promise((async r=>{var s;if(null==(s=t.face.description)?void 0:s.enabled){const n=function(e,t){var n,a;const r=e.image||e.tensor||e;if(!(null==FQ?void 0:FQ.inputs[0].shape))return r;let s;if((null==(n=t.face.description)?void 0:n.crop)>0){const e=null==(a=t.face.description)?void 0:a.crop,n=[[e,e,1-e,1-e]];s=Rc.cropAndResize(r,n,[0],[FQ.inputs[0].shape[2],FQ.inputs[0].shape[1]])}else s=Rc.resizeBilinear(r,[FQ.inputs[0].shape[2],FQ.inputs[0].shape[1]],!1);const i=$o(s,yZ.tf255);return fi(s),i}(e,t),a=null==FQ?void 0:FQ.execute(n);qQ=$K(),fi(n);const r=a.find((e=>1===e.shape[1])),s=await r.data(),i=Math.trunc(200*Math.abs(s[0]-.5))/100;i>(t.face.description.minConfidence||0)&&(l.gender=s[0]<=.5?"female":"male",l.genderScore=Math.min(.99,i));const o=zo(a.find((e=>100===e.shape[1])),1),u=(await o.data())[0];fi(o);const d=a.find((e=>100===e.shape[1])),p=await d.data();l.age=Math.round(p[u-1]>p[u+1]?10*u-100*p[u-1]:10*u+100*p[u+1])/10,(Number.isNaN(s[0])||Number.isNaN(p[0]))&&EK("faceres error:",{model:FQ,result:a});const h=a.find((e=>1024===e.shape[1])),c=h?await h.data():[];l.descriptor=Array.from(c),a.forEach((e=>fi(e)))}jQ[n]=l,XQ=a,r(l)})))}var ZQ,JQ=.1;function QQ(e,t,n){let a=!1,r=n.length-1;for(let s=0;s<n.length;r=s++)n[s].y>t!=n[r].y>t&&e<(n[r].x-n[s].x)*(t-n[s].y)/(n[r].y-n[s].y)+n[s].x&&(a=!a);return a}async function e1(e){if(!e.tensor)return e.tensor;if(!e.mesh||e.mesh.length<100)return e.tensor;const t=e.tensor.shape[2]||0,n=e.tensor.shape[1]||0,a=await e.tensor.buffer();let r=[];for(const t of FZ.silhouette)r.push({x:(e.mesh[t][0]-e.box[0])/e.box[2],y:(e.mesh[t][1]-e.box[1])/e.box[3]});r=r.map((e=>({x:e.x>.5?e.x+JQ:e.x-JQ,y:e.y>.5?e.y+JQ:e.y-JQ})));for(let e=0;e<t;e++)for(let s=0;s<n;s++)QQ(e/t,s/t,r)||(a.set(.5*a.get(0,s,e,0),0,s,e,0),a.set(.5*a.get(0,s,e,1),0,s,e,1),a.set(.5*a.get(0,s,e,2),0,s,e,2));return a.toTensor()}var t1,n1=[],a1=Number.MAX_SAFE_INTEGER,r1=0,s1=0;async function i1(e,t,n,a){var r,s;if(!(null==ZQ?void 0:ZQ.executor))return 0;const i=((null==(r=t.face.antispoof)?void 0:r.skipTime)||0)>$K()-s1,o=a1<((null==(s=t.face.antispoof)?void 0:s.skipFrames)||0);return t.skipAllowed&&i&&o&&r1===a&&n1[n]?(a1++,n1[n]):(a1=0,new Promise((async t=>{const r=Rc.resizeBilinear(e,[(null==ZQ?void 0:ZQ.inputs[0].shape)?ZQ.inputs[0].shape[2]:0,(null==ZQ?void 0:ZQ.inputs[0].shape)?ZQ.inputs[0].shape[1]:0],!1),s=null==ZQ?void 0:ZQ.execute(r),i=(await s.data())[0];n1[n]=Math.round(100*i)/100,r1=a,s1=$K(),fi([r,s]),t(n1[n])})))}var o1,l1=[],u1=Number.MAX_SAFE_INTEGER,d1=0,p1=0;async function h1(e,t,n,a){var r,s;if(!(null==t1?void 0:t1.executor))return 0;const i=((null==(r=t.face.liveness)?void 0:r.skipTime)||0)>$K()-p1,o=u1<((null==(s=t.face.liveness)?void 0:s.skipFrames)||0);return t.skipAllowed&&i&&o&&d1===a&&l1[n]?(u1++,l1[n]):(u1=0,new Promise((async t=>{const r=Rc.resizeBilinear(e,[(null==t1?void 0:t1.inputs[0].shape)?t1.inputs[0].shape[2]:0,(null==t1?void 0:t1.inputs[0].shape)?t1.inputs[0].shape[1]:0],!1),s=null==t1?void 0:t1.execute(r),i=(await s.data())[0];l1[n]=Math.round(100*i)/100,d1=a,p1=$K(),fi([r,s]),t(l1[n])})))}var c1,f1=[],m1=["white","black","asian","indian","other"],g1=[15,23,28,35.5,45.5,55.5,65],y1=0,x1=0,A1=Number.MAX_SAFE_INTEGER;async function b1(e,t,n,a){var r,s;if(!o1)return{age:0,gender:"unknown",genderScore:0,race:[]};const i=A1<((null==(r=t.face.gear)?void 0:r.skipFrames)||0),o=((null==(s=t.face.gear)?void 0:s.skipTime)||0)>$K()-x1;return t.skipAllowed&&o&&i&&y1===a&&f1[n]?(A1++,f1[n]):(A1=0,new Promise((async r=>{var s,i,o,l;if(!(null==o1?void 0:o1.inputs[0].shape))return;const u={};let d=[[0,.1,.9,.9]];if((null==(s=t.face.gear)?void 0:s.crop)>0){const e=null==(i=t.face.gear)?void 0:i.crop;d=[[e,e,1-e,1-e]]}u.resize=Rc.cropAndResize(e,d,[0],[o1.inputs[0].shape[2],o1.inputs[0].shape[1]]);const p={age:0,gender:"unknown",genderScore:0,race:[]};(null==(o=t.face.gear)?void 0:o.enabled)&&([u.age,u.gender,u.race]=o1.execute(u.resize,["age_output","gender_output","race_output"]));const h=await u.gender.data();p.gender=h[0]>h[1]?"male":"female",p.genderScore=Math.round(100*(h[0]>h[1]?h[0]:h[1]))/100;const c=await u.race.data();for(let e=0;e<c.length;e++)c[e]>((null==(l=t.face.gear)?void 0:l.minConfidence)||.2)&&p.race.push({score:Math.round(100*c[e])/100,race:m1[e]});p.race.sort(((e,t)=>t.score-e.score));const f=Array.from(await u.age.data()).map(((e,t)=>[g1[t],e])).sort(((e,t)=>t[1]-e[1]));let m=f[0][0];for(let e=1;e<f.length;e++)m+=f[e][1]*(f[e][0]-m);p.age=Math.round(10*m)/10,Object.keys(u).forEach((e=>fi(u[e]))),f1[n]=p,y1=a,x1=$K(),r(p)})))}var w1,v1=[],k1=0,I1=0,S1=Number.MAX_SAFE_INTEGER;async function C1(e,t,n,a){var r,s,i,o;if(!c1)return{age:0};const l=S1<((null==(r=t.face.ssrnet)?void 0:r.skipFrames)||0),u=((null==(s=t.face.ssrnet)?void 0:s.skipTime)||0)>$K()-I1;return t.skipAllowed&&l&&u&&k1===a&&(null==(i=v1[n])?void 0:i.age)&&(null==(o=v1[n])?void 0:o.age)>0?(S1++,v1[n]):(S1=0,new Promise((async r=>{var s,i,o;if(!(null==c1?void 0:c1.inputs)||!c1.inputs[0]||!c1.inputs[0].shape)return;const l={};if((null==(s=t.face.ssrnet)?void 0:s.crop)>0){const n=null==(i=t.face.ssrnet)?void 0:i.crop,a=[[n,n,1-n,1-n]];l.resize=Rc.cropAndResize(e,a,[0],[c1.inputs[0].shape[2],c1.inputs[0].shape[1]])}else l.resize=Rc.resizeBilinear(e,[c1.inputs[0].shape[2],c1.inputs[0].shape[1]],!1);l.enhance=$o(l.resize,yZ.tf255);const u={age:0};if((null==(o=t.face.ssrnet)?void 0:o.enabled)&&(l.age=c1.execute(l.enhance)),l.age){const e=await l.age.data();u.age=Math.trunc(10*e[0])/10}Object.keys(l).forEach((e=>fi(l[e]))),v1[n]=u,k1=a,I1=$K(),r(u)})))}var N1,T1=[],R1=0,E1=0,$1=Number.MAX_SAFE_INTEGER,M1=[.2989,.587,.114];async function F1(e,t,n,a){var r,s,i,o;if(!w1)return{gender:"unknown",genderScore:0};const l=$1<((null==(r=t.face.ssrnet)?void 0:r.skipFrames)||0),u=((null==(s=t.face.ssrnet)?void 0:s.skipTime)||0)>$K()-E1;return t.skipAllowed&&l&&u&&R1===a&&(null==(i=T1[n])?void 0:i.gender)&&(null==(o=T1[n])?void 0:o.genderScore)>0?($1++,T1[n]):($1=0,new Promise((async r=>{var s,i,o;if(!(null==w1?void 0:w1.inputs[0].shape))return;const l={};if((null==(s=t.face.ssrnet)?void 0:s.crop)>0){const n=null==(i=t.face.ssrnet)?void 0:i.crop,a=[[n,n,1-n,1-n]];l.resize=Rc.cropAndResize(e,a,[0],[w1.inputs[0].shape[2],w1.inputs[0].shape[1]])}else l.resize=Rc.resizeBilinear(e,[w1.inputs[0].shape[2],w1.inputs[0].shape[1]],!1);l.enhance=ci((()=>{var e,t;let n;if(1===(null==(t=null==(e=null==w1?void 0:w1.inputs)?void 0:e[0].shape)?void 0:t[3])){const[e,t,a]=zp(l.resize,3,3),r=$o(e,M1[0]),s=$o(t,M1[1]),i=$o(a,M1[2]),o=Po([r,s,i]);n=$o(td(o,yZ.tf05),2)}else n=$o(td(l.resize,yZ.tf05),2);return n}));const u={gender:"unknown",genderScore:0};(null==(o=t.face.ssrnet)?void 0:o.enabled)&&(l.gender=w1.execute(l.enhance));const d=await l.gender.data();u.gender=d[0]>d[1]?"female":"male",u.genderScore=d[0]>d[1]?Math.trunc(100*d[0])/100:Math.trunc(100*d[1])/100,Object.keys(l).forEach((e=>fi(l[e]))),T1[n]=u,R1=a,E1=$K(),r(u)})))}var _1,P1=[],O1=0,D1=0,z1=Number.MAX_SAFE_INTEGER;async function L1(e,t,n,a){var r,s;if(!(null==N1?void 0:N1.executor))return[];const i=z1<((null==(r=t.face.mobilefacenet)?void 0:r.skipFrames)||0),o=((null==(s=t.face.mobilefacenet)?void 0:s.skipTime)||0)>$K()-D1;return t.skipAllowed&&o&&i&&O1===a&&P1[n]?(z1++,P1[n]):new Promise((async r=>{var s;let i=[];if((null==(s=t.face.mobilefacenet)?void 0:s.enabled)&&(null==N1?void 0:N1.inputs[0].shape)){const t={};t.crop=Rc.resizeBilinear(e,[N1.inputs[0].shape[2],N1.inputs[0].shape[1]],!1),t.data=N1.execute(t.crop);const n=await t.data.data();i=Array.from(n),Object.keys(t).forEach((e=>fi(t[e])))}P1[n]=i,O1=a,D1=$K(),r(i)}))}var W1=[],B1=0,V1=0,U1=Number.MAX_SAFE_INTEGER;async function G1(e,t,n,a){var r,s;if(!(null==_1?void 0:_1.executor))return[];const i=U1<((null==(r=t.face.insightface)?void 0:r.skipFrames)||0),o=((null==(s=t.face.insightface)?void 0:s.skipTime)||0)>$K()-V1;return t.skipAllowed&&o&&i&&B1===a&&W1[n]?(U1++,W1[n]):new Promise((async r=>{var s;let i=[];if((null==(s=t.face.insightface)?void 0:s.enabled)&&(null==_1?void 0:_1.inputs[0].shape)){const t={};t.crop=Rc.resizeBilinear(e,[_1.inputs[0].shape[2],_1.inputs[0].shape[1]],!1),t.data=_1.execute(t.crop);const n=await t.data.data();i=Array.from(n),Object.keys(t).forEach((e=>fi(t[e])))}W1[n]=i,B1=a,V1=$K(),r(i)}))}var H1=(e,t)=>{const n=e=>{const t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);return e[0]/=t,e[1]/=t,e[2]/=t,e},a=(e,t)=>[e[0]-t[0],e[1]-t[1],e[2]-t[2]],r=(e,t)=>[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]],s=e.meshRaw;if(!s||s.length<300)return{angle:{pitch:0,yaw:0,roll:0},matrix:[1,0,0,0,1,0,0,0,1],gaze:{bearing:0,strength:0}};const i=Math.max(e.boxRaw[2]*t[0],e.boxRaw[3]*t[1])/1.5,o=[s[10],s[152],s[234],s[454]].map((e=>[e[0]*t[0]/i,e[1]*t[1]/i,e[2]])),l=n(a(o[1],o[0]));let u=n(a(o[3],o[2]));const d=n(r(u,l));u=r(l,d);const p=[u[0],u[1],u[2],l[0],l[1],l[2],d[0],d[1],d[2]],h=(e=>{const[t,n,a,r,s,i,o,l,u]=e;let d,p,h;if(r<1)if(r>-1){const e=Math.sqrt(t*t+o*o);h=Math.atan2(r,e),p=Math.atan2(-o,t),d=Math.atan2(-i,s)}else h=-Math.PI/2,p=-Math.atan2(l,u),d=0;else h=Math.PI/2,p=Math.atan2(l,u),d=0;return Number.isNaN(d)&&(d=0),Number.isNaN(p)&&(p=0),Number.isNaN(h)&&(h=0),{pitch:-d,yaw:-p,roll:-h}})(p),c=478===s.length?(e=>{if(!e.annotations.rightEyeIris||!e.annotations.leftEyeIris)return{bearing:0,strength:0};const t=[0,-.1],n=(e.mesh[33][2]||0)>(e.mesh[263][2]||0),a=n?e.mesh[473]:e.mesh[468],r=n?[(e.mesh[133][0]+e.mesh[33][0])/2,(e.mesh[133][1]+e.mesh[33][1])/2]:[(e.mesh[263][0]+e.mesh[362][0])/2,(e.mesh[263][1]+e.mesh[362][1])/2],s=n?[e.mesh[133][0]-e.mesh[33][0],e.mesh[23][1]-e.mesh[27][1]]:[e.mesh[263][0]-e.mesh[362][0],e.mesh[253][1]-e.mesh[257][1]],i=[(r[0]-a[0])/s[0]-t[0],1*(a[1]-r[1])/s[1]-t[1]];let o=Math.sqrt(i[0]*i[0]+i[1]*i[1]);var l,u;return o=Math.min(o,e.boxRaw[2]/2,e.boxRaw[3]/2),{bearing:(l=[0,0],u=i,(Math.atan2(l[1]-u[1],l[0]-u[0])+Math.PI/2)%Math.PI),strength:o}})(e):{bearing:0,strength:0};return{angle:h,matrix:p,gaze:c}};function j1(e,t){const n=null==e?void 0:e.annotations;if(!(null==n?void 0:n.leftEyeIris)||!(null==n?void 0:n.rightEyeIris))return 0;const a=Math.max(Math.abs(n.leftEyeIris[3][0]-n.leftEyeIris[1][0]),Math.abs(n.rightEyeIris[3][0]-n.rightEyeIris[1][0]))/t;return Math.round(1.17/a)/100}var q1=async(e,t)=>{var n,a,r,s,i,o,l,u,d,p,h,c,f,m,g,y,x,A,b,w,v,k,I;let S,C,N,T,R,E,$,M,F,_=$K();const P=[];e.state="run:face";const O=await async function(e,t){var n,a,r,s,i,o,l,u,d,p;const h=((null==(n=t.face.detector)?void 0:n.skipTime)||0)>$K()-_Q.timestamp,c=_Q.skipped<((null==(a=t.face.detector)?void 0:a.skipFrames)||0);t.skipAllowed&&h&&c&&0!==_Q.boxes.length?_Q.skipped++:(_Q.boxes=await async function(e,t){var n,a,r,s,i,o,l,u,d;if(!e||e.isDisposedInternal||4!==e.shape.length||e.shape[1]<1||e.shape[2]<1)return[];const p={};let h=[0,0],c=[1,1];if(null==(a=null==(n=null==t?void 0:t.face)?void 0:n.detector)?void 0:a.square){const t=Math.max(e.shape[2],e.shape[1]);h=[Math.floor((t-e.shape[2])/2),Math.floor((t-e.shape[1])/2)],p.padded=Rd(e,[[0,0],[h[1],h[1]],[h[0],h[0]],[0,0]]),c=[e.shape[2]/t,e.shape[1]/t],h=[h[0]/gQ,h[1]/gQ]}else p.padded=e.clone();p.resized=Rc.resizeBilinear(p.padded,[gQ,gQ]),p.div=Eo(p.resized,yZ.tf127),p.normalized=td(p.div,yZ.tf1);const f=null==hQ?void 0:hQ.execute(p.normalized);if(Array.isArray(f)&&f.length>2){const e=f.sort(((e,t)=>e.size-t.size));p.concat384=ul([e[0],e[2]],2),p.concat512=ul([e[1],e[3]],2),p.concat=ul([p.concat512,p.concat384],1),p.batch=Bp(p.concat,[0])}else Array.isArray(f)?p.batch=Bp(f[0]):p.batch=Bp(f);fi(f),p.boxes=function(e){if(!mQ||!yQ)return gd([0,0]);const t={};t.boxStarts=hl(e,[0,1],[-1,2]),t.centers=To(t.boxStarts,mQ),t.boxSizes=hl(e,[0,3],[-1,2]),t.boxSizesNormalized=Eo(t.boxSizes,yQ),t.centersNormalized=Eo(t.centers,yQ),t.halfBoxSize=Eo(t.boxSizesNormalized,yZ.tf2),t.starts=td(t.centersNormalized,t.halfBoxSize),t.ends=To(t.centersNormalized,t.halfBoxSize),t.startNormalized=$o(t.starts,yQ),t.endNormalized=$o(t.ends,yQ);const n=Rl([t.startNormalized,t.endNormalized],1);return Object.keys(t).forEach((e=>fi(t[e]))),n}(p.batch),p.logits=hl(p.batch,[0,0],[-1,1]),p.sigmoid=pl(p.logits),p.scores=Bp(p.sigmoid),p.nms=await Rc.nonMaxSuppressionAsync(p.boxes,p.scores,(null==(r=t.face.detector)?void 0:r.maxDetected)||0,(null==(s=t.face.detector)?void 0:s.iouThreshold)||0,(null==(i=t.face.detector)?void 0:i.minConfidence)||0);const m=await p.nms.array(),g=[],y=await p.scores.data();for(let n=0;n<m.length;n++){const a=y[m[n]];if(a>((null==(o=t.face.detector)?void 0:o.minConfidence)||0)){const r={};r.bbox=hl(p.boxes,[m[n],0],[1,-1]),r.slice=hl(p.batch,[m[n],5],[1,-1]),r.squeeze=Bp(r.slice),r.landmarks=il(r.squeeze,[6,-1]);const s=await r.bbox.data(),i=[s[0]*c[0]-h[0],s[1]*c[1]-h[1],s[2]*c[0]-h[0],s[3]*c[1]-h[1]],o={startPoint:[i[0],i[1]],endPoint:[i[2],i[3]],landmarks:await r.landmarks.array(),confidence:a};r.anchor=hl(mQ,[m[n],0],[1,2]);const f=await r.anchor.data(),y=QJ(o,[(e.shape[2]||0)/gQ,(e.shape[1]||0)/gQ],f),x=tQ(y,(null==(l=t.face.detector)?void 0:l.scale)||1.4),A=nQ(x);A.size[0]>((null==(u=t.face.detector)?void 0:u.minSize)||0)&&A.size[1]>((null==(d=t.face.detector)?void 0:d.minSize)||0)&&g.push(A),Object.keys(r).forEach((e=>fi(r[e])))}}return Object.keys(p).forEach((e=>fi(p[e]))),g}(e,t),_Q.timestamp=$K(),_Q.skipped=0);const f=[],m=[];let g=0;const y=OQ;for(let n=0;n<_Q.boxes.length;n++){const a=_Q.boxes[n];let h,c=0;const x={id:g++,mesh:[],meshRaw:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,boxScore:0,faceScore:0,size:[0,0],annotations:{}};if([c,h,x.tensor]=pQ(null==(r=t.face.detector)?void 0:r.rotation,a,e,(null==(s=t.face.mesh)?void 0:s.enabled)?OQ:gQ),t.filter.equalization){const e=x.tensor?await GK(x.tensor):void 0;fi(x.tensor),e&&(x.tensor=e)}if(x.boxScore=Math.round(100*a.confidence)/100,(null==(i=t.face.mesh)?void 0:i.enabled)&&(null==PQ?void 0:PQ.executor))if(PQ){if((null==(o=t.face.attention)?void 0:o.enabled)&&!rY.kernels.includes("atan2"))return t.face.attention.enabled=!1,fi(x.tensor),f;const n=PQ.execute(x.tensor),r=n.find((e=>1===e.shape[e.shape.length-1])),s=await r.data();if(x.faceScore=Math.round(100*s[0])/100,x.faceScore<((null==(l=t.face.detector)?void 0:l.minConfidence)||1)){if(a.confidence=x.faceScore,t.face.mesh.keepInvalid){x.box=ZJ(a,e),x.boxRaw=JJ(a,e),x.size=a.size,x.score=x.boxScore,x.mesh=a.landmarks,x.meshRaw=x.mesh.map((t=>[t[0]/(e.shape[2]||1),t[1]/(e.shape[1]||1),(t[2]||0)/y]));for(const e of Object.keys(PZ))x.annotations[e]=[x.mesh[PZ[e]]]}}else{const r=n.find((e=>1404===e.shape[e.shape.length-1])),s=il(r,[-1,3]);let i=await s.array();fi(s),(null==(u=t.face.attention)?void 0:u.enabled)?i=await $Q(i,n):(null==(d=t.face.iris)?void 0:d.enabled)&&(i=await EQ(i,x.tensor,OQ,t)),x.mesh=dQ(i,a,c,h,OQ),x.meshRaw=x.mesh.map((t=>[t[0]/(e.shape[2]||0),t[1]/(e.shape[1]||0),(t[2]||0)/y]));for(const e of Object.keys(FZ))x.annotations[e]=FZ[e].map((e=>x.mesh[e]));x.score=x.faceScore;const o={...fQ(x.mesh,a),confidence:a.confidence,landmarks:a.landmarks,size:a.size};x.box=ZJ(o,e),x.boxRaw=JJ(o,e),x.size=o.size,m.push(o)}fi(n)}else t.debug&&EK("face mesh detection requested, but model is not loaded");else{x.box=ZJ(a,e),x.boxRaw=JJ(a,e),x.score=x.boxScore,x.size=a.size,x.mesh=a.landmarks,x.meshRaw=x.mesh.map((t=>[t[0]/(e.shape[2]||0),t[1]/(e.shape[1]||0),(t[2]||0)/y]));for(const e of Object.keys(PZ))x.annotations[e]=[x.mesh[PZ[e]]]}x.score>((null==(p=t.face.detector)?void 0:p.minConfidence)||1)?f.push(x):fi(x.tensor)}return _Q.boxes=m,f}(t,e.config);if(e.performance.face=rY.perfadd?(e.performance.face||0)+Math.trunc($K()-_):Math.trunc($K()-_),!t.shape||4!==t.shape.length)return[];if(!O)return[];for(let D=0;D<O.length;D++){if(e.analyze("Get Face"),!O[D].tensor||O[D].tensor.isDisposedInternal){EK("Face object is disposed:",O[D].tensor);continue}if(null==(n=e.config.face.detector)?void 0:n.mask){const e=await e1(O[D]);fi(O[D].tensor),e&&(O[D].tensor=e)}const z=O[D].mesh&&O[D].mesh.length>200?H1(O[D],[t.shape[2],t.shape[1]]):null;e.analyze("Start Emotion:"),e.config.async?T=(null==(a=e.config.face.emotion)?void 0:a.enabled)?HQ(O[D].tensor||ni([]),e.config,D,O.length):[]:(e.state="run:emotion",_=$K(),T=(null==(r=e.config.face.emotion)?void 0:r.enabled)?await HQ(O[D].tensor||ni([]),e.config,D,O.length):[],e.performance.emotion=rY.perfadd?(e.performance.emotion||0)+Math.trunc($K()-_):Math.trunc($K()-_)),e.analyze("End Emotion:"),e.analyze("Start AntiSpoof:"),e.config.async?$=(null==(s=e.config.face.antispoof)?void 0:s.enabled)?i1(O[D].tensor||ni([]),e.config,D,O.length):0:(e.state="run:antispoof",_=$K(),$=(null==(i=e.config.face.antispoof)?void 0:i.enabled)?await i1(O[D].tensor||ni([]),e.config,D,O.length):0,e.performance.antispoof=rY.perfadd?(e.performance.antispoof||0)+Math.trunc($K()-_):Math.trunc($K()-_)),e.analyze("End AntiSpoof:"),e.analyze("Start Liveness:"),e.config.async?M=(null==(o=e.config.face.liveness)?void 0:o.enabled)?h1(O[D].tensor||ni([]),e.config,D,O.length):0:(e.state="run:liveness",_=$K(),M=(null==(l=e.config.face.liveness)?void 0:l.enabled)?await h1(O[D].tensor||ni([]),e.config,D,O.length):0,e.performance.liveness=rY.perfadd?(e.performance.antispoof||0)+Math.trunc($K()-_):Math.trunc($K()-_)),e.analyze("End Liveness:"),e.analyze("Start GEAR:"),e.config.async?C=(null==(u=e.config.face.gear)?void 0:u.enabled)?b1(O[D].tensor||ni([]),e.config,D,O.length):null:(e.state="run:gear",_=$K(),C=(null==(d=e.config.face.gear)?void 0:d.enabled)?await b1(O[D].tensor||ni([]),e.config,D,O.length):null,e.performance.gear=Math.trunc($K()-_)),e.analyze("End GEAR:"),e.analyze("Start SSRNet:"),e.config.async?(S=(null==(p=e.config.face.ssrnet)?void 0:p.enabled)?C1(O[D].tensor||ni([]),e.config,D,O.length):null,N=(null==(h=e.config.face.ssrnet)?void 0:h.enabled)?F1(O[D].tensor||ni([]),e.config,D,O.length):null):(e.state="run:ssrnet",_=$K(),S=(null==(c=e.config.face.ssrnet)?void 0:c.enabled)?await C1(O[D].tensor||ni([]),e.config,D,O.length):null,N=(null==(f=e.config.face.ssrnet)?void 0:f.enabled)?await F1(O[D].tensor||ni([]),e.config,D,O.length):null,e.performance.ssrnet=Math.trunc($K()-_)),e.analyze("End SSRNet:"),e.analyze("Start MobileFaceNet:"),e.config.async?R=(null==(m=e.config.face.mobilefacenet)?void 0:m.enabled)?L1(O[D].tensor||ni([]),e.config,D,O.length):null:(e.state="run:mobilefacenet",_=$K(),R=(null==(g=e.config.face.mobilefacenet)?void 0:g.enabled)?await L1(O[D].tensor||ni([]),e.config,D,O.length):null,e.performance.mobilefacenet=Math.trunc($K()-_)),e.analyze("End MobileFaceNet:"),e.analyze("Start InsightFace:"),e.config.async?E=(null==(y=e.config.face.insightface)?void 0:y.enabled)?G1(O[D].tensor||ni([]),e.config,D,O.length):null:(e.state="run:mobilefacenet",_=$K(),E=(null==(x=e.config.face.insightface)?void 0:x.enabled)?await G1(O[D].tensor||ni([]),e.config,D,O.length):null,e.performance.mobilefacenet=Math.trunc($K()-_)),e.analyze("End InsightFace:"),e.analyze("Start Description:"),e.config.async?F=YQ(O[D].tensor||ni([]),e.config,D,O.length):(e.state="run:description",_=$K(),F=await YQ(O[D].tensor||ni([]),e.config,D,O.length),e.performance.description=rY.perfadd?(e.performance.description||0)+Math.trunc($K()-_):Math.trunc($K()-_)),e.analyze("End Description:"),e.config.async&&([S,N,T,R,E,F,C,$,M]=await Promise.all([S,N,T,R,E,F,C,$,M])),e.analyze("Finish Face:"),(null==(A=e.config.face.ssrnet)?void 0:A.enabled)&&S&&N&&(F={...F,age:S.age,gender:N.gender,genderScore:N.genderScore}),(null==(b=e.config.face.gear)?void 0:b.enabled)&&C&&(F={...F,age:C.age,gender:C.gender,genderScore:C.genderScore,race:C.race}),(null==(w=e.config.face.mobilefacenet)?void 0:w.enabled)&&R&&(F.descriptor=R),(null==(v=e.config.face.insightface)?void 0:v.enabled)&&E&&(F.descriptor=E);const L=(null==(k=e.config.face.iris)?void 0:k.enabled)?j1(O[D],t.shape[2]):0,W=(null==(I=e.config.face.detector)?void 0:I.return)?Bp(O[D].tensor):null;fi(O[D].tensor),O[D].tensor&&delete O[D].tensor;const B={...O[D],id:D};F.age&&(B.age=F.age),F.gender&&(B.gender=F.gender),F.genderScore&&(B.genderScore=F.genderScore),F.descriptor&&(B.embedding=F.descriptor),F.race&&(B.race=F.race),T&&(B.emotion=T),$&&(B.real=$),M&&(B.live=M),L>0&&(B.distance=L),z&&(B.rotation=z),W&&(B.tensor=W),P.push(B),e.analyze("End Face")}return e.analyze("End FaceMesh:"),e.config.async&&(e.performance.face&&delete e.performance.face,e.performance.age&&delete e.performance.age,e.performance.gender&&delete e.performance.gender,e.performance.emotion&&delete e.performance.emotion),P},X1={thumb:0,index:1,middle:2,ring:3,pinky:4,all:[0,1,2,3,4],nameMapping:{0:"thumb",1:"index",2:"middle",3:"ring",4:"pinky"},pointsMapping:{0:[[0,1],[1,2],[2,3],[3,4]],1:[[0,5],[5,6],[6,7],[7,8]],2:[[0,9],[9,10],[10,11],[11,12]],3:[[0,13],[13,14],[14,15],[15,16]],4:[[0,17],[17,18],[18,19],[19,20]]},getName:e=>X1.nameMapping[e],getPoints:e=>X1.pointsMapping[e]},K1={none:0,half:1,full:2,nameMapping:{0:"none",1:"half",2:"full"},getName:e=>K1.nameMapping[e]},Y1={verticalUp:0,verticalDown:1,horizontalLeft:2,horizontalRight:3,diagonalUpRight:4,diagonalUpLeft:5,diagonalDownRight:6,diagonalDownLeft:7,nameMapping:{0:"verticalUp",1:"verticalDown",2:"horizontalLeft",3:"horizontalRight",4:"diagonalUpRight",5:"diagonalUpLeft",6:"diagonalDownRight",7:"diagonalDownLeft"},getName:e=>Y1.nameMapping[e]},Z1=class{constructor(e){c(this,"name"),c(this,"curls"),c(this,"directions"),c(this,"weights"),c(this,"weightsRelative"),this.name=e,this.curls={},this.directions={},this.weights=[1,1,1,1,1],this.weightsRelative=[1,1,1,1,1]}curl(e,t,n){void 0===this.curls[e]&&(this.curls[e]=[]),this.curls[e].push([t,n])}direction(e,t,n){this.directions[e]||(this.directions[e]=[]),this.directions[e].push([t,n])}weight(e,t){this.weights[e]=t;const n=this.weights.reduce(((e,t)=>e+t),0);this.weightsRelative=this.weights.map((e=>5*e/n))}matchAgainst(e,t){let n=0;for(const t in e){const a=e[t],r=this.curls[t];if(void 0!==r){for(const[e,s]of r)if(a===e){n+=s*this.weightsRelative[t];break}}else n+=this.weightsRelative[t]}for(const e in t){const a=t[e],r=this.directions[e];if(void 0!==r){for(const[t,s]of r)if(a===t){n+=s*this.weightsRelative[e];break}}else n+=this.weightsRelative[e]}return n/10}},{thumb:J1,index:Q1,middle:e0,ring:t0,pinky:n0}=X1,{none:a0,half:r0,full:s0}=K1,{verticalUp:i0,verticalDown:o0,horizontalLeft:l0,horizontalRight:u0,diagonalUpRight:d0,diagonalUpLeft:p0,diagonalDownRight:h0,diagonalDownLeft:c0}=Y1,f0=new Z1("thumbs up");f0.curl(J1,a0,1),f0.direction(J1,i0,1),f0.direction(J1,p0,.25),f0.direction(J1,d0,.25);for(const e of[X1.index,X1.middle,X1.ring,X1.pinky])f0.curl(e,s0,1),f0.direction(e,l0,1),f0.direction(e,u0,1);var m0=new Z1("victory");m0.curl(J1,r0,.5),m0.curl(J1,a0,.5),m0.direction(J1,i0,1),m0.direction(J1,p0,1),m0.curl(Q1,a0,1),m0.direction(Q1,i0,.75),m0.direction(Q1,p0,1),m0.curl(e0,a0,1),m0.direction(e0,i0,1),m0.direction(e0,p0,.75),m0.curl(t0,s0,1),m0.direction(t0,i0,.2),m0.direction(t0,p0,1),m0.direction(t0,l0,.2),m0.curl(n0,s0,1),m0.direction(n0,i0,.2),m0.direction(n0,p0,1),m0.direction(n0,l0,.2),m0.weight(Q1,2),m0.weight(e0,2);var g0=new Z1("point");g0.curl(J1,s0,1),g0.curl(Q1,a0,.5),g0.curl(e0,s0,.5),g0.curl(t0,s0,.5),g0.curl(n0,s0,.5),g0.weight(Q1,2),g0.weight(e0,2);var y0=new Z1("middle finger");y0.curl(J1,a0,1),y0.curl(Q1,s0,.5),y0.curl(e0,s0,.5),y0.curl(t0,s0,.5),y0.curl(n0,s0,.5),y0.weight(Q1,2),y0.weight(e0,2);var x0=new Z1("open palm");x0.curl(J1,a0,.75),x0.curl(Q1,a0,.75),x0.curl(e0,a0,.75),x0.curl(t0,a0,.75),x0.curl(n0,a0,.75);var A0=[f0,m0,g0,y0,x0],b0={HALF_CURL_START_LIMIT:60,NO_CURL_START_LIMIT:130,DISTANCE_VOTE_POWER:1.1,SINGLE_ANGLE_VOTE_POWER:.9,TOTAL_ANGLE_VOTE_POWER:1.6};function w0(e,t,n,a){const r=(t-a)/(e-n);let s=180*Math.atan(r)/Math.PI;return s<=0?s=-s:s>0&&(s=180-s),s}function v0(e,t){if(!e||!t)return[0,0];const n=w0(e[0],e[1],t[0],t[1]);return 2===e.length?n:[n,w0(e[1],e[2],t[1],t[2])]}function k0(e,t=1){let n=0,a=0,r=0;return e>=75&&e<=105?n=1*t:e>=25&&e<=155?a=1*t:r=1*t,[n,a,r]}function I0(e,t,n){const a=e[0]-t[0],r=e[0]-n[0],s=t[0]-n[0],i=e[1]-t[1],o=e[1]-n[1],l=t[1]-n[1],u=e[2]-t[2],d=e[2]-n[2],p=t[2]-n[2],h=Math.sqrt(a*a+i*i+u*u),c=Math.sqrt(r*r+o*o+d*d),f=Math.sqrt(s*s+l*l+p*p);let m=(f*f+h*h-c*c)/(2*f*h);m>1?m=1:m<-1&&(m=-1);let g,y=Math.acos(m);return y=57.2958*y%180,g=y>b0.NO_CURL_START_LIMIT?K1.none:y>b0.HALF_CURL_START_LIMIT?K1.half:K1.full,g}function S0(e,t,n,a){let r;return r=a===Math.abs(e)?e>0?Y1.horizontalLeft:Y1.horizontalRight:a===Math.abs(t)?t>0?Y1.horizontalLeft:Y1.horizontalRight:n>0?Y1.horizontalLeft:Y1.horizontalRight,r}function C0(e,t,n,a){let r;return r=a===Math.abs(e)?e<0?Y1.verticalDown:Y1.verticalUp:a===Math.abs(t)?t<0?Y1.verticalDown:Y1.verticalUp:n<0?Y1.verticalDown:Y1.verticalUp,r}function N0(e,t,n,a){const r=e[0]-t[0],s=e[0]-n[0],i=t[0]-n[0],o=e[1]-t[1],l=e[1]-n[1],u=t[1]-n[1],d=Math.max(Math.abs(r),Math.abs(s),Math.abs(i)),p=Math.max(Math.abs(o),Math.abs(l),Math.abs(u));let h=0,c=0,f=0;const m=p/(d+1e-5);m>1.5?h+=b0.DISTANCE_VOTE_POWER:m>.66?c+=b0.DISTANCE_VOTE_POWER:f+=b0.DISTANCE_VOTE_POWER;const g=Math.sqrt(r*r+o*o),y=Math.sqrt(s*s+l*l),x=Math.sqrt(i*i+u*u),A=Math.max(g,y,x);let b=e[0],w=e[1],v=n[0],k=n[1];A===g?(v=n[0],k=n[1]):A===x&&(b=t[0],w=t[1]);const I=k0(v0([b,w],[v,k]),b0.TOTAL_ANGLE_VOTE_POWER);h+=I[0],c+=I[1],f+=I[2];for(const e of a){const t=k0(e,b0.SINGLE_ANGLE_VOTE_POWER);h+=t[0],c+=t[1],f+=t[2]}let S;return S=h===Math.max(h,c,f)?C0(l,o,u,p):f===Math.max(c,f)?S0(s,r,i,d):function(e,t,n,a,r,s,i,o){let l;const u=C0(e,t,n,a),d=S0(r,s,i,o);return l=u===Y1.verticalUp?d===Y1.horizontalLeft?Y1.diagonalUpLeft:Y1.diagonalUpRight:d===Y1.horizontalLeft?Y1.diagonalDownLeft:Y1.diagonalDownRight,l}(l,o,u,p,s,r,i,d),S}function T0(e){const t=[],n=[],a=[],r=[];if(!e)return{curls:a,directions:r};for(const a of X1.all){const r=X1.getPoints(a),s=[],i=[];for(const t of r){const n=v0(e[t[0]],e[t[1]]),a=n[0],r=n[1];s.push(a),i.push(r)}t.push(s),n.push(i)}for(const n of X1.all){const s=n===X1.thumb?1:0,i=X1.getPoints(n),o=e[i[s][0]],l=e[i[s+1][1]],u=e[i[3][1]],d=I0(o,l,u),p=N0(o,l,u,t[n].slice(s));a[n]=d,r[n]=p}return{curls:a,directions:r}}function R0(e){if(!e||0===e.length)return null;const t=T0(e),n={};for(const e of X1.all)n[X1.getName(e)]={curl:K1.getName(t.curls[e]),direction:Y1.getName(t.directions[e])};return n}function E0(e){const t=[];if(!e||0===e.length)return t;const n=T0(e);for(const e of A0){const a=e.matchAgainst(n.curls,n.directions);a>=.7&&t.push({name:e.name,confidence:a})}return t}var $0=e=>{if(!e)return[];const t=[];for(let n=0;n<e.length;n++){const a=e[n].keypoints.find((e=>"leftWrist"===e.part)),r=e[n].keypoints.find((e=>"rightWrist"===e.part)),s=e[n].keypoints.find((e=>"nose"===e.part));s&&a&&r&&a.position[1]<s.position[1]&&r.position[1]<s.position[1]?t.push({body:n,gesture:"i give up"}):s&&a&&a.position[1]<s.position[1]?t.push({body:n,gesture:"raise left hand"}):s&&r&&r.position[1]<s.position[1]&&t.push({body:n,gesture:"raise right hand"});const i=e[n].keypoints.find((e=>"leftShoulder"===e.part)),o=e[n].keypoints.find((e=>"rightShoulder"===e.part));i&&o&&Math.abs(i.positionRaw[1]-o.positionRaw[1])>.1&&t.push({body:n,gesture:"leaning "+(i.position[1]>o.position[1]?"left":"right")})}return t},M0=e=>{if(!e)return[];const t=[];for(let n=0;n<e.length;n++)if(e[n].mesh&&e[n].mesh.length>450){const a=(e[n].mesh[33][2]||0)-(e[n].mesh[263][2]||0),r=e[n].mesh[33][0]-e[n].mesh[263][0];Math.abs(a/r)<=.15?t.push({face:n,gesture:"facing center"}):t.push({face:n,gesture:"facing "+(a<0?"left":"right")}),Math.abs(e[n].mesh[374][1]-e[n].mesh[386][1])/Math.abs(e[n].mesh[443][1]-e[n].mesh[450][1])<.2&&t.push({face:n,gesture:"blink left eye"}),Math.abs(e[n].mesh[145][1]-e[n].mesh[159][1])/Math.abs(e[n].mesh[223][1]-e[n].mesh[230][1])<.2&&t.push({face:n,gesture:"blink right eye"});const s=Math.min(100,500*Math.abs(e[n].mesh[13][1]-e[n].mesh[14][1])/Math.abs(e[n].mesh[10][1]-e[n].mesh[152][1]));s>10&&t.push({face:n,gesture:`mouth ${Math.trunc(s)}% open`});const i=e[n].mesh[152][2]||0;Math.abs(i)>10&&t.push({face:n,gesture:"head "+(i<0?"up":"down")})}return t},F0=e=>{var t,n,a,r;if(!e)return[];const s=[];for(let i=0;i<e.length;i++){if(!(null==(n=null==(t=e[i].annotations)?void 0:t.leftEyeIris)?void 0:n[0])||!(null==(r=null==(a=e[i].annotations)?void 0:a.rightEyeIris)?void 0:r[0]))continue;const o=e[i].annotations.leftEyeIris[3][0]-e[i].annotations.leftEyeIris[1][0],l=e[i].annotations.leftEyeIris[4][1]-e[i].annotations.leftEyeIris[2][1],u=Math.abs(o*l),d=e[i].annotations.rightEyeIris[3][0]-e[i].annotations.rightEyeIris[1][0],p=e[i].annotations.rightEyeIris[4][1]-e[i].annotations.rightEyeIris[2][1],h=Math.abs(d*p);let c=!1;Math.abs(u-h)/Math.max(u,h)<.25&&(c=!0,s.push({iris:i,gesture:"facing center"}));const f=Math.abs(e[i].mesh[263][0]-e[i].annotations.leftEyeIris[0][0])/e[i].box[2],m=Math.abs(e[i].mesh[33][0]-e[i].annotations.rightEyeIris[0][0])/e[i].box[2];(f>.06||m>.06)&&(c=!1),f>m?m>.04&&s.push({iris:i,gesture:"looking right"}):f>.04&&s.push({iris:i,gesture:"looking left"});const g=Math.abs(e[i].mesh[145][1]-e[i].annotations.rightEyeIris[0][1])/e[i].box[3],y=Math.abs(e[i].mesh[374][1]-e[i].annotations.leftEyeIris[0][1])/e[i].box[3];(y<.01||g<.01||y>.022||g>.022)&&(c=!1),(y<.01||g<.01)&&s.push({iris:i,gesture:"looking down"}),(y>.022||g>.022)&&s.push({iris:i,gesture:"looking up"}),c&&s.push({iris:i,gesture:"looking center"})}return s},_0=e=>{if(!e)return[];const t=[];for(let n=0;n<e.length;n++){const a=[];if(e[n].annotations)for(const[t,r]of Object.entries(e[n].annotations))"palmBase"!==t&&Array.isArray(r)&&r[0]&&a.push({name:t.toLowerCase(),position:r[0]});if(a&&a.length>0){const e=a.reduce(((e,t)=>(e.position[2]||0)<(t.position[2]||0)?e:t));t.push({hand:n,gesture:`${e.name} forward`});const r=a.reduce(((e,t)=>e.position[1]<t.position[1]?e:t));t.push({hand:n,gesture:`${r.name} up`})}if(e[n].keypoints){const a=E0(e[n].keypoints);for(const e of a)t.push({hand:n,gesture:e.name})}}return t};function P0(e){return[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])]}function O0(e){return[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2]}function D0(e,t,n){const a=t.shape[1],r=t.shape[2],s=[[e.startPoint[1]/a,e.startPoint[0]/r,e.endPoint[1]/a,e.endPoint[0]/r]];return Rc.cropAndResize(t,s,[0],n)}function z0(e,t){return{startPoint:[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],endPoint:[e.endPoint[0]*t[0],e.endPoint[1]*t[1]],palmLandmarks:e.palmLandmarks.map((e=>[e[0]*t[0],e[1]*t[1]])),confidence:e.confidence}}function L0(e,t=1.5){const n=O0(e),a=P0(e),r=[t*a[0]/2,t*a[1]/2];return{startPoint:[n[0]-r[0],n[1]-r[1]],endPoint:[n[0]+r[0],n[1]+r[1]],palmLandmarks:e.palmLandmarks}}function W0(e){const t=O0(e),n=P0(e),a=Math.max(...n)/2;return{startPoint:[t[0]-a,t[1]-a],endPoint:[t[0]+a,t[1]+a],palmLandmarks:e.palmLandmarks}}function B0(e,t){return(n=Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]))-2*Math.PI*Math.floor((n+Math.PI)/(2*Math.PI));var n}var V0=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]];function U0(e,t){let n=0;for(let a=0;a<e.length;a++)n+=e[a]*t[a];return n}function G0(e,t){const n=[];for(let a=0;a<e.length;a++)n.push(e[a][t]);return n}function H0(e,t){const n=[],a=e.length;for(let r=0;r<a;r++){n.push([]);for(let s=0;s<a;s++)n[r].push(U0(e[r],G0(t,s)))}return n}function j0(e,t){const n=Math.cos(e),a=Math.sin(e),r=[[n,-a,0],[a,n,0],[0,0,1]],s=H0(V0(t[0],t[1]),r);return H0(s,V0(-t[0],-t[1]))}function q0(e,t){return[U0(e,t[0]),U0(e,t[1])]}var X0,K0,Y0,Z0=[{x:.015625,y:.015625},{x:.015625,y:.015625},{x:.046875,y:.015625},{x:.046875,y:.015625},{x:.078125,y:.015625},{x:.078125,y:.015625},{x:.109375,y:.015625},{x:.109375,y:.015625},{x:.140625,y:.015625},{x:.140625,y:.015625},{x:.171875,y:.015625},{x:.171875,y:.015625},{x:.203125,y:.015625},{x:.203125,y:.015625},{x:.234375,y:.015625},{x:.234375,y:.015625},{x:.265625,y:.015625},{x:.265625,y:.015625},{x:.296875,y:.015625},{x:.296875,y:.015625},{x:.328125,y:.015625},{x:.328125,y:.015625},{x:.359375,y:.015625},{x:.359375,y:.015625},{x:.390625,y:.015625},{x:.390625,y:.015625},{x:.421875,y:.015625},{x:.421875,y:.015625},{x:.453125,y:.015625},{x:.453125,y:.015625},{x:.484375,y:.015625},{x:.484375,y:.015625},{x:.515625,y:.015625},{x:.515625,y:.015625},{x:.546875,y:.015625},{x:.546875,y:.015625},{x:.578125,y:.015625},{x:.578125,y:.015625},{x:.609375,y:.015625},{x:.609375,y:.015625},{x:.640625,y:.015625},{x:.640625,y:.015625},{x:.671875,y:.015625},{x:.671875,y:.015625},{x:.703125,y:.015625},{x:.703125,y:.015625},{x:.734375,y:.015625},{x:.734375,y:.015625},{x:.765625,y:.015625},{x:.765625,y:.015625},{x:.796875,y:.015625},{x:.796875,y:.015625},{x:.828125,y:.015625},{x:.828125,y:.015625},{x:.859375,y:.015625},{x:.859375,y:.015625},{x:.890625,y:.015625},{x:.890625,y:.015625},{x:.921875,y:.015625},{x:.921875,y:.015625},{x:.953125,y:.015625},{x:.953125,y:.015625},{x:.984375,y:.015625},{x:.984375,y:.015625},{x:.015625,y:.046875},{x:.015625,y:.046875},{x:.046875,y:.046875},{x:.046875,y:.046875},{x:.078125,y:.046875},{x:.078125,y:.046875},{x:.109375,y:.046875},{x:.109375,y:.046875},{x:.140625,y:.046875},{x:.140625,y:.046875},{x:.171875,y:.046875},{x:.171875,y:.046875},{x:.203125,y:.046875},{x:.203125,y:.046875},{x:.234375,y:.046875},{x:.234375,y:.046875},{x:.265625,y:.046875},{x:.265625,y:.046875},{x:.296875,y:.046875},{x:.296875,y:.046875},{x:.328125,y:.046875},{x:.328125,y:.046875},{x:.359375,y:.046875},{x:.359375,y:.046875},{x:.390625,y:.046875},{x:.390625,y:.046875},{x:.421875,y:.046875},{x:.421875,y:.046875},{x:.453125,y:.046875},{x:.453125,y:.046875},{x:.484375,y:.046875},{x:.484375,y:.046875},{x:.515625,y:.046875},{x:.515625,y:.046875},{x:.546875,y:.046875},{x:.546875,y:.046875},{x:.578125,y:.046875},{x:.578125,y:.046875},{x:.609375,y:.046875},{x:.609375,y:.046875},{x:.640625,y:.046875},{x:.640625,y:.046875},{x:.671875,y:.046875},{x:.671875,y:.046875},{x:.703125,y:.046875},{x:.703125,y:.046875},{x:.734375,y:.046875},{x:.734375,y:.046875},{x:.765625,y:.046875},{x:.765625,y:.046875},{x:.796875,y:.046875},{x:.796875,y:.046875},{x:.828125,y:.046875},{x:.828125,y:.046875},{x:.859375,y:.046875},{x:.859375,y:.046875},{x:.890625,y:.046875},{x:.890625,y:.046875},{x:.921875,y:.046875},{x:.921875,y:.046875},{x:.953125,y:.046875},{x:.953125,y:.046875},{x:.984375,y:.046875},{x:.984375,y:.046875},{x:.015625,y:.078125},{x:.015625,y:.078125},{x:.046875,y:.078125},{x:.046875,y:.078125},{x:.078125,y:.078125},{x:.078125,y:.078125},{x:.109375,y:.078125},{x:.109375,y:.078125},{x:.140625,y:.078125},{x:.140625,y:.078125},{x:.171875,y:.078125},{x:.171875,y:.078125},{x:.203125,y:.078125},{x:.203125,y:.078125},{x:.234375,y:.078125},{x:.234375,y:.078125},{x:.265625,y:.078125},{x:.265625,y:.078125},{x:.296875,y:.078125},{x:.296875,y:.078125},{x:.328125,y:.078125},{x:.328125,y:.078125},{x:.359375,y:.078125},{x:.359375,y:.078125},{x:.390625,y:.078125},{x:.390625,y:.078125},{x:.421875,y:.078125},{x:.421875,y:.078125},{x:.453125,y:.078125},{x:.453125,y:.078125},{x:.484375,y:.078125},{x:.484375,y:.078125},{x:.515625,y:.078125},{x:.515625,y:.078125},{x:.546875,y:.078125},{x:.546875,y:.078125},{x:.578125,y:.078125},{x:.578125,y:.078125},{x:.609375,y:.078125},{x:.609375,y:.078125},{x:.640625,y:.078125},{x:.640625,y:.078125},{x:.671875,y:.078125},{x:.671875,y:.078125},{x:.703125,y:.078125},{x:.703125,y:.078125},{x:.734375,y:.078125},{x:.734375,y:.078125},{x:.765625,y:.078125},{x:.765625,y:.078125},{x:.796875,y:.078125},{x:.796875,y:.078125},{x:.828125,y:.078125},{x:.828125,y:.078125},{x:.859375,y:.078125},{x:.859375,y:.078125},{x:.890625,y:.078125},{x:.890625,y:.078125},{x:.921875,y:.078125},{x:.921875,y:.078125},{x:.953125,y:.078125},{x:.953125,y:.078125},{x:.984375,y:.078125},{x:.984375,y:.078125},{x:.015625,y:.109375},{x:.015625,y:.109375},{x:.046875,y:.109375},{x:.046875,y:.109375},{x:.078125,y:.109375},{x:.078125,y:.109375},{x:.109375,y:.109375},{x:.109375,y:.109375},{x:.140625,y:.109375},{x:.140625,y:.109375},{x:.171875,y:.109375},{x:.171875,y:.109375},{x:.203125,y:.109375},{x:.203125,y:.109375},{x:.234375,y:.109375},{x:.234375,y:.109375},{x:.265625,y:.109375},{x:.265625,y:.109375},{x:.296875,y:.109375},{x:.296875,y:.109375},{x:.328125,y:.109375},{x:.328125,y:.109375},{x:.359375,y:.109375},{x:.359375,y:.109375},{x:.390625,y:.109375},{x:.390625,y:.109375},{x:.421875,y:.109375},{x:.421875,y:.109375},{x:.453125,y:.109375},{x:.453125,y:.109375},{x:.484375,y:.109375},{x:.484375,y:.109375},{x:.515625,y:.109375},{x:.515625,y:.109375},{x:.546875,y:.109375},{x:.546875,y:.109375},{x:.578125,y:.109375},{x:.578125,y:.109375},{x:.609375,y:.109375},{x:.609375,y:.109375},{x:.640625,y:.109375},{x:.640625,y:.109375},{x:.671875,y:.109375},{x:.671875,y:.109375},{x:.703125,y:.109375},{x:.703125,y:.109375},{x:.734375,y:.109375},{x:.734375,y:.109375},{x:.765625,y:.109375},{x:.765625,y:.109375},{x:.796875,y:.109375},{x:.796875,y:.109375},{x:.828125,y:.109375},{x:.828125,y:.109375},{x:.859375,y:.109375},{x:.859375,y:.109375},{x:.890625,y:.109375},{x:.890625,y:.109375},{x:.921875,y:.109375},{x:.921875,y:.109375},{x:.953125,y:.109375},{x:.953125,y:.109375},{x:.984375,y:.109375},{x:.984375,y:.109375},{x:.015625,y:.140625},{x:.015625,y:.140625},{x:.046875,y:.140625},{x:.046875,y:.140625},{x:.078125,y:.140625},{x:.078125,y:.140625},{x:.109375,y:.140625},{x:.109375,y:.140625},{x:.140625,y:.140625},{x:.140625,y:.140625},{x:.171875,y:.140625},{x:.171875,y:.140625},{x:.203125,y:.140625},{x:.203125,y:.140625},{x:.234375,y:.140625},{x:.234375,y:.140625},{x:.265625,y:.140625},{x:.265625,y:.140625},{x:.296875,y:.140625},{x:.296875,y:.140625},{x:.328125,y:.140625},{x:.328125,y:.140625},{x:.359375,y:.140625},{x:.359375,y:.140625},{x:.390625,y:.140625},{x:.390625,y:.140625},{x:.421875,y:.140625},{x:.421875,y:.140625},{x:.453125,y:.140625},{x:.453125,y:.140625},{x:.484375,y:.140625},{x:.484375,y:.140625},{x:.515625,y:.140625},{x:.515625,y:.140625},{x:.546875,y:.140625},{x:.546875,y:.140625},{x:.578125,y:.140625},{x:.578125,y:.140625},{x:.609375,y:.140625},{x:.609375,y:.140625},{x:.640625,y:.140625},{x:.640625,y:.140625},{x:.671875,y:.140625},{x:.671875,y:.140625},{x:.703125,y:.140625},{x:.703125,y:.140625},{x:.734375,y:.140625},{x:.734375,y:.140625},{x:.765625,y:.140625},{x:.765625,y:.140625},{x:.796875,y:.140625},{x:.796875,y:.140625},{x:.828125,y:.140625},{x:.828125,y:.140625},{x:.859375,y:.140625},{x:.859375,y:.140625},{x:.890625,y:.140625},{x:.890625,y:.140625},{x:.921875,y:.140625},{x:.921875,y:.140625},{x:.953125,y:.140625},{x:.953125,y:.140625},{x:.984375,y:.140625},{x:.984375,y:.140625},{x:.015625,y:.171875},{x:.015625,y:.171875},{x:.046875,y:.171875},{x:.046875,y:.171875},{x:.078125,y:.171875},{x:.078125,y:.171875},{x:.109375,y:.171875},{x:.109375,y:.171875},{x:.140625,y:.171875},{x:.140625,y:.171875},{x:.171875,y:.171875},{x:.171875,y:.171875},{x:.203125,y:.171875},{x:.203125,y:.171875},{x:.234375,y:.171875},{x:.234375,y:.171875},{x:.265625,y:.171875},{x:.265625,y:.171875},{x:.296875,y:.171875},{x:.296875,y:.171875},{x:.328125,y:.171875},{x:.328125,y:.171875},{x:.359375,y:.171875},{x:.359375,y:.171875},{x:.390625,y:.171875},{x:.390625,y:.171875},{x:.421875,y:.171875},{x:.421875,y:.171875},{x:.453125,y:.171875},{x:.453125,y:.171875},{x:.484375,y:.171875},{x:.484375,y:.171875},{x:.515625,y:.171875},{x:.515625,y:.171875},{x:.546875,y:.171875},{x:.546875,y:.171875},{x:.578125,y:.171875},{x:.578125,y:.171875},{x:.609375,y:.171875},{x:.609375,y:.171875},{x:.640625,y:.171875},{x:.640625,y:.171875},{x:.671875,y:.171875},{x:.671875,y:.171875},{x:.703125,y:.171875},{x:.703125,y:.171875},{x:.734375,y:.171875},{x:.734375,y:.171875},{x:.765625,y:.171875},{x:.765625,y:.171875},{x:.796875,y:.171875},{x:.796875,y:.171875},{x:.828125,y:.171875},{x:.828125,y:.171875},{x:.859375,y:.171875},{x:.859375,y:.171875},{x:.890625,y:.171875},{x:.890625,y:.171875},{x:.921875,y:.171875},{x:.921875,y:.171875},{x:.953125,y:.171875},{x:.953125,y:.171875},{x:.984375,y:.171875},{x:.984375,y:.171875},{x:.015625,y:.203125},{x:.015625,y:.203125},{x:.046875,y:.203125},{x:.046875,y:.203125},{x:.078125,y:.203125},{x:.078125,y:.203125},{x:.109375,y:.203125},{x:.109375,y:.203125},{x:.140625,y:.203125},{x:.140625,y:.203125},{x:.171875,y:.203125},{x:.171875,y:.203125},{x:.203125,y:.203125},{x:.203125,y:.203125},{x:.234375,y:.203125},{x:.234375,y:.203125},{x:.265625,y:.203125},{x:.265625,y:.203125},{x:.296875,y:.203125},{x:.296875,y:.203125},{x:.328125,y:.203125},{x:.328125,y:.203125},{x:.359375,y:.203125},{x:.359375,y:.203125},{x:.390625,y:.203125},{x:.390625,y:.203125},{x:.421875,y:.203125},{x:.421875,y:.203125},{x:.453125,y:.203125},{x:.453125,y:.203125},{x:.484375,y:.203125},{x:.484375,y:.203125},{x:.515625,y:.203125},{x:.515625,y:.203125},{x:.546875,y:.203125},{x:.546875,y:.203125},{x:.578125,y:.203125},{x:.578125,y:.203125},{x:.609375,y:.203125},{x:.609375,y:.203125},{x:.640625,y:.203125},{x:.640625,y:.203125},{x:.671875,y:.203125},{x:.671875,y:.203125},{x:.703125,y:.203125},{x:.703125,y:.203125},{x:.734375,y:.203125},{x:.734375,y:.203125},{x:.765625,y:.203125},{x:.765625,y:.203125},{x:.796875,y:.203125},{x:.796875,y:.203125},{x:.828125,y:.203125},{x:.828125,y:.203125},{x:.859375,y:.203125},{x:.859375,y:.203125},{x:.890625,y:.203125},{x:.890625,y:.203125},{x:.921875,y:.203125},{x:.921875,y:.203125},{x:.953125,y:.203125},{x:.953125,y:.203125},{x:.984375,y:.203125},{x:.984375,y:.203125},{x:.015625,y:.234375},{x:.015625,y:.234375},{x:.046875,y:.234375},{x:.046875,y:.234375},{x:.078125,y:.234375},{x:.078125,y:.234375},{x:.109375,y:.234375},{x:.109375,y:.234375},{x:.140625,y:.234375},{x:.140625,y:.234375},{x:.171875,y:.234375},{x:.171875,y:.234375},{x:.203125,y:.234375},{x:.203125,y:.234375},{x:.234375,y:.234375},{x:.234375,y:.234375},{x:.265625,y:.234375},{x:.265625,y:.234375},{x:.296875,y:.234375},{x:.296875,y:.234375},{x:.328125,y:.234375},{x:.328125,y:.234375},{x:.359375,y:.234375},{x:.359375,y:.234375},{x:.390625,y:.234375},{x:.390625,y:.234375},{x:.421875,y:.234375},{x:.421875,y:.234375},{x:.453125,y:.234375},{x:.453125,y:.234375},{x:.484375,y:.234375},{x:.484375,y:.234375},{x:.515625,y:.234375},{x:.515625,y:.234375},{x:.546875,y:.234375},{x:.546875,y:.234375},{x:.578125,y:.234375},{x:.578125,y:.234375},{x:.609375,y:.234375},{x:.609375,y:.234375},{x:.640625,y:.234375},{x:.640625,y:.234375},{x:.671875,y:.234375},{x:.671875,y:.234375},{x:.703125,y:.234375},{x:.703125,y:.234375},{x:.734375,y:.234375},{x:.734375,y:.234375},{x:.765625,y:.234375},{x:.765625,y:.234375},{x:.796875,y:.234375},{x:.796875,y:.234375},{x:.828125,y:.234375},{x:.828125,y:.234375},{x:.859375,y:.234375},{x:.859375,y:.234375},{x:.890625,y:.234375},{x:.890625,y:.234375},{x:.921875,y:.234375},{x:.921875,y:.234375},{x:.953125,y:.234375},{x:.953125,y:.234375},{x:.984375,y:.234375},{x:.984375,y:.234375},{x:.015625,y:.265625},{x:.015625,y:.265625},{x:.046875,y:.265625},{x:.046875,y:.265625},{x:.078125,y:.265625},{x:.078125,y:.265625},{x:.109375,y:.265625},{x:.109375,y:.265625},{x:.140625,y:.265625},{x:.140625,y:.265625},{x:.171875,y:.265625},{x:.171875,y:.265625},{x:.203125,y:.265625},{x:.203125,y:.265625},{x:.234375,y:.265625},{x:.234375,y:.265625},{x:.265625,y:.265625},{x:.265625,y:.265625},{x:.296875,y:.265625},{x:.296875,y:.265625},{x:.328125,y:.265625},{x:.328125,y:.265625},{x:.359375,y:.265625},{x:.359375,y:.265625},{x:.390625,y:.265625},{x:.390625,y:.265625},{x:.421875,y:.265625},{x:.421875,y:.265625},{x:.453125,y:.265625},{x:.453125,y:.265625},{x:.484375,y:.265625},{x:.484375,y:.265625},{x:.515625,y:.265625},{x:.515625,y:.265625},{x:.546875,y:.265625},{x:.546875,y:.265625},{x:.578125,y:.265625},{x:.578125,y:.265625},{x:.609375,y:.265625},{x:.609375,y:.265625},{x:.640625,y:.265625},{x:.640625,y:.265625},{x:.671875,y:.265625},{x:.671875,y:.265625},{x:.703125,y:.265625},{x:.703125,y:.265625},{x:.734375,y:.265625},{x:.734375,y:.265625},{x:.765625,y:.265625},{x:.765625,y:.265625},{x:.796875,y:.265625},{x:.796875,y:.265625},{x:.828125,y:.265625},{x:.828125,y:.265625},{x:.859375,y:.265625},{x:.859375,y:.265625},{x:.890625,y:.265625},{x:.890625,y:.265625},{x:.921875,y:.265625},{x:.921875,y:.265625},{x:.953125,y:.265625},{x:.953125,y:.265625},{x:.984375,y:.265625},{x:.984375,y:.265625},{x:.015625,y:.296875},{x:.015625,y:.296875},{x:.046875,y:.296875},{x:.046875,y:.296875},{x:.078125,y:.296875},{x:.078125,y:.296875},{x:.109375,y:.296875},{x:.109375,y:.296875},{x:.140625,y:.296875},{x:.140625,y:.296875},{x:.171875,y:.296875},{x:.171875,y:.296875},{x:.203125,y:.296875},{x:.203125,y:.296875},{x:.234375,y:.296875},{x:.234375,y:.296875},{x:.265625,y:.296875},{x:.265625,y:.296875},{x:.296875,y:.296875},{x:.296875,y:.296875},{x:.328125,y:.296875},{x:.328125,y:.296875},{x:.359375,y:.296875},{x:.359375,y:.296875},{x:.390625,y:.296875},{x:.390625,y:.296875},{x:.421875,y:.296875},{x:.421875,y:.296875},{x:.453125,y:.296875},{x:.453125,y:.296875},{x:.484375,y:.296875},{x:.484375,y:.296875},{x:.515625,y:.296875},{x:.515625,y:.296875},{x:.546875,y:.296875},{x:.546875,y:.296875},{x:.578125,y:.296875},{x:.578125,y:.296875},{x:.609375,y:.296875},{x:.609375,y:.296875},{x:.640625,y:.296875},{x:.640625,y:.296875},{x:.671875,y:.296875},{x:.671875,y:.296875},{x:.703125,y:.296875},{x:.703125,y:.296875},{x:.734375,y:.296875},{x:.734375,y:.296875},{x:.765625,y:.296875},{x:.765625,y:.296875},{x:.796875,y:.296875},{x:.796875,y:.296875},{x:.828125,y:.296875},{x:.828125,y:.296875},{x:.859375,y:.296875},{x:.859375,y:.296875},{x:.890625,y:.296875},{x:.890625,y:.296875},{x:.921875,y:.296875},{x:.921875,y:.296875},{x:.953125,y:.296875},{x:.953125,y:.296875},{x:.984375,y:.296875},{x:.984375,y:.296875},{x:.015625,y:.328125},{x:.015625,y:.328125},{x:.046875,y:.328125},{x:.046875,y:.328125},{x:.078125,y:.328125},{x:.078125,y:.328125},{x:.109375,y:.328125},{x:.109375,y:.328125},{x:.140625,y:.328125},{x:.140625,y:.328125},{x:.171875,y:.328125},{x:.171875,y:.328125},{x:.203125,y:.328125},{x:.203125,y:.328125},{x:.234375,y:.328125},{x:.234375,y:.328125},{x:.265625,y:.328125},{x:.265625,y:.328125},{x:.296875,y:.328125},{x:.296875,y:.328125},{x:.328125,y:.328125},{x:.328125,y:.328125},{x:.359375,y:.328125},{x:.359375,y:.328125},{x:.390625,y:.328125},{x:.390625,y:.328125},{x:.421875,y:.328125},{x:.421875,y:.328125},{x:.453125,y:.328125},{x:.453125,y:.328125},{x:.484375,y:.328125},{x:.484375,y:.328125},{x:.515625,y:.328125},{x:.515625,y:.328125},{x:.546875,y:.328125},{x:.546875,y:.328125},{x:.578125,y:.328125},{x:.578125,y:.328125},{x:.609375,y:.328125},{x:.609375,y:.328125},{x:.640625,y:.328125},{x:.640625,y:.328125},{x:.671875,y:.328125},{x:.671875,y:.328125},{x:.703125,y:.328125},{x:.703125,y:.328125},{x:.734375,y:.328125},{x:.734375,y:.328125},{x:.765625,y:.328125},{x:.765625,y:.328125},{x:.796875,y:.328125},{x:.796875,y:.328125},{x:.828125,y:.328125},{x:.828125,y:.328125},{x:.859375,y:.328125},{x:.859375,y:.328125},{x:.890625,y:.328125},{x:.890625,y:.328125},{x:.921875,y:.328125},{x:.921875,y:.328125},{x:.953125,y:.328125},{x:.953125,y:.328125},{x:.984375,y:.328125},{x:.984375,y:.328125},{x:.015625,y:.359375},{x:.015625,y:.359375},{x:.046875,y:.359375},{x:.046875,y:.359375},{x:.078125,y:.359375},{x:.078125,y:.359375},{x:.109375,y:.359375},{x:.109375,y:.359375},{x:.140625,y:.359375},{x:.140625,y:.359375},{x:.171875,y:.359375},{x:.171875,y:.359375},{x:.203125,y:.359375},{x:.203125,y:.359375},{x:.234375,y:.359375},{x:.234375,y:.359375},{x:.265625,y:.359375},{x:.265625,y:.359375},{x:.296875,y:.359375},{x:.296875,y:.359375},{x:.328125,y:.359375},{x:.328125,y:.359375},{x:.359375,y:.359375},{x:.359375,y:.359375},{x:.390625,y:.359375},{x:.390625,y:.359375},{x:.421875,y:.359375},{x:.421875,y:.359375},{x:.453125,y:.359375},{x:.453125,y:.359375},{x:.484375,y:.359375},{x:.484375,y:.359375},{x:.515625,y:.359375},{x:.515625,y:.359375},{x:.546875,y:.359375},{x:.546875,y:.359375},{x:.578125,y:.359375},{x:.578125,y:.359375},{x:.609375,y:.359375},{x:.609375,y:.359375},{x:.640625,y:.359375},{x:.640625,y:.359375},{x:.671875,y:.359375},{x:.671875,y:.359375},{x:.703125,y:.359375},{x:.703125,y:.359375},{x:.734375,y:.359375},{x:.734375,y:.359375},{x:.765625,y:.359375},{x:.765625,y:.359375},{x:.796875,y:.359375},{x:.796875,y:.359375},{x:.828125,y:.359375},{x:.828125,y:.359375},{x:.859375,y:.359375},{x:.859375,y:.359375},{x:.890625,y:.359375},{x:.890625,y:.359375},{x:.921875,y:.359375},{x:.921875,y:.359375},{x:.953125,y:.359375},{x:.953125,y:.359375},{x:.984375,y:.359375},{x:.984375,y:.359375},{x:.015625,y:.390625},{x:.015625,y:.390625},{x:.046875,y:.390625},{x:.046875,y:.390625},{x:.078125,y:.390625},{x:.078125,y:.390625},{x:.109375,y:.390625},{x:.109375,y:.390625},{x:.140625,y:.390625},{x:.140625,y:.390625},{x:.171875,y:.390625},{x:.171875,y:.390625},{x:.203125,y:.390625},{x:.203125,y:.390625},{x:.234375,y:.390625},{x:.234375,y:.390625},{x:.265625,y:.390625},{x:.265625,y:.390625},{x:.296875,y:.390625},{x:.296875,y:.390625},{x:.328125,y:.390625},{x:.328125,y:.390625},{x:.359375,y:.390625},{x:.359375,y:.390625},{x:.390625,y:.390625},{x:.390625,y:.390625},{x:.421875,y:.390625},{x:.421875,y:.390625},{x:.453125,y:.390625},{x:.453125,y:.390625},{x:.484375,y:.390625},{x:.484375,y:.390625},{x:.515625,y:.390625},{x:.515625,y:.390625},{x:.546875,y:.390625},{x:.546875,y:.390625},{x:.578125,y:.390625},{x:.578125,y:.390625},{x:.609375,y:.390625},{x:.609375,y:.390625},{x:.640625,y:.390625},{x:.640625,y:.390625},{x:.671875,y:.390625},{x:.671875,y:.390625},{x:.703125,y:.390625},{x:.703125,y:.390625},{x:.734375,y:.390625},{x:.734375,y:.390625},{x:.765625,y:.390625},{x:.765625,y:.390625},{x:.796875,y:.390625},{x:.796875,y:.390625},{x:.828125,y:.390625},{x:.828125,y:.390625},{x:.859375,y:.390625},{x:.859375,y:.390625},{x:.890625,y:.390625},{x:.890625,y:.390625},{x:.921875,y:.390625},{x:.921875,y:.390625},{x:.953125,y:.390625},{x:.953125,y:.390625},{x:.984375,y:.390625},{x:.984375,y:.390625},{x:.015625,y:.421875},{x:.015625,y:.421875},{x:.046875,y:.421875},{x:.046875,y:.421875},{x:.078125,y:.421875},{x:.078125,y:.421875},{x:.109375,y:.421875},{x:.109375,y:.421875},{x:.140625,y:.421875},{x:.140625,y:.421875},{x:.171875,y:.421875},{x:.171875,y:.421875},{x:.203125,y:.421875},{x:.203125,y:.421875},{x:.234375,y:.421875},{x:.234375,y:.421875},{x:.265625,y:.421875},{x:.265625,y:.421875},{x:.296875,y:.421875},{x:.296875,y:.421875},{x:.328125,y:.421875},{x:.328125,y:.421875},{x:.359375,y:.421875},{x:.359375,y:.421875},{x:.390625,y:.421875},{x:.390625,y:.421875},{x:.421875,y:.421875},{x:.421875,y:.421875},{x:.453125,y:.421875},{x:.453125,y:.421875},{x:.484375,y:.421875},{x:.484375,y:.421875},{x:.515625,y:.421875},{x:.515625,y:.421875},{x:.546875,y:.421875},{x:.546875,y:.421875},{x:.578125,y:.421875},{x:.578125,y:.421875},{x:.609375,y:.421875},{x:.609375,y:.421875},{x:.640625,y:.421875},{x:.640625,y:.421875},{x:.671875,y:.421875},{x:.671875,y:.421875},{x:.703125,y:.421875},{x:.703125,y:.421875},{x:.734375,y:.421875},{x:.734375,y:.421875},{x:.765625,y:.421875},{x:.765625,y:.421875},{x:.796875,y:.421875},{x:.796875,y:.421875},{x:.828125,y:.421875},{x:.828125,y:.421875},{x:.859375,y:.421875},{x:.859375,y:.421875},{x:.890625,y:.421875},{x:.890625,y:.421875},{x:.921875,y:.421875},{x:.921875,y:.421875},{x:.953125,y:.421875},{x:.953125,y:.421875},{x:.984375,y:.421875},{x:.984375,y:.421875},{x:.015625,y:.453125},{x:.015625,y:.453125},{x:.046875,y:.453125},{x:.046875,y:.453125},{x:.078125,y:.453125},{x:.078125,y:.453125},{x:.109375,y:.453125},{x:.109375,y:.453125},{x:.140625,y:.453125},{x:.140625,y:.453125},{x:.171875,y:.453125},{x:.171875,y:.453125},{x:.203125,y:.453125},{x:.203125,y:.453125},{x:.234375,y:.453125},{x:.234375,y:.453125},{x:.265625,y:.453125},{x:.265625,y:.453125},{x:.296875,y:.453125},{x:.296875,y:.453125},{x:.328125,y:.453125},{x:.328125,y:.453125},{x:.359375,y:.453125},{x:.359375,y:.453125},{x:.390625,y:.453125},{x:.390625,y:.453125},{x:.421875,y:.453125},{x:.421875,y:.453125},{x:.453125,y:.453125},{x:.453125,y:.453125},{x:.484375,y:.453125},{x:.484375,y:.453125},{x:.515625,y:.453125},{x:.515625,y:.453125},{x:.546875,y:.453125},{x:.546875,y:.453125},{x:.578125,y:.453125},{x:.578125,y:.453125},{x:.609375,y:.453125},{x:.609375,y:.453125},{x:.640625,y:.453125},{x:.640625,y:.453125},{x:.671875,y:.453125},{x:.671875,y:.453125},{x:.703125,y:.453125},{x:.703125,y:.453125},{x:.734375,y:.453125},{x:.734375,y:.453125},{x:.765625,y:.453125},{x:.765625,y:.453125},{x:.796875,y:.453125},{x:.796875,y:.453125},{x:.828125,y:.453125},{x:.828125,y:.453125},{x:.859375,y:.453125},{x:.859375,y:.453125},{x:.890625,y:.453125},{x:.890625,y:.453125},{x:.921875,y:.453125},{x:.921875,y:.453125},{x:.953125,y:.453125},{x:.953125,y:.453125},{x:.984375,y:.453125},{x:.984375,y:.453125},{x:.015625,y:.484375},{x:.015625,y:.484375},{x:.046875,y:.484375},{x:.046875,y:.484375},{x:.078125,y:.484375},{x:.078125,y:.484375},{x:.109375,y:.484375},{x:.109375,y:.484375},{x:.140625,y:.484375},{x:.140625,y:.484375},{x:.171875,y:.484375},{x:.171875,y:.484375},{x:.203125,y:.484375},{x:.203125,y:.484375},{x:.234375,y:.484375},{x:.234375,y:.484375},{x:.265625,y:.484375},{x:.265625,y:.484375},{x:.296875,y:.484375},{x:.296875,y:.484375},{x:.328125,y:.484375},{x:.328125,y:.484375},{x:.359375,y:.484375},{x:.359375,y:.484375},{x:.390625,y:.484375},{x:.390625,y:.484375},{x:.421875,y:.484375},{x:.421875,y:.484375},{x:.453125,y:.484375},{x:.453125,y:.484375},{x:.484375,y:.484375},{x:.484375,y:.484375},{x:.515625,y:.484375},{x:.515625,y:.484375},{x:.546875,y:.484375},{x:.546875,y:.484375},{x:.578125,y:.484375},{x:.578125,y:.484375},{x:.609375,y:.484375},{x:.609375,y:.484375},{x:.640625,y:.484375},{x:.640625,y:.484375},{x:.671875,y:.484375},{x:.671875,y:.484375},{x:.703125,y:.484375},{x:.703125,y:.484375},{x:.734375,y:.484375},{x:.734375,y:.484375},{x:.765625,y:.484375},{x:.765625,y:.484375},{x:.796875,y:.484375},{x:.796875,y:.484375},{x:.828125,y:.484375},{x:.828125,y:.484375},{x:.859375,y:.484375},{x:.859375,y:.484375},{x:.890625,y:.484375},{x:.890625,y:.484375},{x:.921875,y:.484375},{x:.921875,y:.484375},{x:.953125,y:.484375},{x:.953125,y:.484375},{x:.984375,y:.484375},{x:.984375,y:.484375},{x:.015625,y:.515625},{x:.015625,y:.515625},{x:.046875,y:.515625},{x:.046875,y:.515625},{x:.078125,y:.515625},{x:.078125,y:.515625},{x:.109375,y:.515625},{x:.109375,y:.515625},{x:.140625,y:.515625},{x:.140625,y:.515625},{x:.171875,y:.515625},{x:.171875,y:.515625},{x:.203125,y:.515625},{x:.203125,y:.515625},{x:.234375,y:.515625},{x:.234375,y:.515625},{x:.265625,y:.515625},{x:.265625,y:.515625},{x:.296875,y:.515625},{x:.296875,y:.515625},{x:.328125,y:.515625},{x:.328125,y:.515625},{x:.359375,y:.515625},{x:.359375,y:.515625},{x:.390625,y:.515625},{x:.390625,y:.515625},{x:.421875,y:.515625},{x:.421875,y:.515625},{x:.453125,y:.515625},{x:.453125,y:.515625},{x:.484375,y:.515625},{x:.484375,y:.515625},{x:.515625,y:.515625},{x:.515625,y:.515625},{x:.546875,y:.515625},{x:.546875,y:.515625},{x:.578125,y:.515625},{x:.578125,y:.515625},{x:.609375,y:.515625},{x:.609375,y:.515625},{x:.640625,y:.515625},{x:.640625,y:.515625},{x:.671875,y:.515625},{x:.671875,y:.515625},{x:.703125,y:.515625},{x:.703125,y:.515625},{x:.734375,y:.515625},{x:.734375,y:.515625},{x:.765625,y:.515625},{x:.765625,y:.515625},{x:.796875,y:.515625},{x:.796875,y:.515625},{x:.828125,y:.515625},{x:.828125,y:.515625},{x:.859375,y:.515625},{x:.859375,y:.515625},{x:.890625,y:.515625},{x:.890625,y:.515625},{x:.921875,y:.515625},{x:.921875,y:.515625},{x:.953125,y:.515625},{x:.953125,y:.515625},{x:.984375,y:.515625},{x:.984375,y:.515625},{x:.015625,y:.546875},{x:.015625,y:.546875},{x:.046875,y:.546875},{x:.046875,y:.546875},{x:.078125,y:.546875},{x:.078125,y:.546875},{x:.109375,y:.546875},{x:.109375,y:.546875},{x:.140625,y:.546875},{x:.140625,y:.546875},{x:.171875,y:.546875},{x:.171875,y:.546875},{x:.203125,y:.546875},{x:.203125,y:.546875},{x:.234375,y:.546875},{x:.234375,y:.546875},{x:.265625,y:.546875},{x:.265625,y:.546875},{x:.296875,y:.546875},{x:.296875,y:.546875},{x:.328125,y:.546875},{x:.328125,y:.546875},{x:.359375,y:.546875},{x:.359375,y:.546875},{x:.390625,y:.546875},{x:.390625,y:.546875},{x:.421875,y:.546875},{x:.421875,y:.546875},{x:.453125,y:.546875},{x:.453125,y:.546875},{x:.484375,y:.546875},{x:.484375,y:.546875},{x:.515625,y:.546875},{x:.515625,y:.546875},{x:.546875,y:.546875},{x:.546875,y:.546875},{x:.578125,y:.546875},{x:.578125,y:.546875},{x:.609375,y:.546875},{x:.609375,y:.546875},{x:.640625,y:.546875},{x:.640625,y:.546875},{x:.671875,y:.546875},{x:.671875,y:.546875},{x:.703125,y:.546875},{x:.703125,y:.546875},{x:.734375,y:.546875},{x:.734375,y:.546875},{x:.765625,y:.546875},{x:.765625,y:.546875},{x:.796875,y:.546875},{x:.796875,y:.546875},{x:.828125,y:.546875},{x:.828125,y:.546875},{x:.859375,y:.546875},{x:.859375,y:.546875},{x:.890625,y:.546875},{x:.890625,y:.546875},{x:.921875,y:.546875},{x:.921875,y:.546875},{x:.953125,y:.546875},{x:.953125,y:.546875},{x:.984375,y:.546875},{x:.984375,y:.546875},{x:.015625,y:.578125},{x:.015625,y:.578125},{x:.046875,y:.578125},{x:.046875,y:.578125},{x:.078125,y:.578125},{x:.078125,y:.578125},{x:.109375,y:.578125},{x:.109375,y:.578125},{x:.140625,y:.578125},{x:.140625,y:.578125},{x:.171875,y:.578125},{x:.171875,y:.578125},{x:.203125,y:.578125},{x:.203125,y:.578125},{x:.234375,y:.578125},{x:.234375,y:.578125},{x:.265625,y:.578125},{x:.265625,y:.578125},{x:.296875,y:.578125},{x:.296875,y:.578125},{x:.328125,y:.578125},{x:.328125,y:.578125},{x:.359375,y:.578125},{x:.359375,y:.578125},{x:.390625,y:.578125},{x:.390625,y:.578125},{x:.421875,y:.578125},{x:.421875,y:.578125},{x:.453125,y:.578125},{x:.453125,y:.578125},{x:.484375,y:.578125},{x:.484375,y:.578125},{x:.515625,y:.578125},{x:.515625,y:.578125},{x:.546875,y:.578125},{x:.546875,y:.578125},{x:.578125,y:.578125},{x:.578125,y:.578125},{x:.609375,y:.578125},{x:.609375,y:.578125},{x:.640625,y:.578125},{x:.640625,y:.578125},{x:.671875,y:.578125},{x:.671875,y:.578125},{x:.703125,y:.578125},{x:.703125,y:.578125},{x:.734375,y:.578125},{x:.734375,y:.578125},{x:.765625,y:.578125},{x:.765625,y:.578125},{x:.796875,y:.578125},{x:.796875,y:.578125},{x:.828125,y:.578125},{x:.828125,y:.578125},{x:.859375,y:.578125},{x:.859375,y:.578125},{x:.890625,y:.578125},{x:.890625,y:.578125},{x:.921875,y:.578125},{x:.921875,y:.578125},{x:.953125,y:.578125},{x:.953125,y:.578125},{x:.984375,y:.578125},{x:.984375,y:.578125},{x:.015625,y:.609375},{x:.015625,y:.609375},{x:.046875,y:.609375},{x:.046875,y:.609375},{x:.078125,y:.609375},{x:.078125,y:.609375},{x:.109375,y:.609375},{x:.109375,y:.609375},{x:.140625,y:.609375},{x:.140625,y:.609375},{x:.171875,y:.609375},{x:.171875,y:.609375},{x:.203125,y:.609375},{x:.203125,y:.609375},{x:.234375,y:.609375},{x:.234375,y:.609375},{x:.265625,y:.609375},{x:.265625,y:.609375},{x:.296875,y:.609375},{x:.296875,y:.609375},{x:.328125,y:.609375},{x:.328125,y:.609375},{x:.359375,y:.609375},{x:.359375,y:.609375},{x:.390625,y:.609375},{x:.390625,y:.609375},{x:.421875,y:.609375},{x:.421875,y:.609375},{x:.453125,y:.609375},{x:.453125,y:.609375},{x:.484375,y:.609375},{x:.484375,y:.609375},{x:.515625,y:.609375},{x:.515625,y:.609375},{x:.546875,y:.609375},{x:.546875,y:.609375},{x:.578125,y:.609375},{x:.578125,y:.609375},{x:.609375,y:.609375},{x:.609375,y:.609375},{x:.640625,y:.609375},{x:.640625,y:.609375},{x:.671875,y:.609375},{x:.671875,y:.609375},{x:.703125,y:.609375},{x:.703125,y:.609375},{x:.734375,y:.609375},{x:.734375,y:.609375},{x:.765625,y:.609375},{x:.765625,y:.609375},{x:.796875,y:.609375},{x:.796875,y:.609375},{x:.828125,y:.609375},{x:.828125,y:.609375},{x:.859375,y:.609375},{x:.859375,y:.609375},{x:.890625,y:.609375},{x:.890625,y:.609375},{x:.921875,y:.609375},{x:.921875,y:.609375},{x:.953125,y:.609375},{x:.953125,y:.609375},{x:.984375,y:.609375},{x:.984375,y:.609375},{x:.015625,y:.640625},{x:.015625,y:.640625},{x:.046875,y:.640625},{x:.046875,y:.640625},{x:.078125,y:.640625},{x:.078125,y:.640625},{x:.109375,y:.640625},{x:.109375,y:.640625},{x:.140625,y:.640625},{x:.140625,y:.640625},{x:.171875,y:.640625},{x:.171875,y:.640625},{x:.203125,y:.640625},{x:.203125,y:.640625},{x:.234375,y:.640625},{x:.234375,y:.640625},{x:.265625,y:.640625},{x:.265625,y:.640625},{x:.296875,y:.640625},{x:.296875,y:.640625},{x:.328125,y:.640625},{x:.328125,y:.640625},{x:.359375,y:.640625},{x:.359375,y:.640625},{x:.390625,y:.640625},{x:.390625,y:.640625},{x:.421875,y:.640625},{x:.421875,y:.640625},{x:.453125,y:.640625},{x:.453125,y:.640625},{x:.484375,y:.640625},{x:.484375,y:.640625},{x:.515625,y:.640625},{x:.515625,y:.640625},{x:.546875,y:.640625},{x:.546875,y:.640625},{x:.578125,y:.640625},{x:.578125,y:.640625},{x:.609375,y:.640625},{x:.609375,y:.640625},{x:.640625,y:.640625},{x:.640625,y:.640625},{x:.671875,y:.640625},{x:.671875,y:.640625},{x:.703125,y:.640625},{x:.703125,y:.640625},{x:.734375,y:.640625},{x:.734375,y:.640625},{x:.765625,y:.640625},{x:.765625,y:.640625},{x:.796875,y:.640625},{x:.796875,y:.640625},{x:.828125,y:.640625},{x:.828125,y:.640625},{x:.859375,y:.640625},{x:.859375,y:.640625},{x:.890625,y:.640625},{x:.890625,y:.640625},{x:.921875,y:.640625},{x:.921875,y:.640625},{x:.953125,y:.640625},{x:.953125,y:.640625},{x:.984375,y:.640625},{x:.984375,y:.640625},{x:.015625,y:.671875},{x:.015625,y:.671875},{x:.046875,y:.671875},{x:.046875,y:.671875},{x:.078125,y:.671875},{x:.078125,y:.671875},{x:.109375,y:.671875},{x:.109375,y:.671875},{x:.140625,y:.671875},{x:.140625,y:.671875},{x:.171875,y:.671875},{x:.171875,y:.671875},{x:.203125,y:.671875},{x:.203125,y:.671875},{x:.234375,y:.671875},{x:.234375,y:.671875},{x:.265625,y:.671875},{x:.265625,y:.671875},{x:.296875,y:.671875},{x:.296875,y:.671875},{x:.328125,y:.671875},{x:.328125,y:.671875},{x:.359375,y:.671875},{x:.359375,y:.671875},{x:.390625,y:.671875},{x:.390625,y:.671875},{x:.421875,y:.671875},{x:.421875,y:.671875},{x:.453125,y:.671875},{x:.453125,y:.671875},{x:.484375,y:.671875},{x:.484375,y:.671875},{x:.515625,y:.671875},{x:.515625,y:.671875},{x:.546875,y:.671875},{x:.546875,y:.671875},{x:.578125,y:.671875},{x:.578125,y:.671875},{x:.609375,y:.671875},{x:.609375,y:.671875},{x:.640625,y:.671875},{x:.640625,y:.671875},{x:.671875,y:.671875},{x:.671875,y:.671875},{x:.703125,y:.671875},{x:.703125,y:.671875},{x:.734375,y:.671875},{x:.734375,y:.671875},{x:.765625,y:.671875},{x:.765625,y:.671875},{x:.796875,y:.671875},{x:.796875,y:.671875},{x:.828125,y:.671875},{x:.828125,y:.671875},{x:.859375,y:.671875},{x:.859375,y:.671875},{x:.890625,y:.671875},{x:.890625,y:.671875},{x:.921875,y:.671875},{x:.921875,y:.671875},{x:.953125,y:.671875},{x:.953125,y:.671875},{x:.984375,y:.671875},{x:.984375,y:.671875},{x:.015625,y:.703125},{x:.015625,y:.703125},{x:.046875,y:.703125},{x:.046875,y:.703125},{x:.078125,y:.703125},{x:.078125,y:.703125},{x:.109375,y:.703125},{x:.109375,y:.703125},{x:.140625,y:.703125},{x:.140625,y:.703125},{x:.171875,y:.703125},{x:.171875,y:.703125},{x:.203125,y:.703125},{x:.203125,y:.703125},{x:.234375,y:.703125},{x:.234375,y:.703125},{x:.265625,y:.703125},{x:.265625,y:.703125},{x:.296875,y:.703125},{x:.296875,y:.703125},{x:.328125,y:.703125},{x:.328125,y:.703125},{x:.359375,y:.703125},{x:.359375,y:.703125},{x:.390625,y:.703125},{x:.390625,y:.703125},{x:.421875,y:.703125},{x:.421875,y:.703125},{x:.453125,y:.703125},{x:.453125,y:.703125},{x:.484375,y:.703125},{x:.484375,y:.703125},{x:.515625,y:.703125},{x:.515625,y:.703125},{x:.546875,y:.703125},{x:.546875,y:.703125},{x:.578125,y:.703125},{x:.578125,y:.703125},{x:.609375,y:.703125},{x:.609375,y:.703125},{x:.640625,y:.703125},{x:.640625,y:.703125},{x:.671875,y:.703125},{x:.671875,y:.703125},{x:.703125,y:.703125},{x:.703125,y:.703125},{x:.734375,y:.703125},{x:.734375,y:.703125},{x:.765625,y:.703125},{x:.765625,y:.703125},{x:.796875,y:.703125},{x:.796875,y:.703125},{x:.828125,y:.703125},{x:.828125,y:.703125},{x:.859375,y:.703125},{x:.859375,y:.703125},{x:.890625,y:.703125},{x:.890625,y:.703125},{x:.921875,y:.703125},{x:.921875,y:.703125},{x:.953125,y:.703125},{x:.953125,y:.703125},{x:.984375,y:.703125},{x:.984375,y:.703125},{x:.015625,y:.734375},{x:.015625,y:.734375},{x:.046875,y:.734375},{x:.046875,y:.734375},{x:.078125,y:.734375},{x:.078125,y:.734375},{x:.109375,y:.734375},{x:.109375,y:.734375},{x:.140625,y:.734375},{x:.140625,y:.734375},{x:.171875,y:.734375},{x:.171875,y:.734375},{x:.203125,y:.734375},{x:.203125,y:.734375},{x:.234375,y:.734375},{x:.234375,y:.734375},{x:.265625,y:.734375},{x:.265625,y:.734375},{x:.296875,y:.734375},{x:.296875,y:.734375},{x:.328125,y:.734375},{x:.328125,y:.734375},{x:.359375,y:.734375},{x:.359375,y:.734375},{x:.390625,y:.734375},{x:.390625,y:.734375},{x:.421875,y:.734375},{x:.421875,y:.734375},{x:.453125,y:.734375},{x:.453125,y:.734375},{x:.484375,y:.734375},{x:.484375,y:.734375},{x:.515625,y:.734375},{x:.515625,y:.734375},{x:.546875,y:.734375},{x:.546875,y:.734375},{x:.578125,y:.734375},{x:.578125,y:.734375},{x:.609375,y:.734375},{x:.609375,y:.734375},{x:.640625,y:.734375},{x:.640625,y:.734375},{x:.671875,y:.734375},{x:.671875,y:.734375},{x:.703125,y:.734375},{x:.703125,y:.734375},{x:.734375,y:.734375},{x:.734375,y:.734375},{x:.765625,y:.734375},{x:.765625,y:.734375},{x:.796875,y:.734375},{x:.796875,y:.734375},{x:.828125,y:.734375},{x:.828125,y:.734375},{x:.859375,y:.734375},{x:.859375,y:.734375},{x:.890625,y:.734375},{x:.890625,y:.734375},{x:.921875,y:.734375},{x:.921875,y:.734375},{x:.953125,y:.734375},{x:.953125,y:.734375},{x:.984375,y:.734375},{x:.984375,y:.734375},{x:.015625,y:.765625},{x:.015625,y:.765625},{x:.046875,y:.765625},{x:.046875,y:.765625},{x:.078125,y:.765625},{x:.078125,y:.765625},{x:.109375,y:.765625},{x:.109375,y:.765625},{x:.140625,y:.765625},{x:.140625,y:.765625},{x:.171875,y:.765625},{x:.171875,y:.765625},{x:.203125,y:.765625},{x:.203125,y:.765625},{x:.234375,y:.765625},{x:.234375,y:.765625},{x:.265625,y:.765625},{x:.265625,y:.765625},{x:.296875,y:.765625},{x:.296875,y:.765625},{x:.328125,y:.765625},{x:.328125,y:.765625},{x:.359375,y:.765625},{x:.359375,y:.765625},{x:.390625,y:.765625},{x:.390625,y:.765625},{x:.421875,y:.765625},{x:.421875,y:.765625},{x:.453125,y:.765625},{x:.453125,y:.765625},{x:.484375,y:.765625},{x:.484375,y:.765625},{x:.515625,y:.765625},{x:.515625,y:.765625},{x:.546875,y:.765625},{x:.546875,y:.765625},{x:.578125,y:.765625},{x:.578125,y:.765625},{x:.609375,y:.765625},{x:.609375,y:.765625},{x:.640625,y:.765625},{x:.640625,y:.765625},{x:.671875,y:.765625},{x:.671875,y:.765625},{x:.703125,y:.765625},{x:.703125,y:.765625},{x:.734375,y:.765625},{x:.734375,y:.765625},{x:.765625,y:.765625},{x:.765625,y:.765625},{x:.796875,y:.765625},{x:.796875,y:.765625},{x:.828125,y:.765625},{x:.828125,y:.765625},{x:.859375,y:.765625},{x:.859375,y:.765625},{x:.890625,y:.765625},{x:.890625,y:.765625},{x:.921875,y:.765625},{x:.921875,y:.765625},{x:.953125,y:.765625},{x:.953125,y:.765625},{x:.984375,y:.765625},{x:.984375,y:.765625},{x:.015625,y:.796875},{x:.015625,y:.796875},{x:.046875,y:.796875},{x:.046875,y:.796875},{x:.078125,y:.796875},{x:.078125,y:.796875},{x:.109375,y:.796875},{x:.109375,y:.796875},{x:.140625,y:.796875},{x:.140625,y:.796875},{x:.171875,y:.796875},{x:.171875,y:.796875},{x:.203125,y:.796875},{x:.203125,y:.796875},{x:.234375,y:.796875},{x:.234375,y:.796875},{x:.265625,y:.796875},{x:.265625,y:.796875},{x:.296875,y:.796875},{x:.296875,y:.796875},{x:.328125,y:.796875},{x:.328125,y:.796875},{x:.359375,y:.796875},{x:.359375,y:.796875},{x:.390625,y:.796875},{x:.390625,y:.796875},{x:.421875,y:.796875},{x:.421875,y:.796875},{x:.453125,y:.796875},{x:.453125,y:.796875},{x:.484375,y:.796875},{x:.484375,y:.796875},{x:.515625,y:.796875},{x:.515625,y:.796875},{x:.546875,y:.796875},{x:.546875,y:.796875},{x:.578125,y:.796875},{x:.578125,y:.796875},{x:.609375,y:.796875},{x:.609375,y:.796875},{x:.640625,y:.796875},{x:.640625,y:.796875},{x:.671875,y:.796875},{x:.671875,y:.796875},{x:.703125,y:.796875},{x:.703125,y:.796875},{x:.734375,y:.796875},{x:.734375,y:.796875},{x:.765625,y:.796875},{x:.765625,y:.796875},{x:.796875,y:.796875},{x:.796875,y:.796875},{x:.828125,y:.796875},{x:.828125,y:.796875},{x:.859375,y:.796875},{x:.859375,y:.796875},{x:.890625,y:.796875},{x:.890625,y:.796875},{x:.921875,y:.796875},{x:.921875,y:.796875},{x:.953125,y:.796875},{x:.953125,y:.796875},{x:.984375,y:.796875},{x:.984375,y:.796875},{x:.015625,y:.828125},{x:.015625,y:.828125},{x:.046875,y:.828125},{x:.046875,y:.828125},{x:.078125,y:.828125},{x:.078125,y:.828125},{x:.109375,y:.828125},{x:.109375,y:.828125},{x:.140625,y:.828125},{x:.140625,y:.828125},{x:.171875,y:.828125},{x:.171875,y:.828125},{x:.203125,y:.828125},{x:.203125,y:.828125},{x:.234375,y:.828125},{x:.234375,y:.828125},{x:.265625,y:.828125},{x:.265625,y:.828125},{x:.296875,y:.828125},{x:.296875,y:.828125},{x:.328125,y:.828125},{x:.328125,y:.828125},{x:.359375,y:.828125},{x:.359375,y:.828125},{x:.390625,y:.828125},{x:.390625,y:.828125},{x:.421875,y:.828125},{x:.421875,y:.828125},{x:.453125,y:.828125},{x:.453125,y:.828125},{x:.484375,y:.828125},{x:.484375,y:.828125},{x:.515625,y:.828125},{x:.515625,y:.828125},{x:.546875,y:.828125},{x:.546875,y:.828125},{x:.578125,y:.828125},{x:.578125,y:.828125},{x:.609375,y:.828125},{x:.609375,y:.828125},{x:.640625,y:.828125},{x:.640625,y:.828125},{x:.671875,y:.828125},{x:.671875,y:.828125},{x:.703125,y:.828125},{x:.703125,y:.828125},{x:.734375,y:.828125},{x:.734375,y:.828125},{x:.765625,y:.828125},{x:.765625,y:.828125},{x:.796875,y:.828125},{x:.796875,y:.828125},{x:.828125,y:.828125},{x:.828125,y:.828125},{x:.859375,y:.828125},{x:.859375,y:.828125},{x:.890625,y:.828125},{x:.890625,y:.828125},{x:.921875,y:.828125},{x:.921875,y:.828125},{x:.953125,y:.828125},{x:.953125,y:.828125},{x:.984375,y:.828125},{x:.984375,y:.828125},{x:.015625,y:.859375},{x:.015625,y:.859375},{x:.046875,y:.859375},{x:.046875,y:.859375},{x:.078125,y:.859375},{x:.078125,y:.859375},{x:.109375,y:.859375},{x:.109375,y:.859375},{x:.140625,y:.859375},{x:.140625,y:.859375},{x:.171875,y:.859375},{x:.171875,y:.859375},{x:.203125,y:.859375},{x:.203125,y:.859375},{x:.234375,y:.859375},{x:.234375,y:.859375},{x:.265625,y:.859375},{x:.265625,y:.859375},{x:.296875,y:.859375},{x:.296875,y:.859375},{x:.328125,y:.859375},{x:.328125,y:.859375},{x:.359375,y:.859375},{x:.359375,y:.859375},{x:.390625,y:.859375},{x:.390625,y:.859375},{x:.421875,y:.859375},{x:.421875,y:.859375},{x:.453125,y:.859375},{x:.453125,y:.859375},{x:.484375,y:.859375},{x:.484375,y:.859375},{x:.515625,y:.859375},{x:.515625,y:.859375},{x:.546875,y:.859375},{x:.546875,y:.859375},{x:.578125,y:.859375},{x:.578125,y:.859375},{x:.609375,y:.859375},{x:.609375,y:.859375},{x:.640625,y:.859375},{x:.640625,y:.859375},{x:.671875,y:.859375},{x:.671875,y:.859375},{x:.703125,y:.859375},{x:.703125,y:.859375},{x:.734375,y:.859375},{x:.734375,y:.859375},{x:.765625,y:.859375},{x:.765625,y:.859375},{x:.796875,y:.859375},{x:.796875,y:.859375},{x:.828125,y:.859375},{x:.828125,y:.859375},{x:.859375,y:.859375},{x:.859375,y:.859375},{x:.890625,y:.859375},{x:.890625,y:.859375},{x:.921875,y:.859375},{x:.921875,y:.859375},{x:.953125,y:.859375},{x:.953125,y:.859375},{x:.984375,y:.859375},{x:.984375,y:.859375},{x:.015625,y:.890625},{x:.015625,y:.890625},{x:.046875,y:.890625},{x:.046875,y:.890625},{x:.078125,y:.890625},{x:.078125,y:.890625},{x:.109375,y:.890625},{x:.109375,y:.890625},{x:.140625,y:.890625},{x:.140625,y:.890625},{x:.171875,y:.890625},{x:.171875,y:.890625},{x:.203125,y:.890625},{x:.203125,y:.890625},{x:.234375,y:.890625},{x:.234375,y:.890625},{x:.265625,y:.890625},{x:.265625,y:.890625},{x:.296875,y:.890625},{x:.296875,y:.890625},{x:.328125,y:.890625},{x:.328125,y:.890625},{x:.359375,y:.890625},{x:.359375,y:.890625},{x:.390625,y:.890625},{x:.390625,y:.890625},{x:.421875,y:.890625},{x:.421875,y:.890625},{x:.453125,y:.890625},{x:.453125,y:.890625},{x:.484375,y:.890625},{x:.484375,y:.890625},{x:.515625,y:.890625},{x:.515625,y:.890625},{x:.546875,y:.890625},{x:.546875,y:.890625},{x:.578125,y:.890625},{x:.578125,y:.890625},{x:.609375,y:.890625},{x:.609375,y:.890625},{x:.640625,y:.890625},{x:.640625,y:.890625},{x:.671875,y:.890625},{x:.671875,y:.890625},{x:.703125,y:.890625},{x:.703125,y:.890625},{x:.734375,y:.890625},{x:.734375,y:.890625},{x:.765625,y:.890625},{x:.765625,y:.890625},{x:.796875,y:.890625},{x:.796875,y:.890625},{x:.828125,y:.890625},{x:.828125,y:.890625},{x:.859375,y:.890625},{x:.859375,y:.890625},{x:.890625,y:.890625},{x:.890625,y:.890625},{x:.921875,y:.890625},{x:.921875,y:.890625},{x:.953125,y:.890625},{x:.953125,y:.890625},{x:.984375,y:.890625},{x:.984375,y:.890625},{x:.015625,y:.921875},{x:.015625,y:.921875},{x:.046875,y:.921875},{x:.046875,y:.921875},{x:.078125,y:.921875},{x:.078125,y:.921875},{x:.109375,y:.921875},{x:.109375,y:.921875},{x:.140625,y:.921875},{x:.140625,y:.921875},{x:.171875,y:.921875},{x:.171875,y:.921875},{x:.203125,y:.921875},{x:.203125,y:.921875},{x:.234375,y:.921875},{x:.234375,y:.921875},{x:.265625,y:.921875},{x:.265625,y:.921875},{x:.296875,y:.921875},{x:.296875,y:.921875},{x:.328125,y:.921875},{x:.328125,y:.921875},{x:.359375,y:.921875},{x:.359375,y:.921875},{x:.390625,y:.921875},{x:.390625,y:.921875},{x:.421875,y:.921875},{x:.421875,y:.921875},{x:.453125,y:.921875},{x:.453125,y:.921875},{x:.484375,y:.921875},{x:.484375,y:.921875},{x:.515625,y:.921875},{x:.515625,y:.921875},{x:.546875,y:.921875},{x:.546875,y:.921875},{x:.578125,y:.921875},{x:.578125,y:.921875},{x:.609375,y:.921875},{x:.609375,y:.921875},{x:.640625,y:.921875},{x:.640625,y:.921875},{x:.671875,y:.921875},{x:.671875,y:.921875},{x:.703125,y:.921875},{x:.703125,y:.921875},{x:.734375,y:.921875},{x:.734375,y:.921875},{x:.765625,y:.921875},{x:.765625,y:.921875},{x:.796875,y:.921875},{x:.796875,y:.921875},{x:.828125,y:.921875},{x:.828125,y:.921875},{x:.859375,y:.921875},{x:.859375,y:.921875},{x:.890625,y:.921875},{x:.890625,y:.921875},{x:.921875,y:.921875},{x:.921875,y:.921875},{x:.953125,y:.921875},{x:.953125,y:.921875},{x:.984375,y:.921875},{x:.984375,y:.921875},{x:.015625,y:.953125},{x:.015625,y:.953125},{x:.046875,y:.953125},{x:.046875,y:.953125},{x:.078125,y:.953125},{x:.078125,y:.953125},{x:.109375,y:.953125},{x:.109375,y:.953125},{x:.140625,y:.953125},{x:.140625,y:.953125},{x:.171875,y:.953125},{x:.171875,y:.953125},{x:.203125,y:.953125},{x:.203125,y:.953125},{x:.234375,y:.953125},{x:.234375,y:.953125},{x:.265625,y:.953125},{x:.265625,y:.953125},{x:.296875,y:.953125},{x:.296875,y:.953125},{x:.328125,y:.953125},{x:.328125,y:.953125},{x:.359375,y:.953125},{x:.359375,y:.953125},{x:.390625,y:.953125},{x:.390625,y:.953125},{x:.421875,y:.953125},{x:.421875,y:.953125},{x:.453125,y:.953125},{x:.453125,y:.953125},{x:.484375,y:.953125},{x:.484375,y:.953125},{x:.515625,y:.953125},{x:.515625,y:.953125},{x:.546875,y:.953125},{x:.546875,y:.953125},{x:.578125,y:.953125},{x:.578125,y:.953125},{x:.609375,y:.953125},{x:.609375,y:.953125},{x:.640625,y:.953125},{x:.640625,y:.953125},{x:.671875,y:.953125},{x:.671875,y:.953125},{x:.703125,y:.953125},{x:.703125,y:.953125},{x:.734375,y:.953125},{x:.734375,y:.953125},{x:.765625,y:.953125},{x:.765625,y:.953125},{x:.796875,y:.953125},{x:.796875,y:.953125},{x:.828125,y:.953125},{x:.828125,y:.953125},{x:.859375,y:.953125},{x:.859375,y:.953125},{x:.890625,y:.953125},{x:.890625,y:.953125},{x:.921875,y:.953125},{x:.921875,y:.953125},{x:.953125,y:.953125},{x:.953125,y:.953125},{x:.984375,y:.953125},{x:.984375,y:.953125},{x:.015625,y:.984375},{x:.015625,y:.984375},{x:.046875,y:.984375},{x:.046875,y:.984375},{x:.078125,y:.984375},{x:.078125,y:.984375},{x:.109375,y:.984375},{x:.109375,y:.984375},{x:.140625,y:.984375},{x:.140625,y:.984375},{x:.171875,y:.984375},{x:.171875,y:.984375},{x:.203125,y:.984375},{x:.203125,y:.984375},{x:.234375,y:.984375},{x:.234375,y:.984375},{x:.265625,y:.984375},{x:.265625,y:.984375},{x:.296875,y:.984375},{x:.296875,y:.984375},{x:.328125,y:.984375},{x:.328125,y:.984375},{x:.359375,y:.984375},{x:.359375,y:.984375},{x:.390625,y:.984375},{x:.390625,y:.984375},{x:.421875,y:.984375},{x:.421875,y:.984375},{x:.453125,y:.984375},{x:.453125,y:.984375},{x:.484375,y:.984375},{x:.484375,y:.984375},{x:.515625,y:.984375},{x:.515625,y:.984375},{x:.546875,y:.984375},{x:.546875,y:.984375},{x:.578125,y:.984375},{x:.578125,y:.984375},{x:.609375,y:.984375},{x:.609375,y:.984375},{x:.640625,y:.984375},{x:.640625,y:.984375},{x:.671875,y:.984375},{x:.671875,y:.984375},{x:.703125,y:.984375},{x:.703125,y:.984375},{x:.734375,y:.984375},{x:.734375,y:.984375},{x:.765625,y:.984375},{x:.765625,y:.984375},{x:.796875,y:.984375},{x:.796875,y:.984375},{x:.828125,y:.984375},{x:.828125,y:.984375},{x:.859375,y:.984375},{x:.859375,y:.984375},{x:.890625,y:.984375},{x:.890625,y:.984375},{x:.921875,y:.984375},{x:.921875,y:.984375},{x:.953125,y:.984375},{x:.953125,y:.984375},{x:.984375,y:.984375},{x:.984375,y:.984375},{x:.03125,y:.03125},{x:.03125,y:.03125},{x:.09375,y:.03125},{x:.09375,y:.03125},{x:.15625,y:.03125},{x:.15625,y:.03125},{x:.21875,y:.03125},{x:.21875,y:.03125},{x:.28125,y:.03125},{x:.28125,y:.03125},{x:.34375,y:.03125},{x:.34375,y:.03125},{x:.40625,y:.03125},{x:.40625,y:.03125},{x:.46875,y:.03125},{x:.46875,y:.03125},{x:.53125,y:.03125},{x:.53125,y:.03125},{x:.59375,y:.03125},{x:.59375,y:.03125},{x:.65625,y:.03125},{x:.65625,y:.03125},{x:.71875,y:.03125},{x:.71875,y:.03125},{x:.78125,y:.03125},{x:.78125,y:.03125},{x:.84375,y:.03125},{x:.84375,y:.03125},{x:.90625,y:.03125},{x:.90625,y:.03125},{x:.96875,y:.03125},{x:.96875,y:.03125},{x:.03125,y:.09375},{x:.03125,y:.09375},{x:.09375,y:.09375},{x:.09375,y:.09375},{x:.15625,y:.09375},{x:.15625,y:.09375},{x:.21875,y:.09375},{x:.21875,y:.09375},{x:.28125,y:.09375},{x:.28125,y:.09375},{x:.34375,y:.09375},{x:.34375,y:.09375},{x:.40625,y:.09375},{x:.40625,y:.09375},{x:.46875,y:.09375},{x:.46875,y:.09375},{x:.53125,y:.09375},{x:.53125,y:.09375},{x:.59375,y:.09375},{x:.59375,y:.09375},{x:.65625,y:.09375},{x:.65625,y:.09375},{x:.71875,y:.09375},{x:.71875,y:.09375},{x:.78125,y:.09375},{x:.78125,y:.09375},{x:.84375,y:.09375},{x:.84375,y:.09375},{x:.90625,y:.09375},{x:.90625,y:.09375},{x:.96875,y:.09375},{x:.96875,y:.09375},{x:.03125,y:.15625},{x:.03125,y:.15625},{x:.09375,y:.15625},{x:.09375,y:.15625},{x:.15625,y:.15625},{x:.15625,y:.15625},{x:.21875,y:.15625},{x:.21875,y:.15625},{x:.28125,y:.15625},{x:.28125,y:.15625},{x:.34375,y:.15625},{x:.34375,y:.15625},{x:.40625,y:.15625},{x:.40625,y:.15625},{x:.46875,y:.15625},{x:.46875,y:.15625},{x:.53125,y:.15625},{x:.53125,y:.15625},{x:.59375,y:.15625},{x:.59375,y:.15625},{x:.65625,y:.15625},{x:.65625,y:.15625},{x:.71875,y:.15625},{x:.71875,y:.15625},{x:.78125,y:.15625},{x:.78125,y:.15625},{x:.84375,y:.15625},{x:.84375,y:.15625},{x:.90625,y:.15625},{x:.90625,y:.15625},{x:.96875,y:.15625},{x:.96875,y:.15625},{x:.03125,y:.21875},{x:.03125,y:.21875},{x:.09375,y:.21875},{x:.09375,y:.21875},{x:.15625,y:.21875},{x:.15625,y:.21875},{x:.21875,y:.21875},{x:.21875,y:.21875},{x:.28125,y:.21875},{x:.28125,y:.21875},{x:.34375,y:.21875},{x:.34375,y:.21875},{x:.40625,y:.21875},{x:.40625,y:.21875},{x:.46875,y:.21875},{x:.46875,y:.21875},{x:.53125,y:.21875},{x:.53125,y:.21875},{x:.59375,y:.21875},{x:.59375,y:.21875},{x:.65625,y:.21875},{x:.65625,y:.21875},{x:.71875,y:.21875},{x:.71875,y:.21875},{x:.78125,y:.21875},{x:.78125,y:.21875},{x:.84375,y:.21875},{x:.84375,y:.21875},{x:.90625,y:.21875},{x:.90625,y:.21875},{x:.96875,y:.21875},{x:.96875,y:.21875},{x:.03125,y:.28125},{x:.03125,y:.28125},{x:.09375,y:.28125},{x:.09375,y:.28125},{x:.15625,y:.28125},{x:.15625,y:.28125},{x:.21875,y:.28125},{x:.21875,y:.28125},{x:.28125,y:.28125},{x:.28125,y:.28125},{x:.34375,y:.28125},{x:.34375,y:.28125},{x:.40625,y:.28125},{x:.40625,y:.28125},{x:.46875,y:.28125},{x:.46875,y:.28125},{x:.53125,y:.28125},{x:.53125,y:.28125},{x:.59375,y:.28125},{x:.59375,y:.28125},{x:.65625,y:.28125},{x:.65625,y:.28125},{x:.71875,y:.28125},{x:.71875,y:.28125},{x:.78125,y:.28125},{x:.78125,y:.28125},{x:.84375,y:.28125},{x:.84375,y:.28125},{x:.90625,y:.28125},{x:.90625,y:.28125},{x:.96875,y:.28125},{x:.96875,y:.28125},{x:.03125,y:.34375},{x:.03125,y:.34375},{x:.09375,y:.34375},{x:.09375,y:.34375},{x:.15625,y:.34375},{x:.15625,y:.34375},{x:.21875,y:.34375},{x:.21875,y:.34375},{x:.28125,y:.34375},{x:.28125,y:.34375},{x:.34375,y:.34375},{x:.34375,y:.34375},{x:.40625,y:.34375},{x:.40625,y:.34375},{x:.46875,y:.34375},{x:.46875,y:.34375},{x:.53125,y:.34375},{x:.53125,y:.34375},{x:.59375,y:.34375},{x:.59375,y:.34375},{x:.65625,y:.34375},{x:.65625,y:.34375},{x:.71875,y:.34375},{x:.71875,y:.34375},{x:.78125,y:.34375},{x:.78125,y:.34375},{x:.84375,y:.34375},{x:.84375,y:.34375},{x:.90625,y:.34375},{x:.90625,y:.34375},{x:.96875,y:.34375},{x:.96875,y:.34375},{x:.03125,y:.40625},{x:.03125,y:.40625},{x:.09375,y:.40625},{x:.09375,y:.40625},{x:.15625,y:.40625},{x:.15625,y:.40625},{x:.21875,y:.40625},{x:.21875,y:.40625},{x:.28125,y:.40625},{x:.28125,y:.40625},{x:.34375,y:.40625},{x:.34375,y:.40625},{x:.40625,y:.40625},{x:.40625,y:.40625},{x:.46875,y:.40625},{x:.46875,y:.40625},{x:.53125,y:.40625},{x:.53125,y:.40625},{x:.59375,y:.40625},{x:.59375,y:.40625},{x:.65625,y:.40625},{x:.65625,y:.40625},{x:.71875,y:.40625},{x:.71875,y:.40625},{x:.78125,y:.40625},{x:.78125,y:.40625},{x:.84375,y:.40625},{x:.84375,y:.40625},{x:.90625,y:.40625},{x:.90625,y:.40625},{x:.96875,y:.40625},{x:.96875,y:.40625},{x:.03125,y:.46875},{x:.03125,y:.46875},{x:.09375,y:.46875},{x:.09375,y:.46875},{x:.15625,y:.46875},{x:.15625,y:.46875},{x:.21875,y:.46875},{x:.21875,y:.46875},{x:.28125,y:.46875},{x:.28125,y:.46875},{x:.34375,y:.46875},{x:.34375,y:.46875},{x:.40625,y:.46875},{x:.40625,y:.46875},{x:.46875,y:.46875},{x:.46875,y:.46875},{x:.53125,y:.46875},{x:.53125,y:.46875},{x:.59375,y:.46875},{x:.59375,y:.46875},{x:.65625,y:.46875},{x:.65625,y:.46875},{x:.71875,y:.46875},{x:.71875,y:.46875},{x:.78125,y:.46875},{x:.78125,y:.46875},{x:.84375,y:.46875},{x:.84375,y:.46875},{x:.90625,y:.46875},{x:.90625,y:.46875},{x:.96875,y:.46875},{x:.96875,y:.46875},{x:.03125,y:.53125},{x:.03125,y:.53125},{x:.09375,y:.53125},{x:.09375,y:.53125},{x:.15625,y:.53125},{x:.15625,y:.53125},{x:.21875,y:.53125},{x:.21875,y:.53125},{x:.28125,y:.53125},{x:.28125,y:.53125},{x:.34375,y:.53125},{x:.34375,y:.53125},{x:.40625,y:.53125},{x:.40625,y:.53125},{x:.46875,y:.53125},{x:.46875,y:.53125},{x:.53125,y:.53125},{x:.53125,y:.53125},{x:.59375,y:.53125},{x:.59375,y:.53125},{x:.65625,y:.53125},{x:.65625,y:.53125},{x:.71875,y:.53125},{x:.71875,y:.53125},{x:.78125,y:.53125},{x:.78125,y:.53125},{x:.84375,y:.53125},{x:.84375,y:.53125},{x:.90625,y:.53125},{x:.90625,y:.53125},{x:.96875,y:.53125},{x:.96875,y:.53125},{x:.03125,y:.59375},{x:.03125,y:.59375},{x:.09375,y:.59375},{x:.09375,y:.59375},{x:.15625,y:.59375},{x:.15625,y:.59375},{x:.21875,y:.59375},{x:.21875,y:.59375},{x:.28125,y:.59375},{x:.28125,y:.59375},{x:.34375,y:.59375},{x:.34375,y:.59375},{x:.40625,y:.59375},{x:.40625,y:.59375},{x:.46875,y:.59375},{x:.46875,y:.59375},{x:.53125,y:.59375},{x:.53125,y:.59375},{x:.59375,y:.59375},{x:.59375,y:.59375},{x:.65625,y:.59375},{x:.65625,y:.59375},{x:.71875,y:.59375},{x:.71875,y:.59375},{x:.78125,y:.59375},{x:.78125,y:.59375},{x:.84375,y:.59375},{x:.84375,y:.59375},{x:.90625,y:.59375},{x:.90625,y:.59375},{x:.96875,y:.59375},{x:.96875,y:.59375},{x:.03125,y:.65625},{x:.03125,y:.65625},{x:.09375,y:.65625},{x:.09375,y:.65625},{x:.15625,y:.65625},{x:.15625,y:.65625},{x:.21875,y:.65625},{x:.21875,y:.65625},{x:.28125,y:.65625},{x:.28125,y:.65625},{x:.34375,y:.65625},{x:.34375,y:.65625},{x:.40625,y:.65625},{x:.40625,y:.65625},{x:.46875,y:.65625},{x:.46875,y:.65625},{x:.53125,y:.65625},{x:.53125,y:.65625},{x:.59375,y:.65625},{x:.59375,y:.65625},{x:.65625,y:.65625},{x:.65625,y:.65625},{x:.71875,y:.65625},{x:.71875,y:.65625},{x:.78125,y:.65625},{x:.78125,y:.65625},{x:.84375,y:.65625},{x:.84375,y:.65625},{x:.90625,y:.65625},{x:.90625,y:.65625},{x:.96875,y:.65625},{x:.96875,y:.65625},{x:.03125,y:.71875},{x:.03125,y:.71875},{x:.09375,y:.71875},{x:.09375,y:.71875},{x:.15625,y:.71875},{x:.15625,y:.71875},{x:.21875,y:.71875},{x:.21875,y:.71875},{x:.28125,y:.71875},{x:.28125,y:.71875},{x:.34375,y:.71875},{x:.34375,y:.71875},{x:.40625,y:.71875},{x:.40625,y:.71875},{x:.46875,y:.71875},{x:.46875,y:.71875},{x:.53125,y:.71875},{x:.53125,y:.71875},{x:.59375,y:.71875},{x:.59375,y:.71875},{x:.65625,y:.71875},{x:.65625,y:.71875},{x:.71875,y:.71875},{x:.71875,y:.71875},{x:.78125,y:.71875},{x:.78125,y:.71875},{x:.84375,y:.71875},{x:.84375,y:.71875},{x:.90625,y:.71875},{x:.90625,y:.71875},{x:.96875,y:.71875},{x:.96875,y:.71875},{x:.03125,y:.78125},{x:.03125,y:.78125},{x:.09375,y:.78125},{x:.09375,y:.78125},{x:.15625,y:.78125},{x:.15625,y:.78125},{x:.21875,y:.78125},{x:.21875,y:.78125},{x:.28125,y:.78125},{x:.28125,y:.78125},{x:.34375,y:.78125},{x:.34375,y:.78125},{x:.40625,y:.78125},{x:.40625,y:.78125},{x:.46875,y:.78125},{x:.46875,y:.78125},{x:.53125,y:.78125},{x:.53125,y:.78125},{x:.59375,y:.78125},{x:.59375,y:.78125},{x:.65625,y:.78125},{x:.65625,y:.78125},{x:.71875,y:.78125},{x:.71875,y:.78125},{x:.78125,y:.78125},{x:.78125,y:.78125},{x:.84375,y:.78125},{x:.84375,y:.78125},{x:.90625,y:.78125},{x:.90625,y:.78125},{x:.96875,y:.78125},{x:.96875,y:.78125},{x:.03125,y:.84375},{x:.03125,y:.84375},{x:.09375,y:.84375},{x:.09375,y:.84375},{x:.15625,y:.84375},{x:.15625,y:.84375},{x:.21875,y:.84375},{x:.21875,y:.84375},{x:.28125,y:.84375},{x:.28125,y:.84375},{x:.34375,y:.84375},{x:.34375,y:.84375},{x:.40625,y:.84375},{x:.40625,y:.84375},{x:.46875,y:.84375},{x:.46875,y:.84375},{x:.53125,y:.84375},{x:.53125,y:.84375},{x:.59375,y:.84375},{x:.59375,y:.84375},{x:.65625,y:.84375},{x:.65625,y:.84375},{x:.71875,y:.84375},{x:.71875,y:.84375},{x:.78125,y:.84375},{x:.78125,y:.84375},{x:.84375,y:.84375},{x:.84375,y:.84375},{x:.90625,y:.84375},{x:.90625,y:.84375},{x:.96875,y:.84375},{x:.96875,y:.84375},{x:.03125,y:.90625},{x:.03125,y:.90625},{x:.09375,y:.90625},{x:.09375,y:.90625},{x:.15625,y:.90625},{x:.15625,y:.90625},{x:.21875,y:.90625},{x:.21875,y:.90625},{x:.28125,y:.90625},{x:.28125,y:.90625},{x:.34375,y:.90625},{x:.34375,y:.90625},{x:.40625,y:.90625},{x:.40625,y:.90625},{x:.46875,y:.90625},{x:.46875,y:.90625},{x:.53125,y:.90625},{x:.53125,y:.90625},{x:.59375,y:.90625},{x:.59375,y:.90625},{x:.65625,y:.90625},{x:.65625,y:.90625},{x:.71875,y:.90625},{x:.71875,y:.90625},{x:.78125,y:.90625},{x:.78125,y:.90625},{x:.84375,y:.90625},{x:.84375,y:.90625},{x:.90625,y:.90625},{x:.90625,y:.90625},{x:.96875,y:.90625},{x:.96875,y:.90625},{x:.03125,y:.96875},{x:.03125,y:.96875},{x:.09375,y:.96875},{x:.09375,y:.96875},{x:.15625,y:.96875},{x:.15625,y:.96875},{x:.21875,y:.96875},{x:.21875,y:.96875},{x:.28125,y:.96875},{x:.28125,y:.96875},{x:.34375,y:.96875},{x:.34375,y:.96875},{x:.40625,y:.96875},{x:.40625,y:.96875},{x:.46875,y:.96875},{x:.46875,y:.96875},{x:.53125,y:.96875},{x:.53125,y:.96875},{x:.59375,y:.96875},{x:.59375,y:.96875},{x:.65625,y:.96875},{x:.65625,y:.96875},{x:.71875,y:.96875},{x:.71875,y:.96875},{x:.78125,y:.96875},{x:.78125,y:.96875},{x:.84375,y:.96875},{x:.84375,y:.96875},{x:.90625,y:.96875},{x:.90625,y:.96875},{x:.96875,y:.96875},{x:.96875,y:.96875},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375}],J0=class{constructor(e){var t,n,a,r;c(this,"model"),c(this,"anchors"),c(this,"anchorsTensor"),c(this,"inputSize"),c(this,"inputSizeTensor"),c(this,"doubleInputSizeTensor"),this.model=e,this.anchors=Z0.map((e=>[e.x,e.y])),this.anchorsTensor=qp(this.anchors),this.inputSize=(null==(r=null==(a=null==(n=null==(t=null==this?void 0:this.model)?void 0:t.inputs)?void 0:n[0])?void 0:a.shape)?void 0:r[2])||0,this.inputSizeTensor=jp([this.inputSize,this.inputSize]),this.doubleInputSizeTensor=jp([2*this.inputSize,2*this.inputSize])}normalizeBoxes(e){const t={};t.boxOffsets=hl(e,[0,0],[-1,2]),t.boxSizes=hl(e,[0,2],[-1,2]),t.div=Eo(t.boxOffsets,this.inputSizeTensor),t.boxCenterPoints=To(t.div,this.anchorsTensor),t.halfBoxSizes=Eo(t.boxSizes,this.doubleInputSizeTensor),t.sub=td(t.boxCenterPoints,t.halfBoxSizes),t.startPoints=$o(t.sub,this.inputSizeTensor),t.add=To(t.boxCenterPoints,t.halfBoxSizes),t.endPoints=$o(t.add,this.inputSizeTensor);const n=Rl([t.startPoints,t.endPoints],1);return Object.keys(t).forEach((e=>fi(t[e]))),n}normalizeLandmarks(e,t){const n={};n.reshape=il(e,[-1,7,2]),n.div=Eo(n.reshape,this.inputSizeTensor),n.landmarks=To(n.div,this.anchors[t]?this.anchors[t]:0);const a=$o(n.landmarks,this.inputSizeTensor);return Object.keys(n).forEach((e=>fi(n[e]))),a}async predict(e,t){var n;const a={};a.resize=Rc.resizeBilinear(e,[this.inputSize,this.inputSize]),a.div=Eo(a.resize,yZ.tf127),a.image=td(a.div,yZ.tf1),a.batched=this.model.execute(a.image),a.predictions=Bp(a.batched),a.slice=hl(a.predictions,[0,0],[-1,1]),a.sigmoid=pl(a.slice),a.scores=Bp(a.sigmoid);const r=await a.scores.data();a.boxes=hl(a.predictions,[0,1],[-1,4]),a.norm=this.normalizeBoxes(a.boxes),a.nms=await Rc.nonMaxSuppressionAsync(a.norm,a.scores,3*((null==(n=t.hand)?void 0:n.maxDetected)||1),t.hand.iouThreshold,t.hand.minConfidence);const s=await a.nms.array(),i=[];for(const t of s){const n={};n.box=hl(a.norm,[t,0],[1,-1]),n.slice=hl(a.predictions,[t,5],[1,14]),n.norm=this.normalizeLandmarks(n.slice,t),n.palmLandmarks=il(n.norm,[-1,2]);const s=await n.box.data(),o=z0({startPoint:s.slice(0,2),endPoint:s.slice(2,4),palmLandmarks:await n.palmLandmarks.array(),confidence:r[t]},[(e.shape[2]||1)/this.inputSize,(e.shape[1]||0)/this.inputSize]);i.push(o),Object.keys(n).forEach((e=>fi(n[e])))}return Object.keys(a).forEach((e=>fi(a[e]))),i}},Q0=[0,5,9,13,17,1,2],e2=0,t2=class{constructor(e,t){var n,a,r;c(this,"handDetector"),c(this,"handPoseModel"),c(this,"inputSize"),c(this,"storedBoxes"),c(this,"skipped"),c(this,"detectedHands"),this.handDetector=e,this.handPoseModel=t,this.inputSize=(null==(r=null==(a=null==(n=this.handPoseModel)?void 0:n.inputs)?void 0:a[0].shape)?void 0:r[2])||0,this.storedBoxes=[],this.skipped=Number.MAX_SAFE_INTEGER,this.detectedHands=0}calculateLandmarksBoundingBox(e){const t=e.map((e=>e[0])),n=e.map((e=>e[1]));return{startPoint:[Math.min(...t),Math.min(...n)],endPoint:[Math.max(...t),Math.max(...n)]}}getBoxForPalmLandmarks(e,t){const n=e.map((e=>q0([...e,1],t)));return L0(W0(this.calculateLandmarksBoundingBox(n)),5)}getBoxForHandLandmarks(e){const t=L0(W0(this.calculateLandmarksBoundingBox(e)),1.65);t.palmLandmarks=[];for(let n=0;n<Q0.length;n++)t.palmLandmarks.push(e[Q0[n]].slice(0,2));return t}transformRawCoords(e,t,n,a){const r=P0(t),s=[r[0]/this.inputSize,r[1]/this.inputSize,(r[0]+r[1])/this.inputSize/2],i=e.map((e=>[s[0]*(e[0]-this.inputSize/2),s[1]*(e[1]-this.inputSize/2),s[2]*e[2]])),o=j0(n,[0,0]),l=i.map((e=>[...q0(e,o),e[2]])),u=function(e){const t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],n=[e[0][2],e[1][2]],a=[-U0(t[0],n),-U0(t[1],n)];return[t[0].concat(a[0]),t[1].concat(a[1]),[0,0,1]]}(a),d=[...O0(t),1],p=[U0(d,u[0]),U0(d,u[1])];return l.map((e=>[Math.trunc(e[0]+p[0]),Math.trunc(e[1]+p[1]),Math.trunc(e[2])]))}async estimateHands(e,t){let n,a=!1;const r=(t.hand.skipTime||0)>$K()-e2,s=this.skipped<(t.hand.skipFrames||0);t.skipAllowed&&r&&s?this.skipped++:(n=await this.handDetector.predict(e,t),this.skipped=0),n&&n.length>0&&(n.length!==this.detectedHands&&this.detectedHands!==t.hand.maxDetected||!t.hand.landmarks)&&(this.detectedHands=0,this.storedBoxes=[...n],this.storedBoxes.length>0&&(a=!0));const i=[];for(let n=0;n<this.storedBoxes.length;n++){const r=this.storedBoxes[n];if(r)if(t.hand.landmarks){const s=t.hand.rotation?B0(r.palmLandmarks[0],r.palmLandmarks[2]):0,o=O0(r),l=[o[0]/e.shape[2],o[1]/e.shape[1]],u=t.hand.rotation&&rY.kernels.includes("rotatewithoffset")?Rc.rotateWithOffset(e,s,0,l):e.clone(),d=j0(-s,o),p=a?this.getBoxForPalmLandmarks(r.palmLandmarks,d):r,h=D0(p,u,[this.inputSize,this.inputSize]),c=Eo(h,yZ.tf255);fi(h),fi(u);const[f,m]=this.handPoseModel.execute(c);e2=$K(),fi(c);const g=(await f.data())[0];if(fi(f),g>=t.hand.minConfidence/4){const e=il(m,[-1,3]),t=await e.array();fi(m),fi(e);const a=this.transformRawCoords(t,p,s,d),o=this.getBoxForHandLandmarks(a);this.storedBoxes[n]={...o,confidence:g};const l={landmarks:a,confidence:g,boxConfidence:r.confidence,fingerConfidence:g,box:{topLeft:o.startPoint,bottomRight:o.endPoint}};i.push(l)}else this.storedBoxes[n]=null;fi(m)}else{const e=L0(W0(r),1.65),t={confidence:r.confidence,boxConfidence:r.confidence,fingerConfidence:0,box:{topLeft:e.startPoint,bottomRight:e.endPoint},landmarks:[]};i.push(t)}}return this.storedBoxes=this.storedBoxes.filter((e=>null!==e)),this.detectedHands=i.length,i.length>t.hand.maxDetected&&(i.length=t.hand.maxDetected),i}},n2={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],palm:[0]};async function a2(e,t){Y0||function(){const e=X0?new J0(X0):void 0;e&&K0&&(Y0=new t2(e,K0))}();const n=await Y0.estimateHands(e,t);if(!n)return[];const a=[];for(let t=0;t<n.length;t++){const r={};if(n[t].landmarks)for(const e of Object.keys(n2))r[e]=n2[e].map((e=>n[t].landmarks[e]));const s=n[t].landmarks;let i=[Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,0,0],o=[0,0,0,0];if(s&&s.length>0){for(const e of s)e[0]<i[0]&&(i[0]=e[0]),e[1]<i[1]&&(i[1]=e[1]),e[0]>i[2]&&(i[2]=e[0]),e[1]>i[3]&&(i[3]=e[1]);i[2]-=i[0],i[3]-=i[1],o=[i[0]/(e.shape[2]||0),i[1]/(e.shape[1]||0),i[2]/(e.shape[2]||0),i[3]/(e.shape[1]||0)]}else i=n[t].box?[Math.trunc(Math.max(0,n[t].box.topLeft[0])),Math.trunc(Math.max(0,n[t].box.topLeft[1])),Math.trunc(Math.min(e.shape[2]||0,n[t].box.bottomRight[0])-Math.max(0,n[t].box.topLeft[0])),Math.trunc(Math.min(e.shape[1]||0,n[t].box.bottomRight[1])-Math.max(0,n[t].box.topLeft[1]))]:[0,0,0,0],o=[n[t].box.topLeft[0]/(e.shape[2]||0),n[t].box.topLeft[1]/(e.shape[1]||0),(n[t].box.bottomRight[0]-n[t].box.topLeft[0])/(e.shape[2]||0),(n[t].box.bottomRight[1]-n[t].box.topLeft[1])/(e.shape[1]||0)];const l=R0(s);a.push({id:t,score:Math.round(100*n[t].confidence)/100,boxScore:Math.round(100*n[t].boxConfidence)/100,fingerScore:Math.round(100*n[t].fingerConfidence)/100,label:"hand",box:i,boxRaw:o,keypoints:s,annotations:r,landmarks:l})}return a}var r2=[null,null],s2=["StatefulPartitionedCall/Postprocessor/Slice","StatefulPartitionedCall/Postprocessor/ExpandDims_1"],i2=[[0,0],[0,0]],o2=["hand","fist","pinch","point","face","tip","pinchtip"],l2=Number.MAX_SAFE_INTEGER,u2=0,d2=[0,0],p2={boxes:[],hands:[]},h2={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],base:[0],palm:[0,17,13,9,5,1,0]};async function c2(e,t,n){const a={id:t.id,score:Math.round(100*t.score)/100,boxScore:Math.round(100*t.score)/100,fingerScore:0,box:t.box,boxRaw:t.boxRaw,label:t.label,keypoints:[],landmarks:{},annotations:{}};if(e&&r2[1]&&n.hand.landmarks&&t.score>(n.hand.minConfidence||0)){const r={},s=[t.boxRaw[1],t.boxRaw[0],t.boxRaw[3]+t.boxRaw[1],t.boxRaw[2]+t.boxRaw[0]];r.crop=Rc.cropAndResize(e,[s],[0],[i2[1][0],i2[1][1]],"bilinear"),r.div=Eo(r.crop,yZ.tf255),[r.score,r.keypoints]=r2[1].execute(r.div,["Identity_1","Identity"]);const i=(await r.score.data())[0],o=(100-Math.trunc(100/(1+Math.exp(i))))/100;if(o>=(n.hand.minConfidence||0)){a.fingerScore=o,r.reshaped=il(r.keypoints,[-1,3]);const e=(await r.reshaped.array()).map((e=>[e[0]/i2[1][1],e[1]/i2[1][0],e[2]||0])).map((e=>[e[0]*t.boxRaw[2],e[1]*t.boxRaw[3],e[2]||0]));a.keypoints=e.map((e=>[d2[0]*(e[0]+t.boxRaw[0]),d2[1]*(e[1]+t.boxRaw[1]),e[2]||0])),a.landmarks=R0(a.keypoints);for(const e of Object.keys(h2))a.annotations[e]=h2[e].map((e=>a.landmarks&&a.keypoints[e]?a.keypoints[e]:null))}Object.keys(r).forEach((e=>fi(r[e])))}return a}async function f2(e,t){var n,a;if(!((null==(n=r2[0])?void 0:n.executor)&&(null==(a=r2[1])?void 0:a.executor)&&r2[0].inputs[0].shape&&r2[1].inputs[0].shape))return[];d2=[e.shape[2]||0,e.shape[1]||0],l2++;const r=(t.hand.skipTime||0)>$K()-u2,s=l2<(t.hand.skipFrames||0);return t.skipAllowed&&r&&s?p2.hands:new Promise((async n=>{const a=3*(t.hand.skipTime||0)>$K()-u2,r=l2<3*(t.hand.skipFrames||0);t.skipAllowed&&p2.hands.length===t.hand.maxDetected||t.skipAllowed&&a&&r&&p2.hands.length>0?p2.hands=await Promise.all(p2.boxes.map((n=>c2(e,n,t)))):(p2.boxes=await async function(e,t){const n=[];if(!e||!r2[0])return n;const a={},r=(e.shape[2]||1)/(e.shape[1]||1),s=Math.min(8*Math.round((e.shape[1]||0)/8),512),i=8*Math.round(s*r/8);a.resize=Rc.resizeBilinear(e,[s,i]),a.cast=So(a.resize,"int32"),[a.rawScores,a.rawBoxes]=await r2[0].executeAsync(a.cast,s2),a.boxes=Bp(a.rawBoxes,[0,2]),a.scores=Bp(a.rawScores,[0]);const o=oh(a.scores,1);fi(o[4]),o.splice(4,1),a.filtered=Vp(o,1),fi(o),a.max=mu(a.filtered,1),a.argmax=zo(a.filtered,1);let l=0;a.nms=await Rc.nonMaxSuppressionAsync(a.boxes,a.max,(t.hand.maxDetected||0)+1,t.hand.iouThreshold||0,t.hand.minConfidence||1);const u=await a.nms.data(),d=await a.max.data(),p=await a.argmax.data();for(const e of Array.from(u)){const t=hl(a.boxes,e,1),r=await t.data();fi(t);const s=[r[1],r[0],r[3]-r[1],r[2]-r[0]],i=vJ(s,1.4),o=[Math.trunc(s[0]*d2[0]),Math.trunc(s[1]*d2[1]),Math.trunc(s[2]*d2[0]),Math.trunc(s[3]*d2[1])],u={id:l++,score:d[e],box:o,boxRaw:i,label:o2[p[e]]};n.push(u)}return Object.keys(a).forEach((e=>fi(a[e]))),n.sort(((e,t)=>t.score-e.score)),n.length>(t.hand.maxDetected||1)&&(n.length=t.hand.maxDetected||1),n}(e,t),u2=$K(),p2.hands=await Promise.all(p2.boxes.map((n=>c2(e,n,t)))),l2=0);const s=[...p2.boxes];if(p2.boxes.length=0,t.cacheSensitivity>0)for(let n=0;n<p2.hands.length;n++){const a=wJ(p2.hands[n].keypoints,d2);if(a.box[2]/(e.shape[2]||1)>.05&&a.box[3]/(e.shape[1]||1)>.05&&p2.hands[n].fingerScore&&p2.hands[n].fingerScore>(t.hand.minConfidence||0)){const e=vJ(a.box,1.6),t=vJ(a.boxRaw,1.6);p2.boxes.push({...s[n],box:e,boxRaw:t})}}for(let e=0;e<p2.hands.length;e++){const t=bJ(p2.hands[e].keypoints,d2);p2.hands[e].box=t.box,p2.hands[e].boxRaw=t.boxRaw}n(p2.hands)}))}var m2=(e=null)=>({face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,width:0,height:0,error:e}),g2={};h(g2,{connected:()=>v2,horizontal:()=>A2,kpt:()=>x2,relative:()=>w2,vertical:()=>b2});var y2,x2=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],A2=[["leftEye","rightEye"],["leftEar","rightEar"],["leftShoulder","rightShoulder"],["leftElbow","rightElbow"],["leftWrist","rightWrist"],["leftHip","rightHip"],["leftKnee","rightKnee"],["leftAnkle","rightAnkle"]],b2=[["leftKnee","leftShoulder"],["rightKnee","rightShoulder"],["leftAnkle","leftKnee"],["rightAnkle","rightKnee"]],w2=[[["leftHip","rightHip"],["leftShoulder","rightShoulder"]],[["leftElbow","rightElbow"],["leftShoulder","rightShoulder"]]],v2={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]},k2=m2(),I2=0;async function S2(e){return!y2||rY.initial?y2=await fZ(e.segmentation.modelPath):e.debug&&EK("cached model:",y2.modelUrl),y2}var C2={};function N2(e,t,n={order:2,multiplier:25}){if(!e||!e)return Number.MAX_SAFE_INTEGER;let a=0;for(let r=0;r<e.length;r++){const s=n.order&&2!==n.order?Math.abs(e[r]-t[r]):e[r]-t[r];a+=n.order&&2!==n.order?s**n.order:s*s}return Math.round(100*(n.multiplier||20)*a)/100}h(C2,{distance:()=>N2,find:()=>E2,similarity:()=>R2});var T2=(e,t,n,a)=>{if(0===e)return 1;const r=(1-(2===t?Math.sqrt(e):e**(1/t))/100-n)/(a-n);return Math.round(100*Math.max(Math.min(r,1),0))/100};function R2(e,t,n={order:2,multiplier:25,min:.2,max:.8}){const a=N2(e,t,n);return T2(a,n.order||2,n.min||0,n.max||1)}function E2(e,t,n={order:2,multiplier:25,threshold:0,min:.2,max:.8}){if(!Array.isArray(e)||!Array.isArray(t)||e.length<64||0===t.length)return{index:-1,distance:Number.POSITIVE_INFINITY,similarity:0};let a=Number.MAX_SAFE_INTEGER,r=-1;for(let s=0;s<t.length;s++){const i=t[s].length===e.length?N2(e,t[s],n):Number.MAX_SAFE_INTEGER;if(i<a&&(a=i,r=s),a<(n.threshold||0))break}return{index:r,distance:a,similarity:T2(a,n.order||2,n.min||0,n.max||1)}}h({},{Models:()=>$5,validateModel:()=>S5});var $2,M2=.005,F2={keypoints:[],padding:[[0,0],[0,0],[0,0],[0,0]]};function _2(e){for(const t of A2){const n=e.keypoints.findIndex((e=>e.part===t[0])),a=e.keypoints.findIndex((e=>e.part===t[1]));if(e.keypoints[n]&&e.keypoints[a]&&e.keypoints[n].position[0]<e.keypoints[a].position[0]){const t=e.keypoints[n];e.keypoints[n]=e.keypoints[a],e.keypoints[a]=t}}for(const t of b2){const n=e.keypoints.findIndex((e=>e&&e.part===t[0])),a=e.keypoints.findIndex((e=>e&&e.part===t[1]));e.keypoints[n]&&e.keypoints[a]&&e.keypoints[n].position[1]<e.keypoints[a].position[1]&&e.keypoints.splice(n,1)}for(const[t,n]of w2){const a=e.keypoints.findIndex((e=>e&&e.part===t[0])),r=e.keypoints.findIndex((e=>e&&e.part===t[1])),s=e.keypoints.findIndex((e=>e&&e.part===n[0])),i=e.keypoints.findIndex((e=>e&&e.part===n[1]));if(!e.keypoints[s]||!e.keypoints[i])continue;const o=e.keypoints[a]?[Math.abs(e.keypoints[s].position[0]-e.keypoints[a].position[0]),Math.abs(e.keypoints[i].position[0]-e.keypoints[a].position[0])]:[0,0],l=e.keypoints[r]?[Math.abs(e.keypoints[i].position[0]-e.keypoints[r].position[0]),Math.abs(e.keypoints[s].position[0]-e.keypoints[r].position[0])]:[0,0];if(o[0]>o[1]||l[0]>l[1]){const t=e.keypoints[a];e.keypoints[a]=e.keypoints[r],e.keypoints[r]=t}}}function P2(e){for(let t=0;t<e.length;t++)if(e[t]&&F2.keypoints[t]){const n=[Math.abs(e[t].positionRaw[0]-F2.keypoints[t].positionRaw[0]),Math.abs(e[t].positionRaw[1]-F2.keypoints[t].positionRaw[1])];n[0]<M2&&n[1]<M2?e[t]=F2.keypoints[t]:F2.keypoints[t]=e[t]}else F2.keypoints[t]=e[t];return e}function O2(e,t){e.keypoints=e.keypoints.filter((e=>null==e?void 0:e.position));for(const n of e.keypoints)n.position=[n.position[0]*(t[0]+F2.padding[2][0]+F2.padding[2][1])/t[0]-F2.padding[2][0],n.position[1]*(t[1]+F2.padding[1][0]+F2.padding[1][1])/t[1]-F2.padding[1][0]],n.positionRaw=[n.position[0]/t[0],n.position[1]/t[1]];const n=bJ(e.keypoints.map((e=>e.position)),t);return e.box=n.box,e.boxRaw=n.boxRaw,e}var D2,z2=0,L2=Number.MAX_SAFE_INTEGER,W2={boxes:[],bodies:[],last:0};async function B2(e,t){var n;if(!(null==$2?void 0:$2.executor)||!(null==(n=null==$2?void 0:$2.inputs)?void 0:n[0].shape))return[];t.skipAllowed||(W2.boxes.length=0),L2++;const a=(t.body.skipTime||0)>$K()-W2.last,r=L2<(t.body.skipFrames||0);return t.skipAllowed&&a&&r?W2.bodies:new Promise((async n=>{const a={};L2=0,a.input=function(e,t){var n,a;const r={};if(!(null==(n=null==e?void 0:e.shape)?void 0:n[1])||!(null==(a=null==e?void 0:e.shape)?void 0:a[2]))return e;F2.padding=[[0,0],[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0],[0,0]],r.pad=Rd(e,F2.padding),r.resize=Rc.resizeBilinear(r.pad,[t,t]);const s=So(r.resize,"int32");return Object.keys(r).forEach((e=>fi(r[e]))),s}(e,z2),a.res=null==$2?void 0:$2.execute(a.input),W2.last=$K();const r=await a.res.array();W2.bodies=17===a.res.shape[2]?function(e,t,n){const a=e[0][0],r=[];let s=0;for(let e=0;e<a.length;e++)if(s=a[e][2],s>t.body.minConfidence){const t=[a[e][1],a[e][0]];r.push({score:Math.round(100*s)/100,part:x2[e],positionRaw:t,position:[Math.round((n.shape[2]||0)*t[0]),Math.round((n.shape[1]||0)*t[1])]})}s=r.reduce(((e,t)=>t.score>e?t.score:e),0);const i=[],o=bJ(r.map((e=>e.position)),[n.shape[2],n.shape[1]]),l={};for(const[e,n]of Object.entries(v2)){const a=[];for(let e=0;e<n.length-1;e++){const s=r.find((t=>t.part===n[e])),i=r.find((t=>t.part===n[e+1]));s&&i&&s.score>(t.body.minConfidence||0)&&i.score>(t.body.minConfidence||0)&&a.push([s.position,i.position])}l[e]=a}const u={id:0,score:s,box:o.box,boxRaw:o.boxRaw,keypoints:r,annotations:l};return _2(u),i.push(u),i}(r,t,e):function(e,t,n){const a=[];for(let r=0;r<e[0].length;r++){const s=e[0][r],i=Math.round(100*s[55])/100;if(i>t.body.minConfidence){const e=[];for(let a=0;a<17;a++){const r=s[3*a+2];if(r>t.body.minConfidence){const t=[s[3*a+1],s[3*a+0]];e.push({part:x2[a],score:Math.round(100*r)/100,positionRaw:t,position:[Math.round((n.shape[2]||0)*t[0]),Math.round((n.shape[1]||0)*t[1])]})}}const o=[s[52],s[51],s[54]-s[52],s[53]-s[51]],l=[Math.trunc(o[0]*(n.shape[2]||0)),Math.trunc(o[1]*(n.shape[1]||0)),Math.trunc(o[2]*(n.shape[2]||0)),Math.trunc(o[3]*(n.shape[1]||0))],u={};for(const[n,a]of Object.entries(v2)){const r=[];for(let n=0;n<a.length-1;n++){const s=e.find((e=>e.part===a[n])),i=e.find((e=>e.part===a[n+1]));s&&i&&s.score>(t.body.minConfidence||0)&&i.score>(t.body.minConfidence||0)&&r.push([s.position,i.position])}u[n]=r}const d={id:r,score:i,box:l,boxRaw:o,keypoints:[...e],annotations:u};_2(d),a.push(d)}}return a.sort(((e,t)=>t.score-e.score)),a.length>t.body.maxDetected&&(a.length=t.body.maxDetected),a}(r,t,e);for(const t of W2.bodies)O2(t,[e.shape[2]||1,e.shape[1]||1]),P2(t.keypoints);Object.keys(a).forEach((e=>fi(a[e]))),n(W2.bodies)}))}var V2=[],U2=0,G2=Number.MAX_SAFE_INTEGER,H2=0,j2=2.5;async function q2(e,t){if(!(null==D2?void 0:D2.executor))return[];const n=(t.object.skipTime||0)>$K()-U2,a=G2<(t.object.skipFrames||0);return t.skipAllowed&&n&&a&&V2.length>0?(G2++,V2):(G2=0,rY.kernels.includes("mod")&&rY.kernels.includes("sparsetodense")?new Promise((async n=>{const a=[e.shape[2]||0,e.shape[1]||0],r=Rc.resizeBilinear(e,[H2,H2],!1),s=Eo(r,yZ.tf255),i=ch(s,[0,3,1,2]);let o;t.object.enabled&&(o=D2.execute(i)),U2=$K();const l=await async function(e,t,n){var a,r;let s=0,i=[];const o=H2;for(const l of[1,2,4]){const u=13*l,d=Bp(e.find((e=>e.shape[1]===u**2&&(e.shape[2]||0)===_J.length))),p=await d.array(),h=Bp(e.find((e=>e.shape[1]===u**2&&(e.shape[2]||0)<_J.length))),c=il(h,[-1,4,((null==(a=h.shape)?void 0:a[1])||0)/4]),f=zo(c,2),m=await f.array();for(let e=0;e<d.shape[0];e++)for(let a=0;a<((null==(r=d.shape)?void 0:r[1])||0);a++){const r=p[e][a];if(r>(n.object.minConfidence||0)&&61!==a){const n=(.5+Math.trunc(e%u))/u,d=(.5+Math.trunc(e/u))/u,p=m[e].map((e=>e*(u/l/o))),[h,c]=[n-j2/l*p[0],d-j2/l*p[1]],[f,g]=[n+j2/l*p[2]-h,d+j2/l*p[3]-c];let y=[h,c,f,g];y=y.map((e=>Math.max(0,Math.min(e,1))));const x=[y[0]*t[0],y[1]*t[1],y[2]*t[0],y[3]*t[1]],A={id:s++,score:Math.round(100*r)/100,class:a+1,label:_J[a].label,box:x.map((e=>Math.trunc(e))),boxRaw:y};i.push(A)}}fi([d,h,c,f])}const l=i.map((e=>[e.boxRaw[1],e.boxRaw[0],e.boxRaw[3],e.boxRaw[2]])),u=i.map((e=>e.score));let d=[];if(l&&l.length>0){const e=await Rc.nonMaxSuppressionAsync(l,u,n.object.maxDetected||0,n.object.iouThreshold,n.object.minConfidence);d=Array.from(await e.data()),fi(e)}return i=i.filter(((e,t)=>d.includes(t))).sort(((e,t)=>t.score-e.score)),i}(o,a,t);V2=l,fi([r,s,i,...o]),n(l)})):V2)}var X2=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],K2=X2.length,Y2=X2.reduce(((e,t,n)=>(e[t]=n,e)),{}),Z2=([["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]].map((([e,t])=>[Y2[e],Y2[t]])),[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]]);function J2(e){const t=e.reduce((({maxX:e,maxY:t,minX:n,minY:a},{position:{x:r,y:s}})=>({maxX:Math.max(e,r),maxY:Math.max(t,s),minX:Math.min(n,r),minY:Math.min(a,s)})),{maxX:Number.NEGATIVE_INFINITY,maxY:Number.NEGATIVE_INFINITY,minX:Number.POSITIVE_INFINITY,minY:Number.POSITIVE_INFINITY});return[t.minX,t.minY,t.maxX-t.minX,t.maxY-t.minY]}var Q2,e5=class{constructor(e,t){c(this,"priorityQueue"),c(this,"numberOfElements"),c(this,"getElementValue"),this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}enqueue(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)}dequeue(){const e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e}empty(){return-1===this.numberOfElements}size(){return this.numberOfElements+1}all(){return this.priorityQueue.slice(0,this.numberOfElements+1)}max(){return this.priorityQueue[0]}swim(e){for(;e>0&&this.less(Math.floor(e/2),e);)this.exchange(e,Math.floor(e/2)),e=Math.floor(e/2)}sink(e){for(;2*e<=this.numberOfElements;){let t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}}getValueAt(e){return this.getElementValue(this.priorityQueue[e])}less(e,t){return this.getValueAt(e)<this.getValueAt(t)}exchange(e,t){const n=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=n}};function t5(e,t,n,a){return{y:a.get(e,t,n),x:a.get(e,t,n+K2)}}function n5(e,t,n){const{heatmapY:a,heatmapX:r,id:s}=e,{y:i,x:o}=t5(a,r,s,n);return{x:e.heatmapX*t+o,y:e.heatmapY*t+i}}function a5(e,t,n){return e<t?t:e>n?n:e}function r5(e,t){return{x:e.x+t.x,y:e.y+t.y}}var s5,i5=["MobilenetV1/offset_2/BiasAdd","MobilenetV1/heatmap_2/BiasAdd","MobilenetV1/displacement_fwd_2/BiasAdd","MobilenetV1/displacement_bwd_2/BiasAdd"],o5=1,l5=16,u5=2500;function d5(e,t,n,a,r,s,i=2){const o=(e,t,n)=>({y:a5(Math.round(e.y/l5),0,t-1),x:a5(Math.round(e.x/l5),0,n-1)}),[l,u]=a.shape,d=(p=o(t.position,l,u),{y:s.get(p.y,p.x,e),x:s.get(p.y,p.x,s.shape[2]/2+e)});var p;let h=r5(t.position,d);for(let e=0;e<i;e++){const e=o(h,l,u),t=t5(e.y,e.x,n,r);h=r5({x:e.x*l5,y:e.y*l5},{x:t.x,y:t.y})}const c=o(h,l,u),f=a.get(c.y,c.x,n);return{position:h,part:X2[n],score:f}}function p5(e,t,n,a,r){const s=Z2.map((([e,t])=>[Y2[e],Y2[t]])),i=s.map((([,e])=>e)),o=s.map((([e])=>e)),l=t.shape[2],u=i.length,d=new Array(l),p=n5(e.part,l5,n);d[e.part.id]={score:e.score,part:X2[e.part.id],position:p};for(let e=u-1;e>=0;--e){const a=i[e],s=o[e];d[a]&&!d[s]&&(d[s]=d5(e,d[a],s,t,n,r))}for(let e=0;e<u;++e){const r=o[e],s=i[e];d[r]&&!d[s]&&(d[s]=d5(e,d[r],s,t,n,a))}return d}function h5(e,t,n,a,r){const[s,i]=r.shape;let o=!0;const l=Math.max(n-o5,0),u=Math.min(n+o5+1,s);for(let n=l;n<u;++n){const s=Math.max(a-o5,0),l=Math.min(a+o5+1,i);for(let a=s;a<l;++a)if(r.get(n,a,e)>t){o=!1;break}if(!o)break}return o}function c5(e,{x:t,y:n},a){return e.some((({keypoints:e})=>{var r;const s=null==(r=e[a])?void 0:r.position;return!!s&&function(e,t,n,a){const r=n-e,s=a-t;return r*r+s*s}(n,t,s.y,s.x)<=u5}))}function f5(e,t){return t.reduce(((t,{position:n,score:a},r)=>(c5(e,n,r)||(t+=a),t)),0)/t.length}async function m5(e,t){if(!(null==Q2?void 0:Q2.executor))return[];const n=ci((()=>{if(!Q2.inputs[0].shape)return[];const t=Rc.resizeBilinear(e,[Q2.inputs[0].shape[2],Q2.inputs[0].shape[1]]),n=td(Eo(So(t,"float32"),127.5),1),a=Q2.execute(n,i5).map((e=>Bp(e,[0])));return a[1]=pl(a[1]),a})),a=await Promise.all(n.map((e=>e.buffer())));for(const e of n)fi(e);const r=function(e,t,n,a,r,s){const i=[],o=function(e,t){const[n,a,r]=t.shape,s=new e5(n*a*r,(({score:e})=>e));for(let i=0;i<n;++i)for(let n=0;n<a;++n)for(let a=0;a<r;++a){const r=t.get(i,n,a);r<e||h5(a,r,i,n,t)&&s.enqueue({score:r,part:{heatmapY:i,heatmapX:n,id:a}})}return s}(s,t);for(;i.length<r&&!o.empty();){const r=o.dequeue();if(c5(i,n5(r.part,l5,e),r.part.id))continue;let l=p5(r,t,e,n,a);l=l.filter((e=>e.score>s));const u=f5(i,l),d=J2(l);u>s&&i.push({keypoints:l,box:d,score:Math.round(100*u)/100})}return i}(a[0],a[1],a[2],a[3],t.body.maxDetected,t.body.minConfidence);return Q2.inputs[0].shape?function(e,[t,n],[a,r]){const s=t/a,i=n/r;return e.map(((e,t)=>((e,t)=>({id:t,score:e.score,boxRaw:[e.box[0]/r,e.box[1]/a,e.box[2]/r,e.box[3]/a],box:[Math.trunc(e.box[0]*i),Math.trunc(e.box[1]*s),Math.trunc(e.box[2]*i),Math.trunc(e.box[3]*s)],keypoints:e.keypoints.map((({score:e,part:t,position:n})=>({score:e,part:t,position:[Math.trunc(n.x*i),Math.trunc(n.y*s)],positionRaw:[n.x/a,n.y/a]}))),annotations:{}}))(e,t)))}(r,[e.shape[1],e.shape[2]],[Q2.inputs[0].shape[2],Q2.inputs[0].shape[1]]):[]}var g5=["fgr","pha","r1o","r2o","r3o","r4o"],y5={},x5=0;function A5(e){fi([y5.r1i,y5.r2i,y5.r3i,y5.r4i,y5.downsample_ratio]),y5.r1i=ni(0),y5.r2i=ni(0),y5.r3i=ni(0),y5.r4i=ni(0),x5=e.segmentation.ratio||.5,y5.downsample_ratio=ni(x5)}async function b5(e){return!s5||rY.initial?s5=await fZ(e.segmentation.modelPath):e.debug&&EK("cached model:",s5.modelUrl),A5(e),s5}var w5,v5=e=>ci((()=>{const t=Bp(e,[0]),n=$o(t,yZ.tf255);return So(n,"int32")}));function k5(e,t){const n=e?v5(e):Cl([t.shape[1]||0,t.shape[2]||0,3],255,"int32"),a=t?v5(t):Cl([e.shape[1]||0,e.shape[2]||0,1],255,"int32"),r=ul([n,a],-1);return fi([n,a]),r}async function I5(e){return!w5||rY.initial?w5=await fZ(e.segmentation.modelPath):e.debug&&EK("cached model:",w5.modelUrl),w5}function S5(e,t,n){var a,r;if(!t)return null;if(!(null==(a=null==e?void 0:e.config)?void 0:a.validateModels))return null;const s=["const","placeholder","noop","pad","squeeze","add","sub","mul","div"],i=["biasadd","fusedbatchnormv3","matmul","switch","shape","merge","split","broadcastto"],o=[],l=[],u=t.modelUrl,d=t.executor;if(null==(r=null==d?void 0:d.graph)?void 0:r.nodes)for(const e of Object.values(d.graph.nodes)){const t=e.op.toLowerCase();o.includes(t)||o.push(t)}else!d&&e.config.debug&&EK("model not loaded",n);for(const t of o)s.includes(t)||i.includes(t)||e.env.kernels.includes(t)||e.env.kernels.includes(t.replace("_",""))||e.env.kernels.includes(t.replace("native",""))||e.env.kernels.includes(t.replace("v2",""))||l.push(t);return e.config.debug&&l.length>0&&EK("model validation failed:",n,l),l.length>0?{name:n,missing:l,ops:o,url:u}:null}var C5,N5,T5,R5,E5,$5=class{constructor(e){c(this,"instance"),c(this,"models",{}),this.models={},this.instance=e}stats(){let e=0,t=0,n=0;for(const a of Object.values(cZ))e+=Number.isNaN(+a.sizeFromManifest)?0:a.sizeFromManifest,t+=Number.isNaN(+a.sizeLoadedWeights)?0:a.sizeLoadedWeights,n+=Number.isNaN(+a.sizeDesired)?0:a.sizeDesired;const a=n>0?t/n:0;return{numLoadedModels:Object.values(cZ).filter((e=>null==e?void 0:e.loaded)).length,numDefinedModels:Object.keys(this.models).length,percentageLoaded:a,totalSizeFromManifest:e,totalSizeWeights:t,totalSizeLoading:n,modelStats:Object.values(cZ)}}reset(){for(const e of Object.keys(this.models))this.models[e]=null}async load(e){var t,n,a,r,s,i,o,l,u,d,p,h,c,f,m,g,y,x,A,b,w,v,k,I,S,C,N;rY.initial&&this.reset(),e&&(this.instance=e);const T={};T.blazeface=this.instance.config.face.enabled&&!this.models.blazeface?async function(e){var t;return rY.initial&&(hQ=null),hQ?e.debug&&EK("cached model:",hQ.modelUrl):hQ=await fZ(null==(t=e.face.detector)?void 0:t.modelPath),gQ=hQ.executor&&hQ.inputs[0].shape?hQ.inputs[0].shape[2]:256,yQ=xu(gQ,"int32"),mQ=qp(function(e){const t=192===e?{strides:[4],anchors:[1]}:{strides:[e/16,e/8],anchors:[2,6]},n=[];for(let a=0;a<t.strides.length;a++){const r=t.strides[a],s=Math.floor((e+r-1)/r),i=Math.floor((e+r-1)/r),o=t.anchors[a];for(let e=0;e<s;e++){const t=r*(e+.5);for(let e=0;e<i;e++){const a=r*(e+.5);for(let e=0;e<o;e++)n.push([a,t])}}}return n}(gQ)),hQ}(this.instance.config):null,T.antispoof=this.instance.config.face.enabled&&(null==(t=this.instance.config.face.antispoof)?void 0:t.enabled)&&!this.models.antispoof?async function(e){var t;return rY.initial&&(ZQ=null),ZQ?e.debug&&EK("cached model:",ZQ.modelUrl):ZQ=await fZ(null==(t=e.face.antispoof)?void 0:t.modelPath),ZQ}(this.instance.config):null,T.liveness=this.instance.config.face.enabled&&(null==(n=this.instance.config.face.liveness)?void 0:n.enabled)&&!this.models.liveness?async function(e){var t;return rY.initial&&(t1=null),t1?e.debug&&EK("cached model:",t1.modelUrl):t1=await fZ(null==(t=e.face.liveness)?void 0:t.modelPath),t1}(this.instance.config):null,T.faceres=this.instance.config.face.enabled&&(null==(a=this.instance.config.face.description)?void 0:a.enabled)&&!this.models.faceres?async function(e){var t;return rY.initial&&(FQ=null),FQ?e.debug&&EK("cached model:",FQ.modelUrl):FQ=await fZ(null==(t=e.face.description)?void 0:t.modelPath),FQ}(this.instance.config):null,T.emotion=this.instance.config.face.enabled&&(null==(r=this.instance.config.face.emotion)?void 0:r.enabled)&&!this.models.emotion?async function(e){var t,n,a;return rY.initial&&(MQ=null),MQ?e.debug&&EK("cached model:",MQ.modelUrl):(MQ=await fZ(null==(t=e.face.emotion)?void 0:t.modelPath),GQ=3===(null==(a=null==(n=null==MQ?void 0:MQ.inputs)?void 0:n[0].shape)?void 0:a[3]),LQ=GQ?["angry","disgust","fear","happy","neutral","sad","surprise"]:["angry","disgust","fear","happy","sad","surprise","neutral"]),MQ}(this.instance.config):null,T.iris=this.instance.config.face.enabled&&(null==(s=this.instance.config.face.iris)?void 0:s.enabled)&&!(null==(i=this.instance.config.face.attention)?void 0:i.enabled)&&!this.models.iris?async function(e){var t,n;return rY.initial&&(cQ=null),cQ?e.debug&&EK("cached model:",cQ.modelUrl):cQ=await fZ(null==(t=e.face.iris)?void 0:t.modelPath),-1===(xQ=(null==cQ?void 0:cQ.executor)&&(null==(n=cQ.inputs)?void 0:n[0].shape)?cQ.inputs[0].shape[2]:0)&&(xQ=64),cQ}(this.instance.config):null,T.facemesh=this.instance.config.face.enabled&&(null==(o=this.instance.config.face.mesh)?void 0:o.enabled)&&!this.models.facemesh?async function(e){var t,n,a,r,s,i;return rY.initial&&(PQ=null),(null==(t=e.face.attention)?void 0:t.enabled)&&(null==PQ?void 0:PQ.signature)&&Object.keys((null==(n=null==PQ?void 0:PQ.signature)?void 0:n.outputs)||{}).length<6&&(PQ=null),PQ?e.debug&&EK("cached model:",PQ.modelUrl):PQ=(null==(a=e.face.attention)?void 0:a.enabled)?await fZ(e.face.attention.modelPath):await fZ(null==(r=e.face.mesh)?void 0:r.modelPath),OQ=PQ.executor&&(null==(s=null==PQ?void 0:PQ.inputs)?void 0:s[0].shape)?null==(i=null==PQ?void 0:PQ.inputs)?void 0:i[0].shape[2]:256,PQ}(this.instance.config):null,T.gear=this.instance.config.face.enabled&&(null==(l=this.instance.config.face.gear)?void 0:l.enabled)&&!this.models.gear?async function(e){var t;return rY.initial&&(o1=null),o1?e.debug&&EK("cached model:",o1.modelUrl):o1=await fZ(null==(t=e.face.gear)?void 0:t.modelPath),o1}(this.instance.config):null,T.ssrnetage=this.instance.config.face.enabled&&(null==(u=this.instance.config.face.ssrnet)?void 0:u.enabled)&&!this.models.ssrnetage?async function(e){return rY.initial&&(c1=null),c1?e.debug&&EK("cached model:",c1.modelUrl):c1=await fZ(e.face.ssrnet.modelPathAge),c1}(this.instance.config):null,T.ssrnetgender=this.instance.config.face.enabled&&(null==(d=this.instance.config.face.ssrnet)?void 0:d.enabled)&&!this.models.ssrnetgender?async function(e){var t;return rY.initial&&(w1=null),w1?e.debug&&EK("cached model:",w1.modelUrl):w1=await fZ(null==(t=e.face.ssrnet)?void 0:t.modelPathGender),w1}(this.instance.config):null,T.mobilefacenet=this.instance.config.face.enabled&&(null==(p=this.instance.config.face.mobilefacenet)?void 0:p.enabled)&&!this.models.mobilefacenet?async function(e){var t;return rY.initial&&(N1=null),N1?e.debug&&EK("cached model:",N1.modelUrl):N1=await fZ(null==(t=e.face.mobilefacenet)?void 0:t.modelPath),N1}(this.instance.config):null,T.insightface=this.instance.config.face.enabled&&(null==(h=this.instance.config.face.insightface)?void 0:h.enabled)&&!this.models.insightface?async function(e){return rY.initial&&(_1=null),_1?e.debug&&EK("cached model:",_1.modelUrl):_1=await fZ(e.face.insightface.modelPath),_1}(this.instance.config):null,T.blazepose=this.instance.config.body.enabled&&!this.models.blazepose&&(null==(c=this.instance.config.body.modelPath)?void 0:c.includes("blazepose"))?async function(e){if(rY.initial&&(xJ=null),xJ)e.debug&&EK("cached model:",xJ.modelUrl);else{const t=(null==(xJ=await fZ(e.body.modelPath))?void 0:xJ.executor)?Object.values(xJ.modelSignature.inputs):void 0;kJ=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0}return xJ}(this.instance.config):null,T.blazeposedetect=this.instance.config.body.enabled&&!this.models.blazeposedetect&&this.instance.config.body.detector&&this.instance.config.body.detector.modelPath?async function(e){if(rY.initial&&(hJ=null),!hJ&&e.body.detector&&e.body.detector.modelPath){const t=(null==(hJ=await fZ(e.body.detector.modelPath))?void 0:hJ.executor)?Object.values(hJ.modelSignature.inputs):void 0;gJ=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0}else e.debug&&hJ&&EK("cached model:",hJ.modelUrl);return function(){const e=[];let t=0;for(;t<5;){let n=0,a=t;for(;a<yJ.length&&yJ[a]===yJ[t];)n+=2,a++;const r=yJ[t],s=Math.ceil(gJ/r),i=Math.ceil(gJ/r);for(let t=0;t<s;++t)for(let a=0;a<i;++a)for(let r=0;r<n;++r)e.push({x:(a+.5)/i,y:(t+.5)/s});t=a}cJ={x:jp(e.map((e=>e.x))),y:jp(e.map((e=>e.y)))}}(),hJ}(this.instance.config):null,T.efficientpose=this.instance.config.body.enabled&&!this.models.efficientpose&&(null==(f=this.instance.config.body.modelPath)?void 0:f.includes("efficientpose"))?async function(e){return rY.initial&&(BJ=null),BJ?e.debug&&EK("cached model:",BJ.modelUrl):BJ=await fZ(e.body.modelPath),BJ}(this.instance.config):null,T.movenet=this.instance.config.body.enabled&&!this.models.movenet&&(null==(m=this.instance.config.body.modelPath)?void 0:m.includes("movenet"))?async function(e){var t;return rY.initial&&($2=null),$2?e.debug&&EK("cached model:",$2.modelUrl):(bZ(["size"],e),$2=await fZ(e.body.modelPath)),(z2=(null==$2?void 0:$2.executor)&&(null==(t=null==$2?void 0:$2.inputs)?void 0:t[0].shape)?$2.inputs[0].shape[2]:0)<64&&(z2=256),Xe().flagRegistry.WEBGL_USE_SHAPES_UNIFORMS&&Xe().set("WEBGL_USE_SHAPES_UNIFORMS",!1),$2}(this.instance.config):null,T.posenet=this.instance.config.body.enabled&&!this.models.posenet&&(null==(g=this.instance.config.body.modelPath)?void 0:g.includes("posenet"))?async function(e){return!Q2||rY.initial?Q2=await fZ(e.body.modelPath):e.debug&&EK("cached model:",Q2.modelUrl),Q2}(this.instance.config):null,T.handtrack=this.instance.config.hand.enabled&&!this.models.handtrack&&(null==(x=null==(y=this.instance.config.hand.detector)?void 0:y.modelPath)?void 0:x.includes("handtrack"))?async function(e){var t;if(rY.initial&&(r2[0]=null),r2[0])e.debug&&EK("cached model:",r2[0].modelUrl);else{bZ(["tensorlistreserve","enter","tensorlistfromtensor","merge","loopcond","switch","exit","tensorliststack","nextiteration","tensorlistsetitem","tensorlistgetitem","reciprocal","shape","split","where"],e),r2[0]=await fZ(null==(t=e.hand.detector)?void 0:t.modelPath);const n=r2[0].executor?Object.values(r2[0].modelSignature.inputs):void 0;i2[0][0]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[1].size):0,i2[0][1]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[2].size):0}return r2[0]}(this.instance.config):null,T.handskeleton=this.instance.config.hand.enabled&&this.instance.config.hand.landmarks&&!this.models.handskeleton&&(null==(b=null==(A=this.instance.config.hand.detector)?void 0:A.modelPath)?void 0:b.includes("handtrack"))?async function(e){var t;if(rY.initial&&(r2[1]=null),r2[1])e.debug&&EK("cached model:",r2[1].modelUrl);else{r2[1]=await fZ(null==(t=e.hand.skeleton)?void 0:t.modelPath);const n=r2[1].executor?Object.values(r2[1].modelSignature.inputs):void 0;i2[1][0]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[1].size):0,i2[1][1]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[2].size):0}return r2[1]}(this.instance.config):null,this.instance.config.hand.enabled&&!this.models.handdetect&&(null==(v=null==(w=this.instance.config.hand.detector)?void 0:w.modelPath)?void 0:v.includes("handdetect"))&&(T.handdetect=async function(e){var t;return rY.initial&&(X0=null),X0?e.debug&&EK("cached model:",X0.modelUrl):X0=await fZ(null==(t=e.hand.detector)?void 0:t.modelPath),X0}(this.instance.config),T.handskeleton=async function(e){var t;return rY.initial&&(K0=null),K0?e.debug&&EK("cached model:",K0.modelUrl):K0=await fZ(null==(t=e.hand.skeleton)?void 0:t.modelPath),K0}(this.instance.config)),T.centernet=this.instance.config.object.enabled&&!this.models.centernet&&(null==(k=this.instance.config.object.modelPath)?void 0:k.includes("centernet"))?async function(e){if(rY.initial&&(FJ=null),FJ)e.debug&&EK("cached model:",FJ.modelUrl);else{const t=(null==(FJ=await fZ(e.object.modelPath))?void 0:FJ.executor)?Object.values(FJ.modelSignature.inputs):void 0;PJ=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}return FJ}(this.instance.config):null,T.nanodet=this.instance.config.object.enabled&&!this.models.nanodet&&(null==(I=this.instance.config.object.modelPath)?void 0:I.includes("nanodet"))?async function(e){if(!D2||rY.initial){const t=(null==(D2=await fZ(e.object.modelPath))?void 0:D2.executor)?Object.values(D2.modelSignature.inputs):void 0;H2=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):416}else e.debug&&EK("cached model:",D2.modelUrl);return D2}(this.instance.config):null,T.selfie=this.instance.config.segmentation.enabled&&!this.models.selfie&&(null==(S=this.instance.config.segmentation.modelPath)?void 0:S.includes("selfie"))?I5(this.instance.config):null,T.meet=this.instance.config.segmentation.enabled&&!this.models.meet&&(null==(C=this.instance.config.segmentation.modelPath)?void 0:C.includes("meet"))?S2(this.instance.config):null,T.rvm=this.instance.config.segmentation.enabled&&!this.models.rvm&&(null==(N=this.instance.config.segmentation.modelPath)?void 0:N.includes("rvm"))?b5(this.instance.config):null;for(const[e,t]of Object.entries(T))(null==t?void 0:t.then)&&t.then((t=>this.models[e]=t));await Promise.all(Object.values(T))}list(){const e=Object.keys(this.models).map((e=>{var t;return{name:e,loaded:null!==this.models[e],size:0,url:this.models[e]?null==(t=this.models[e])?void 0:t.modelUrl:null}}));for(const t of e){const e=Object.keys(cZ).find((e=>e.startsWith(t.name)));e&&(t.size=cZ[e].sizeLoadedWeights,t.url=cZ[e].url)}return e}loaded(){return this.list().filter((e=>e.loaded)).map((e=>e.name))}validate(){const e=[];for(const t of Object.keys(this.models)){const n=this.models[t];if(!n)continue;const a=S5(this.instance,n,t);a&&e.push(a)}return e}},M5="\n/9j/4AAQSkZJRgABAQEAYABgAAD/4QBoRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUA\nAAABAAAARgEoAAMAAAABAAIAAAExAAIAAAARAAAATgAAAAAAAABgAAAAAQAAAGAAAAABcGFpbnQu\nbmV0IDQuMi4xMwAA/9sAQwAGBAUGBQQGBgUGBwcGCAoQCgoJCQoUDg8MEBcUGBgXFBYWGh0lHxob\nIxwWFiAsICMmJykqKRkfLTAtKDAlKCko/9sAQwEHBwcKCAoTCgoTKBoWGigoKCgoKCgoKCgoKCgo\nKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo/8AAEQgBAAEAAwEhAAIRAQMRAf/E\nAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAE\nEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZH\nSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1\ntre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEB\nAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXET\nIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFla\nY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG\nx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A+qaKACigApGOKAML\nXp8xlF5A7V4X8RtYs7PzfNImnx8sa8Kp9z3q2tEgp6angWs62ZZ5CTGoJ6DArGNz5p+UrID6EUrF\nPUlW1EuN0XNW7PQ2L5j3JnoKXN0KijqNP0eYoqXBdgPuuo+ZPeupisWn2Jd4+0r924XgsQOCff3/\nAJ1FzRKxDqGii6m3siiQ8F1XGfXI6YNWLfRbiRQMkcZI9fpTDluT2/h6Qy8gDPbtmtG38JeY480Z\n5zSLUTZg8M28YwYxjAArXtdPt402qgHbpSaLWhma3o0Uqk7Nx9DWLaaVblgPs6qRyds2M/gRSQp9\nzZOni2iWS2hlQ+kjYz9OMGrdjq89vIPPVhj+8M/lQyDq9P1WOYBlMZz1AOD+VdDaTiReOKulK0jO\ntHmi0WDTlr0TyxRVhT8tJjIX+9SUxHXUV553BRQAVBcPhSBTSuxPY86+IGti0s5I7dsORy9fM3i6\n8e8mfDO5P90ZrWWiJicNPpZZtxV/xrW0jQt4DOv6Vk2dEEdTY6BHuB25rpbPSo0QARjP0qTRI17W\nwA/hFaMWmoQMgflQXYsDS142rU9tpqqenfNA7GgtihxkdKuRW6qMY/GkDZY8sY4Ap4hXbyB+VArk\nEtuH4wPyrk/EGkOm+a3jw3suRQLc5i38SX9hJ9nnY+XnBUdPyNdFY6pa3KkkAE9l6f8AfJ/pSJT6\nGhDmI+Zb4ZRycdv6ium0nUhKFydrelTsNnS2829RnrVgV6NKXNG55lWPLIM81Op+WrZkRMfmNNzT\nA7GivPO4KKAEY4XNYWt3vkwPg4OK0giJdjw/xrqhm87Zs8tc7pX5A+leSajf6aHYJ50kn4AZpTep\nrBWRm2Vobm4BXfyehPFdnpmnBFUY5rI2SN63tlToK0YI+KZpFF+3QdavwoKTLtoW0Toaswpk5pCb\nLCxipAhoIuP2dKevHXoaYDylRyxhlwRQI4nxVoCXWZI1GfpXGtbSWjYPGP73+NIGupt6TqMsLruZ\nih4xnP5V09mQ+JLd8gn0xSYJnVaVdkook69K34zuUGunDS3Rx4qOzHVIp4rrOMY3NJQI7GivPO8K\nKAILt9kZrz3xlebYiu8KCCWb0XvW0NFch6ysfO3jLVjfXLIn+pQkKorl7WxNxIPl71g2dUUdpo+l\npBGvHPet23iC8ihFosrxirkHQUFo0IF4FXI1O726CpKLacCrMJoJLYHAPpTwucHpSRJJ5e4AZI9x\nUqpxzVpCuOC8cUpQUMRnXttuB4rjNdsYyeVwfXpmpGmcvcQyafMCFJjPY10eg34BUg4DcZP8jUO4\nHaRq3lLNF+IHet7R7jz7c56rwa2wz9+xhiVeFy/T1PFegeaNPWigDsc0ZrzzvDNIaAM7VpNqdegr\nxL4l6kywyRhseZ19lrdfAZL4jxYg3Fw20d63tJsdrDI5rm3Z3R0R0Mce1eKnQYAplIkWrMJ45oZS\nNO3PHbNXIyfpSGWowSOasxLUiZdjFSqtNEMkUemKlAGKsRJjAppFAiORMjmsTVrNZEO4cfSoZSOD\n1eJ7WXBUzQZ+7nkfSo7e2Ei+ZaMzxntjBX2NSU1Y6/wxqojiEFzkA8KTXYaUoWRyv3W5rSjpNHPX\n+BmpSg8V6J5gUUAdhRXnneFFAGHrTfu5PpXzj8S70/aZtxzztXFbv4DKHxHI+H4GZiz9zxXXW8G3\nGBXMjvLRXAx0oPGPSmMVeOnWrMTYpFI0bcg1fh54xmgovRcD3qxETSIZcRvzp+/BpEkqsBUqsM9K\nq4Em4Gkxk0yRGXrVW6i8yFhkg+tJjRxGsWrxllkUMh9eK5uMz6bcebbnfG33kPcVkay2OntPKuo0\nnhXI67c8qa7Lw3c+adjcEDGK1paSRhVV4s6A0or0jyRRQ1AHX0V553hRQBz+vNtt5z3xXzX8Qbdm\nuic5YnOMdK3l8JnTXvlbwpYl+WySOgrp5YfLOOB9O1c62O7qQkc+9RsKChFPWp4DluOlSykaNruH\nArUgHShFNF2NT1qxGO3NBmyxGcE1N2560CFzjrUysO9JAPDDjFOVuKoQuSRTWouBkazbCa3cd8cV\nwF7IISQccHBzUSWpV9C3o1x5b5GAjdQD1rs9DjC3kckbEhqKfxIzn8LOupRXqnkPccBSkUAzraK8\n87wooA5rxMSI3HqK8B8bQl9Q8sffY5b/AAraXwkUviNrw9pH2W1ViMMRTdRjw4HpWNtDti9TPc4P\nFQs2M5qdyyMHLcfjV63HTAoBGtap0wK0YxigpsuRDtVhVYd6GQydVwwIqdRnqKCR23I5pCMUW6gD\nYNKuetAEise9KTxQBWuFyhrznxNZkXjFeN3I+tTIZg2OqmzmxNF0PO3vXp/g2+hukVl4zyPanTXv\nJmVR+60dpThXpnlPceopWFAbnV0V553hSGgRynjC5FujOey14Ssp1HxNmTnc+a3kvcIpv37HoEYQ\nQmMdVHSsnVbYJF5jVk0dsNzlruVIsl2wKxbjWrVHILjg1CRbZJb+ILHPzyhfStODWLQgFJFYd+el\nUJM27HUIXxhga1Y5lLVLKLkMnoauxnPPrSEx7ShF+Y/n2qrc6xBbhizDAqkK1zJuvG9nbg8ZA681\nly/Ei052RO3uKAsZlx8QGd8xxvt9Aa1NH8dK7AXMcip64zigdkdrZX8F7EJLdwwNXMkrz1qRMRly\nCK4TxmpidWI49felPYSOMmi80NIoOV6qRzXYeA5SskYPfirpfEjGr8LPWVHyD6U4CvQPL3ZItOYc\nUDOoNFeed4Uhpks4H4iE/Z5MeleMeGULeLgjds10S+BGdL+Jc9OSBU2Huc5Nc74yvUtrcDBrJnZF\n63PJdXvLy/lKWw46bvQVz82jXhkLO5Y+9ZlsYthcRnbIjY9R3q3awTRkEM3WmJI6C0ea3dGRsr1x\nXY6TqW9FLHnjrUs0izpLK5DDjofSta3ckH09KRUkZuuTvFGdvPauE1Y3U6Mqbssf/rUxHPTaJPK2\nZmJPbBqzY6DCZh5xJC9s9aBJHU6dpemJjfEmfetJtI0+VPkUr/unFOxdiextHs33W07YHQHk11mk\nXb3KbZ1xIvcd6LEyWho4Nct41sTPYb16ipexCPPZN+wYGCvH1rrPAEJmvkPoc1VL4kZVvgZ6yFwK\ncBXoHkkqinFaVyzo80GuE7WJRQSziPiGdthK5HQV4x4J/wBI8WPIewNdEvgRNL42emO/yj1UHNef\neNpRczbC+I17DvWT2OqJxc0sMK4TCisy41q0hfEkqj8aixdwTXNOlwvmqD9anS9tXH7uVG+hosO4\n/wC0oOhrR0+6G4YNIEzsNEuCxAPNdjZruA4xxUmjINSjURksOlcbqFykbnjFA1sYGoassaknCqO5\nrl7rxhGm7yBnBxuJq0rkSlYpw+NLlsfd5P8AerVsvHEqSBHwPVgcgVpyMyVXU3rXxcHYETAk+hru\n/DWti6ZSTyOKzZqndHaxvvUGq2rQ+dYyqR24qWI8dvbr7LqDxyDAzXpvw6FvIxePGSM06Xxoyr/A\nzviKFHNegeX1J41zUhXioGbuaSuM6wpCaBHG/EcA6HN/exxXjXw2jL67cv8A3Qa6H8CFR+NnoWpO\nI4XI44rxLxrqjQzSEsQM1gdSPM9U1uR1YbmWIdXHf2rmpIb67YS28UrRlsLI3c/jW0VZGUpO5pW1\njfLNOjahawzwReYI5cjzMkDavHJ5/SrVv9uhtPtVxCPLBwzxnlT9KGghLU3tKvvPjHzbl7EGuisJ\nGRxWLOg7nRXJEbDjmvSNK+aFSfSoZr0KutRkphc4NcRrdkVjL9aVio7Hk3iqS8ubhrWzUlsZY9kG\ncZNc5D4aee5MclzJIFTzHAO0MfatqSOWu7bFS1srDUZEis0vIZoUxPvfcC+4/dx2xjr712XiTwXb\nWmlQ6hol3cRhoFd4rlg3zY5wR0GelavQwjq7GD4etdVvSnk2wAB+9v8A8mvcfA2kXiRo0/UdcDis\nZnTTulqeoWqbUAJqWUb42X1FZlnjfjSwlGrr5S/eNdD4RkvLAAQ4yRyaUZcruVKl7TQ9I0G+mnzH\nckFwM8VuIK7ac3KF2eXiKapz5UWYxipNtMyNejNch0jSar3cjR27uoyQCRVRWom9DxTx54gu5fMi\nlbKdMVjfCZPNlv5v9rFbVHpYqjGzbOn8SzFI9o715L4u0r7arYzk+lYdTqSujy7U/C0u4vHk+WwO\nxuh9q3J9dgvbdVukMV1EwbDDgn04rZMwlHoZ+orZ6hfQ3RWVnQYCgZAq+8U0ln5NtBsV2yxYcfgK\nJtW0CnB31LlroVwJ1nQLGDjeP7w+lb0dsFxjrWB0tHS6NuWPJ6A16ToUm63T3Gallr4S7cxiTjrX\nPaxaF7dlVeSMUhxZ5jd+H7qCa4eF3DSE5x3zXN3Wk6jbyeaiFWUY6ZyPStYS5SalPmVipFbX0E4c\nW0alvmPHJrag0rVvEE6LdljGpG2NRtQD+tW5XMI0uU9M8NeFo9PiQhecDIIrtrOMIoG3H4VlJm9t\nC6CB06VPGM1IHLeItGS6uw+ORT7e3jsbQvj7gzUNam0JaWE+HN7NqOqX80n3FO1RXo8YzXdS+BHk\n4z+KyzGPapcU2YIv7qQtiuaxvcaWqG4O6FwfSrS1JbPnrxoxkv7qIfejcitj4V2f2exumI+8+aKn\nxHTT+G5d8Txlm4rjLxMsQwzWT3OiK0Mm6sEkVsAcjFc1d+FEmlGwEDPQVopaEuOpr6f4ZWNAu3tW\nvHpAj5ZQcUFIWaDjGMVUMQ3cVDBmvbhY7QAV2nh+T/R1yeKhlrY31+b61FcQK6nIoJMi401WblRi\nqr6PCw5UYq9y+YgOgWzNkRrx3xWjp+nx2v3FQcelAbmko9anQ4GBUNisPHWr1qMrQhS2K11HvmYV\nhamcxSRZ5xRIqluS/DKAQQXZxyXrvo2FdlL4EeZjH+/ZbjNSZpswLNBrE1Gt7VE4ODVIlnh/j61F\nj4lmeTGyUbq6LwdEqWbeX0YbhSqfEddP4Bddj4JIrhL5d8h7VjI6oLQqKNzelWre3yc4/ClFjaL6\nwqBxxUUxwCKu5BmXRA6c+9ZjP83FSBoQuPs4BrsNBlUW659KmRrDY6G1lyQtW3Hy0lqQ1qVJnAbm\noy3b9KYJCqRj3o4zRctIlhjLHmpSuOBRbQOpLGpPFaES7UqkZzKN1KsEc87/AHUUmvPLTVGv72aQ\nk7WJwKmRrQ3ud74Ltilgz4++2a6iNDXdS0gjyMU71my7GpqTbxSbMki3SViajTTHqkSeR/GeyZmg\nnQHkEE1S+F+oPPavBL96I4/Cia1udVF+4dVrkW+Fq8+v4tjMDWUkdVJ6WM0cNV+F+MVmjUcZgqnP\n1qpNNnkcVRLiZtxIS1UzzIF7mghlxUZpVQdq6nTVdAoAOKzkbQWhvwM6gMM1twOJYx3NOJE11Kt1\nH1/pVVlwBkk+9NocXoOQ45FPj+fkUJFF2NSB700v/hTEty5ZpkjvVyUgcCq6GM9zC14/8Se6GcZQ\n1574Xs5WkI2HBPHFQ1dm1KSSZ7Rotn9l0+KPHIHNacae1dy0Vjxaj5ptlhVp+2s2CJ9ppCKzuWNx\nzSFc1SYrHNeNdIGpaYw25ZeRXmvheyk0jVpEdcLJ0q3ZxNKTa0O3vQHg/DNcHrsJDmsmjspnNzNt\nfFIJ24GazOhC+azDmgZIOOKBsp3J2qSaZodubq58yQ4QAnmhGT3NO18pb7BORmu205LfYpyKVkWp\nOxr5gKYWoIZWgfGfloFq1qTPLubnGO1RPtxg4P0oBAkY/hBz6VNDDkZ6AU0W2WSdqkdKr9ZOaGSj\nVtcLHmnOcgmmYvcz7mBLy3MbdD1q9ouiRK6bUAVeelOC1InPlidSsWMDFOCEdq3uefykqrinYqGy\nrFvApMVka2DAowKAsMkRXQqwyDXn/iWyitNQ3qPl6itIvRoF8RXinW4tQ6HI6GuW8SIVBPalc6qe\n5x9x97r3qruwTjrWZ0ksZ9TUmcDNAmZ9/wAoao63rR0+w22MLPtAzt6mghmfofiB76LdJBJBIp5D\nd/oa7bSdWLIPnpDi9TM8TeKdas51XTbIyxd3J/pXS+E/EFxqNoFu7do5OmD60maHWrnZyDRkn/69\nMlEyOR0xntVoNx+FUgYjPxg4FLCuWDZyKQr2RoRnP0qO+nEFpJITgAUzLqZnhu6+0rknOTXpOmwJ\nFbrt5yMmnHYyr6Oxb2ijaKLnPYMClwKQWK3n0hn+lachHOJ9pNNN0apQFzsY10a4v4hXQh0xpieQ\nMA1XLZNjhK80cT8OdV+3Wl3A7ZZJCw+hrR1qLcjZ/CsbnfHRnFXseHJArOYYbrUs1uPhYbuatqFP\nByfSkMq3UIINYkto+87Tx6GkSxfsDbflGD7CtTw/pk4nzITtPIFMFudsukh4Rxz71paTpKwP5jcn\n0qTRy0NORMDgVCqewoJTJgAoxjntTiTu7fWmFxAcnn1q3EPl+X8KZMi4gKqB1Peob/Tv7Us5bfeU\nyOoq4R5nYxqT5I8xieH9J1DTbvyJELRg8ODwa9Ms5mSFV9BWiptbnNVrKdmif7Q1KLg96XIZc5Is\npNL5pqeUrmMtZs0jzV08phchaY00zH1p2ZNxjS1g+LdJOt6U9ssmxjyGp2urDjLlaZzng/wUPDqz\nTSTmWeTrjpVjVk3Rvjr2rnqQ5dDvo1XUd2cTqSNk9OKxXGCeKxZ1DAxHTr2q5C/y8GokUhsz54qu\nuCxzSQjQ0+FZblR2ro4bZYiMVQ0dBb7Qi5x0qzuG5QOh71LYErDufpSeWrHnimIXbjkUjLkH1Hem\ngGxryc+tXI19KYmWegq9YLiLJ7mtqS945cS7QsWehqxA9dEjz4krPSxyZqbFFhGxUm6smjRM55Lk\nHvSvNxXTY57kLT+9MNwKdhXGm5FIbkU7Bca1wMEVhaiuQcVhXWiZ14R6tHGanGBI2OtYkqEHjgVy\ns9ErEeo6UBsHipKEZs5qpPdRxcbhx70NCSuybTNWihc5brW9Fq6vjMnFSdEIdDRi8RRKygZbHFbu\nm6nb3RA3gMegNJhOm0jbXGOoxTuCc1Rz3FyoGKawz9KaAVcZqeMgCmIkB4FaUTbYwB6V00Fuzixb\n0SFMuDU8Mlbs4UPeXHeiOXkUrDuXYnyKk3cVk0ap6HMxxketSMhrcwRC0dMMZFMQ3yzSeVQAeUaz\n9Vj8uPd271nVV4m+GdpnHX67pCeKyLtBtNcR6xlk9RVeWTb3qRnO6trgttyIfm71z7ai8j7/AJmN\nDNqUVa5Yi1AnjynHuBV+11YJhWWXcP8AZNSzqgmaEerSsf3NtIQP4mGKtRavdRgMIpVI9KjU0a7n\nR6T43uYQI7qN2Tpkqciu503VVuQGAYZHQjFVc4alPlZrpKGAznpTwxOc9+lWjIlUACnM4XApiLNk\nnmvnsK0NvpXZRVonmYqV52GsmanhXitTmFkSiJTSAvwrxUxXIrJ7miOfjf1pzNWxkRlqYWpgJupu\n6gQbuahvIxPA6eo4pNXVioS5WmefakGhndH4INZs5DJXA10PaTurmLO21uKpSZqGMoXGnRzBiyjd\n9Kx5rcQS428fSkjanLoaOliHGZFB56VswW+mtPufcBsGOAfmxz+tFkd8HpoaUx09FAtFY8DO71qb\nSms/Nb7RbecG6AEjFLS5c78t+p0djpVs9wsyQiJAdyr1rW+zqjErzSe559Sbk9S3C+MA1bjbgE1S\nMSXzMVG0vNUI2tPKrAuCMnrVzNd0PhR49W/O2xrHmp4TxVMzQshpIzzQBehqesnuaI5VGzT2bitz\nFEbNTC1ADS1JupgG6l3UAc14s04yR/aYRll+8BXCtLncDXFWjys9TCz5oW7GddH5qqNzWDOgQnC8\nVSuo1kHzAGkPYopEY2+RWxV23Vzj5G/Kg3jWaNazhZuqNXS6TaKhB2c0jR1nJWOlhOxRxU4YkCgx\nY0OQatQyDbyaaFYe8uF4NY3iC9ltbVGj43NTIL3h7WzMihjzXVQXYYDdW9Cf2WcOJpfaRZ3g9KsQ\nmupnCLIabGeaAL0LcVY3cVmzRHIxtUhetzEjZqjLUAIWpN1ArhupwagAfDKQ3Q1594v0c2bm6tx+\n5Y8j+6ayrR5onThp8s7dzkZjuqAAmuBnqC7c0iwgtzSA0rWzjfGRW3ZadDu4AoNYo2rfS4v7orSh\n05UA2r0pDbsTm29KRottBNyJ0wpJ9KhD7f6U0ikNWffIFBz60zVUW52ow4UcUN6EPcx44WsbgOmd\nua7TT5Bd24KHnFKnLlZFSN4koluLdueRWvp14swweG9DXoxldHlTjYtzGoo25qzEvwtUxas2jRPQ\n5CNqkLVsYoYzUzdQA3dSFqBBmnqaBhuqhriCXTpVIzxUz+Fl03aSPI9QTypW2/dz0qKNw3SvOPZR\nMqin8VLKRcs3O4Cuk0w/MDjt1NBtHY6O2IIHY1pxgFaETIRwMkjtVSUEk4570MlFW5bap6dKzWm8\n1tqH8aY+hp2FvGoGayNevVt7/ap4xzUvYjqTLtvLPcvJxSaVcyWsxTnFZlnT2t15xHmCtOBYwQy4\nB9q7cPO+jPPxFO2qLEj5HWo42+aus4HpoX4W4FTF+KlotbHII9SFuK0MUNZqiLUDE3UbqBBupwag\nBc1DefPbyD/ZND2KjujyPWlKzuPesRZjHJXms9lMuw3StjnmphKDSLTJ7OfE3JrpbO4GQc9qlnRA\n3LO82k5NbFvdADkjBoCSHyXIIIzgVQvdRigT7wzjgUzO1jHknlvG7qnp61etYFQDIpCZoqVijzXn\n3iC8EmsOuaCGb/heR/s0ijkVv6fbxy3QMg5xmsnuX0Ldzut3+UYTPWk+2GJSe+M1pFtamcldalmx\n1eO4XaThhWnC+TXqR2PHqL3maUJ4qRjxSEjj42qXdxVmaGs1MJoATfSbqBAG5p6mgAzTJTmNvpQU\ntzzHXY83D/U1zF5FhjgV5r3Pa6FMsV5HWnLe7RhqBRdmTwagN2d2K2rPU1C5LAnPrUs6Iysbdrq6\nf3gK0BrUKj/WClY05iM6xLOcQAj3NT29uznfKSzHuadzNu7NSBFjHNSm5VO9IRnajqoWMhTzXFtA\nbvUfMduSeg702Qz0rS7FbTToQFwzjJqaGTFyfK5PQViyzUuFmuIdgGABya5u/vTaN5cnUHFUmLoZ\nzyskwlgJweSK6zQdUEwVJeGr0aUrxPLxEfe0OrhPAqVjxWhznGRtUwatDK4jNxURbmkAm6jNABup\n6tQAFqhupNtu59qUnZFwV5JHnWsHdIx96w5lz15rzT2uhRmt85xWbcxMnUGmZlB0bdxmrNvFIcfM\n350mWjbs7YkDJY/jW5ZWW4jikWkdNp9mqYJFaJdEHHakUULu/VB1rLn1Ld/FgetMGYd/qWSQmSa0\n/AemS32pfa7piLeLkg9z6UmQtz0W7uQ2cZx0A9BVzR7cAea6j2rPqX0L99KRat5A6Dk1wOoKZ52a\nYfMORTYRLujiGWEq6/NWza2yKQVHNdOHerRy4laJo6TTnbbtb8KuM3Fdh5z3OJjbmpt3FaMxAtUZ\nagBN1GaQBzTwaAAms3VbjERUGsa07RsdeFpuUuY4jUjljWTKK4j02RE4IpJYFk6imQkVl0xWarsO\nmAEcUi0bNnZBR0rWtoguMCkUi21wI161mXuocEKaYXMS4u+pY/hVCSWSY4HT0pEmlouiSahdpEBl\nmOceleiwWcNjClvHgJH97Hc1EmVFFi3Czy7mwIl/WtJbjP7uLgd/apQ2VNVvtsBhiPzdK5S4nAuR\nnqOCaTGi9pcytPlU+XpmumtWII44rah8ZjiNIXRuWeNvvViQ/LXpJWPJbu7nCRvVkNxVsxBmqJmo\nEPiXca0YLMuOlJsuKuPlsSi5IrNuG8s4HWs5VEkbwoOTKsk+FJY4rC1K53k1xTk5O7PSpwVNWRzt\n4cms+WpKICtSLTETQj5q0YeBSGiys23pUguGxQMq3E59ayrm4x3yaAKiRtO2WPHcmhruKFxFajzZ\nScA44qRHoXhuMaLpxaUg6hcDLMf4F9KlhuDeXGASIl+8azZslYma68y48m1+7nFW5rtbRNhb5z1p\niMKbUg0zuW4A4rPgb7VdKXOMmpA7HRbMS7nUYiUda0lkQOBngVrS+JGdbWLRt2bAx5BqeQ/LXpnj\nPQ4GJ+ashuK0MhWaoWcA0AaOmASMK7jRNPWYBmHyiuepO2x10qfcv6vYxCzYqoGK4HVYVTJrmb5l\nc6oaM5TUJ8EgGsG4kLNUHT0M64OaqMMikSRsuKbnFMRLG3zVehOaGNE445NNlnVFpDMu6uie9Vo1\n8z5mOAOST2pDK91cNN+5tsrH3PrW54a06KxT7fdrlh/q1Pc+tJ6IUdZGvHPLezMcnBOWbsPap5r3\nylFtbdT1xUWNWzU0/Zbwlgfmx8zGsHWtRHmMqE59aAMyNifvHPc1f0gtPdqkY5JosJHeNci2tktY\neuPnNY+oXWZEVJNrZ9aun8SIq/CzodHuriIokhDIR1ronbKZr0o6o8ipoz//2Q==",F5="\n/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAsICAoIBwsKCQoNDAsNERwSEQ8PESIZGhQcKSQrKigk\nJyctMkA3LTA9MCcnOEw5PUNFSElIKzZPVU5GVEBHSEX/2wBDAQwNDREPESESEiFFLicuRUVFRUVF\nRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUX/wAARCASwBLADASIA\nAhEBAxEB/8QAGwABAAIDAQEAAAAAAAAAAAAAAAEDAgQFBgf/xABDEAEAAgECBAMECQIDBgUFAQAA\nAQIDBBEFEiExE0FRBiJhcRQjMkJSgZGhsWLBJDNyFSVTY3OSNEPR4fAHFjWCokT/xAAYAQEAAwEA\nAAAAAAAAAAAAAAAAAQIDBP/EACARAQEBAQADAQEBAQEBAAAAAAABAhEDITFBEjJRIhP/2gAMAwEA\nAhEDEQA/APqYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAKNTq8OkxzfNkisQC8eb1XtRNbzXT4q7eU2nu0MntRq/D8StMccvW29ZmdvgjsTyvZjxOLj\n+s8WLxn8TFPXs6Oj9oct7c14rkxz22nrB2I49KOdTjelmszfmpMeUxv/AA28OqwZ4icWWtt/SUi4\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmdo3nsPNe0Pt\nFh09Z0+DNWL7+9O/7A3eJcZppsV5raI27esvH6jX5ddM25p79Ilo59VbUZOe2Tm/PeGvfPfT2iKR\nPLv1+DO678XmW/a97U6TtOyzTbTF538/T9WjTNecm9a7126tqk3rSYxY5ta1plRZqZNXGjyZcPXl\nmZmsx+qjBrsuO16xM7eXRt04JrdTltk5OWJnfaWf0a2lty5MdZnfzSn+WOHiOutFpjHa9e8bQ2fp\n+alYy462pk7zXbuxjPesbRS0f6ZZV1ET1tErzXFLHo+A+1ddZf6NrI8PJHa1vN6iJi0bxMTHwfOa\nzhzd61v1846utwniM6DUdb3nBaNrVmd9vjC/ZVePYirBqMWppz4rxaPgtEAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAItaK1m09ojcHnvarjM8P0vh49+a/eY8ng9D\nh1fGM1rxjtGPfvbzdbjuTJxHX48cTPNltM/KsS9Dw7S49Jp6UpHaGe2vjz1y9J7LYK13vHWe7bj2\nex1tvM80ekuxW3RnW3Vm6P5jRx8H0+OYmMcb+bapo8GKPdpC6bQwtdHU8JpWkdJ/JweL6e23iU67\nd4dubSqyVi9Zi0bwIs68XGp36TtEq7ZJmZmevzdbifCKWtbJinkt6eTgZPFw32t+sRurbWVzxs1y\nRv6T8V1NZNPtfq0seTm+Kevr+SZuxXjvaPiV8N4viycto9HseG6+uu08W6Rkj7UPmFck1tE1nlmP\nLd3eA8V8HVVi1pjq6Ma/pnqce/ERMTETHaUrKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAADW19+TQ5p/p2bLS4v04Zmt5VjeQeJ4bjnLqsupv+Ka1+ERLv4reTmcNxcuC\nvy3l0qdI2hlr66sT02ot0ZV7qqrInruzrVZLGSZ37JjqgYTG0K5lbaFVhDT1Ub456RPweY4hixWi\neSdpjvD1eWejz3FNHWYtkpvFo9EIseb3tS3SerOms22rfpPqZKzvvHSYUz70TExG6Gdbs2rljeJ/\nMx5L0vEzPaelnOi98c9J2bFNTFpit47+a+PVUvx9T9nOIfT+GV5p3yY/ds67wvsXqpxau+G09Lx+\nr3TqrEAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADV4ljnLw3U0jvO\nO0fs2lWqyUw6XLkyfYrWZkHldBEV09eveG3Fq1mI3jd4vPrOIaid8G9MP3Y38k6fNrt/rMk9Ou8s\ntfXXn49rGWInuy8SO/k5Gl1E3rG/fzbOe94wTy99mbRvTrMOOvNfJWsesywniukrG/jU6fF43WYN\nTmtEeJtEQ06aSmK2+bNtEd+qfSO17unF9Hmvy1y13XWyVmN4tExLxVK8PmNq5NrT58zawam+m/yc\n0Xj8NpRYSvQZ7xEOdqI3rPozxayNRXe0ct/ON03jmrKB5nV4q1yTO20Obmv4c+cx8HoeI6WZpNoj\nq83niYmYscU0r8aJ6T1n49zeJ+Meqm1drb9J+Kd5p136StGVem9l9TbHxLDFp7W7+sS+q1nesT6w\n+PcAzVjiGHftzQ+v4f8AJpv6On8jH9ZgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAABp8VrW/C9TW0ztOO3b5Nxp8VmI4bn37TWYB8f1HFtTfUfR9FWJmsdZ9I7MtJxDX5s\nd8ta1y0xzteaR2277rcuhycP12SceLxMeWNpjttHwlu8I0mfQ1y+D7k5YmJmY36T36Ka43z/AF1t\ncI1ds+qxVj7/AEej19PCw9HJ4NoK4OIU5Y35YmZdzVTGebVZabx5jJS+Tmns81rNLm1Wrzc9rVw4\nYibbem72mXTTS0w0M3BvEta1bWrM95ie5EanY87wXgNOL6XPfxraXLhra/W28bR/dzYzarBqJxRe\nbzE7Rt5vWU9n8mPHOGmS0Ypnea1naJb+k9ncNLR7u2y/WcxXO4TOoyUrN6zD0FaW5Y3hu49FiwUi\nKxCvLMR0hlW0jn6ukWw3iXjOJzbDlneOj3GaN6zDzfFOH+LE7SRGo83XNSZ2lbG2/WfdlvaT2cy6\nrNFInlrv1mfJ37cK4PwTTxOoidRm2+/2/KFuyMp47XB4LivXiunrH2b2iH2qn2K/J8x4fGDNxTSZ\n9Nh8OviRvTyfT6xtWI+DeXs9MNZubypASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAOZx6/LoOWPvWiHTcf2hiZ0e8fc2mf1E5+vP/AEeuSd7RC2uKtI6QjHfeINTfwtPf\nJvty9WPfbt/lucP03gxfJf7d/wBoReYpm97zaNeLb4Ims9Nt94auDjem1Wo5PFi1onylS+1o7l8V\nbxvtupjDMdNkYtXS1+Stt+m63xImEJ4xjHER2ZxMUjeUTO3VRmydBbjLJqPi08mbeVOXJPq1sl5Q\nVbkz9+rRy35rxHqzmZlVEe/Ez5LRlW5iyfR6zffaIjq1OSNZps2a21rZInafSPJhxGMl9LStLRWM\nlorM/A4dkrWbYfLZC2W/7K6eubX6b4RzT+W76K8b7G6X62cu3Sten59nsm3j+OXz3/0ANGIAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0OIYfpOHPijvNNo+fdvtXJO18k/\n/OwPFYbz2ls3jx8VqW6xMdWPEdP9D4lkx/dt79flLLHbkxTPwY6nt2512ORTRzE2x4/dpE7cvkme\nE4IrW3hRMxO8THRtU1FKWtvtvK2upx22rzRCtXkqzh2jtF7ZbT122b01ndnpuWuP3Z3+Ky20qDVv\nfauzVy3mejZzNK8dVjqi87KLRLYtXruqvXzkQp7Qoid88R6rcl+WGlW0/Sa22mfhCZOq2x082ix6\njkm822pO8VrPdr4dNObVeDo8XW3uzMbzK+mvxT7szE27cvnu9j7PcNjSaXx8mOIzZevbrEeic5tN\n+SZnpt8J4fHD9HXHO3PPW0x/DeBtJxx29vaAJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAKNRim9Z5e89Nl4DzXtVh5babURHrSf7f3ec1+qnDorWrvvt5Pccb0n0zhmWk\nRvevv1+cPE2rGTFNZU26PFfxwa5dVkjelI2772nZnX6bbrEUq3o0d678u8wmuDL2ittvVjXdneeK\ncGv4jpJ6U56+kS7+j118+GLXpakzHaWlp9NNY3tv+bbiYiNoQy1y30uyZJlrWmZnuym6q1iIJnop\nyW2Te8bdWnnypQqzZOadokiIpSZntWN5lrxki19vNRxrUeBwnNNd+fJEY6/OejXLn3Xe/wDp9wyn\nE8uo4lqqxblv7lJ26T6vpD5X7G8QycKzeBMbzMRM1/FH/wA/h9QwZ6ajDXLitvWzRgsAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeL45w+dDrZvWv1OWd4+E+j2jX\n12jx67TWw5Y6T2nzifU+rZ1y9eHwzDYxxEy18+DJodXfT5o96vafWPVbjyxDn1OOzHudbM0rt2UW\niI69mVtRXZq5tREb9VUoy2iIlRbJ0UX1VZ6btTLrI7V6yk62M2oisT1c7JmtkttVMUyZp6x0beDS\nRWOvdKijDimvWd3G9pNRMfRcNfvZOb9Hpb0itJeP47k/3hgjaZnbaP1XxWW3T0movbNS0W645nbf\n0nrMPpXs3xamoxdJiLbe/X1n8Uf3fKsOTw4jbaXo+EarJhtGTHMxeJ6xH7Sti9Zaj6x3HM4NxXFx\nDS1mtoi8dJrv2l011QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAGjxLhODieOIye7kr9m8d4eM4to9RwjPXFa0ZIvG9bR0fQXmPbDFvTTZPOJmEWS/V8bs9R43NxLL\nG8eFbePg1bajU5/s0l1ceKLx1hbjwRE9mOpx0y2uRTSZsm3PMw2aaKtIjo6kYo9EXpET0hVLXxYK\nxC6MZvyx1lFs0RHfaPiCnU12pLyHGNDbUajBekWma2npWN3p8+opa20e9LSyZLxExTlpM+vdOdcZ\na9tPS8MyUvFrzWlI6727u1pYxYrbVmb7x+TQx6au3Nqcl7/0rcmW9axGnwZJj1novmxnZXV0fFp4\nZxLBPgTGK8xzXr5fOH0bFlpmxVyY7Rato3iYfNuG2x56Wrqa8s2jz+7Lu8O12bS6jkwzN6THNNI6\ntvrN68Y4rxlx1vHa0bskAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAA4XtTTm0OKfTJ/aXdcL2pyRGjwU362yb7fkJz9eTxxyZJjyltRXzUZK7TFtl9Lbwy06YzrHwa+\nfJFd/wCVt8m0bQ0eS2qzcm+1K/an+zNZFL5M1pjFXeI72ky48eGnPkvNp27+TPU6nHpMfLXaIjpE\nerk5dRMxOfN1mPeisfshW1ne1a1577Y6x5R3U0zze31FOWI6ze0byU098kRlzbxM9qrMlPDpyRMR\nMd5Vt/Ihp5898mWZm1pjftE91uCt7fCI7dWeHDEW3t723l6rslqxWZnasR+SYhFbzhnfxJ2jyeq9\nlcGXWZcmW0zWKxHLaI7794eJx5fpfEKabT8t8l5isddo3l9S4VjrwrRUwzSJt3tav3pdOL6Y6dXD\nj8HFWm+/KsU4NRXPvtWazHquWVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAa+fXYNP9u8b+kdZBsDkZOO135cWOZn4y5Wu4xqctbe9y19Kp4njt6vi+PDm8DFMWybbzPlV\n5PiGtz67UxbNbeKTtWIjaIXYpnwuaftT5tXJT3vmi1pMsrU5qIrG1V1a+5DCa7b9GFbRr5J6Wnbt\nCu+Wmk0m8956z8ZWZNorbfzcbX5rZslazPux3hUt41NTntktObJ13+zX1bek01r4/HzVm0bxPXy/\n+bNfDgjVa2uOY92kdfg6ufJOKvLXtttVVSqbcta2vM7zXtHpLQy5ZtMd+vWd+7Zy3mdJHXra3f0c\nvUarw7zFY5rT2hH1Lavnrgx81p3U49Pk4nE5L35MO/StfNRXR5tXnrS8W67WvfyiPSPi7uLHFK1p\njrtSsbR5Lc4RzsXBaYreP4l45esRD2HD9fnw6evvWvO3Tfr0aGk0U55ra0TFInv6uzgrXFXlx0i0\n77RPlC83Yj+JW7oddqr6vHzTTw9/f6dod+L1t9m0T8pcbFSmPHER3892W0zPuz+jSbVvidkcqmfP\nSel7bekrI4n4dZnPWIrHeYnZee2Wpy8dEaml4npNZblw5qzb8M9JbYgAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAABEzFYmZnaI7yCXL1XGa0jJXT0571nbee27DiXEprp8nhbxG20W8\n5cbD0ikfnKO+urTPvjoZdXqctdsmTaPSvRpWmsdZ6yztfaGplvv3lWW1tyRlz1x0vkn7Vo5atTNe\nY0+1o79V2KsZsvX7Ne5mwxnyTNvsx2iGneM/rCdRSuOsTasTt5kRFtpjqmOH4t4nk7estiMNa97R\nHwhna0iuKTEdmGWa4672nZtRele1N59Zlq6vLOSsYorEc07qcW65euzRvtXvPZy52naZ7ujr6fXV\nrWdukREK8+njHgmZmPc67bq6ivVWhxxgxZLztNrT1mZ/SP4VZs0zaOvfp84WUtNsXLvtv3699+rU\nz7+Jtt5qURqMnPpctaR1rMSw4ZoK57eNk6xHaJRh97Ltt7lo5Z+L1HAPZvVauZ2nFTSzMTzeJEz8\nto6xPfvsZntPZ9rXxabmxzefdrv0j1dXh/BcmstW1qxTHHasR3+b0GPhGl+kWmd64dNEVjf73T7X\ny8vy+Ddx6O3iRakxTH5RXrMw1/lX+3Itw2MFIraN48qRHdZi0cUjmmPen9noox1iO0fNzdXEYrTt\nstcmd9aX0bJ+HePmiKTitO8TMLZ1cVjrMfqpz6ys4pjfrPRWZ9rXXptUit6zO+23VyaRHEc05L1/\nw9J9ys/en1ljqdVbwYw452tlnl3jyjzbmmiMeKtYjpEbLeTXPUU8ee/+qjJpsV5rbkrFqzE1tEbT\nDpYNbW21Mnu29fKWna0KbqTdjXXjld0cvQ63ltGHNPSfs2n+HUbS9c2s2UASqAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAOVxPWe99HpP8ArmP4b+r1EabT3yT3iOkesvMVtN7za07zad5l\nXV5GmM9vVfEstvDx0jtaVVMlq+UJ18b5cMRvPeSuK87bUt+i2Z3PtG7zXpjkzXt6R+TXyTMzvM7t\nydHqZ+zhv1+Cv/ZuqvPTHMfOYaTMil1a1K2vHSLTELq2v+KWzThGo84rH5rq8JzedqR+ZeI7WnOS\n34pYTafWXR/2Pln/AMyrKOCWnvmiPyR6O1y9585lhWJvl557Q6eo4T4dYiMvW3b3UanhldHpJtGX\ne09unmjsT7eb1l4trI2t0hsZfrdNO0bzy+nzU20/+NmkzO9esz+TZxWis9dttvPv+Tn21jjaW8zn\n26bTG3mp1M/Wzv3t0jyWXiKZJmsTERaZhXXDbNl8WaztWenxZLstPp5pau8frDtVrNMM5cfTfpMf\n3aunxxbes9d/R09Dp8ebJi09ptFr3jtt2WyrW9wy1Jx132mK+Xq9PotT0iIU19ntLtExa3T47T+q\n6nBaYvsZstZ+cT/LeMnUi0TXffo1s2m8Ws2/OIMWk5Jib5L328rS2t94Sh5TV4ppklpW6PT6rh+P\nNbebTHyas8E081mZy5P2W6OFhjxNTE/hr/LoRO0Kvo9dPqctKzMxEx1la5t3tdnjnMs4noievcrO\nyZjeFF1OSnNV0OG62cn1GWffj7Mz5w05joovzY7xes7TE7w0xrjPeex6Ua+j1UarBFu1o6Wj0lsN\n3JfQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrU5o0+nvlt92P3BxuM6nxNRGCs+7Tv8\n2hToxm1r3m9utrTvMsonqyt7XTmcja0u3O6FMfi5t/u0/lzdJM81p9O3zdvHTwsUR5+bfPqOfX1h\ndqV+3O7bs1+T31oqmI3TEM4rvCdkDGIIhlFd2daboS0NXG2bD6bufxXU1vlmu/u4us/N0+L1tTSx\nkr9qk7w89j1FNZMV3jxLzvaJ8mer+LSOZqK2xZotbvljfr/89U453rXt9lse081xZtNjx7TGKu0t\nDHlrevSevaN5Y6+tJ8c7VRNMt63n3ub+6/R54rERMztDYy4a5omclYmfxKcenrjtHLvtPrCnVmdb\neFe3JXmjy6eS/DrMuLVYsta9Mdt++6qLxO+0dEc8UmInr18iUfReHcXrqccb9Z27Q61Lb13eJ9nc\n1Z35rTvE9avY4bTkpG8xEfB05vYxqybc07R281naGMREdoT5JQqy9mply7Q3bV3iXG1eXw7TWSka\nc258t7+tpT5/BjT7MfHqndz12Z+M4lMMKyziUJJiN1WSu9fku23RaOgKNJqbaTU1t9yelo+D0cTE\nxEx1iXmM1Nt3W4PqvFweDaffx9vjDbGvxz+TP66QDRiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAOJxzU73rp6z296zsZMkYsdr2naKxvLyObNOfNfJbvad1dXkaeOdpvsc2yuZVzfbfqybutwu\ns5s8R92J3dvJb3tnO4HSMegtmt3nfZvYp8SZl0z45NfSK7onH1bNcfRFqnUKJr0Y7dVtq7prjEsK\n0XVpEM6028mW20IHK41aPo3J6zs4ODhdcvPnvExFevNXpMOrxi/PlrTee7PLX6Pwa09uaNlKtHg9\ndM3z5d7ReOu02nu0JzZMfblrv5R5uvrcdImZ26T1mYhxs1Os7RH93PZ7axuafNfLitvbaYU3yZYt\nPXs9NwHhui1HBa5LVicsb81onrEuVqNNSuS8Y67dZ6xPZa59Il9uX41vEitImZme3q2Kxbxora0T\nMd/ROSa4Ztkj7c9OafL5LuGYubmyX3iu/TfbdSfVnpvZLT/XZK233+Mbbva1xRXyiPk8pwbH4N6T\nadq5a71n0tD1WDL4tPe6Xr0tDpz8YVnJHWEXYxbqlBedoef4tW0XraO09HdyztSZcbUz43C+ee9b\nSVMaeOfqq7+jGckQ1Yz7+7v2RN/WXPXZPjci2+2yyJaVMuy+uSJlA2d+pNoVRbeDcSxyTE+TDDlt\npdRXLTynrHrDOyiyZeVFnY9TjvXJjres71tG8MnJ4Nqt4tp7T1jrV1nRL1x2cvABKAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAHJ49qfD09cNZ97JPX5PPw2uI6j6Vrsl/ux7tfk1mWr7dOM8iLdm\nvfebREefRsWldw7SxqNbWbR7lPesrn3Vteo7dYjDpMGCvfbeXQ0uLlxRLRxROfUc34p6fCHYrXlr\nEejqrjY8uzCYW7MZjdVKqK9VlaxCYrsnYExBMRMJRPZA8/xPHtmpP9W2xx76vhWOInvt/C7ike7N\nvwzE9kcapGfhlevTaFbFo8RqJ5vy8/RoW09ek0msxHfp3dzNoLzp4zUmZpMbT8HJyYJi20X2n0lh\nZY1li/RaidBF4w2mK3jrHaFGp1lN+tptPp5IjBkid5mIp16TKu0abBPv33vPlM7z+iPdFNcWXU5I\ntkrNce/b1W5db1nTaf3ax9q0fxDW1ebNk2phty1mOu09VOm8W19orEz23j1TwfSeERFuEYMddptW\nd43dvBn21eKJ75KbW+cf/JcTgMxXTb3nbljz+TpcPmc2uyZO1KRtVtGVdi0bx07qJnllsRO6rNTe\nN4XVamsy8mnvPwc3R2jPwe8TPbdlxXNOPSZfhWWpwO85OFzv57qrODkzeHntSe8Sn6Rv0a3EZ218\n8nXekfr1a0ZLVnqx19dWb6demXybOO7lYMvNMdW9S/VVLo0us7tPHdtUtEwJiZU3jq2Jhham8CVG\nPNODNTJXvWd3qcWSubFXJWd4tG8PK3pPd1OB6veLaa89Y61/u2xfxh5c/rsgNHOAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAANLimq+i6O0xPv392rdeZ4rq/pOqnlnelOkIt5F8Z7Wj27I2I6sb25YY\nV1ImY3dbQ08LRc23vZp2j5OJG+XJWle9p2h6HHtbJXFT7OOIpX+7TxT31j5rycdTh+Dpz+XaG/sw\nw18PHWseULN2trBE9UcrJKBhFU7JAQi0dEomegNDUYovM7x3jb5tO1ZvpbaTLtzRExWfWPJ08kbT\nEx5NXWYYyV5omYtHWJieyeDzuizfRs19Jn6TM7Ru1uMcJxZqTkw+5f4ebqa7SV1MR4tdrx2vEfy1\naxqsNOTLjnLXytVXi3Xj8+nmsxTLM16d5npPyUzpekTtSK+U7vS6vQ/SYmK1vWPS1HOn2dvvvvE/\ntDO5XlcO+LbfHSd/W3o6/BdDOXPTnj3Kz38rS6Wm4FNrRyRzTH3p6RH/AKvR8L4dXSzE3jmtHn5I\nmbfqLV+m4dbLSsZInHjr3iI6zLpYaxS01rHuxHRHiT9mv6s67Vj1aqL6326MrWiYa+/Q54BxPaGe\nXRZpj8MquB4+Xg8zPnB7SX30to379GxpK1xcHiKz5IS8xr8PLPixH2bftLTy05o6dHYyVjLhy0t1\nizjZa3pMVv3iO/qz1G2L+NbSajbNyW7xLsY8kTDz+fJXFqKZN4iZnafi6WHL0iYlStI7OO+7axW2\ncrFl7dW9jvE9ULN+J3ZbdFGOy+AYWpEqN7afNXLj+1Wd23KrJVMvCzseh0+auow1yU7WhY4fCdV4\nOadPefcvPuz6S7jol649Tl4AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV581NPhtkvO0R+4NPi2\nr8DB4dJ9+/7Q83Po2NTqLanNbLfvPaPSFDHV66sZ5ET0hRknyW2lTtMyouz0c8usx2n7s7vScKwx\nzc1vu/y85p+maJh6Th+SOWeveXR4/wDLm8v+nX5mUWa9bbrInolmu5jdTNkxYFk2Isr3TuCzeGMz\n+THdEyDDJO9Ja823rt2XWnya946pGvktDXta0ztWu/ybvLE9dkcoOf4GbJPWK1j49VmLh9JtE33v\nMevb9G7WsW8l1ccREISophiJ2jpDYpijbaOjOuOJ8ujOdqxsgVcsUjaETYvbaFFrgu5lVsm0yUtu\nryg43H5m+GIj1XcJzePoL4pnrWGtxmfchr8JvfHS1622if3QljzTTLes+qrNjrkiYtCzPMxnm095\nYZJ6boS5teB49Tqscza97VtvWvlv8V/FOF34RrIxTM2xXjelp/eHoeA6XnzReY3ivX/0dfivDcfE\n9HbDbaLx1pb0lOs+jO7K8Lis3cN+0NKcd9PmthzV5clJ2mF9J9GHHVL108dm1SznYr/Ft0tuhLb8\nmNohFbMhLWy0mJ3rPXvDvcO1karBG8/WV6Wj+7kWrvDDBlvpdRGSnbzj1hpjX4z8mOx6UYYstc2O\nuSk71tG7Ns5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeXneJ62dVl5KT9VTt8Z9W9xbWclPo+O\nfft9qfSHEU1pv48ftYST23ZTDC/p0YtlVuvVjMbM5+LCZjYGWGdrTPxiHY4ffaf3cjTxz1v6xMS6\nOlty2iXVj/Dk8n+ndrkhnGRo1v8AFdW3RCrZ5uiYsqrboncSu508yjmZRYQt50TfowYTbYGVrKrT\nuTZjvukQnYhMIGVY2ZxPVWyrHVCWzXpVXkt3TE7Va+W4K7X3jv1auTNy3jdba0RZpamfroQN7Hk3\n6wr1GTaN2OOJiu6Mu98NvgDi8Wy74d/yZ8PiPAiO2zU4nb6qIn1bugjfFE/ASp1ke9u15mbbRDZ1\nMb823kx0Ontn1OOkedoJCvT8I03gaKsz9q/WW+isRWsVjtHRKyrhe0XCfpWL6Vgr9fjjrEfeh5fF\nfeH0V5Dj3DPoOo+k4a/U5J6xH3ZZ7z3228evytOk7NvFbo0cdols47bSybt7HbddHVqUs2aW3Qnq\nxVeu8LILR3SlZw3V/R8nhXn6u0/pLuPMXjeHT4Zruf6jLPvR9mZ8/g1xrvpz+TH7HUAaMAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAABRq9VXSYJyW79qx6yvmdo3l5viGs+maqYrO+OnSvx+KLeLZz2te1rZL2v\ned7WneZYWnZl5K72YV1xEyxmeqJljzIEWlVkszvbZp5soN3h2SJz3pP3odCnuWmPRxuERfJrZmtZ\nmtY96fR28kbX3dXj/wAuTyf6bmK+9YX1s0cNtm3Sd4LFY2K23W1s16StiUJW7bp22RW3RluBuruz\nmWEgrmCGWyNkoExKE1QlPmsqRDKeyBjaejWy2W3ttDUyz1QKslvehVqKTNosyyTvELabXptIJpaP\nB39Ia2mz+JGpr51jdZefDx2hzuHZObNq58poJaGtjxJ2+LoaKP8ADRPo5+T3skx5OhpOmC0fBNQ0\n5yTbn+bt8A0u9raiY6RHLVwY62mI6zMvaaHBGn0mPHt1iN5+aYVsACBXqMFNTgviyxvW0bSsAeE1\nmkvw7V2w5Ote9besJx2er4rw2nEdNNekZa9aW9JeQjnxZLYskTW9Z2mJY7zz26fHrrdpbZsY7NGt\nmxjvso1b9NmUwpx33XRO4K7VUTE1nmrvEx1bVo2VWiJE/XY4frY1WPlt0y17x6/FuPM0m+HJGTHO\n1qu9pNVXVYt46Xj7VfRtnXXL5MfzexsALsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHM4jxOMFJphmJv529Dq\nZLfjDjPEIx450+K3v2+1MeUOHSOWFc3nJkmZnf4yujpVlqunOeFpV2nctLCZUXRM7MJtsWlRkv3Q\nky5NmpWt9RnrixVm17TtEQnJabXisRMzPSIew9n+CRoccajURvqLx5/chfOest642OGcIpoOG2w7\nROW9d72+LQvXevyejcPUU5M+SvpLeOataraw2a0dLbLqTtK1G3Es4lVWWUSoldFtmcXUbpidgXzK\nGEW3TuCUSncnsDFMMLSms9EC6J6FpVzbZE5ALy0809ZbFr9GtfrEoFMzuuwz0Ueey3HbaBLDXe7i\ntMOfwWnP9I+NZbuttvhs1uBRtXPb4SDm3iIvf57N7Dbl0VrS5+XrltEd+Z1Jx7cNms9N4TURRw3T\n+PrcO3WszEvZOD7P6aYiMlvu16S7y1QAIAABxOPcLnUY/pWCv1tI96I+9DtgmXl68Biy7/NtUu3+\nO8HnFa2s0tfd75KR5fFyMWTdhrPHVnX9R0cd21S3Rzsdm1iuqs256wrmGcT0RYSx5d047X02SMmO\nesd49YRE9WcdSXhZ2O1p89NRji9J+cei1xMc3wXi+KZj1j1dTTaqmor06WjvWW+ddcu8XK8BZmAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAMMmWmKu952UZ9XFZmuP3revlDTtzWnmvO8q3XGmfHb9ZanV3yxtWeWn7y4es\nvPNtDqZJ6Ts5mppvdl/XXRMyfGvSNlu/RVvtOzLfoipLT1VTKbSpvfogRkvtDVyZOhkyvQcA4Dzz\nXV6yvTvTHMfvK+c9U3rkW+zvA/D21urr789cdZ8vi9KDb45rejl8Rry6iJ/FV1HP4vXbBTJEfYt1\n+UpiHM295bXsqrO9l8QkZ0lZEqqLeyBZHZLGvZkhIndADKJ3TMoqWQMZ6pjsxll2jsCLSrmU2lFY\n36gieyu0LJk3jbsga0wdqzK20QpyztQGprL/AFMrOE05NLkt6qdVWZxNrSe5o9vWBLiUjnzXn0vL\nq555dHt8HOwV928/1z/LpzXxbYccRvzTB+jucOwxh0dI22mY3ltIrHLWIjyjZKyoAAAAACJiJjaY\n3iXleM8InR5J1GniZw2n3oj7s/8Ao9Wi9a3rNbRE1mNpifNFnVs65XhcWTdt47bnFuF24dm8TFEz\np7T0/pn0a+HJux1OOrOux08d1ndqY7tillVkzExLOk7yd4YxGwluViJhE45raL0na0dtlWO0+bZr\n1TKi+2zptZGTamT3b/tLacvJjiY3XaTWdYxZZ6/dtPm1zrv1z78fPcbwC7EAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhkyV\nxUm152iAZWtFazNp2iGhm1Vss8uP3aevnKrNntqLdelI7VRHRnrX/HRjx/tZREVjZXeybW6KbWZt\npCZ6S08tN7Nmbb7zCrJtyoS5145bSx5mWafelr3tsKmS/o08uXyhlly7RPV2+AcBnPNdZrK+53pS\nfP4ytnPVda4y4BwHxOXV6uvu96Unz+MvVxG0bQRG0bR2G0nHLb2gCUDX12LxtFmpHeazt82wT1gH\nmMN4tWs+rcr2aEV8DU5sM/cvO3yb+O0csLUTSdrLphRE8tlkZI7Atr2ZMazDJVKTYSCawi7Ksq7z\n1QERvLK3ZGPrKbyCrbdnMcsbeaa18/RhvvM7oGEwTG0JmYYTIML22a2e28xELM19oURPNO4lOem+\nn3ZY5+prVnMc2GYU4/L4A0a15cNf6rz/AC6fC6+NxCPOuOu/5tHJTbHj+F5/l1+BYumXJMd9o3/d\nMRXYASgAAAAAAABhlxUz4rY8lYtS0bTEvH8R4ffhmo6bzhtPu29Pg9mq1Gnx6rDbFmrzVsizq2df\nzXkMWTeIbNL7tbXaHLwzUctvexWn3bmPL8WFnHVL326VZ91MfFVjvvVlz79kLrcf2m7j7bNHH3bl\nJ2SirLQoy4t1++7G0dBC/RanxI8PJPv18/WG241+alovSdrV6w6mDNGfFF4/OPSW2b1zeTPL1aAs\nzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAVZ9RXBTe3WZ7R6iZOpzZq4ac1p+UermZMl89+a/byj0Ra9815ted59PQ32hlrXXRjH\nDpCLX6ML5NlNsm/ZRqstfdXzbsZt06sLZNvNB1Za8RDWyZdo7q8udq5Mu/mIMt4md2lmy7JzZuWJ\ndHgfBL8RvGo1MTXTxPSPx/8AstJ1XWpIs4BwSdbeNVqq/URPu0n73/s9hEREbRG0QUpWlYrWIisR\ntER5JbSccur2gCUAAAAPM8Sry8Uyz67fwuxbzVPGsE49XGbvF42V4M0TEL33ERnktsxpk3sumK2j\nadmFdPFZ33VS2Mdui2J3UU6LYlFSsN2O5NkCyJ6K7T1TEsbAsxdpReerKkTFGMxvYEz0rsqtbbpC\nb2VT1QEzuwtbaGUxspuJU3neWdKoiu8rq12gCI92YatLcublnzbEz1aOptyZqTuDHLfxN6R0+t5X\nqdJhjBp6UiPLeXl9NSMnEKxHa1+bb8nrlvxUAAAAAAAAAAABTqtNj1eC2LLXeto/R43VabJw/VTh\nydY+7b1h7ho8V4dXiGlmvbJXrS3xRZ1fGv5rzeHN02bEW3cys3xZJx5ImtqztMS3MeTeGFjqlb2O\n8btql3NpbZtYsnSBLeiWfdTjtutid+ghherHS5p0+f3vsX6T8Fkw181d4lMvEWdnHaGnw/UeNh5L\nT7+PpPxbjdyWcvAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAo1Oprgr63ntAmTqdRqK4K9etp7Q5d7Wy2m953lNrWyWm953mVd77R0\nZa1104xxlN9lV8qnJl2a9s3xUXX2ybsJyRDWtl3YWydEC+2VRkzeW6q+T4tbJm+KRdfK1cmWZnlr\nvNp7RC/R6HU8SycmCk7ed57Q9ZwvgOn4fEXtHi5/O9o7fJaZ6z1uRyOEezVstq6jiEbV71xevzer\nrWtKxWsRFY6REeSRrJxz22gCUAAAAAANbX6aNVpL0npMRvWfSXlKamsRMVvXm+EvZXjmpaPWHzfL\noNRjzXicfWJ8phfPxFejx72x7xMzK+sXiNoiXlq+Pi6fWV/VfTNqfLJl/WTg9Pji8R70LqvMV1Gq\nj/zcv6yz+lanzzZP1lWpelTET6S81Gp1P/Gyf90s412rjtnyfqql6asREdWM9+jz9eJ6yP8Az7uh\nodZqMt458tpB1JvEViI3/RhzRt13/R1MNaziiZiJn5K9ZNceKZiIiQcu/WekT+iYrWI3lzdTrs+8\n8uW0fJzcur1Np/zsn6g79phVaIeetqNR/wAXJ/3SwnUaj/i5P+6UD0ldonum161h5mNRqP8Ai5P1\nlNtRqJjacuT9Qd22WN5aGeZyZd/KHJy59RHbLf8AVq31Gp/4uT9ZEvS8Lr/vSs2npzRtL1z53wK+\noza/HW2XJNd99pmX0Rb8VAAAAAAAAAAAAAAcHj/C5yV+l4I9+v24jzj1cLFk8nu5jeNpeW41wmdL\nknU6ev1Vp96sfdn/ANFdTrXG+eq1q5F2LLtbZoY8m8d11bbSydErsYsm+zZrO/zcnBm226uhiyRK\nEtrvCrJDOJTeu8A1MWX6Lqq5N/dnpb5O5ExMbx2cPNTeJb/DM/iYPDtPvY+nzhri/jDy5/W6AuwA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAa2p1UYo5adbz+xbxMlvqJ1OqjDHLXree0ejmzNrWm953tPmTPWbWneZ7yoy5YhjrXXTjH8s75N\nmtkyxt0VZM2/m175N1V03yTKubMLXVXybeYLLX2VXy7eam+b0bOg4VquJW+rry4/O9uyZOq3UjVm\n9r25axMzPaIdvhns1kzbZddM0p5Y47z8/R2+HcF03Doi1a8+Xzvbv+TotJnjDXkt+K8ODHp8cY8N\nIpSO0RCwF2YAAAAAAAAACvUZYw6fJkntWN3k8dfHz2vLucdz8mkjFE9bz1+UOZosX1UzPm0nqI/W\nMYo9FlcPNklfFGeH/NshLGun+Cz6PtHZtVZWlRLS+jxPkRpIn7rdoupHTdA5s6SI+7H6Mfo+32Y2\n+To3neSIiZ7A0IjPXpXLePlMotGW3272t85datKzHZjbTVnsDj+FG/2Y/RlGP4R+jo20u7H6N1Ql\no+H8I/REY957R+jpfReiK6eOYHLtj2tttH6KrY/6Y/R2c+kjeJiFVtLG24hxpw7/AHY/RRkw9O37\nO99Hrt1YX0tfOBLjcGp4XF8c+u8fs9c4dcVcGemSI61nd3IneN1orQAAAAAAAAAAAAABFqxes1tE\nTE9JiUgPKcX4RbRXnNgiZwWnrH4XPi28PdXpW9JraImsxtMS8pxXhF9DecuGJtgmf+1TWW2N/la1\nL7N7T5e3Vy6W3hsYcvLbqzbO9jvvCzvDR0+XeO7crO6FmGSvRThy/RtVXJ92elvk2rRvDUzU7pl4\nizsd2J3jeBpcNz+Lg5LT7+Pp+Xk3W7js5eAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs0NTrN96Yp6edkW8Wzm6+LNTq4pvTHO9vOfRoWtt\n1mes95YWvs1s2fZldddOczLPLn2ju0MmebT3YZc2/mpm3qqllN1drsbZIhr3yzvtHf4AsvlYYseb\nV5Yx4KTe0+UQ6nDvZ3UazbJqd8OKeu33peq0eh0+hxcmnxxWPOfOfm0mP+steT/ji8N9mKY9suum\nL37+HHaPm9DSlaVitKxWsdohI0Y22gAgAAAAAAAAAABXnyRhw3yT92Nwef4xm8bVzET0rPJH5d12\nCvLhho3rN9RWs9Z23n5y6O21YhrVYbdGOCfrrLPJRpv863zVS6FS09SvZj3lVZZRdPSqmnSWdrIE\nebOkK4ldTsgW1WKqd1oMZhEVZyRAImOjGI6rJ7IiATNd46qL02bHkiaxaoNGY2n4ImPgtyV2n0Vo\nGvlx7x2beiyTk08RPevSVUxux00+Fn2n7N+n5rRFb4AAAAAAAAAAAAAAACLVres1tETWekxKQHlu\nL8InR2nPp43wz3j8P/s5dLveWrFqzW0bxPeJeV4xwmdFec+CJnDM9Y/CrY1xv8qvTZ+WYdbDk5oh\n5zHk283U0eo3jaZZ2N5XYjrCnLSJhOK+8d1kxvCqzSwZvousrb7k9LfJ3nB1OLeJdLhufx9LEWn3\n6e7LXN9Ofy5/W4AuxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAETaKxMzO0Qi9646Ta07RDmZ9VbPbaOlI7Qi3i+c3TPUaqcu9adKfy0722ZXvFa9\nXO1OrjrESxt66ZJmcjPUanlidmhkzTZVfLN5VWvsC2b7R3U3yqrZZtO1esz2h2+F+zWTUcuXXTNM\nfeKR3n5+iZLVbqRzNJo9TxHLyaekz62ntD1fDOA6fQbZL7Zc/wCKY6R8odLBgxabFGPDSKUjyiFj\nSZkYa3aALKAAAAAAAAAAAAAADQ4pl2pTFH3p3n5Q33E12Tn1eSfKscsLZ+orS00eJqbW+Lfnu1tF\nXaJnZsz3WpCfsyp00fWSvmPdVYOmSUDd8kR3InoQosy7JmUX7MdwZ17ro7KKT1XRPRAsrO0rYndr\n79V1ZBaQiJ6JgCSIJASwrO07MpV2nqBlrv1a1o2bf2qtfLXaQUTO0sb05o3jv3ZXhjS20xEphW5h\nyeJjjf7UdJWNKLziyRePsz0lux1SgAQAAAAAAAAAAAAAADG9K5KTS8Rato2mJZAPIcU4ZbQZuekT\nOC3afT4NXFkmlntc2GmoxWx5K71tG0vHa/RX0GpmlutJ61t6wrY2xr8dXS5uesN+tt4ef0eaa223\n2dnHk3juyreM81OaFGiy/RtZET9jJ7s/2bdutd2jqKeic3iNTsd8a2h1H0jTVtP2o6W+bZbOO+gA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABje9cdJt\nadohGTLXFTmvO0fy52bJfU23t0pHaqLeL5xdK9Rnvqb+cUjtCi94xxvK3JetKuHrdZvaa1ljb10y\ncnIs1Wt3naJc++TmVWvMz1YWybfMGdsm3eWek0mo4jm8PT0mfW3lDf4V7P5tdMZdRviwfvZ6/TaX\nDpMMYsFIpWPTzXmf+steT8jn8L4Dp+HxF77Zc/4pjpHydYGjC3oAAAAAAAAAAAAAAAAADG9opS1p\n7RG7zszN6WtPe0zLua+3Joss/wBOzhzG2OsL5+IrY09dsSyYRijbHEMvOChb7KjF0yS2LQ169Mso\nS24noyrPVXWejNVKbTuw3T3REdQWU6LYlVvsyiUDPfqupPRr79VuOQX1lZEqoZxIMksd0gT2VT0l\nbPZVbuCaW8i8bwr32WxbcGnkjaZa9p2ndv5qbw5+aNugLItF6TEtvTX5sMb969HMpfazc0d9stqe\nvVZDdAQAAAAAAAAAAAAAAAADV1+iprtPOO/2u9bektoB4TJTJpNRbHkja1Z6uto8viVht+0HDvpG\nH6Tjj6zHHvbecONw7Ltfkmeqmo6Ma69DXbbZTkr1mGWO3RneOaGbZRoM30fVzSelMnT83aef1FZ7\nx3h1tBqfpGnjmn369LNc3sc3kzy9bQCzIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAa+q1dNNXr7157VhGp1Xh70x+9f9ocy283m1p5rz3mVbrjXHjt91lz\n5c9+fJ1nyjyhdM8lZlOOIiqrUXikd+kMreunnI5XEdX4dZiZcG+XmtNl/F83PeeWWHDOGanieSKY\nq+5H2rz2hMzWd1Iqx1yajJXHhrNrW6REeb1nCPZumn2z62Ivl7xTyr/6uhwzhGn4Zj2xxzZJ+1kn\nvLoNJnjHW7TbbsAszAAAAAAAAAAAAAAAAAAAAaPFrbaSK/itEOXt0rDf4xb/ACa/GZacRvaF58Q2\nIjasQnzPIhCU92tMbZGzHmotG10C6nZkwpPRmipIllEbMIZIE7solgmJBnCyk9VMM6z1BtVllEqK\nz0WRILYlluriWcSDJVbusV27gwInaSWM9ECyZ3hqamnSWxFmOSOaqRx725bNnSZNs9J+OynVY+WZ\nYYr7TE+nVaIr0Ais81Yn1hKAAAAAAAAAAAAAAAAAABExvG09peU4nov9n66L0j6q/WPg9Y1OJaON\nZpL0+9HWs/EWzeVz9PbmrEtnyc3h9reHy26TWdnSr2YX6657ijLXpLX0+onSamL/AHJ6W+Tbv2aW\nekTv16JzeI1Ox6KJiYiY7Slz+E6jxdN4dp3vj6fl5Og2clnKACAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeQRMxEbzO0Q08uqtkma4ulfO3r8lefUePMxWf\ncjy9WvlzVxV6T1Z61/x0Y8f7Wc7Ur1lqVy+LqOWJ2hp6rXddon5rOF1tfmz5OkT0qzb8dWbxjp1c\nbiuuilJ5Z6r+IcQrixzEy8zl1E6rNt1tMztFY81sztU1eRucN4ffi2p5esRM72n0h7rS6XFo8FcO\nCkVpX082nwXh3+z9FWLxHi36328vg6TZyW9ABAAAAAAAAAAAAAAAAAAAAAADj8Unm1tK/hqppHvw\ny1k8/EMk+m0GOPeafiFpCZYwolnXspvHvLa9mF46gmnZmwozRUiUCBKYYsoBLOFbKAX0llEqqyzi\nQXRLOJVRLOOwLIljZMEgrlhKyYYTAK5nZPN0RZjugUanHzVlz6xtLq361c+9eXItPpXX0dubTU+E\nbL2lw2++O1fSW6m/VYAISAAAAAAAAAAAAAAAAAp1GbwcfTreelYEydcuMcRrM/L9nnlsV6wqpi2r\ntv133mfWVkRyRtEdGFva7MzkYZNoamWN4bV4mYa9qztKIujhVppxGI8r1mJegeZpknBqKZY+7L0t\nLRekWrO8TG8Ns/HJ5ZypAWZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAADS12fp4VJ6z9qVuq1HgUiI+3bpDl589cOKZmevqprXPTbx477rDJlrhr1nq4+s182tMRP\nRqaziXiZJrWekNG17ZbxWJ336M5LXRbI3dLTJrs07RMY6fan1dHLrowY+X7MVjt6N3R6Kul0EbWm\ns7bz8Z+LnabQX43r7Y53php/mXj+Dnv0f1JO1x/8ZxbUzj02O15mfLtD13AvZqnDds+pmMmo26el\nXX0Wh0/D8EYtNjilY7+s/NstpOOTW7QBKgAAAAAAAAAAAAAAAAAAAAAADG88tLW9I3BwJtz6nNf1\nvK/DHVqYJ3pzT5y3MPZeojOWMQylEKpTVjZnDCwkqzYQyRRICATCITAJZQxhMAshnEq4ZQC2srKq\nqrIBZCWNZZgwswmFloVyCu0dFcx1WyrtCBhv5NTPHXds2U5o3hIz4ffbPt+KHUcTSW5c9Jme0u2v\nVYAKpAAAAAAAAAAAAAAAAYZctcVOa35R6tLrltN795/YvknNqrfhpPLH92V5isd9mWq6fHjk6rn0\nZxG8KK5Jm/wbVZiYZtqrmkqL023bkxvCiY3lJHNyRG81mHS4Rn5sNsNp64+3yaWaNrzOzHBl+i6q\nmT7s9J+S+ay8mex6EIneN47SNXKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAImYiJme0JafEs3h6fkidrZOn5eaLeJk7eOdm1Hi2vmtPTry/CHmOJcUvmvOPF1n09Pm\n6HF9ZGm01qxO3R5vSY7XwzmzTy47zzTEd7en5Mfvt2/PURWdo3tvPrPlKymbktFqTtMTvHzbOLDG\nf63JXbFX7FdnoODcDprZpq9TjiMMTvSn4vj8l5fxnrk91saPSa7i2hpOfbTVt5x1m0fLydzR6PDo\ndPGHBXasd585n1lsRERG0dIF5OOe6tAEqgAAAAAAAAAAAAAAAAAAAAAAADX11+TRZrf0y2Gjxe22\ngtH4piP3TPpXKwxtjhuYo9xq442iIblI2pC1RET2ILd9kxCqRjZmwlCSEohIJAQAAJZISDKGUd2M\nMoBnVbVVCyAWVWeSuqyOwIlXZZKue4MJV2WWYT2QKbKL9YlfdRdIo35b7/Hd3KTzUrPrDh27uxpb\nc2mpPwX/ABX9XAKpAAAAAAAAAAAAAACekTIp1eTwtJmv+GkyJn1oafeazbfpMzLR4jq/o8b823zX\n6XNF8ERCvTcNpxLV5LauvPhx9Irv3lhztdtv8TtaWLicXrt03jzjzb2k1nid56ty3s/w+a7Uwzjn\n1raejlarhmbhl/FpbxMO/fzj5p/ixSeXOvTtRfeI280ZI26tfDm3pWe63LaZx7qtGvniJ6tPLvOK\nfOa9WzbJvTbza02jl3n5SSljscK1MajSxWZ96nSW88xw/VfQ9XMT9nfa3yemid43jtLeXsce88qQ\nEqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADia3UTm1l4j7OP3Y/u\n7Vp2rM+kPJW1PhYcmS0+9MzKm/jbwz31weMzbV8UppazPL9q0/BF4rk1GLDSNqxPWPhCnHmnNrtT\nqPKteWPm6U6OdHaZvO+SaRNvhv12Ub/q3FhtrNVj0uKOt56z6R5y9zix1w4qY6RtWsREOJ7L6OKa\nS2rvX6zNM7T6Vh3mmZyOfya7eACzIAAAAAAAAAAAAAAAAAAAAAAAAAAczjVvqMVfW/8AZ03I41bf\nLp6/OVs/UVrY47NyOzUxd4bUJpEbb3Z7IiOrKIVSjZhMLJYyhKIgmGUQSDESIEbJEgQmCITEAmGU\nIiGUAyhZVhDOoM4Wx2VQtqBKuyyWEgqlhKyyuyBVaGtkbNmvk7A15l1eH2300R6TMORPSXT4ZO+O\n8fFefEX63gEAAAAAAAAAAAAAAAq1WPxdLlp+Kkx+y1Fvsz8gjhaDauGK8sx07y3OE3m1tT6RaP4c\nvU6yMNKUx73zT0ilY3l2eF6a+m0kRl/zbzz3+Ez5M8z26fJruW6wzYq5sV8d43raNpZjRzPPaTmx\n5b6bJ9rHO3zb2WJ8GWPEscY9bgzxH2t62n19GWW0eHOzHU5XbjXZ1x8WTnz2iZ7S2M1IjH2+LX0V\nKTqs8zO9ot0j8nUthi1J3UaOFMTfLFo6xMbS9BwHWTqdHOO8+/hnln5eTjYMFo1WTH5VnePzXcIm\n2k4zlpPSmXy/hfF5eMfJns69OA2cgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAADG/2LfJ874rW845mubliY7bPoto5qzHrDz0+yePNF41OotaJ7RWNtpV1OtfHqZ715fhu\nj8adNpcVfeyzE2/vLuanhOu1nEctIxTTFa/+ZPbZ3eHcF0vDbTfFE2yzG03t32+DokynXl9+leDB\nTTYKYccbUpWIhYCzEAAAAAAAAAAAAAAAAAAAAAAAAAAAAcXjE/4zDH9M/wAu04XF5/3jj/0f3Wz9\nRUYmzDWxS2I7FSyjuzY1ZKpRKEygEwiWUIkGIk2QJNhKQhMIhkCYZQxhlAMoZwwZwgWQshVCyATL\nCWc9ldpBhZXLOVdpQK7NfJPRdaWvknoDVvPvOnwuel4+TlXn3nS4VPvXj4QtEV0wAAAAAAAAAAAA\nAAAAAVV02CmTxK4qRf8AFFeq0AAAanEsfPpZmO9Ji0NDLfkwdOsulrumiyzHlVzJrz4Ovoy26vB8\ncTBa9NffLtMY77Rv8Yegx5ImkKdJoY1HC81Y+3OSbVn0mGGkmbY45u6tnrrTOu2xGO0RxCd+nNVj\nqKxTV1vH2pjaGtnyzXXYdo96ZmGXEMk15b7/AGZiVerWPTYckZcNbx5wzc7hGbnxXxzPWk7x8pdF\n0S9jh1OXgAlUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAcPjEf4/FP9H93ccXjMf4vDP9Mx+62fqKrx+S+GvibEFSsqyYwlVK\nZYsmIMoRKYJQIPIEiQ2ATCUQygCGUIhMAyhnDCGUIFkLIV1ZxIMpVWWSrsCuyqyyyq09ECq8tfJK\n66jJ2Bp5J6upwn7dv9Lk5J951uE/av8AJaIrqAAAAAAAAAAAAAAAAAAAAAAq1Mc2myxPnWf4cmtu\nXT9fR0tffk0WSe28bfq5Wbamm3326MtunwfK6PCv/AxPraZ/dz9PO97/AOqf5dHhdZrw7Dv3mOb9\nXOxRFM+avpe38mvkPHf/AFWlrKba7Tzt99ZxKkfR7euyNXMTrtPHfa0z+zPiM/UR8Zj+Wbdu8HpN\nM2bfzrV13M4dO2pyR61dNvj44/J/oAWZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADj8bj63BPzdhyeNx0wz8ZWz9RWri7Nmv\nVrYu0NmqaRZHZlDGGSiwxZSgCEkCBCQSCQBMJRCYgEsoYx3Z17AlMIhlCBnDOGEM4AlhZZKq4KrK\n7LLKrIFN2vdfZReAaObu6/CO9vk5OePR1uEd7fJeIrqAIAAAAAAAAAAAAAAAAAAAAGtxCk5NFliI\n3mI32+XVyNTyZOHTee946PQKPoeDffw4777eW/yVs60xv+ZxOnr4Okx1t05KRv8Ao41Z5q3yed5m\nXY1szXRZ5jvFJ/hxItP0aOSN9q7yrtr4f2tHFM5+KT16Yq/vK/iGSbXw4vO14UcPx5MGfNbPG18m\n1oj4THRsTw7VanPXVYpi3gzMcnrvCnG11JOupwuN8+a3pEQ6jT4divjxWnJExa09pbjbM5HHu90A\nJUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAHM41H1GOf6nTc/jEf4Ws+lls/UX45uGekNujTwdm5RNIthKIZKLDFlsiQIShIC\nEgCUJ7AmGTGO7IDzZQhMSDJMMYZQgZwzhhDOATuqssmVdgVWVWWyqtCBTeVF19lF+wNLNG7q8I+9\n8nLyupwnt+S8RXUAQAAAAAAAAAAAAAAAAAAAAAAItWL1mto3iY2lyrcLyUxzix2ia2nvPeK+jrCL\nOrTVnxpanhuPPemSs8l6RtE7dJj0ldpNP9GwRSZ3neZmV4cR/Vs4AJQAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANHi1d9H\nM+kt5ra+vPoskfDdOfqK4mn7Q3aNHBPZu0W0RdDOGFWcKLCJZeTGQQlCQSgASBsCYZQxhlAJTAmA\nTsmAgGcM4YQyjsgRLC3VnaVcgwsrt3Z2V2QK7tbJ1bN5a9waeWO7p8Knt8nNyebpcK8vkvlFdQBA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK9RXmwZI+ErEWjesx6wQeZwejeo0cccuW8\nelpblJaaRGxVnCuss4ZrMvJEgCAASISCQIBlCYYpieoM0wx8k7gzIRueYM4Z79FcSy3QEsLJmWFp\nBjaVVpZWlXMoGNmvkXXlr3kGtknu6XCf7OXkl1OEdl8orqgIAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAHmskcmtzV/rls0U62OXiWX4zErcc9GmkRfWVkSqqziWayxCPIANwBIhIJSxS\nCRG6dwZwlhEs4BluMdzfqgZxLLdXuy3AmVdpZTKuZBjaVVpWWV2QlhZRdfZRcGpl7urwfrzfJy8r\nrcH61vPyWitdMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHA4nHLxKZ9awnH2ZcY\njbW459aq8fZpfiI2IZwrqzhmsz3Ebm4JN0AMhCQSIASndiAziWUSriWcAyRujc80DM3RCfIETLCW\nUsZEsJYSslXZAwlTddPZTkBp5e7r8Gj6rJPxhx8k9Xa4PG2C8/FaK10QAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAcfjcbZMFvnDWx9m5x2PqcNvS+zSxT7sNPxH62YZQwqzhRZO6UCB\nKUAJTux3SDIRuAncQAmJZRLBMSgZ7iIAZRKd2DICUSlAljLCYWMLIFVukNfI2bNbIDTyT7zu8Ijb\nSz/qcG/2nf4T/wCE/wD2WnxWt4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHL9oL\n+Hw2cm28VvEuPptfgyVj6yIn0no7/FtJfW8NzYMe3PaPd39d3iMug1WktNc2C9dvPbeP1aZ9xF+v\nT471tHu2iflK2HkqWmvaZj5Surqc9Ps5bx+alTHqYHm68S1Vf/NmfnC2vGNTXvyT84Ql6A3cSvHM\nsfaxVn5Ssrxyv3sM/lKB1xza8bwT3pePyWV4tpZ+/MfOEjfGrXiGlt2zV/PotrqcN/s5aT/+wLRj\nFontMSlAlKEgndO6IAZQljDIEgeQljLCzOVdkCu/SGrkbF56NPNeKxMzMRHxENe0+89DwuNtHHzl\n5PJr8NcnLW3Pbf7r1nCZm2gpae8zMrz4i/W6AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAETETG0xukB4HVaeMHEtRi26RedvkyjBSfX9W77QYvC4xz7dMlYlrU7M929dWJLFc6aPK0q\n7YLxPS0S22FlP6q38Zac0yR92s/KVc3tHfFf8tpbcsLRvB/dR/8ALLVnU0r9uL1+dZI1mnmdvGpv\n6TOy6ym+Oto2tWJ+cJ/tW+KLK5KW+zes/KU7tG+h01p64qx8Y6NXNo6Y+uPJlp8rLf0rfG7MXtHa\n0x8pZxqs9e2a8f8A7Oj7HaTHn0+f6RWM23LETfr6vRW4PoL99NT8ui7F4+vEdXXtnt+fVbXjGsr/\nAOZE/OsPS29nuH27YrV+VpeV9pdPXhOtw49NG9Mld55+vXcTPd42I47qo7xSfyWV9oM8d8VJ/VxM\nd8l46xWF9cV7en6o/qLfxp2I9ob+eCv/AHMo9op89P8A/wBORGmyT5R+qfo2X8P7n9Q/jTsx7RR5\n6ef+4/8AuHftg/8A6cWcOSO9J/WEbWr3pY7Efzp2Lcfv5YK/9zWy8d1E/ZpSv5Oba1/+Hb9lc+LP\nbFt87I7E/wAabWbiurvEx4nL/pjZzc2bJkn372t85ZXx55/BX85lucC0vPxnTxlnnjm32mOiZqUu\nLJ2p4TwnVavNWaYbRTfre0bQ99pcH0bT0xb78vmtiIiNojaErMwAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAHnfarF7umzRHaZrLjYrdIen9ocPi8JyTt1xzF4eUw23rCm3R4r6bMy\nwt6kdTaWLdjswmNoZontsCm0K5XWjopnuDC0dGpqG5bs08/daKV672MjbSaif6oh6Z5f2LtvptRX\n0tEvUN3Jfo8f7cYve0eX4zV7B5z20xc/C8eSPuZIRficfXlcPaG7ino08HWIbePpLF2NuiyOyrHK\n3fZFSwuovHVfaVF4QK5YWTM9UT0EKry6Ps1Tn4zjn8NZn9nOtLseydObiWW34cf918fWfk+PYANn\nKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAq1WKM+ly4p+/WYeBxTNd6zG0xO0\nvobw3FcP0bi2em20Tbmj5Srr418V9sa2Z7qKyzi07MXUylhaU7yjqhLCeiq3ddaFNxFYW7NLNG8t\nzya+WO6Va9J7FW66mvwidnrXiPY3Ny8RyUn71Jj9Ht3RPjk19HK9pMHj8D1ER3rHN+jqqtTjjNps\nuOe16zAifXzfTz7kNyndpYazS9qT0mszDdoxrsi6m8LazMq6zDOsq1ZEyrt1WWlXaUCqyq0rbKbi\nFdp6PReyFd8uqv8ACsfy83aXrPZHHto89/xX2/SP/dpj6y8vx6EBq5gAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAB5n2q03LfDqqx39y39npmlxbS/TOG5se29tuavzgWzeV4mtui2\nO3RRSY2hdVhqO2MvI36iu9lUsrSrvDHn6spnmSiq5jooyV6tq1VV69RC32byTh43h8otMx+r6I+Z\naK/g8TwX7bXh9Mid4iW+fjl8n1ICWb57xLBOm4zqse20Tbmj8+qKdnS9q8PhcTw5tumSm0/OHMxz\n0Za+uzx3sX1t0Zxurr1ZxvspWiZYWZbsbT0QK7KLrZVZJFaqt5vbezNOTg9J/FaZeJns93wCvLwb\nT/GJn92uGHldIBowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADuAPA67F9H4l\nqMW20VvO3yRWW97T4fC4rXJHSMtI/WGhVlue3b473K2KzMML4+62tujG9pnozXaOSOVFMnVbmq1t\ntrJRW5E7wwvUxTvCyY6CHOt7moxz6Wh9PxTzYaT61h8x1MbZK/OH0zTf+Fxf6I/htj45vL9WgLMn\nmvbPFvocGWO9L7fq85p5maw9d7VYvE4JkmPu2if3eW0+PasdFNOnxfF1Y2hlykRsmY+LJ0MZjZXa\neq2eyi8oQTO0KLdZWzPRjWu6VaqtHR73g0bcI0sf0Q8Nkq93wqNuFaWP+XDTDDytwBowAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAef9q8HNpcGaI60vtPyl56k9Iew49j8ThGe\nPwxFv0l4zH2U26fDfTYiyJljvsjf4sm6vJ1hrXjq2MkqLdZEVbgbMx0auGdmzNt6iHN1Ub5af6of\nTdPG2nxx6Vj+HzaaTm1+nx/iyVj930ysbViPRrj45vL9SAuyc7j1efguqj+jd4/T33rD3HEcPj8O\n1GP8WOY/Z4TTT7sKadHhbcsZnaCJ3TPZk6VdrKbTutmP0U2nqgrGOsr8deiuI2X09EqKM1dt3uuG\nf/jdN/06/wAPE546S9rwud+Gaaf+XH8NMMPK2wGjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAABrcRp4nDtRWPPHP8PCYusPoWSvNjtX1iYfPuWaXtX8MzCuvjfw32siu8ptXoxi\n0wy5t4YulReqmazu2skbquURWFInddM7VYRGyL291KFnCcfj8e0le/Lbmn8n0N4b2Ur4nHLWmPsY\n5e5a5+OXyXugBZmiY3iY9Xz7NjnTa3Ph/BeYj5PoTxftFg8Hjk2iOmWkW/Psrr418V5WrWd2faFc\nV2jdnEMXWxntupmN7NiYU27iWML6dVMVnddjgVqMsdHr+CW5uE6f4Rt+7yuSsTDv+zWXn0WTHP3L\n/tK+GHl+O0A1c4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8Dn93W56/wDM\nt/L3z59qp24jn+OS38lnpr4r7ZxHQ2TEstt3PXUrt27K57rr1VT0BjKnJPRbMqMs7QlV2fYvHvrd\nVknyrEfu9m8f7FZI8fVU85iJewbT45NfQBKo817W4eulzxHaZrL0rje09ItwqbfhtBVs3leai8RD\nKLw1sduesL606dWFdsZT1jdhNeq6K9DlhCVUU6s4jZnt1YzAhnM71dH2bycmszY/K1d/0c6OzY4R\nfwuK4p8rTstn6z8k7HrwGzkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHz3\nVxvr80/8y38voTwGpj/F5/8AqT/JfjTx/WVeyY6FPspc9dZPVXaOq2WEwIUTVRmjo2rNfLHRI3vZ\nDJycXtX8dZh7t879nsnhcbwz23tt+r6I2nxyb+gCVBzuPY/E4PqI9K7ui19fTxNBnp60n+Aj5/pJ\n3jZu1aOnnltMNussdfXbm+l3ZM9URHREdZVXTuT1Nk7boQiOkJw28PU47/htEp5eivJPLMTCZ9Vv\nx7mJ3iJ9UqNHk8XR4b+tIXuhxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD\nweqjbWZ4/wCZP8vePCaz/wDIaiP+Zb+UX408f0r9lOxWOifJhXWjfyYWllPRXYQxnrCrJHRd3YZI\n6A1NJecHEsN/S0T+76bE7xE+r5dk93LW3pL6ZpMni6PDf8VIn9m2fjm8s9rgFmQxvHNS0esbMiew\nPnHLyai9fS0w2aNfUTtrs3+uf5bGPqy068fF227KtSsdFlKqNGMV6myyY6sbdIQI8tlOWOi6Jhhk\nj3RD0vA8nicMx9etZmHRcT2Zyb6XNT8N9/2dt0T449T2AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAHhdfG3E9TH9cvdPEcXjk4zqI/q3L8aeP6xr2TsxpLOekMK6mFo6qpXSrm\nOqBixvHSVmzC4OfqK7S9/wAByeLwbTW9K7fo8Fqo6Paeyl+fglI/Da0NcMPK7QC7AAB8313TiOf/\nAKk/y2MHWrX4jG3E9R/1Lfyv0/aFNOrHxuU7LI7MMayGTVlHWUXhNe6Z6wIUsb9d1m20q7dkDpez\nN9tRqKT5xEvRvKez9+Xis1/FSYerb5+OTyf6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAB43j9eXjN/jWJ/Z7J5L2mry8Upb8VIF8f6aGOey2eynHvOy7bowrrYSxZSwQJ2YXZ\n92N4BoanrEvVexmTm4blr+HJ/aHltRHSXofYm/1Wrp5RaJaYY+X49WA0c4AD51xONuKan/qW/lbp\n+0MOLRtxbU/9SU4J7KadWPjep2WQrr2WRPRk1TvsndXMpiRCb9FNu0rbTuqvKBscCjfi9PhWZeue\nV9n434rafTHL1TfPxy+T/QAszAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHmv\navHtfTZfnV6VxPajHzcNrf8ABeJFs/XnMcr4no18c+6vr2YadkY2YM57sEDLyY37Mo7MMnYGlqO0\nvQ+xNfqNVb1tEfs87qZ2rL0/sVX/AHdnt65P7Q0wx8vx6UBo5wAHz/jUbcX1PT78qtO2vaCnJxjP\n8Zif2amnnspp04+OjWejKJ6MKdmcMmyJn4m5ZHzEVPMwtJv0VZLbQDqezcb8RzT6Y/7vUPM+ytZt\nn1OTyiIh6Ztn45N/6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABocbxeLw\nnUR5xXm/Rvq8+OMuDJjntaswEeBxT0bNZ6NatZpNqz3rO0rqsdO3PxlaWEMpY+aqWXkryT0ZT2V3\n7A0dVPuy9f7G124NM/iyT/Z4zWT7sw957MYfB4Fp4/FE2/WWmGHldcBowAAeM9qKcvFeb8VIly9P\n0nq7ntbTbVYL+tJj93CwT76unR4/jo0nozhhTsy3Y1sWljM9Ce7HyQIm3RRlttVbaWrnt0Sh6n2U\nx8vD8mSfv3/h3XN4Bi8Lg2nj8Uc36y6TeOPXugCUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAPD8RxeBxXUU26Tbmj8+quro+02Lw+I4ssdslNvzhzazvDPbq8d7GW7Dfqz2VzG\n0s2qd+iu/Zn5Ksk9BVztX1mI8930zh2LwOHabH+HHWP2fNYp4+vwYvxXiP3fUqxtWIjyjZtj45/L\nfaQFmQADzftfj3w6fJ6WmHmsP23rvaqnNwqLfhvEvIYZ+sV038bo0noy36MK9oZQxrdMyrlnMbMZ\nQKrS1M07zEestq/RRjr4utwY/wAV4j91p9V18fQdJj8LR4ccfdpEfsuREbREJbuMAAAAAAAAAAAA\nBAJAAAAEAJEAJQAJQAJEAJQAJQAJEACUJAQlAJEAJQAJQJAAAEAJEAJBAAAJAABAJEJAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwvanDzaPFmjvjv8A\ntLztJ3h7HjGHx+FainnFeaPnHV4vFbeIU038VbHeGF+kso7Mb9mTdhKnLK3dRm7SIrHhGPxeP6Sv\n9cT/AHfSnz72Zx+J7Q45/BWZ/Z9BbZ+OXyfQBZQABzeP4/E4NqI9Ii36S8Ng/wAx9C4jTxOH6ivr\njn+Hz3B/mQi/GvjdCnWNlsdI2V07LIlg6USrt2ZzZXMoFV+zPhGLxeOaavpbm/RVltEN72Yx+Jxm\nb7dKUmf7L5+s9/HtRA2cqRACRACRACRACUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQCQQCRACRACRCQBCQBCQB\nACRACRACRACRACL1i9LVntMbPATTwdRkxT3pea/u+gPE8Xx+DxrPHlaYt+qNfGvjvtXXsi0dOrKk\ndEXjZg6VMtbP2bMtXUdpEV0/Y2nNxbNf8OP+727xvsXH+N1U/wBEfy9k3nxyb+gCVQAGOWvNivX1\nrMPnGGOXNNfOJ2fSZ6w+dZKeHxDPX8N7R+6L8a+L63KdoZ7q6zvEMpnowdKJ6ywmWUyqvIKM0vQ+\nx+D6rU55+9aKx+TzWa36vbezmDwODYenW+95/Nphj5L6dQBo5wAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAEiAAAEoA\nAAAAAAAAAAAAAEAkEAkRuAkQbgkQAkQAkQAkQAl5T2nx8nEMOT8dNv0l6pwfarHvpcGWPu32/WCr\nYvK4mOem6b9mGKd4Z3idmFdka0y1c892zfpMtLPaNpEV6D2Kj/Eauf6YeweQ9ieuTVz8K/3evbT4\n5NfQBKoAA8FxCvJxrUx/XMvevD8Zry8fz/Haf2RfjTx/6RSOnRMyypHu9kXjowrqVSrvPRnZVl6V\nkK0775MsUjvadn0nT4ow6bFijtSsVfPuFYvpPGtNTy54mfy6vorXDm8l9pEC7JIgBIgBIgBIgBIg\nBIgBIhIAgBIhIAgBIgBIIBIAAhIAhIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAAAAAAAAAAAA\nAAAAAAAAABAJQkAEAAAAAAAAAAjc3BIjdG4Mkbo5kcwMjdhzHMDPc3V8xzAs3N1fMjmBZubq+Y5g\nWbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmTzAz3N2HMnmBlu5ftFTx\nOEZJ/DMW/d0t2rxKni8N1FPWkiZ9eS08e7Cy8dGGn6UhZaJljXZGnmc3UT3dPP2cnUT78xCIV6j2\nH/8A9c/6f7vXPI+w8bU1U+vL/d63du5NfUiDcVSIAS8b7RV5eOb/AIqRL2TyXtNX/e2KfXH/AHlF\n+NPH/pr4+2xcxx0hFpY11K7R16KM32ZWz3UaidqSgrc9kcPicWyZJjfw6T+727y3sXh2xarN+K0V\nh6lvPjj3e0ASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQAAAAAkQAkQAkAAAAAAAAAAAAAAA\nEgAAAAAAAAAAAAAAAAAAAAAgAAABKDcAN0bgkY8xzAyRux5kcwM9zdXNkTcFm6OZXzMeYFvMibKu\nZHMC2bo51U2RuC2bom6rc3BZzom6sBZzI52ADPnOdggFnMc6skFnMc6rc3BbznOp3RzAv50c6nml\nHMC/nOf4qOY5wX85zqOc5wbHOc7X5znBsc6edr85zg2ec52vzpi4NjmY5bROG+/bllVzsNTk5dLl\nn0pP8BHmMHWNmzt0aum8obm08vVjfrtnxztR0mXHzTvaZdjVRMTLkZo6yiFen9iZ2pqY/wBP93rN\n3kPY+/LfPX1rE/u9XzN3HfqzdO6vmTuIZ7m7Hc3Bnu8t7TR/vHBP9E/y9Pu837SV31umn+if5Rfi\n/j/01MMb1hjkrtKzBG0bMsmOZY11tOYamr6Und0LUc7XT7u3rJPqL8er9lcPhcFpbzyWm39v7O00\n+FYvA4Zpsc94xxu227jv1IAgAAAAAAAAABKAAAASgASgBIgBIgBIgBIhIAAAAAAAAAAAAAAAAAAC\nUACUJAAAAAAAAAAAABIAAAAAAAAAAAAAAAAAAAAg3AEbomQZbo3YzLGbAz3RNlc3YzcFs2YzdVN2\nM2Bdzom6nmNwW86JurTAMuY3REJ2BB1ZRVMVBhsbSsiqeUFXLucq3lTygp5TlXcpygp5TlXcpygp\n5TlXcqOUFXKjlXcrGYBXysdlswiYBVMdUTCyY6sZBWxlnMMZgGLGZZSwkDdHMiWO4MuY5mEyjcFn\nN1OdVzHMC3nTzqeY5gX85zqOZPMC+Lqdbk20eb/RKOZr8QybaK/XvtH7iZ9aGlp2luzT3fg19NHS\nOjbmPcYX67XH1XSZ9XIzRvMuzrK7zLkZYmYnciunb9lZ5dTk+OP+71cXeP8AZnJ/ip2nf3J/l6iL\n/Fu5L9bMWZczXi6YuIbEWTzKIuyiwLt3nuO25uI4a/hx7/rLuczg8TicvFLbfdpEK6+NPH/phhjo\nstLGkctUWnoxrrU3j1cnWTzZq1jzl1clo5Zcu8c+txR63iP3Tn6pv4+g4o5cVI9IiGe7CJ2iE7t3\nGyN2O6dwSINwSISAlAAlACRAAlAAlACRACRCQAAAAAAAAAASgASISAAAAAAAAAAAAACQAAAAAAAA\nAAAAAASAAAAAAAAAAAAAAAAIAAAQCAJljuljsCJlhMs9mOwMJYys5TkBVsjZdyHICrZPKt5E8oK4\nqmKrOVOwMIqyirPY2Bjyp2ZbAI2NmSARsbMgEbI2ZAMdjZICNkbMkSCNmOzJEgx2YyzljMAwlhKy\nWEwCuWErJhhMArlhLOWEgxljMpljIImWMyTKJA3N0IBO5vux3NwZbnMx3NwZczT4jf3MdPW27a3a\nfJOq1XNP2KdIRfi+J2trSYfcjeF+Wm1OicVeWIiN9kai8xjY12ORqultnI1Ecsujq79XP1FovWYI\nrTgeq+j8QrWZ+3Mx+r2UXeC0WG2Ti2kiN5mL807eUREvbzbaejefHJv62Iv8WUXa0WTFhVtRdlF2\nrz9WUXBtc7jR9dqc2T1ttHyhvZMvJitb0jdq6XHNcNenWVN3028U99WRj6Kb02be3Tq18/SN2Lpc\n3UdN9nOmZrqKX/DaJ/d0svvTLRzV3jomK6+Pd1vvWJj0ZczT0mXxNJht60hfFnQ4qu3N1cWTEgs3\nTur5k7gz3N2O5uDM3Y7m4MtxBuCQASIASIASAAAAAAACRCQAAAAAAAAEoSAAAAAAAAAAAlAAlCQA\nAAAAAAAAAAASAAAAAAAAAAAAIASgAAAEJAQJQCNkbMgGOyOVnsAw5TlZ7GwMOVPKy2NgY7GzIBGx\nskA2AAAAAAAAAAQkBAEghEskAxYzDPZGwK5hjMLJhjMAqmGEwumrCagomFcw2JqqtUFEsLLrV82F\no7gqljKyYYTGwMZRKUSCAQAboJnaN5Bjkneu0d5W4ccViIiOzHFWbTzNumP1Zarr8eeRMbxDW1Mx\nNO67NbkhzNVnmInqzaOZrL93JyZeV0M1++7S02jvxDWxhxx033tPpC8Z6rrezWjmZyazJG2/u03h\n2vFibTHoqvamiwVwY+nLGzV0+SZ1Mx8G0/45tOhzJ5lXMc3UVXRdlF1HP+iYsDPLPPy49/tz1+Te\npSIr0ho6ak5Ms5J8o2q6NImOrHV7XX488ypzTtHXo0s9t6zG7c1G1qz6ubeZiZ3UatXJG3yauSO7\ncvMTEx5tPLb3prPRMVr0HB8vicNxf0+7+kt+LOJwTJyY/Bnz3tH93X36N58cWvq6LSyiyndMSlC7\nmZcymLJiwLosmJVRLKLAtiU7q4lMSCzc3YxJuDMRuAlKAEgAAAlAkAAAAAABKAEgAAAAAJAAAAAA\nAAAAAAAEgAAAAAAAAAAAAAkAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAhIAAACAAAASgAAAAAAEAAAA\nhGzJAImGMwzQDDZjNVuyNgUTVhNGxysZqDVmiu1G5NN2M4waM0+DCaN2cbGcQNGaMZq3JxMJxA1J\nqx2bU4kU09slorWNwa20z02RXHbJbl26QvtFovbHWkxEdJt5y2MOHlr2U1W3jx+1hiw8vSO63lmI\nXRTaEWmtY6snRHO1VpmJ+DjavpSZl2s8b7y4HFcnh0n0gha5ebJN55KRM2mdoiPN6fh+kpwXh0Wy\nRHj5Otp/s5Ps1p62y31+em9aTMYt/OfVfxTiPjZ52naI7fBrI5t66xz5+a1rW7yx0eSL6iZjtEOX\nqNbSletom3lENjh2fbHzbbWt3iVozruc+5ztWubf4M4ybpQ2Oboyrva0Vjza8WdDR4OkXt3n9ldX\nkaePP9VtYqctYhdvt5oivTeCZ2YOxXk6ubqMfV0b9mrljfqlFcq88k7z2U5axeItDa1OPessuC8P\nya7XRWYnwqdbT/ZMilvIu4dpslNdixXja8Y5tt85djZdbDWnGOesRtXFtuw6T27No5Kx2OrKYQlC\nExKJgBnEpiyvdlEgsizKLKollFgWxLKJVRLKJBbEp3VxLKJBnuMWQJEbpBIAAAJAAAABIAAAAAAA\nlAJAAAAAAAAAAAAAASAAAAAAAAAAAAAJAAAABAJABAlAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAA\nAAABAJQAAAAgAABAAI2EoBGyJhkgGPKxmqxAKpownHC+YRMdN5BrTj67R3bOn01o7p01Iv71u89o\nb9a7LfBTfS1vWI2jf12VfQPSW8KX2mas+NC2iv6xMNfJpMnLtEbuuxtMRCtzF55NR5rPps1N/ctP\ny6uHreE6nXZ4pak48X3rT06fB7fNeI33cbX6mI32R/MWu7XF116aDSRhxbRERs8f499bkyZeeKae\nkzE2mdon81/tfxDLGOunwbzlzbx08oaHBvZHJlx48mrvaa94pu04y617576rNGLRRM0397JEd/lu\n9Dw/S3x4qxffo6mm4NjwUiKY4iI9Ib1dHFY6QIaNabbrYrLfrpJtaK1rMzPZb/s+05IpP59OyLeJ\nk7eNfRaOc1ue32I7fGXYpi5Y77M8OGMeOKxHSFsU3Y29deZMzirl6dlVvhLatCjJHeYQv1rXnps1\n8k9/VsW6qLVmZIi1rzitlvFKRvaZ2h6TSaenC9FFY+3brM+sqeG8Prp4+kZ+lvuxPkr1mqm95nfp\nDXM459676a2q1dsV7XietvNno78+CJn1cjX6mOeIm0bR33dfRU5NJjidt9t5afjG/V6JZ7I2QMNh\nnyo2BhsMuVG3wAhMSbbQRAMolnE+iuGUSCyJZRKuGUSCyJZK4llEgyZMYTuCUsYSCQASISAAAlCQ\nAAAAAAEoASCASAAAAAAAAAAAAlACRACQAAAAAAAAAEgCEoASCAAAAAAAAAAAAAAAAAAAAAAABAAA\nAAAAAAAISAIAAAAAAQAAACASgAAAQJAQAAhIDHZhln3do7z0WS18mWsajHjmes7pg3dNi5aRMNqO\nyvDHTpPRaigHZhN4hHRlaVN59JY3zRENLUavaO+yq0iNVlitJ6vNcR1MVi0zO0era1/Ea0rPvbz5\nPM5MWp45qvo2GZrhmfrsnpHpHzTCseEcM/2vrr8Q1Eb4qzy44nziPN63HpYiIiI7LNHoqabBTFii\nIpSNohuVxrKtWMEejPwY9G1FFmHB4mWJn7MdfnIM9JpIx15to5pbUaas/a6rqViI7MxPxqX0UT1r\nO3wVzpbR2hviP5i03Y5s6a879FNtHljydhExCv8AMTPJXBnRZbz0iG5ptFjwe/l96zctMVamTJtE\nyTMibu1VrdTzRMR0j0ed4lr64MVpm0RERvMz5NvX62uOJ69XhOKX1HH9bHDtFvNYnfJeOy0Z2ojX\n6jjnEq6fRUmccTvN/J9H0eKcOnx45neaxEbubwHgOHg+milI3vP2resu3Wu0JQmITsmISDHZHKz2\nJgFc1RMLJhGwK9iIZ7MZgEdgmAEwyiWCdwWRLKJVxKYsC2JTuriWUSDNlEsIlMAySx3SCRCQSIAS\nAAACRACQAAAAAAASIASAAAAAAAAAAAAAAACRACRACQASIAAAAAAAAAAAAAAAAAAAAAAAAQCUAAAA\nAAAAAAIAAAAAAAAQAAAAAACBICBICAAEJAQJQCJcLjuS2ny6fPG/LWdpd1o8T0X07SXx/e7wCdJx\nWa0jmneHQpxPDMdZmJfNtZm49weZrh0/j4o7VtSZ2+Uw0/8A7o49k92vBLc/ntFohFW9PqGXimOI\n6Tu1L8T3eCx6r2t1O3JwvHjifO99v7t/Bwf2l1PXU6rS6eJ8qUm8x+so5TsekzcSjbvs4mt4rzW5\nK2mbT0itesy2cHsvbvqtbmyz5xERWP2jd1tJwrTaONsOKtZ8585+cnDrzmn4Rq+IZObUROHD32n7\nVv8A0ej0uhxaXFGPFSK1j0bkY4jyZRVZVXFGUVWbGwKsk8mObekNrSW3pWf1a2aYjHbm7bNnQ1id\nPW0TvuDdhJEbQABMsLW2R0ZTMQrvfbz2YWzVhpanUxEd0dWkW5c8R5uXxDX1w4pnfr5Q19XxKuOJ\n2neXltVqtVxbV/RdJ715+1bypANfiOu1HENV9C0MTfNeesx2rD1PAeBYuE6aKx72W3W9/WVnBuB4\neF4dqRzZbdb5J72l160WVK02ZxCYhOwI23TsnY2BGxsnYBjsiYZsZBjMMZZSgGEolMsQDdG6NwZ7\npiVe6YkFsSziVMWZRILolMSriWUSCyJTuwhMSDMRCQSI3SAlACRCQAAEoAEoASAAAAAAAAACUACR\nACQAAAAAAAAAAAAASAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAABAAAAAAAAAAAAACBKAAAAAAAQ\nJQAAAhICEbJAYTWJ7wx8KvpC0BV4ceieWGewDHlNmWwCNjZICNhIDmcZredBecdpiY69FXCOLW+i\nUiZidukulmxxlx2paN4mNng+K4+I8Hy2yaTfl37TXetoCPfRxfp1qi3F48ofKMvtvxak8s6LDv61\nrZji9rPaLUf5PC+bfttS0q8q3p9W/wBrRMdpUZuKdN99nzvFqPbTVz7nD8OKs+do2/mW3h4D7Xaq\nZnPrtNpqz35aRaYOHY9Zk4pNt9rR+rl6zi+OnS+WN57Rv1lXp/YrNaYtruL6zNPnGO3hxP6O5w/2\nf0HDuun09Yv55Le9afznqcOvO4tBreMTHu30unnva0bWt8on+70nDuE4OHYYx4Kbesz3tPrMuhGO\nIjpDOKrK9YVpsyiGUQnYGOyUgI2SlAIEmwMWMs9kTAMJYzDOYRMArmGErZhhMArlHmzmGMwDE3Ts\nbAbs4swj5pgFkSziVcM4BZEsolXDKAZwyhjCYBkACQhIAAAAAAAJAAAAAAAAAAAAAAAAAAAShIAA\nAAAAAAJAAAAAAAAAAAAAABAJEAAAAAAAAAAAAAAAIEoBKAAAAAAAAAAAAAAABAlAAAAAAAIAAAAA\nBAkBAkBAkBAlACEgMZjdjbFW8bWrEx8YWANb6Fp+bfwab+vLDKMFK9qxH5L0bAr8OPRPKz2AY7J2\nSbAjYZAI2E7AIEgIEgIEgMdkSy2NgY7MdlmyNoBXsxmFuyNgVTVjNV3KjlBRNTlXTVHKCrlIqt5T\nlBhEMohlFerLlBjEMohMVTEARDKCITsAk2AEgAAAkAAAAAAAAAAAAAAAAAAAAAAAASAAAAAAAAD/\n2Q==";async function _5(e,t){await AZ(e,!1);const n=$K();return e.state="warmup",t&&(e.config=FK(e.config,t)),e.config.warmup&&0!==e.config.warmup.length&&"none"!==e.config.warmup?new Promise((async t=>{await e.models.load(),await xi(),await async function(e){var t,n,a,r;if(!Xe().flagRegistry.ENGINE_COMPILE_ONLY)return;const s=Ai(),i=Ii();if("webgl"!==s&&"humangl"!==s||!(null==i?void 0:i.checkCompileCompletion))return;Xe().set("ENGINE_COMPILE_ONLY",!0);const o=di().state.numTensors,l=[];for(const[s,i]of Object.entries(e.models.models)){if(!i)continue;const o=(null==i?void 0:i.modelSignature)&&(null==(n=null==(t=null==i?void 0:i.inputs)?void 0:t[0])?void 0:n.shape)?[...i.inputs[0].shape]:[1,64,64,3],u=(null==i?void 0:i.modelSignature)&&(null==(r=null==(a=null==i?void 0:i.inputs)?void 0:a[0])?void 0:r.dtype)?i.inputs[0].dtype:"float32";for(let e=0;e<o.length;e++)-1===o[e]&&(o[e]=0===e?1:64);const d=gd(o,u);try{const e=i.execute(d);l.push(s),Array.isArray(e)?e.forEach((e=>fi(e))):fi(e)}catch(t){e.config.debug&&EK("compile fail model:",s)}fi(d)}const u=await i.checkCompileCompletionAsync();i.getUniformLocations(),e.config.debug&&EK("compile pass:",{models:l,kernels:u.length}),Xe().set("ENGINE_COMPILE_ONLY",!1);const d=di().state.numTensors;d-o>0&&EK("tensor leak:",d-o)}(e);const a=await async function(e){let t;return t="function"==typeof createImageBitmap?await async function(e){const t=(e,t="application/octet-stream")=>fetch(`data:${t};base64,${e}`).then((e=>e.blob()));let n,a;switch(e.config.warmup){case"face":n=await t(M5);break;case"body":case"full":n=await t(F5);break;default:n=null}if(n){const t=await createImageBitmap(n);a=await e.detect(t,e.config),t.close()}return a}(e):"undefined"!=typeof Image||void 0!==rY.Canvas?await async function(e){return new Promise((t=>{let n,a;switch(e.config.warmup){case"face":n="data:image/jpeg;base64,"+M5;break;case"full":case"body":n="data:image/jpeg;base64,"+F5;break;default:n=""}if("undefined"!=typeof Image)a=new Image;else{if(!rY.Image)return void t(void 0);a=new rY.Image}a.onload=async()=>{const n=tY(a.naturalWidth,a.naturalHeight);if(n){const r=n.getContext("2d");r&&r.drawImage(a,0,0);const s=await e.image(n,!0),i=s.tensor?await e.detect(s.tensor,e.config):void 0;t(i)}else EK("Warmup: Canvas not found"),t(void 0)},n?a.src=n:t(void 0)}))}(e):await async function(e){const t=e=>Buffer.from(e,"base64");let n,a;if(n="face"===e.config.warmup?t(M5):t(F5),"node"in x&&"tensorflow"===Ai()){const t=RK.decodeJpeg(n),r=Cu(t,0);e.tf.dispose(t),a=await e.detect(r,e.config),e.tf.dispose(r)}else e.config.debug&&EK("Warmup tfjs-node not loaded");return a}(e),t}(e),r=$K();e.config.debug&&EK("warmup",e.config.warmup,Math.round(r-n),"ms"),e.emit("warmup"),t(a)})):m2()}var P5=class{constructor(e){c(this,"version"),c(this,"config"),c(this,"result"),c(this,"state"),c(this,"process"),c(this,"tf"),c(this,"env",rY),c(this,"draw",wZ),c(this,"match",C2),c(this,"models"),c(this,"events"),c(this,"faceTriangulation"),c(this,"faceUVMap"),c(this,"performance"),g(this,C5),g(this,N5),g(this,T5),c(this,"analyze",((...e)=>{if(!m(this,N5))return;const t=this.tf.engine().state.numTensors,n=m(this,C5);y(this,C5,t);const a=t-n;0!==a&&EK(...e,a)})),g(this,R5,(e=>{if(!m(this,T5))return null;if(!e)return"input is not defined";if(this.env.node&&!(e instanceof ms))return"input must be a tensor";try{this.tf.getBackend()}catch(e){return"backend not loaded"}return null})),c(this,"webcam",new sY),c(this,"emit",(e=>{var t;(null==(t=this.events)?void 0:t.dispatchEvent)&&this.events.dispatchEvent(new Event(e))})),g(this,E5,{});const t=(TK.tfjs||Zf).replace(/-(.*)/,"");var n;_K.wasmPath=`https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm@${t}/dist/`,_K.modelBasePath=rY.browser?"../models/":"file://models/",this.version=mZ,Object.defineProperty(this,"version",{value:mZ}),this.config=JSON.parse(JSON.stringify(_K)),Object.seal(this.config),this.config.cacheModels="undefined"!=typeof indexedDB,e&&(this.config=FK(this.config,e)),n=this.config,hZ.cacheModels=n.cacheModels,hZ.verbose=n.debug,hZ.modelBasePath=n.modelBasePath,this.tf=x,this.state="idle",y(this,C5,0),y(this,N5,!1),y(this,T5,!1),this.performance={},this.events="undefined"!=typeof EventTarget?new EventTarget:void 0,this.models=new $5(this),dJ(),this.result=m2(),this.process={tensor:null,canvas:null},this.faceTriangulation=DQ,this.faceUVMap=zQ,S5(this,null,""),this.emit("create"),(this.config.debug||this.env.browser)&&EK(`version: ${this.version}`),this.config.debug&&EK(`tfjs version: ${this.tf.version["tfjs-core"]}`);const a=JSON.parse(JSON.stringify(this.env));delete a.kernels,delete a.initial,delete a.perfadd,this.config.debug&&EK("environment:",a)}reset(){const e=this.config.backend;this.config=JSON.parse(JSON.stringify(_K)),this.config.backend=e,eY(),rY.initial=!0}validate(e){const t=MK(_K,e||this.config);return 0===t.length&&(this.config=FK(this.config,e)),t}now(){return $K()}image(e,t=!1){return aY(e,this.config,t)}async segmentation(e,t){var n,a,r;if(t&&(this.config=FK(this.config,t)),!this.config.segmentation.enabled)return null;const s=await aY(e,this.config);if(!s.tensor)return null;let i=null;return(null==(n=this.config.segmentation.modelPath)?void 0:n.includes("rvm"))&&(i=await async function(e,t){if(s5||(s5=await b5(t)),!(null==s5?void 0:s5.executor))return null;y5.src=Eo(e,255),x5!==t.segmentation.ratio&&A5(t);const[n,a,r,s,i,o]=await s5.executeAsync(y5,g5);let l;switch(t.segmentation.mode||"default"){case"default":l=k5(n,a);break;case"alpha":l=k5(null,a);break;case"foreground":l=k5(n,null);break;case"state":u=r,l=ci((()=>{const e={};return e.unstack=oh(u,-1),e.concat=ul(e.unstack,1),e.split=zp(e.concat,4,1),e.stack=ul(e.split,2),e.squeeze=Bp(e.stack,[0]),e.expand=Cu(e.squeeze,-1),e.add=To(e.expand,1),e.mul=$o(e.add,127.5),e.cast=So(e.mul,"int32"),e.tile=Tu(e.cast,[1,1,3]),e.alpha=Cl([e.tile.shape[0]||0,e.tile.shape[1]||0,1],255,"int32"),ul([e.tile,e.alpha],-1)}));break;default:l=ni(0)}var u;return fi([y5.src,n,a,y5.r1i,y5.r2i,y5.r3i,y5.r4i]),[y5.r1i,y5.r2i,y5.r3i,y5.r4i]=[r,s,i,o],l}(s.tensor,this.config)),(null==(a=this.config.segmentation.modelPath)?void 0:a.includes("meet"))&&(i=await async function(e,t){var n;if(y2||(y2=await S2(t)),!(null==y2?void 0:y2.executor)||!(null==(n=null==y2?void 0:y2.inputs)?void 0:n[0].shape))return null;const a={};let r;switch(a.resize=Rc.resizeBilinear(e,[y2.inputs[0].shape?y2.inputs[0].shape[1]:0,y2.inputs[0].shape?y2.inputs[0].shape[2]:0],!1),a.norm=Eo(a.resize,yZ.tf255),a.res=y2.execute(a.norm),a.squeeze=Bp(a.res,[0]),[a.bgRaw,a.fgRaw]=oh(a.squeeze,2),a.fg=_p(a.fgRaw),a.mul=$o(a.fg,yZ.tf255),a.expand=Cu(a.mul,2),a.output=Rc.resizeBilinear(a.expand,[e.shape[1]||0,e.shape[2]||0]),t.segmentation.mode||"default"){case"default":a.input=Bp(e),a.concat=ul([a.input,a.output],-1),r=So(a.concat,"int32");break;case"alpha":r=So(a.output,"int32");break;default:r=ni(0)}return Object.keys(a).forEach((e=>fi(a[e]))),r}(s.tensor,this.config)),(null==(r=this.config.segmentation.modelPath)?void 0:r.includes("selfie"))&&(i=await async function(e,t){var n;if(w5||(w5=await I5(t)),!(null==w5?void 0:w5.executor)||!(null==(n=null==w5?void 0:w5.inputs)?void 0:n[0].shape))return null;const a={};let r;switch(a.resize=Rc.resizeBilinear(e,[w5.inputs[0].shape?w5.inputs[0].shape[1]:0,w5.inputs[0].shape?w5.inputs[0].shape[2]:0],!1),a.norm=Eo(a.resize,yZ.tf255),a.res=w5.execute(a.norm),a.squeeze=Bp(a.res,[0]),a.alpha=Rc.resizeBilinear(a.squeeze,[e.shape[1]||0,e.shape[2]||0]),a.mul=$o(a.alpha,yZ.tf255),t.segmentation.mode||"default"){case"default":a.input=Bp(e),a.concat=ul([a.input,a.mul],-1),r=So(a.concat,"int32");break;case"alpha":r=So(a.mul,"int32");break;default:r=ni(0)}return Object.keys(a).forEach((e=>fi(a[e]))),r}(s.tensor,this.config)),fi(s.tensor),i}compare(e,t){return async function(e,t,n){const a={};if(!t||!n||4!==t.shape.length||t.shape.length!==n.shape.length)return e.debug||EK("invalid input tensor or tensor shapes do not match:",t.shape,n.shape),0;if(1!==t.shape[0]||1!==n.shape[0]||3!==t.shape[3]||3!==n.shape[3])return e.debug||EK("input tensors must be of shape [1, height, width, 3]:",t.shape,n.shape),0;a.input1=Co(t),a.input2=t.shape[1]!==n.shape[1]||t.shape[2]!==n.shape[2]?Rc.resizeBilinear(n,[t.shape[1],t.shape[2]]):Co(n),a.diff=td(a.input1,a.input2),a.squared=$o(a.diff,a.diff),a.sum=wu(a.squared);const r=(await a.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;return fi([a.input1,a.input2,a.diff,a.squared,a.sum]),r}(this.config,e,t)}async init(){await AZ(this,!0),await this.tf.ready(),eY()}async load(e){this.state="load";const t=$K(),n=Object.values(this.models.models).filter((e=>e)).length;e&&(this.config=FK(this.config,e)),this.env.initial&&(await AZ(this,!1)||EK("error: backend check failed"),await xi(),this.env.browser&&(this.config.debug&&EK("configuration:",this.config),this.config.debug&&EK("tf flags:",this.tf.ENV.flags))),await this.models.load(this),this.env.initial&&this.config.debug&&EK("tf engine state:",this.tf.engine().state.numBytes,"bytes",this.tf.engine().state.numTensors,"tensors"),this.env.initial=!1,Object.values(this.models.models).filter((e=>e)).length!==n&&(this.models.validate(),this.emit("load"));const a=Math.trunc($K()-t);a>(this.performance.loadModels||0)&&(this.performance.loadModels=this.env.perfadd?(this.performance.loadModels||0)+a:a)}next(e=this.result){return function(e,t){var n,a,r,s,i,o,l,u,d,p,h,c,f,m,g,y,x,A,b,w,v,k,I,S,C,N;const T=$K();if(!e)return m2();const R=Date.now()-e.timestamp,E=R<1e3?8-Math.log(R+1):1;if(e.canvas&&(k2.canvas=e.canvas),e.error&&(k2.error=e.error),k2.body&&e.body.length===k2.body.length)for(let s=0;s<e.body.length;s++){const i=e.body[s].box.map(((e,t)=>((E-1)*k2.body[s].box[t]+e)/E)),o=e.body[s].boxRaw.map(((e,t)=>((E-1)*k2.body[s].boxRaw[t]+e)/E)),l=e.body[s].keypoints.map(((e,t)=>{var n,a,r,i,o,l,u,d,p;return{score:e.score,part:e.part,position:[k2.body[s].keypoints[t]?((E-1)*(k2.body[s].keypoints[t].position[0]||0)+(e.position[0]||0))/E:e.position[0],k2.body[s].keypoints[t]?((E-1)*(k2.body[s].keypoints[t].position[1]||0)+(e.position[1]||0))/E:e.position[1],k2.body[s].keypoints[t]?((E-1)*(k2.body[s].keypoints[t].position[2]||0)+(e.position[2]||0))/E:e.position[2]],positionRaw:[k2.body[s].keypoints[t]?((E-1)*(k2.body[s].keypoints[t].positionRaw[0]||0)+(e.positionRaw[0]||0))/E:e.positionRaw[0],k2.body[s].keypoints[t]?((E-1)*(k2.body[s].keypoints[t].positionRaw[1]||0)+(e.positionRaw[1]||0))/E:e.positionRaw[1],k2.body[s].keypoints[t]?((E-1)*(k2.body[s].keypoints[t].positionRaw[2]||0)+(e.positionRaw[2]||0))/E:e.positionRaw[2]],distance:[k2.body[s].keypoints[t]?((E-1)*((null==(n=k2.body[s].keypoints[t].distance)?void 0:n[0])||0)+((null==(a=e.distance)?void 0:a[0])||0))/E:null==(r=e.distance)?void 0:r[0],k2.body[s].keypoints[t]?((E-1)*((null==(i=k2.body[s].keypoints[t].distance)?void 0:i[1])||0)+((null==(o=e.distance)?void 0:o[1])||0))/E:null==(l=e.distance)?void 0:l[1],k2.body[s].keypoints[t]?((E-1)*((null==(u=k2.body[s].keypoints[t].distance)?void 0:u[2])||0)+((null==(d=e.distance)?void 0:d[2])||0))/E:null==(p=e.distance)?void 0:p[2]]}})),u={};let d={connected:{}};(null==(n=t.body.modelPath)?void 0:n.includes("efficientpose"))?d=WJ:(null==(a=t.body.modelPath)?void 0:a.includes("blazepose"))?d=pJ:(null==(r=t.body.modelPath)?void 0:r.includes("movenet"))&&(d=g2);for(const[e,t]of Object.entries(d.connected)){const n=[];for(let e=0;e<t.length-1;e++){const a=l.find((n=>n.part===t[e])),r=l.find((n=>n.part===t[e+1]));a&&r&&n.push([a.position,r.position])}u[e]=n}k2.body[s]={...e.body[s],box:i,boxRaw:o,keypoints:l,annotations:u}}else k2.body=JSON.parse(JSON.stringify(e.body));if(k2.hand&&e.hand.length===k2.hand.length)for(let t=0;t<e.hand.length;t++){const n=e.hand[t].box.map(((e,n)=>((E-1)*k2.hand[t].box[n]+e)/E)),a=e.hand[t].boxRaw.map(((e,n)=>((E-1)*k2.hand[t].boxRaw[n]+e)/E));k2.hand[t].keypoints.length!==e.hand[t].keypoints.length&&(k2.hand[t].keypoints=e.hand[t].keypoints);const r=e.hand[t].keypoints&&e.hand[t].keypoints.length>0?e.hand[t].keypoints.map(((e,n)=>e.map(((e,a)=>((E-1)*(k2.hand[t].keypoints[n][a]||1)+(e||0))/E)))):[];let l={};if(Object.keys(k2.hand[t].annotations).length!==Object.keys(e.hand[t].annotations).length)k2.hand[t].annotations=e.hand[t].annotations,l=k2.hand[t].annotations;else if(e.hand[t].annotations)for(const n of Object.keys(e.hand[t].annotations))l[n]=(null==(o=null==(i=null==(s=e.hand[t])?void 0:s.annotations)?void 0:i[n])?void 0:o[0])?e.hand[t].annotations[n].map(((e,a)=>e.map(((e,r)=>((E-1)*k2.hand[t].annotations[n][a][r]+e)/E)))):null;k2.hand[t]={...e.hand[t],box:n,boxRaw:a,keypoints:r,annotations:l}}else k2.hand=JSON.parse(JSON.stringify(e.hand));if(k2.face&&e.face.length===k2.face.length)for(let t=0;t<e.face.length;t++){const n=e.face[t].box.map(((e,n)=>((E-1)*k2.face[t].box[n]+e)/E)),a=e.face[t].boxRaw.map(((e,n)=>((E-1)*k2.face[t].boxRaw[n]+e)/E));let r=e.face[t].annotations;if(Object.keys(k2.face[t].annotations).length!==Object.keys(e.face[t].annotations).length)k2.face[t].annotations=e.face[t].annotations,r=k2.face[t].annotations;else if(e.face[t].annotations)for(const n of Object.keys(e.face[t].annotations))r[n]=(null==(d=null==(u=null==(l=e.face[t])?void 0:l.annotations)?void 0:u[n])?void 0:d[0])?e.face[t].annotations[n].map(((e,a)=>e.map(((e,r)=>((E-1)*k2.face[t].annotations[n][a][r]+e)/E)))):null;if(e.face[t].rotation){const s={matrix:[0,0,0,0,0,0,0,0,0],angle:{roll:0,yaw:0,pitch:0},gaze:{bearing:0,strength:0}};s.matrix=null==(p=e.face[t].rotation)?void 0:p.matrix,s.angle={roll:((E-1)*((null==(c=null==(h=k2.face[t].rotation)?void 0:h.angle)?void 0:c.roll)||0)+((null==(m=null==(f=e.face[t].rotation)?void 0:f.angle)?void 0:m.roll)||0))/E,yaw:((E-1)*((null==(y=null==(g=k2.face[t].rotation)?void 0:g.angle)?void 0:y.yaw)||0)+((null==(A=null==(x=e.face[t].rotation)?void 0:x.angle)?void 0:A.yaw)||0))/E,pitch:((E-1)*((null==(w=null==(b=k2.face[t].rotation)?void 0:b.angle)?void 0:w.pitch)||0)+((null==(k=null==(v=e.face[t].rotation)?void 0:v.angle)?void 0:k.pitch)||0))/E},s.gaze={bearing:((E-1)*((null==(I=k2.face[t].rotation)?void 0:I.gaze.bearing)||0)+((null==(S=e.face[t].rotation)?void 0:S.gaze.bearing)||0))/E,strength:((E-1)*((null==(C=k2.face[t].rotation)?void 0:C.gaze.strength)||0)+((null==(N=e.face[t].rotation)?void 0:N.gaze.strength)||0))/E},k2.face[t]={...e.face[t],rotation:s,box:n,boxRaw:a,annotations:r}}else k2.face[t]={...e.face[t],box:n,boxRaw:a,annotations:r}}else k2.face=JSON.parse(JSON.stringify(e.face));if(k2.object&&e.object.length===k2.object.length)for(let t=0;t<e.object.length;t++){const n=e.object[t].box.map(((e,n)=>((E-1)*k2.object[t].box[n]+e)/E)),a=e.object[t].boxRaw.map(((e,n)=>((E-1)*k2.object[t].boxRaw[n]+e)/E));k2.object[t]={...e.object[t],box:n,boxRaw:a}}else k2.object=JSON.parse(JSON.stringify(e.object));if(e.persons){const t=e.persons;if(k2.persons&&t.length===k2.persons.length)for(let e=0;e<t.length;e++)k2.persons[e].box=t[e].box.map(((t,n)=>((E-1)*k2.persons[e].box[n]+t)/E));else k2.persons=JSON.parse(JSON.stringify(t))}e.gesture&&(k2.gesture=e.gesture),k2.width=e.width,k2.height=e.height;const $=$K();return I2=rY.perfadd?I2+Math.round($-T):Math.round($-T),e.performance&&(k2.performance={...e.performance,interpolate:I2}),k2}(e,this.config)}async warmup(e){const t=$K(),n=await _5(this,e),a=$K();return this.performance.warmup=Math.trunc(a-t),n}async profile(e,t){const n=await this.tf.profile((()=>this.detect(e,t))),a={};let r=0;for(const e of n.kernels){const t=Number(e.kernelTimeMs)||0;a[e.name]?a[e.name]+=t:a[e.name]=t,r+=t}const s=[];Object.entries(a).forEach((e=>s.push({kernel:e[0],time:e[1],perc:0})));for(const e of s)e.perc=Math.round(1e3*e.time/r)/1e3,e.time=Math.round(1e3*e.time)/1e3;return s.sort(((e,t)=>t.time-e.time)),s.length=20,s}async detect(e,t){return this.state="detect",new Promise((async n=>{var a,r,s,i,o,l,u,d,p,h,c,f,g,y,x,A,b,w,v,k,I;let S;this.state="config",this.config=FK(this.config,t),this.state="check";const C=m(this,R5).call(this,e);C&&(EK(C,e),this.emit("error"),n(m2(C)));const N=$K();await this.load(),S=$K(),this.state="image";const T=await aY(e,this.config);if(this.process=T,this.performance.inputProcess=this.env.perfadd?(this.performance.inputProcess||0)+Math.trunc($K()-S):Math.trunc($K()-S),this.analyze("Get Image:"),!T.tensor)return this.config.debug&&EK("could not convert input to tensor"),this.emit("error"),void n(m2("could not convert input to tensor"));this.emit("image"),S=$K(),this.config.skipAllowed=await async function(e,t){let n=!1;if(0===e.cacheSensitivity||!t.shape||4!==t.shape.length||t.shape[1]>3840||t.shape[2]>2160)return n;if(QK.inputTensor)if(QK.inputTensor.shape[1]!==t.shape[1]||QK.inputTensor.shape[2]!==t.shape[2])fi(QK.inputTensor),QK.inputTensor=Co(t);else{const a={};a.diff=td(t,QK.inputTensor),a.squared=$o(a.diff,a.diff),a.sum=wu(a.squared);const r=(await a.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;fi([QK.inputTensor,a.diff,a.squared,a.sum]),QK.inputTensor=Co(t),n=r<=(e.cacheSensitivity||0)}else QK.inputTensor=Co(t);return n}(this.config,T.tensor),this.config.filter.autoBrightness=!!this.config.filter.autoBrightness&&this.config.skipAllowed,this.performance.totalFrames||(this.performance.totalFrames=0),this.performance.cachedFrames||(this.performance.cachedFrames=0),this.performance.totalFrames++,this.config.skipAllowed&&this.performance.cachedFrames++,this.performance.cacheCheck=this.env.perfadd?(this.performance.cacheCheck||0)+Math.trunc($K()-S):Math.trunc($K()-S),this.analyze("Check Changed:");let R=[],E=[],$=[],M=[];this.state="detect:face",this.config.async?(R=this.config.face.enabled?q1(this,T.tensor):[],this.performance.face&&delete this.performance.face):(S=$K(),R=this.config.face.enabled?await q1(this,T.tensor):[],this.performance.face=this.env.perfadd?(this.performance.face||0)+Math.trunc($K()-S):Math.trunc($K()-S)),!this.config.async||-1!==this.config.body.maxDetected&&-1!==this.config.hand.maxDetected||(R=await R),this.analyze("Start Body:"),this.state="detect:body";const F=-1===this.config.body.maxDetected?FK(this.config,{body:{maxDetected:this.config.face.enabled?1*R.length:1}}):this.config;this.config.async?((null==(a=this.config.body.modelPath)?void 0:a.includes("posenet"))?E=this.config.body.enabled?m5(T.tensor,F):[]:(null==(r=this.config.body.modelPath)?void 0:r.includes("blazepose"))?E=this.config.body.enabled?MJ(T.tensor,F):[]:(null==(s=this.config.body.modelPath)?void 0:s.includes("efficientpose"))?E=this.config.body.enabled?XJ(T.tensor,F):[]:(null==(i=this.config.body.modelPath)?void 0:i.includes("movenet"))&&(E=this.config.body.enabled?B2(T.tensor,F):[]),this.performance.body&&delete this.performance.body):(S=$K(),(null==(o=this.config.body.modelPath)?void 0:o.includes("posenet"))?E=this.config.body.enabled?await m5(T.tensor,F):[]:(null==(l=this.config.body.modelPath)?void 0:l.includes("blazepose"))?E=this.config.body.enabled?await MJ(T.tensor,F):[]:(null==(u=this.config.body.modelPath)?void 0:u.includes("efficientpose"))?E=this.config.body.enabled?await XJ(T.tensor,F):[]:(null==(d=this.config.body.modelPath)?void 0:d.includes("movenet"))&&(E=this.config.body.enabled?await B2(T.tensor,F):[]),this.performance.body=this.env.perfadd?(this.performance.body||0)+Math.trunc($K()-S):Math.trunc($K()-S)),this.analyze("End Body:"),this.analyze("Start Hand:"),this.state="detect:hand";const _=-1===this.config.hand.maxDetected?FK(this.config,{hand:{maxDetected:this.config.face.enabled?2*R.length:1}}):this.config;this.config.async?((null==(h=null==(p=this.config.hand.detector)?void 0:p.modelPath)?void 0:h.includes("handdetect"))?$=this.config.hand.enabled?a2(T.tensor,_):[]:(null==(f=null==(c=this.config.hand.detector)?void 0:c.modelPath)?void 0:f.includes("handtrack"))&&($=this.config.hand.enabled?f2(T.tensor,_):[]),this.performance.hand&&delete this.performance.hand):(S=$K(),(null==(y=null==(g=this.config.hand.detector)?void 0:g.modelPath)?void 0:y.includes("handdetect"))?$=this.config.hand.enabled?await a2(T.tensor,_):[]:(null==(A=null==(x=this.config.hand.detector)?void 0:x.modelPath)?void 0:A.includes("handtrack"))&&($=this.config.hand.enabled?await f2(T.tensor,_):[]),this.performance.hand=this.env.perfadd?(this.performance.hand||0)+Math.trunc($K()-S):Math.trunc($K()-S)),this.analyze("End Hand:"),this.analyze("Start Object:"),this.state="detect:object",this.config.async?((null==(b=this.config.object.modelPath)?void 0:b.includes("nanodet"))?M=this.config.object.enabled?q2(T.tensor,this.config):[]:(null==(w=this.config.object.modelPath)?void 0:w.includes("centernet"))&&(M=this.config.object.enabled?LJ(T.tensor,this.config):[]),this.performance.object&&delete this.performance.object):(S=$K(),(null==(v=this.config.object.modelPath)?void 0:v.includes("nanodet"))?M=this.config.object.enabled?await q2(T.tensor,this.config):[]:(null==(k=this.config.object.modelPath)?void 0:k.includes("centernet"))&&(M=this.config.object.enabled?await LJ(T.tensor,this.config):[]),this.performance.object=this.env.perfadd?(this.performance.object||0)+Math.trunc($K()-S):Math.trunc($K()-S)),this.analyze("End Object:"),this.state="detect:await",this.config.async&&([R,E,$,M]=await Promise.all([R,E,$,M])),this.state="detect:gesture";let P=[];this.config.gesture.enabled&&(S=$K(),P=[...M0(R),...$0(E),..._0($),...F0(R)],this.config.async?this.performance.gesture&&delete this.performance.gesture:this.performance.gesture=this.env.perfadd?(this.performance.gesture||0)+Math.trunc($K()-S):Math.trunc($K()-S)),this.performance.total=this.env.perfadd?(this.performance.total||0)+Math.trunc($K()-N):Math.trunc($K()-N);const O=(null==(I=this.process.tensor)?void 0:I.shape)||[0,0,0,0];this.result={face:R,body:E,hand:$,gesture:P,object:M,performance:this.performance,canvas:this.process.canvas,timestamp:Date.now(),error:null,width:O[2],height:O[1],get persons(){return function(e,t,n,a,r){var s,i,o,l,u,d;let p=0;const h=[];for(const c of e){const e={id:p++,face:c,body:null,hands:{left:null,right:null},gestures:[],box:[0,0,0,0]};for(const n of t)c.box[0]>n.box[0]&&c.box[0]<n.box[0]+n.box[2]&&c.box[1]+c.box[3]>n.box[1]&&c.box[1]+c.box[3]<n.box[1]+n.box[3]&&(e.body=n);if(e.body)for(const t of n)t.box[0]+t.box[2]>e.body.box[0]&&t.box[0]+t.box[2]<e.body.box[0]+e.body.box[2]&&t.box[1]+t.box[3]>e.body.box[1]&&t.box[1]+t.box[3]<e.body.box[1]+e.body.box[3]&&e.hands&&(e.hands.left=t),t.box[0]<e.body.box[0]+e.body.box[2]&&t.box[0]>e.body.box[0]&&t.box[1]+t.box[3]>e.body.box[1]&&t.box[1]+t.box[3]<e.body.box[1]+e.body.box[3]&&e.hands&&(e.hands.right=t);for(const t of a)(void 0!==t.face&&t.face===c.id||void 0!==t.iris&&t.iris===c.id||void 0!==t.body&&t.body===(null==(s=e.body)?void 0:s.id)||void 0!==t.hand&&t.hand===(null==(i=e.hands.left)?void 0:i.id)||void 0!==t.hand&&t.hand===(null==(o=e.hands.right)?void 0:o.id))&&e.gestures.push(t);const f=[],m=[],g=e=>{e&&4===e.length&&(f.push(e[0],e[0]+e[2]),m.push(e[1],e[1]+e[3]))};g(e.face.box),g(null==(l=e.body)?void 0:l.box),g(null==(u=e.hands.left)?void 0:u.box),g(null==(d=e.hands.right)?void 0:d.box);const y=Math.min(...f),x=Math.min(...m);e.box=[y,x,Math.max(...f)-y,Math.max(...m)-x],(null==r?void 0:r[1])&&(null==r?void 0:r[2])&&(e.boxRaw=[e.box[0]/r[2],e.box[1]/r[1],e.box[2]/r[2],e.box[3]/r[1]]),h.push(e)}return h}(R,E,$,P,O)}},fi(T.tensor),this.emit("detect"),this.state="idle",n(this.result)}))}async sleep(e){return new Promise((t=>{setTimeout(t,e)}))}async video(e,t=!0,n=0){t?(m(this,E5)[e.id]||(this.config.debug&&EK("video start",e.id),m(this,E5)[e.id]=!0),!e.paused&&m(this,E5)[e.id]&&e.readyState>=2&&await this.detect(e),n>0&&await this.sleep(n),m(this,E5)[e.id]&&requestAnimationFrame((()=>this.video(e,t,n)))):(this.config.debug&&EK("video stop",e.id),m(this,E5)[e.id]=!1)}};let O5;C5=new WeakMap,N5=new WeakMap,T5=new WeakMap,R5=new WeakMap,E5=new WeakMap;class D5 extends s{#k;#I;#S=0;#C=0;#N=0;#T=0;#R=!0;#E=!1;#$=0;#M=0;#F=0;#_=0;#P;#O=5;get type(){return"image"}set file(e){e instanceof File&&(this.#k=e,this.#I=this.load(e))}set imgX(e){"string"==typeof e&&(e=parseInt(e)),this.#S=e}set imgY(e){"string"==typeof e&&(e=parseInt(e)),this.#C=e}set imgWidth(e){if("string"==typeof e&&(e=parseInt(e)),0==e)return;let t=this.#_/(this.#F||1);console.debug("## P",t),this.#N=e,this.#R&&(this.#T=this.#N*t)}set imgHeight(e){if("string"==typeof e&&(e=parseInt(e)),0==e)return;let t=this.#N/(this.#T||1);this.#T=e,this.#R&&(this.#N=this.#T*t)}set imgMirror(e){this.#E=e}set imgScale(e){if("string"==typeof e&&(e=parseFloat(e)),isNaN(e)||0==e)return;const t=this.width==this.#N&&this.height==this.#T;this.#N=this.#I.width*e,this.#T=this.#I.height*e,t&&(this.width=this.#N,this.height=this.#T)}set imgKeepProportion(e){this.#R=e}set cropX(e){"string"==typeof e&&(e=parseInt(e)),this.#$=e}set cropY(e){"string"==typeof e&&(e=parseInt(e)),this.#M=e}set cropWidth(e){"string"==typeof e&&(e=parseInt(e)),this.#F=e}set cropHeight(e){"string"==typeof e&&(e=parseInt(e)),this.#_=e}set cropMirror(e){this.#E=e}get file(){return this.#k}get imgX(){return this.#S}get imgY(){return this.#C}get imgWidth(){return Math.round(this.#N)}get imgHeight(){return Math.round(this.#T)}get imgMirror(){return this.#E}get imgScale(){return this.#N/this.#I.width}get imgKeepProportion(){return this.#R}get cropX(){return this.#$}get cropY(){return this.#M}get cropWidth(){return this.#F}get cropHeight(){return this.#_}release(){this.#I&&URL.revokeObjectURL(this.#I.src)}draw(e){this.drawRectangle(e);const t=this.x+this.#S,n=this.y+this.#C,a=Math.min(this.width,this.#N),r=Math.min(this.height,this.#T);e.save(),this.#E?(e.translate(t,n),e.scale(-1,1),e.drawImage(this.#I,this.#$,this.#M,this.#F,this.#_,0,0,-a,r)):e.drawImage(this.#I,this.#$,this.#M,this.#F,this.#_,t,n,a,r),this.#P&&(e.fillStyle="#222",e.fill(this.#P)),e.restore(),this.drawBorder(e,this.strokeWidth,this.stroke),this.drawSelection(e)}updateSize(e,t){super.updateSize(e,t),Math.abs(this.width-this.#N)<4&&(this.width=this.#N),Math.abs(this.height-this.#T)<4&&(this.height=this.#T)}image(){return this.#I}blur(e,t=this.#O){if(0==t)return;const n=this.x+this.#S,a=this.y+this.#C,r=this.#N,s=this.#T,i=e.getImageData(n,a,r,s),o=i.data,l=new Uint8ClampedArray(o);for(let e=0;e<s;e++)for(let n=0;n<r;n++){let a=0,i=0,u=0,d=0;for(let o=-t;o<=t;o++)for(let p=-t;p<=t;p++){const t=n+p,h=e+o;if(t>=0&&t<r&&h>=0&&h<s){const e=4*(h*r+t);a+=l[e],i+=l[e+1],u+=l[e+2],d++}}const p=4*(e*r+n);o[p]=a/d,o[p+1]=i/d,o[p+2]=u/d}e.putImageData(i,n,a)}async load(e){this.#k=e,this.#I=await D5.load(e),console.debug("Image imported:",this.#I.width,this.#I.height),this.width=this.width||this.#I.width,this.height=this.height||this.#I.height,this.#N=this.#N||this.#I.width,this.#T=this.#T||this.#I.height,this.#$=0,this.#M=0,this.#F=this.#I.width,this.#_=this.#I.height}async detectHuman(){O5||(O5=new P5({body:{enabled:!0},async:!0}),await O5.load(),await O5.warmup());const e=(await O5.detect(this.#I)).body[0].keypoints,t=new Path2D,n=["leftShoulder","leftElbow","leftWrist","leftHip","rightHip","rightShoulder","rightElbow","rightWrist","nose"],a=e.find((e=>e.part===n[0]));a&&t.moveTo(a.position[0],a.position[1]);for(let a=1;a<n.length;a++){const r=e.find((e=>e.part===n[a]));r&&t.lineTo(r.position[0],r.position[1])}this.#P=t}static async load(e){return new Promise(((t,n)=>{const a=new Image;a.src=URL.createObjectURL(e),a.onload=()=>t(a),a.onerror=n}))}}class z5 extends t{get type(){return"emoji"}constructor(e){super(),this.value=e,this.font="emoji"}}class L5{#D=!1;get name(){return"app"}get version(){return 1}get isSetup(){return this.#D}async init(){if(!window.indexedDB)throw console.log("Your browser doesn't support IndexedDB"),new Error("IndexDB is not supported");this.db=await this.#z(),this.isSetup&&await this.setup()}needSetup(e){return 0==e}setup(){}ls(e,t=!1,n=0,a=100){return this.#L(e,t,n,a)}tail(e,t=0,n=50){return this.#L(e,!0,t,n)}lsByIndex(e,t,n,a=!1,r=30,s=0){return this.#W(e,t,n,s,r,a)}lsByRating(e,t,n){return this.#B(e,"rating",t,n,!0)}lsByRange(e,t,n,a,r=!1,s=50){return this.#V(e,t,n,a,r,s)}latest(e,t=0,n=100){return this.#W(e,"ts",0,t,n,!0)}count(e){return this.#U(e)}put(e,t){return L5.put(this.db,e,t)}update(e,...t){return this.#G(e,...t)}updateByIndex(e,...t){return this.#H(e,...t)}push(e,...t){return this.#j(e,...t)}get(e,t){return this.#q(e,t)}rm(e,t){return this.#X(e,t)}rmByIndex(e,t,n){return this.#K(e,t,n)}pushValue(e,t,n,a){return this.#Y(e,t,n,a)}pushValueByIndex(e,t,n,a,r){return this.#Z(e,t,n,a,r)}deleteValue(e,...t){return this.#J(e,...t)}deleteValueByIndex(e,...t){return this.#Q(e,...t)}add(e,t){return this.#ee(e,t)}getById(e){return this.#q(kContact,e)}getByEmail(e){return this.#te(kContact,"email",e)}getByIndex(e,t,n){return this.#te(e,t,n)}#z(){const e=this.name,t=this.version;return new Promise(((n,a)=>{const r=indexedDB.open(e,t);r.onerror=e=>{console.error(`Database error: ${e.target.errorCode}`),a(e.target.errorCode)},r.onsuccess=e=>{const t=e.target.result;n(t)},r.onupgradeneeded=e=>{const t=e.target.result,n=e.target.transaction,a=e.oldVersion;this.onUpgrade(t,n,a),this.needSetup(a)&&(this.#D=!0)}}))}#W(e,t,n,a=0,r=50,s=!1){return new Promise(((i,o)=>{const l=this.db.transaction(e,"readonly").objectStore(e),u=n?IDBKeyRange.only(n):IDBKeyRange.lowerBound(0),d=l.index(t).openCursor(u,s?"prev":"next");let p=0==a,h=0;const c=[];d.onsuccess=e=>{const t=e.target.result;if(t)if(p){const e=t.value;c.push(e),h++,h<r?t.continue():i(c)}else p=!0,t.advance(a);else i(c)},d.onerror=e=>{o(e)}}))}addOne(e,t){return new Promise(((n,a)=>{let r=this.db.transaction(e,"readwrite").objectStore(e).add(t);r.onsuccess=n,r.onerror=a}))}#X(e,t){return new Promise(((n,a)=>{const r=this.db.transaction(e,"readwrite").objectStore(e);let s=t?r.delete(t):r.clear();s.onsuccess=function(e){n()},s.onerror=function(e){console.log(e.target.errorCode),a(e.target.errorCode)}}))}#K(e,t,n){return new Promise(((a,r)=>{const s=this.db.transaction(e,"readwrite").objectStore(e).index(t).openCursor(n);s.onerror=a,s.onsuccess=e=>{const t=e.target.result;t?(t.delete(),t.continue()):a()}}))}#ee(e,t){const n=this.db.transaction(e,"readwrite").objectStore(e);Array.isArray(t)||(t=[t]),console.log("IndexDB: adding new entries =>",e,"\n",t.map((e=>e.id)));const a=[];for(const e of t)a.push(new Promise(((t,a)=>{let r=n.add(e);r.onsuccess=function(e){t()},r.onerror=a})));return Promise.all(a)}#G(e,t,n,a={}){return new Promise(((r,s)=>{const i=this.db.transaction(e,"readwrite").objectStore(e),o=i.openCursor(IDBKeyRange.only(t));o.onsuccess=e=>{const o=e.target.result;let l;if(o){const e=Object.assign(o.value,n);Object.deleteUndefined(e),l=o.update(e)}else{const e={id:t,...a,...n};l=i.add(e)}l.onsuccess=function(e){r()},l.onerror=s},o.onerror=s}))}#H(e,t,n,a,r={}){return new Promise(((s,i)=>{const o=this.db.transaction(e,"readwrite").objectStore(e),l=o.index(t).openCursor(n);l.onsuccess=e=>{const t=e.target.result;let n;if(t){const e=Object.assign(t.value,a);Object.deleteUndefined(e),n=t.update(e)}else{const e={...r,...a};n=o.add(e)}n.onsuccess=function(e){s()},n.onerror=i},l.onerror=i}))}#Y(e,t,n,a){return new Promise(((r,s)=>{const i=this.db.transaction(e,"readwrite").objectStore(e).openCursor(IDBKeyRange.only(t));W5(n,a,i,r,s)}))}#Z(e,t,n,a,r){return new Promise(((s,i)=>{const o=this.db.transaction(e,"readwrite").objectStore(e).index(t).openCursor(n);W5(a,r,o,s,i)}))}#J(e,t,n,a){return new Promise(((r,s)=>{const i=this.db.transaction(e,"readwrite").objectStore(e).openCursor(IDBKeyRange.only(t));B5(n,a,i,r,s)}))}#Q(e,t,n,a,r){return new Promise(((s,i)=>{const o=this.db.transaction(e,"readwrite").objectStore(e).index(t).openCursor(n);B5(a,r,o,s,i)}))}#j(e,t,n,a){return new Promise(((r,s)=>{const i=this.db.transaction(e,"readwrite").objectStore(e).openCursor(IDBKeyRange.only(t));i.onsuccess=e=>{const t=e.target.result;let i;if(!t)return s("Appending to non-existing record");const o=t.value;o[n]?o[n].push(a):o[n]=[a],o.ts&&(o.ts=Date.seconds()),i=t.update(o),i.onsuccess=function(e){console.log(e),r()},i.onerror=function(e){console.log(e.target.errorCode),s(e.target.errorCode)}},i.onerror=s}))}#q(e,t){return new Promise(((n,a)=>{let r=this.db.transaction(e,"readonly").objectStore(e).get(t);r.onsuccess=e=>{e.target.result?n(e.target.result):n(null)},r.onerror=a}))}#te(e,t,n){return new Promise(((a,r)=>{let s=this.db.transaction(e,"readonly").objectStore(e).index(t).get(n);s.onsuccess=e=>{a(s.result)},s.onerror=r}))}#L(e,t,n,a){return new Promise(((n,r)=>{const s=this.db.transaction(e,"readonly").objectStore(e),i=[],o=s.openCursor(null,t?"prev":"next");let l=0;o.onsuccess=e=>{let t=e.target.result;if(t){let e=t.value;i.push(e),++l<a?t.continue():n(i)}else n(i)},o.onerror=r}))}#B(e,t,n=0,a=50,r=!1){return new Promise(((s,i)=>{const o=this.db.transaction(e,"readonly").objectStore(e),l=IDBKeyRange.lowerBound(0),u=o.index(t).openCursor(l,r?"prev":"next");let d=0==n,p=0;const h=[];u.onsuccess=e=>{const t=e.target.result;if(t)if(d){const e=t.value;h.push(e),p++,p<a?t.continue():s(h)}else d=!0,t.advance(n);else s(h)},u.onerror=i}))}#V(e,t,n,a,r=!1,s=50){return new Promise(((i,o)=>{const l=this.db.transaction(e,"readonly").objectStore(e);let u;u=n?a?IDBKeyRange.bound(n,a,!1,!0):IDBKeyRange.lowerBound(n):IDBKeyRange.upperBound(a,!0);const d=l.index(t).openCursor(u,r?"prev":"next"),p=[];let h=0;d.onsuccess=e=>{let t=e.target.result;if(t){let e=t.value;p.push(e),++h<s?t.continue():i(p)}else i(p)},d.onerror=o}))}#U(e){return new Promise(((t,n)=>{const a=this.db.transaction(e,"readonly").objectStore(e).count();a.onsuccess=e=>{const n=e.target.result;t(n)},a.onerror=n}))}#ne(e){return new Promise(((t,n)=>{const a=this.db.transaction(e,"readonly").objectStore(e).clear();a.onsuccess=()=>t(),a.onerror=n}))}delete(e,t,n,a){return new Promise(((r,s)=>{const i=this.db.transaction(e,"readwrite").objectStore(e);let o,l;t?(o=n==a?IDBKeyRange.only(n):n?a?IDBKeyRange.bound(n,a,!1,!0):IDBKeyRange.lowerBound(n):IDBKeyRange.upperBound(a,!0),l=i.index(t).openCursor(o)):l=i.openCursor(),l.onsuccess=e=>{let t=e.target.result;t?(t.delete(),t.continue()):r()},l.onerror=s}))}static put(e,t,n){const a=e.transaction(t,"readwrite").objectStore(t);Array.isArray(n)||(n=[n]);const r=[];for(const e of n)r.push(new Promise(((t,n)=>{let r=a.put(e);r.onsuccess=function(e){t()},r.onerror=n})));return Promise.all(r)}static addTable=V5;static addIndex=G5;static deleteTable=U5;static deleteIndex=H5}function W5(e,t,n,a,r){n.onsuccess=n=>{const s=n.target.result;let i;if(s){const n=s.value;n[e]||(n[e]=[]),Array.isArray(t)?n[e].push(...t):n[e].push(t),i=s.update(n),i.onsuccess=a,i.onerror=r}else a()},n.onerror=r}function B5(e,t,n,a,r){n.onsuccess=n=>{const s=n.target.result;let i;if(s){const n=s.value,o=n[e];Array.isArray(o)&&t?n[e]=o.filter((e=>e!=t)):delete n[e],i=s.update(n),i.onsuccess=function(e){a()},i.onerror=r}else a()},n.onerror=r}function V5(e,t,n=!1,a="id"){const r={keyPath:a,autoIncrement:n};e.createObjectStore(t,r)}function U5(e,t){e.deleteObjectStore(t)}function G5(e,t,n,a=!1,r=t){n.objectStore(e).createIndex(r,t,{unique:a})}function H5(e,t,n){n.objectStore(e).deleteIndex(t)}class j5 extends EventTarget{#ae;#s;#re=[];#se;#ie;#oe;#le={};#ue=[1,1];#de=2;#pe="#111111";#he;#ce;#fe;#me;#ge;get canvas(){return this.#ae.canvas}get context(){return this.#ae}get width(){return this.canvas.width}get height(){return this.canvas.height}set width(e){const t=this.canvas;t.width=e,t.height=3*e/4;const n=t.getBoundingClientRect();this.#ye(n)}set border(e){this.#de=e}set color(e){this.#pe=e,this.#re[0].fill=e,this.draw(this.#ae)}constructor(e){super(),this.#ae=e.getContext("2d");const t=e.getBoundingClientRect();this.#ye(t),this.#xe(),this.#Ae(),this.reset()}on(e,t){this.addEventListener(e,t)}async init(e){e||(e=new K5,await e.init()),this.#he=e,await this.#be()}reset(){this.#se&&URL.revokeObjectURL(this.#se.src),this.#se=null,this.#ce=null;const e=new l;e.width=this.canvas.width,e.height=this.canvas.height,this.#re=[e],this.draw(),this.#ge&&this.#ge.clearSelection(),this.#me&&this.#me.clear()}add(e="bubble",n=""){let a;switch(e){case"bubble":a=new o;break;case"rect":a=new i;break;case"text":a=new t,a.value="Text";break;case"emoji":a=new z5(n)}return a?(a.x=50+400*Math.random(),a.y=10+300*Math.random(),this.#re.push(a),this.draw(),this.#we("newobject",a.id),this.#me&&this.#me.add(a)):console.error("Unknown object type:",e),a}remove(e){const t=this.#re.findIndex((t=>t.id==e));if(-1!=t){const[e]=this.#re.splice(t,1);e.release(),this.draw()}}move(e,t){const n=this.#re.findIndex((t=>t.id==e));if(-1==n)return;const a=n-t>0?n-t:1;if(n==a)return;const[r]=this.#re.splice(n,1);this.#re.splice(a,0,r),this.#me&&this.#me.swap(n-1,a-1),this.draw()}async export(e="meme",t="jpeg"){const n=document.createElement("canvas"),a=n.getContext("2d"),r=this.#re[0];if(n.width=r.width,n.height=r.height,a.drawImage(this.canvas,r.x,r.y,r.width,r.height,0,0,r.width,r.height),X5(a,"www.sipme.io"),showSaveFilePicker){const e={types:[{description:"Image file",accept:{"image/*":[".png",".jpeg",".jpg"]},suggestedName:"meme.jpeg",startIn:"pictures"}]},t=await showSaveFilePicker(e);let[,a]=t.name.split(".");"jpg"==a&&(a="jpeg");const r="image/"+a,s=await new Promise((e=>n.toBlob(e,r))),i=await t.createWritable();await i.write(s),await i.close()}else{const a=n.toDataURL("image/"+t),r=document.createElement("a");r.download=e+"."+t,r.href=a,r.click()}}async import(e){if(!e){const t={types:[{description:"Images",accept:{"image/*":[".png",".webp",".jpeg",".jpg"]}}],excludeAcceptAllOption:!0,multiple:!0},n=await showOpenFilePicker(t);e=await Promise.all(n.map((e=>e.getFile())))}let t;for(const n of e)t=new D5,await t.load(n),t.x=Math.random()*(this.width-t.width),t.y=Math.random()*(this.height-t.height),this.#re.push(t),this.#me&&this.#me.add(t);e.length>1?this.alignImages():this.draw()}async importInImage(e){this.#se&&URL.revokeObjectURL(this.#se.src);const t=document.createElement("canvas"),n=this.canvas;t.width=n.width,t.height=n.height;const a=t.getContext("2d");let r,s,i,o=0,l=0,u=n.width,d=0,p=0,h=[];for(const t of e)i=await q5(t),h.push(i),d<i.width&&(d=i.width),p<i.height&&(p=i.height);const c=h.map((e=>e.width)).reduce(((e,t)=>e+t),0);r=n.width/c,d*=r,p*=r;for(let e,t=0;t<h.length;++t)i=h[t],e=i.width/c,u=i.width*r,s=i.height*r,l=0,s<p&&(l+=(p-s)/2),console.log("Draw image:",o,l,u,s),a.drawImage(i,o,l,u,s),a.lineWidth=this.#de,a.strokeStyle=this.#pe,a.strokeRect(o,0,u,p),X5(a,"www.sipme.io",p),URL.revokeObjectURL(i.src),o+=u;this.#se=await q5(t.toDataURL("image/png")),this.#ue[1]=p/n.height,this.draw()}async save(e){if(this.#re.length<2)return void console.warn("Nothing to save");const t=this.#re.map((e=>Object.fromInstance(e,{})));console.debug(t);try{await this.#he.put("meme",{id:e,objects:t,ts:Date.now()}),this.#ge&&(this.#ge.getElementIds().includes(e)||this.#ge.add({id:e,objects:this.#re},!0),this.#ge.selectItem(e)),this.#we("save",e)}catch(e){console.error("Failed to save project")}}async open(e){if(e==this.#ce)return;const n={rect:i,bubble:o,text:t,emoji:z5,image:D5,canvas:l};try{const t=await this.#he.get("meme",e);console.debug("Open projects",t);for(const e of this.#re)e.release();this.#re=t.objects.map((e=>Object.instanceFrom(new n[e.type],e))),this.#ce=e;const a=this.#re.filter((e=>"image"==e.type));if(await Promise.all(a.map((e=>e.image()))),this.draw(),this.#ge&&this.#ge.selectItem(e),this.#me){this.#me.clear();for(const e of this.#re.slice(1))this.#me.add(e)}this.#we("open",e)}catch(e){console.error("Failed to load objects")}}async delete(e){e==this.#ce&&this.reset();try{await this.#he.rm("meme",e),this.#ge&&this.#ge.delete(e),tjis.#we("delete",e)}catch(e){console.error("Failed to delete project")}}draw(){const e=this.#ae;e.fillStyle="#fff",e.fillRect(0,0,this.canvas.width,this.canvas.height),this.#se&&e.drawImage(this.#se,0,0);for(const t of this.#re)t.draw(e)}update(e,t,n=this.#oe){if("string"==typeof n&&(n=this.#re.find((e=>e.id==n))),!n)return;const a=Object.getSetter(n,e);if(a&&(a.call(n,t),this.draw(),this.#fe))switch(e){case"imgScale":this.#fe.assign({width:n.width,height:n.height,imgWidth:n.imgWidth,imgHeight:n.imgHeight});break;case"imgWidth":this.#fe.assign({imgHeight:n.imgHeight});break;case"imgHeight":this.#fe.assign({imgWidth:n.imgWidth})}}select(e){if(this.#oe&&e==this.#oe.id)return;const t=this.#re.find((t=>t.id==e));if(t){t.selected=!0,this.#oe&&(this.#oe.selected=!1),this.#oe=t,this.#fe&&(t.properties=this.#fe);const e=Object.fromInstance(t);this.#we("select",e)}this.draw()}alignImages(){const e=this.canvas.height,t=this.canvas.width,n=this.#re.filter((e=>"image"==e.type)),a=n.map((e=>e.width)).sum();let r,s=0,i=0,o=n.map((e=>e.imgHeight)).max(),l=t/a;o*=l,i=(e-o)/2;const u=this.#re[0];u.y=i,u.height=o,u.width=t;for(const e of n)l=e.imgHeight/e.imgWidth,r=e.width/a,e.width=r*t,e.height=l*e.width,e.imgWidth=e.width,e.imgHeight=e.height,e.height=o,e.imgY=(e.height-e.imgHeight)/2,e.x=s,e.y=i,s+=e.width,this.#fe&&e==this.#oe&&(e.properties=this.#fe);this.draw()}async detectHuman(){await this.#oe.detectHuman(),this.draw()}wrapProperties(e){return this.#fe=function(e,t){const n={set(e,t){const n=this[e];if(n)if("INPUT"==n.tagName&&"color"==n.type){const e=n.previousElementSibling,a=!!t;"INPUT"==e.tagName&&"checkbox"==e.type&&(e.checked=a),a&&(n.value=t),n.disabled=!a}else"INPUT"==n.tagName&&"checkbox"==n.type?n.checked=!!t:n.value=t},assign(e){for(const[t,n]of Object.entries(e))this.set(t,n)}},a=e.querySelectorAll("input,select,textarea");for(const e of a){const t=e.id||e.getAttribute("role");if(t){const[a,r]=t.split("-");"object"==a&&(n[r]=e)}}return e.oninput=e=>{let n,a,r,s=e.target;"checkbox"==s.type&&(r=s.checked,s.getAttribute("for")&&(s=s.nextElementSibling,r=r?s.value:""));const i=s.id||s.getAttribute("role");i&&([n,a]=i.split("-"),null==r&&(r=s.value),t&&t.update(a,r))},e.onclick=e=>{"detect"!=e.target.name||t.detectHuman()},n}(e,this)}wrapObjects(e,t){return this.#me=function(e,t,n){e.classList.add("list","list2");const a=UX.List.createMixin(e);return e.onclick=e=>{const n=e.target;if("BUTTON"!=n.tagName){if(UX.List.isItem(n)){const e=n.dataset.id;t.select(e),a.selectItem(e)}}else{const e=n.closest("[data-id]");if(e){const r=e.dataset.id;switch(n.name){case"rm":t.remove(r),a.delete(r);break;case"up":t.move(r,1);break;case"down":t.move(r,-1)}}}},e.oninput=e=>{console.log("On input",e);const n=e.target,a=n.closest("[data-id]");if(a){const e=a.dataset.id,r=n.innerText;t.update("id",r,e),a.dataset.id=r}},a.add=function(t){const r=t.id;let s;return n?s=a.addItemTemplate(n,t):(s=document.createElement("span"),s.innerText=r,s.dataset.id=r,s.classList.add("item"),e.appendChild(s)),s},a}(e,this,t)}wrapProjects(e,t){return this.#ge=function(e,t,n){e.classList.add("list","list2");const a=UX.List.createMixin(e);return e.onclick=e=>{const n=e.target;if("BUTTON"!=n.tagName){if(UX.List.isItem(n)){const e=n.dataset.id;a.selectItem(e),t.open(e)}}else if("rm"===n.name){const e=n.closest("[data-id]");if(e){const n=e.dataset.id;t.delete(n)}}},a.add=function(t,r=!1){const s=t.id;let i;return n?i=a.addItemTemplate(n,t,r):(i=document.createElement("span"),i.innerText=s,i.dataset.id=s,i.classList.add("item"),e.appendChild(i)),i},a}(e,this,t)}wrapTools(e){!function(e,t){e.onclick=e=>{const n=e.target;if("BUTTON"==n.tagName){const e=n.name;t.add(e)}}}(e,this)}#ye(e){const t=this.canvas;this.#s=[t.width/e.width,t.height/e.height],this.draw()}#xe(){const e=this.canvas;e.onclick=e=>{if(this.#ie)return void(this.#ie=null);let t,n=e.offsetX*this.#s[0],a=e.offsetY*this.#s[1];for(const e of[...this.#re].reverse())e.handleSelect(n,a)&&(t=e,n=-1e4,a=-1e4,this.#fe&&(e.properties=this.#fe));if(this.#oe!=t){this.#oe=t,this.draw();const e=t?Object.fromInstance(t):null;this.#me&&(t?this.#me.selectItem(e.id):this.#me.clearSelection()),this.#we("select",e)}},e.onmousemove=e=>{if(!this.#ie)return;const t=e.offsetX*this.#s[0],n=e.offsetY*this.#s[1];if(this.#ie.move(t,n),this.draw(),this.#fe){const e=this.#oe;this.#fe.set("x",e.x),this.#fe.set("y",e.y),this.#fe.set("width",e.width),this.#fe.set("height",e.height)}this.#we("update",{x:t,y:n})},e.onmousedown=e=>{const t=e.offsetX*this.#s[0],n=e.offsetY*this.#s[1];this.#ie=null;for(const e of this.#re)if(this.#ie=e.handleClick(t,n)){console.log("Bubble found");break}},e.onkeydown=e=>{const t=e.key;if(this.#oe&&t.startsWith("Arrow")){switch(t.substr(5)){case"Up":this.#oe.y-=5;break;case"Down":this.#oe.y+=5;break;case"Left":this.#oe.x-=5;break;case"Right":this.#oe.x+=5}this.draw()}}}#Ae(){new ResizeObserver((e=>this.#ye(e[0].contentRect))).observe(this.canvas)}#we(e,t){this.dispatchEvent(new CustomEvent(e,{detail:t}))}async#be(){const e=await this.#he.latest("meme");console.debug("Projects loaded",e);for(const t of e)this.#ge&&this.#ge.add(t);this.#we("projects",e)}}function q5(e){return new Promise(((t,n)=>{const a=new Image;a.src=e instanceof Blob?URL.createObjectURL(e):e,a.onload=()=>t(a),a.onerror=n}))}function X5(e,t,n=e.canvas.height){const a=e.canvas.width,r=a/50,s=.01*a,i=n-s;e.save(),e.fillStyle="#888",e.textBaseline="middle",e.textAlign="left",e.font=`bold ${r}px monospace`,e.fillText(t,s,i),e.restore()}class K5 extends L5{get name(){return"meme"}get version(){return 1}onUpgrade(e,t,n){0===n&&(K5.addTable(e,"meme"),K5.addIndex("meme","ts",t))}}})(),r.default})()));